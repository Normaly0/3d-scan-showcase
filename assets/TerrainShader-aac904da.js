import{r as ee,g as Hx,R as Vu,j as Ft,a as Ha,F as rv}from"./index-de1bfd40.js";/**
 * @license
 * Copyright 2010-2023 Three.js Authors
 * SPDX-License-Identifier: MIT
 */const is="154",As={LEFT:0,MIDDLE:1,RIGHT:2,ROTATE:0,DOLLY:1,PAN:2},Ps={ROTATE:0,PAN:1,DOLLY_PAN:2,DOLLY_ROTATE:3},Vx=0,Id=1,Gx=2,h_=3,Wx=0,Ku=1,el=2,Hi=3,or=0,_n=1,ni=2,f_=2,Jt=0,ks=1,Ud=2,Nd=3,Fd=4,Xx=5,Ds=100,Yx=101,Zx=102,Od=103,Bd=104,qx=200,jx=201,Kx=202,Qx=203,Tp=204,wp=205,Jx=206,$x=207,ey=208,ty=209,ny=210,Ep=0,bp=1,Gu=2,cl=3,ul=4,Ap=5,Pp=6,Qu=7,Rl=0,iy=1,ry=2,Wi=0,sy=1,ay=2,oy=3,Cp=4,ly=5,Ju=300,Jr=301,$r=302,hl=303,fl=304,no=306,vi=1e3,Mn=1001,dl=1002,ct=1003,Wu=1004,d_=1004,tl=1005,p_=1005,Qe=1006,Rp=1007,m_=1007,es=1008,g_=1008,Vt=1009,cy=1010,uy=1011,$u=1012,Dp=1013,ir=1014,tn=1015,ii=1016,Lp=1017,Ip=1018,br=1020,hy=1021,Qt=1023,eh=1024,fy=1025,Qr=1026,ts=1027,th=1028,Up=1029,Np=1030,Fp=1031,Op=1033,Iu=33776,Uu=33777,Nu=33778,Fu=33779,zd=35840,kd=35841,Hd=35842,Vd=35843,dy=36196,Gd=37492,Wd=37496,Xd=37808,Yd=37809,Zd=37810,qd=37811,jd=37812,Kd=37813,Qd=37814,Jd=37815,$d=37816,ep=37817,tp=37818,np=37819,ip=37820,rp=37821,Ou=36492,py=36283,sp=36284,ap=36285,op=36286,my=2200,gy=2201,vy=2202,pl=2300,ml=2301,Bu=2302,Us=2400,Ns=2401,gl=2402,nh=2500,Bp=2501,v_=0,x_=1,y_=2,Dl=3e3,Di=3001,In=3200,lr=3201,Dr=0,xy=1,Ar="",pt="srgb",Yi="srgb-linear",zp="display-p3",S_=0,zu=7680,M_=7681,__=7682,T_=7683,w_=34055,E_=34056,b_=5386,A_=512,P_=513,C_=514,R_=515,D_=516,L_=517,I_=518,yy=519,Sy=512,My=513,_y=514,Ty=515,wy=516,Ey=517,by=518,Ay=519,vl=35044,U_=35048,N_=35040,F_=35045,O_=35049,B_=35041,z_=35046,k_=35050,H_=35042,V_="100",Xu="300 es",Yu=1035,rr=2e3,xl=2001;class xi{addEventListener(e,t){this._listeners===void 0&&(this._listeners={});const i=this._listeners;i[e]===void 0&&(i[e]=[]),i[e].indexOf(t)===-1&&i[e].push(t)}hasEventListener(e,t){if(this._listeners===void 0)return!1;const i=this._listeners;return i[e]!==void 0&&i[e].indexOf(t)!==-1}removeEventListener(e,t){if(this._listeners===void 0)return;const r=this._listeners[e];if(r!==void 0){const s=r.indexOf(t);s!==-1&&r.splice(s,1)}}dispatchEvent(e){if(this._listeners===void 0)return;const i=this._listeners[e.type];if(i!==void 0){e.target=this;const r=i.slice(0);for(let s=0,a=r.length;s<a;s++)r[s].call(this,e);e.target=null}}}const Vn=["00","01","02","03","04","05","06","07","08","09","0a","0b","0c","0d","0e","0f","10","11","12","13","14","15","16","17","18","19","1a","1b","1c","1d","1e","1f","20","21","22","23","24","25","26","27","28","29","2a","2b","2c","2d","2e","2f","30","31","32","33","34","35","36","37","38","39","3a","3b","3c","3d","3e","3f","40","41","42","43","44","45","46","47","48","49","4a","4b","4c","4d","4e","4f","50","51","52","53","54","55","56","57","58","59","5a","5b","5c","5d","5e","5f","60","61","62","63","64","65","66","67","68","69","6a","6b","6c","6d","6e","6f","70","71","72","73","74","75","76","77","78","79","7a","7b","7c","7d","7e","7f","80","81","82","83","84","85","86","87","88","89","8a","8b","8c","8d","8e","8f","90","91","92","93","94","95","96","97","98","99","9a","9b","9c","9d","9e","9f","a0","a1","a2","a3","a4","a5","a6","a7","a8","a9","aa","ab","ac","ad","ae","af","b0","b1","b2","b3","b4","b5","b6","b7","b8","b9","ba","bb","bc","bd","be","bf","c0","c1","c2","c3","c4","c5","c6","c7","c8","c9","ca","cb","cc","cd","ce","cf","d0","d1","d2","d3","d4","d5","d6","d7","d8","d9","da","db","dc","dd","de","df","e0","e1","e2","e3","e4","e5","e6","e7","e8","e9","ea","eb","ec","ed","ee","ef","f0","f1","f2","f3","f4","f5","f6","f7","f8","f9","fa","fb","fc","fd","fe","ff"];let sv=1234567;const Hs=Math.PI/180,Qa=180/Math.PI;function gi(){const n=Math.random()*4294967295|0,e=Math.random()*4294967295|0,t=Math.random()*4294967295|0,i=Math.random()*4294967295|0;return(Vn[n&255]+Vn[n>>8&255]+Vn[n>>16&255]+Vn[n>>24&255]+"-"+Vn[e&255]+Vn[e>>8&255]+"-"+Vn[e>>16&15|64]+Vn[e>>24&255]+"-"+Vn[t&63|128]+Vn[t>>8&255]+"-"+Vn[t>>16&255]+Vn[t>>24&255]+Vn[i&255]+Vn[i>>8&255]+Vn[i>>16&255]+Vn[i>>24&255]).toLowerCase()}function ln(n,e,t){return Math.max(e,Math.min(t,n))}function kp(n,e){return(n%e+e)%e}function G_(n,e,t,i,r){return i+(n-e)*(r-i)/(t-e)}function W_(n,e,t){return n!==e?(t-n)/(e-n):0}function nl(n,e,t){return(1-t)*n+t*e}function X_(n,e,t,i){return nl(n,e,1-Math.exp(-t*i))}function Y_(n,e=1){return e-Math.abs(kp(n,e*2)-e)}function Z_(n,e,t){return n<=e?0:n>=t?1:(n=(n-e)/(t-e),n*n*(3-2*n))}function q_(n,e,t){return n<=e?0:n>=t?1:(n=(n-e)/(t-e),n*n*n*(n*(n*6-15)+10))}function j_(n,e){return n+Math.floor(Math.random()*(e-n+1))}function K_(n,e){return n+Math.random()*(e-n)}function Q_(n){return n*(.5-Math.random())}function J_(n){n!==void 0&&(sv=n);let e=sv+=1831565813;return e=Math.imul(e^e>>>15,e|1),e^=e+Math.imul(e^e>>>7,e|61),((e^e>>>14)>>>0)/4294967296}function $_(n){return n*Hs}function e1(n){return n*Qa}function lp(n){return(n&n-1)===0&&n!==0}function Py(n){return Math.pow(2,Math.ceil(Math.log(n)/Math.LN2))}function Zu(n){return Math.pow(2,Math.floor(Math.log(n)/Math.LN2))}function t1(n,e,t,i,r){const s=Math.cos,a=Math.sin,c=s(t/2),u=a(t/2),h=s((e+i)/2),f=a((e+i)/2),p=s((e-i)/2),m=a((e-i)/2),g=s((i-e)/2),y=a((i-e)/2);switch(r){case"XYX":n.set(c*f,u*p,u*m,c*h);break;case"YZY":n.set(u*m,c*f,u*p,c*h);break;case"ZXZ":n.set(u*p,u*m,c*f,c*h);break;case"XZX":n.set(c*f,u*y,u*g,c*h);break;case"YXY":n.set(u*g,c*f,u*y,c*h);break;case"ZYZ":n.set(u*y,u*g,c*f,c*h);break;default:console.warn("THREE.MathUtils: .setQuaternionFromProperEuler() encountered an unknown order: "+r)}}function mi(n,e){switch(e.constructor){case Float32Array:return n;case Uint32Array:return n/4294967295;case Uint16Array:return n/65535;case Uint8Array:return n/255;case Int32Array:return Math.max(n/2147483647,-1);case Int16Array:return Math.max(n/32767,-1);case Int8Array:return Math.max(n/127,-1);default:throw new Error("Invalid component type.")}}function xt(n,e){switch(e.constructor){case Float32Array:return n;case Uint32Array:return Math.round(n*4294967295);case Uint16Array:return Math.round(n*65535);case Uint8Array:return Math.round(n*255);case Int32Array:return Math.round(n*2147483647);case Int16Array:return Math.round(n*32767);case Int8Array:return Math.round(n*127);default:throw new Error("Invalid component type.")}}const n1={DEG2RAD:Hs,RAD2DEG:Qa,generateUUID:gi,clamp:ln,euclideanModulo:kp,mapLinear:G_,inverseLerp:W_,lerp:nl,damp:X_,pingpong:Y_,smoothstep:Z_,smootherstep:q_,randInt:j_,randFloat:K_,randFloatSpread:Q_,seededRandom:J_,degToRad:$_,radToDeg:e1,isPowerOfTwo:lp,ceilPowerOfTwo:Py,floorPowerOfTwo:Zu,setQuaternionFromProperEuler:t1,normalize:xt,denormalize:mi};class K{constructor(e=0,t=0){K.prototype.isVector2=!0,this.x=e,this.y=t}get width(){return this.x}set width(e){this.x=e}get height(){return this.y}set height(e){this.y=e}set(e,t){return this.x=e,this.y=t,this}setScalar(e){return this.x=e,this.y=e,this}setX(e){return this.x=e,this}setY(e){return this.y=e,this}setComponent(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;default:throw new Error("index is out of range: "+e)}return this}getComponent(e){switch(e){case 0:return this.x;case 1:return this.y;default:throw new Error("index is out of range: "+e)}}clone(){return new this.constructor(this.x,this.y)}copy(e){return this.x=e.x,this.y=e.y,this}add(e){return this.x+=e.x,this.y+=e.y,this}addScalar(e){return this.x+=e,this.y+=e,this}addVectors(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this}addScaledVector(e,t){return this.x+=e.x*t,this.y+=e.y*t,this}sub(e){return this.x-=e.x,this.y-=e.y,this}subScalar(e){return this.x-=e,this.y-=e,this}subVectors(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this}multiply(e){return this.x*=e.x,this.y*=e.y,this}multiplyScalar(e){return this.x*=e,this.y*=e,this}divide(e){return this.x/=e.x,this.y/=e.y,this}divideScalar(e){return this.multiplyScalar(1/e)}applyMatrix3(e){const t=this.x,i=this.y,r=e.elements;return this.x=r[0]*t+r[3]*i+r[6],this.y=r[1]*t+r[4]*i+r[7],this}min(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this}max(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this}clamp(e,t){return this.x=Math.max(e.x,Math.min(t.x,this.x)),this.y=Math.max(e.y,Math.min(t.y,this.y)),this}clampScalar(e,t){return this.x=Math.max(e,Math.min(t,this.x)),this.y=Math.max(e,Math.min(t,this.y)),this}clampLength(e,t){const i=this.length();return this.divideScalar(i||1).multiplyScalar(Math.max(e,Math.min(t,i)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this}roundToZero(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this}negate(){return this.x=-this.x,this.y=-this.y,this}dot(e){return this.x*e.x+this.y*e.y}cross(e){return this.x*e.y-this.y*e.x}lengthSq(){return this.x*this.x+this.y*this.y}length(){return Math.sqrt(this.x*this.x+this.y*this.y)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)}normalize(){return this.divideScalar(this.length()||1)}angle(){return Math.atan2(-this.y,-this.x)+Math.PI}angleTo(e){const t=Math.sqrt(this.lengthSq()*e.lengthSq());if(t===0)return Math.PI/2;const i=this.dot(e)/t;return Math.acos(ln(i,-1,1))}distanceTo(e){return Math.sqrt(this.distanceToSquared(e))}distanceToSquared(e){const t=this.x-e.x,i=this.y-e.y;return t*t+i*i}manhattanDistanceTo(e){return Math.abs(this.x-e.x)+Math.abs(this.y-e.y)}setLength(e){return this.normalize().multiplyScalar(e)}lerp(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this}lerpVectors(e,t,i){return this.x=e.x+(t.x-e.x)*i,this.y=e.y+(t.y-e.y)*i,this}equals(e){return e.x===this.x&&e.y===this.y}fromArray(e,t=0){return this.x=e[t],this.y=e[t+1],this}toArray(e=[],t=0){return e[t]=this.x,e[t+1]=this.y,e}fromBufferAttribute(e,t){return this.x=e.getX(t),this.y=e.getY(t),this}rotateAround(e,t){const i=Math.cos(t),r=Math.sin(t),s=this.x-e.x,a=this.y-e.y;return this.x=s*i-a*r+e.x,this.y=s*r+a*i+e.y,this}random(){return this.x=Math.random(),this.y=Math.random(),this}*[Symbol.iterator](){yield this.x,yield this.y}}class gt{constructor(e,t,i,r,s,a,c,u,h){gt.prototype.isMatrix3=!0,this.elements=[1,0,0,0,1,0,0,0,1],e!==void 0&&this.set(e,t,i,r,s,a,c,u,h)}set(e,t,i,r,s,a,c,u,h){const f=this.elements;return f[0]=e,f[1]=r,f[2]=c,f[3]=t,f[4]=s,f[5]=u,f[6]=i,f[7]=a,f[8]=h,this}identity(){return this.set(1,0,0,0,1,0,0,0,1),this}copy(e){const t=this.elements,i=e.elements;return t[0]=i[0],t[1]=i[1],t[2]=i[2],t[3]=i[3],t[4]=i[4],t[5]=i[5],t[6]=i[6],t[7]=i[7],t[8]=i[8],this}extractBasis(e,t,i){return e.setFromMatrix3Column(this,0),t.setFromMatrix3Column(this,1),i.setFromMatrix3Column(this,2),this}setFromMatrix4(e){const t=e.elements;return this.set(t[0],t[4],t[8],t[1],t[5],t[9],t[2],t[6],t[10]),this}multiply(e){return this.multiplyMatrices(this,e)}premultiply(e){return this.multiplyMatrices(e,this)}multiplyMatrices(e,t){const i=e.elements,r=t.elements,s=this.elements,a=i[0],c=i[3],u=i[6],h=i[1],f=i[4],p=i[7],m=i[2],g=i[5],y=i[8],T=r[0],S=r[3],x=r[6],w=r[1],M=r[4],b=r[7],P=r[2],C=r[5],L=r[8];return s[0]=a*T+c*w+u*P,s[3]=a*S+c*M+u*C,s[6]=a*x+c*b+u*L,s[1]=h*T+f*w+p*P,s[4]=h*S+f*M+p*C,s[7]=h*x+f*b+p*L,s[2]=m*T+g*w+y*P,s[5]=m*S+g*M+y*C,s[8]=m*x+g*b+y*L,this}multiplyScalar(e){const t=this.elements;return t[0]*=e,t[3]*=e,t[6]*=e,t[1]*=e,t[4]*=e,t[7]*=e,t[2]*=e,t[5]*=e,t[8]*=e,this}determinant(){const e=this.elements,t=e[0],i=e[1],r=e[2],s=e[3],a=e[4],c=e[5],u=e[6],h=e[7],f=e[8];return t*a*f-t*c*h-i*s*f+i*c*u+r*s*h-r*a*u}invert(){const e=this.elements,t=e[0],i=e[1],r=e[2],s=e[3],a=e[4],c=e[5],u=e[6],h=e[7],f=e[8],p=f*a-c*h,m=c*u-f*s,g=h*s-a*u,y=t*p+i*m+r*g;if(y===0)return this.set(0,0,0,0,0,0,0,0,0);const T=1/y;return e[0]=p*T,e[1]=(r*h-f*i)*T,e[2]=(c*i-r*a)*T,e[3]=m*T,e[4]=(f*t-r*u)*T,e[5]=(r*s-c*t)*T,e[6]=g*T,e[7]=(i*u-h*t)*T,e[8]=(a*t-i*s)*T,this}transpose(){let e;const t=this.elements;return e=t[1],t[1]=t[3],t[3]=e,e=t[2],t[2]=t[6],t[6]=e,e=t[5],t[5]=t[7],t[7]=e,this}getNormalMatrix(e){return this.setFromMatrix4(e).invert().transpose()}transposeIntoArray(e){const t=this.elements;return e[0]=t[0],e[1]=t[3],e[2]=t[6],e[3]=t[1],e[4]=t[4],e[5]=t[7],e[6]=t[2],e[7]=t[5],e[8]=t[8],this}setUvTransform(e,t,i,r,s,a,c){const u=Math.cos(s),h=Math.sin(s);return this.set(i*u,i*h,-i*(u*a+h*c)+a+e,-r*h,r*u,-r*(-h*a+u*c)+c+t,0,0,1),this}scale(e,t){return this.premultiply(kf.makeScale(e,t)),this}rotate(e){return this.premultiply(kf.makeRotation(-e)),this}translate(e,t){return this.premultiply(kf.makeTranslation(e,t)),this}makeTranslation(e,t){return e.isVector2?this.set(1,0,e.x,0,1,e.y,0,0,1):this.set(1,0,e,0,1,t,0,0,1),this}makeRotation(e){const t=Math.cos(e),i=Math.sin(e);return this.set(t,-i,0,i,t,0,0,0,1),this}makeScale(e,t){return this.set(e,0,0,0,t,0,0,0,1),this}equals(e){const t=this.elements,i=e.elements;for(let r=0;r<9;r++)if(t[r]!==i[r])return!1;return!0}fromArray(e,t=0){for(let i=0;i<9;i++)this.elements[i]=e[i+t];return this}toArray(e=[],t=0){const i=this.elements;return e[t]=i[0],e[t+1]=i[1],e[t+2]=i[2],e[t+3]=i[3],e[t+4]=i[4],e[t+5]=i[5],e[t+6]=i[6],e[t+7]=i[7],e[t+8]=i[8],e}clone(){return new this.constructor().fromArray(this.elements)}}const kf=new gt;function Cy(n){for(let e=n.length-1;e>=0;--e)if(n[e]>=65535)return!0;return!1}const i1={Int8Array,Uint8Array,Uint8ClampedArray,Int16Array,Uint16Array,Int32Array,Uint32Array,Float32Array,Float64Array};function Va(n,e){return new i1[n](e)}function yl(n){return document.createElementNS("http://www.w3.org/1999/xhtml",n)}const av={};function il(n){n in av||(av[n]=!0,console.warn(n))}function ja(n){return n<.04045?n*.0773993808:Math.pow(n*.9478672986+.0521327014,2.4)}function Hf(n){return n<.0031308?n*12.92:1.055*Math.pow(n,.41666)-.055}const r1=new gt().fromArray([.8224621,.0331941,.0170827,.177538,.9668058,.0723974,-1e-7,1e-7,.9105199]),s1=new gt().fromArray([1.2249401,-.0420569,-.0196376,-.2249404,1.0420571,-.0786361,1e-7,0,1.0982735]);function a1(n){return n.convertSRGBToLinear().applyMatrix3(s1)}function o1(n){return n.applyMatrix3(r1).convertLinearToSRGB()}const l1={[Yi]:n=>n,[pt]:n=>n.convertSRGBToLinear(),[zp]:a1},c1={[Yi]:n=>n,[pt]:n=>n.convertLinearToSRGB(),[zp]:o1},Ci={enabled:!0,get legacyMode(){return console.warn("THREE.ColorManagement: .legacyMode=false renamed to .enabled=true in r150."),!this.enabled},set legacyMode(n){console.warn("THREE.ColorManagement: .legacyMode=false renamed to .enabled=true in r150."),this.enabled=!n},get workingColorSpace(){return Yi},set workingColorSpace(n){console.warn("THREE.ColorManagement: .workingColorSpace is readonly.")},convert:function(n,e,t){if(this.enabled===!1||e===t||!e||!t)return n;const i=l1[e],r=c1[t];if(i===void 0||r===void 0)throw new Error(`Unsupported color space conversion, "${e}" to "${t}".`);return r(i(n))},fromWorkingColorSpace:function(n,e){return this.convert(n,this.workingColorSpace,e)},toWorkingColorSpace:function(n,e){return this.convert(n,e,this.workingColorSpace)}};let pa;class Hp{static getDataURL(e){if(/^data:/i.test(e.src)||typeof HTMLCanvasElement>"u")return e.src;let t;if(e instanceof HTMLCanvasElement)t=e;else{pa===void 0&&(pa=yl("canvas")),pa.width=e.width,pa.height=e.height;const i=pa.getContext("2d");e instanceof ImageData?i.putImageData(e,0,0):i.drawImage(e,0,0,e.width,e.height),t=pa}return t.width>2048||t.height>2048?(console.warn("THREE.ImageUtils.getDataURL: Image converted to jpg for performance reasons",e),t.toDataURL("image/jpeg",.6)):t.toDataURL("image/png")}static sRGBToLinear(e){if(typeof HTMLImageElement<"u"&&e instanceof HTMLImageElement||typeof HTMLCanvasElement<"u"&&e instanceof HTMLCanvasElement||typeof ImageBitmap<"u"&&e instanceof ImageBitmap){const t=yl("canvas");t.width=e.width,t.height=e.height;const i=t.getContext("2d");i.drawImage(e,0,0,e.width,e.height);const r=i.getImageData(0,0,e.width,e.height),s=r.data;for(let a=0;a<s.length;a++)s[a]=ja(s[a]/255)*255;return i.putImageData(r,0,0),t}else if(e.data){const t=e.data.slice(0);for(let i=0;i<t.length;i++)t instanceof Uint8Array||t instanceof Uint8ClampedArray?t[i]=Math.floor(ja(t[i]/255)*255):t[i]=ja(t[i]);return{data:t,width:e.width,height:e.height}}else return console.warn("THREE.ImageUtils.sRGBToLinear(): Unsupported image type. No color space conversion applied."),e}}let u1=0;class Fs{constructor(e=null){this.isSource=!0,Object.defineProperty(this,"id",{value:u1++}),this.uuid=gi(),this.data=e,this.version=0}set needsUpdate(e){e===!0&&this.version++}toJSON(e){const t=e===void 0||typeof e=="string";if(!t&&e.images[this.uuid]!==void 0)return e.images[this.uuid];const i={uuid:this.uuid,url:""},r=this.data;if(r!==null){let s;if(Array.isArray(r)){s=[];for(let a=0,c=r.length;a<c;a++)r[a].isDataTexture?s.push(Vf(r[a].image)):s.push(Vf(r[a]))}else s=Vf(r);i.url=s}return t||(e.images[this.uuid]=i),i}}function Vf(n){return typeof HTMLImageElement<"u"&&n instanceof HTMLImageElement||typeof HTMLCanvasElement<"u"&&n instanceof HTMLCanvasElement||typeof ImageBitmap<"u"&&n instanceof ImageBitmap?Hp.getDataURL(n):n.data?{data:Array.from(n.data),width:n.width,height:n.height,type:n.data.constructor.name}:(console.warn("THREE.Texture: Unable to serialize Texture."),{})}let h1=0;class Zt extends xi{constructor(e=Zt.DEFAULT_IMAGE,t=Zt.DEFAULT_MAPPING,i=Mn,r=Mn,s=Qe,a=es,c=Qt,u=Vt,h=Zt.DEFAULT_ANISOTROPY,f=Ar){super(),this.isTexture=!0,Object.defineProperty(this,"id",{value:h1++}),this.uuid=gi(),this.name="",this.source=new Fs(e),this.mipmaps=[],this.mapping=t,this.channel=0,this.wrapS=i,this.wrapT=r,this.magFilter=s,this.minFilter=a,this.anisotropy=h,this.format=c,this.internalFormat=null,this.type=u,this.offset=new K(0,0),this.repeat=new K(1,1),this.center=new K(0,0),this.rotation=0,this.matrixAutoUpdate=!0,this.matrix=new gt,this.generateMipmaps=!0,this.premultiplyAlpha=!1,this.flipY=!0,this.unpackAlignment=4,typeof f=="string"?this.colorSpace=f:(il("THREE.Texture: Property .encoding has been replaced by .colorSpace."),this.colorSpace=f===Di?pt:Ar),this.userData={},this.version=0,this.onUpdate=null,this.isRenderTargetTexture=!1,this.needsPMREMUpdate=!1}get image(){return this.source.data}set image(e=null){this.source.data=e}updateMatrix(){this.matrix.setUvTransform(this.offset.x,this.offset.y,this.repeat.x,this.repeat.y,this.rotation,this.center.x,this.center.y)}clone(){return new this.constructor().copy(this)}copy(e){return this.name=e.name,this.source=e.source,this.mipmaps=e.mipmaps.slice(0),this.mapping=e.mapping,this.channel=e.channel,this.wrapS=e.wrapS,this.wrapT=e.wrapT,this.magFilter=e.magFilter,this.minFilter=e.minFilter,this.anisotropy=e.anisotropy,this.format=e.format,this.internalFormat=e.internalFormat,this.type=e.type,this.offset.copy(e.offset),this.repeat.copy(e.repeat),this.center.copy(e.center),this.rotation=e.rotation,this.matrixAutoUpdate=e.matrixAutoUpdate,this.matrix.copy(e.matrix),this.generateMipmaps=e.generateMipmaps,this.premultiplyAlpha=e.premultiplyAlpha,this.flipY=e.flipY,this.unpackAlignment=e.unpackAlignment,this.colorSpace=e.colorSpace,this.userData=JSON.parse(JSON.stringify(e.userData)),this.needsUpdate=!0,this}toJSON(e){const t=e===void 0||typeof e=="string";if(!t&&e.textures[this.uuid]!==void 0)return e.textures[this.uuid];const i={metadata:{version:4.6,type:"Texture",generator:"Texture.toJSON"},uuid:this.uuid,name:this.name,image:this.source.toJSON(e).uuid,mapping:this.mapping,channel:this.channel,repeat:[this.repeat.x,this.repeat.y],offset:[this.offset.x,this.offset.y],center:[this.center.x,this.center.y],rotation:this.rotation,wrap:[this.wrapS,this.wrapT],format:this.format,internalFormat:this.internalFormat,type:this.type,colorSpace:this.colorSpace,minFilter:this.minFilter,magFilter:this.magFilter,anisotropy:this.anisotropy,flipY:this.flipY,generateMipmaps:this.generateMipmaps,premultiplyAlpha:this.premultiplyAlpha,unpackAlignment:this.unpackAlignment};return Object.keys(this.userData).length>0&&(i.userData=this.userData),t||(e.textures[this.uuid]=i),i}dispose(){this.dispatchEvent({type:"dispose"})}transformUv(e){if(this.mapping!==Ju)return e;if(e.applyMatrix3(this.matrix),e.x<0||e.x>1)switch(this.wrapS){case vi:e.x=e.x-Math.floor(e.x);break;case Mn:e.x=e.x<0?0:1;break;case dl:Math.abs(Math.floor(e.x)%2)===1?e.x=Math.ceil(e.x)-e.x:e.x=e.x-Math.floor(e.x);break}if(e.y<0||e.y>1)switch(this.wrapT){case vi:e.y=e.y-Math.floor(e.y);break;case Mn:e.y=e.y<0?0:1;break;case dl:Math.abs(Math.floor(e.y)%2)===1?e.y=Math.ceil(e.y)-e.y:e.y=e.y-Math.floor(e.y);break}return this.flipY&&(e.y=1-e.y),e}set needsUpdate(e){e===!0&&(this.version++,this.source.needsUpdate=!0)}get encoding(){return il("THREE.Texture: Property .encoding has been replaced by .colorSpace."),this.colorSpace===pt?Di:Dl}set encoding(e){il("THREE.Texture: Property .encoding has been replaced by .colorSpace."),this.colorSpace=e===Di?pt:Ar}}Zt.DEFAULT_IMAGE=null;Zt.DEFAULT_MAPPING=Ju;Zt.DEFAULT_ANISOTROPY=1;class Et{constructor(e=0,t=0,i=0,r=1){Et.prototype.isVector4=!0,this.x=e,this.y=t,this.z=i,this.w=r}get width(){return this.z}set width(e){this.z=e}get height(){return this.w}set height(e){this.w=e}set(e,t,i,r){return this.x=e,this.y=t,this.z=i,this.w=r,this}setScalar(e){return this.x=e,this.y=e,this.z=e,this.w=e,this}setX(e){return this.x=e,this}setY(e){return this.y=e,this}setZ(e){return this.z=e,this}setW(e){return this.w=e,this}setComponent(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;case 2:this.z=t;break;case 3:this.w=t;break;default:throw new Error("index is out of range: "+e)}return this}getComponent(e){switch(e){case 0:return this.x;case 1:return this.y;case 2:return this.z;case 3:return this.w;default:throw new Error("index is out of range: "+e)}}clone(){return new this.constructor(this.x,this.y,this.z,this.w)}copy(e){return this.x=e.x,this.y=e.y,this.z=e.z,this.w=e.w!==void 0?e.w:1,this}add(e){return this.x+=e.x,this.y+=e.y,this.z+=e.z,this.w+=e.w,this}addScalar(e){return this.x+=e,this.y+=e,this.z+=e,this.w+=e,this}addVectors(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this.z=e.z+t.z,this.w=e.w+t.w,this}addScaledVector(e,t){return this.x+=e.x*t,this.y+=e.y*t,this.z+=e.z*t,this.w+=e.w*t,this}sub(e){return this.x-=e.x,this.y-=e.y,this.z-=e.z,this.w-=e.w,this}subScalar(e){return this.x-=e,this.y-=e,this.z-=e,this.w-=e,this}subVectors(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this.z=e.z-t.z,this.w=e.w-t.w,this}multiply(e){return this.x*=e.x,this.y*=e.y,this.z*=e.z,this.w*=e.w,this}multiplyScalar(e){return this.x*=e,this.y*=e,this.z*=e,this.w*=e,this}applyMatrix4(e){const t=this.x,i=this.y,r=this.z,s=this.w,a=e.elements;return this.x=a[0]*t+a[4]*i+a[8]*r+a[12]*s,this.y=a[1]*t+a[5]*i+a[9]*r+a[13]*s,this.z=a[2]*t+a[6]*i+a[10]*r+a[14]*s,this.w=a[3]*t+a[7]*i+a[11]*r+a[15]*s,this}divideScalar(e){return this.multiplyScalar(1/e)}setAxisAngleFromQuaternion(e){this.w=2*Math.acos(e.w);const t=Math.sqrt(1-e.w*e.w);return t<1e-4?(this.x=1,this.y=0,this.z=0):(this.x=e.x/t,this.y=e.y/t,this.z=e.z/t),this}setAxisAngleFromRotationMatrix(e){let t,i,r,s;const u=e.elements,h=u[0],f=u[4],p=u[8],m=u[1],g=u[5],y=u[9],T=u[2],S=u[6],x=u[10];if(Math.abs(f-m)<.01&&Math.abs(p-T)<.01&&Math.abs(y-S)<.01){if(Math.abs(f+m)<.1&&Math.abs(p+T)<.1&&Math.abs(y+S)<.1&&Math.abs(h+g+x-3)<.1)return this.set(1,0,0,0),this;t=Math.PI;const M=(h+1)/2,b=(g+1)/2,P=(x+1)/2,C=(f+m)/4,L=(p+T)/4,U=(y+S)/4;return M>b&&M>P?M<.01?(i=0,r=.707106781,s=.707106781):(i=Math.sqrt(M),r=C/i,s=L/i):b>P?b<.01?(i=.707106781,r=0,s=.707106781):(r=Math.sqrt(b),i=C/r,s=U/r):P<.01?(i=.707106781,r=.707106781,s=0):(s=Math.sqrt(P),i=L/s,r=U/s),this.set(i,r,s,t),this}let w=Math.sqrt((S-y)*(S-y)+(p-T)*(p-T)+(m-f)*(m-f));return Math.abs(w)<.001&&(w=1),this.x=(S-y)/w,this.y=(p-T)/w,this.z=(m-f)/w,this.w=Math.acos((h+g+x-1)/2),this}min(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this.z=Math.min(this.z,e.z),this.w=Math.min(this.w,e.w),this}max(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this.z=Math.max(this.z,e.z),this.w=Math.max(this.w,e.w),this}clamp(e,t){return this.x=Math.max(e.x,Math.min(t.x,this.x)),this.y=Math.max(e.y,Math.min(t.y,this.y)),this.z=Math.max(e.z,Math.min(t.z,this.z)),this.w=Math.max(e.w,Math.min(t.w,this.w)),this}clampScalar(e,t){return this.x=Math.max(e,Math.min(t,this.x)),this.y=Math.max(e,Math.min(t,this.y)),this.z=Math.max(e,Math.min(t,this.z)),this.w=Math.max(e,Math.min(t,this.w)),this}clampLength(e,t){const i=this.length();return this.divideScalar(i||1).multiplyScalar(Math.max(e,Math.min(t,i)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this.w=Math.floor(this.w),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this.w=Math.ceil(this.w),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this.w=Math.round(this.w),this}roundToZero(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this.z=this.z<0?Math.ceil(this.z):Math.floor(this.z),this.w=this.w<0?Math.ceil(this.w):Math.floor(this.w),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this.w=-this.w,this}dot(e){return this.x*e.x+this.y*e.y+this.z*e.z+this.w*e.w}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)+Math.abs(this.w)}normalize(){return this.divideScalar(this.length()||1)}setLength(e){return this.normalize().multiplyScalar(e)}lerp(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this.z+=(e.z-this.z)*t,this.w+=(e.w-this.w)*t,this}lerpVectors(e,t,i){return this.x=e.x+(t.x-e.x)*i,this.y=e.y+(t.y-e.y)*i,this.z=e.z+(t.z-e.z)*i,this.w=e.w+(t.w-e.w)*i,this}equals(e){return e.x===this.x&&e.y===this.y&&e.z===this.z&&e.w===this.w}fromArray(e,t=0){return this.x=e[t],this.y=e[t+1],this.z=e[t+2],this.w=e[t+3],this}toArray(e=[],t=0){return e[t]=this.x,e[t+1]=this.y,e[t+2]=this.z,e[t+3]=this.w,e}fromBufferAttribute(e,t){return this.x=e.getX(t),this.y=e.getY(t),this.z=e.getZ(t),this.w=e.getW(t),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this.w=Math.random(),this}*[Symbol.iterator](){yield this.x,yield this.y,yield this.z,yield this.w}}class wt extends xi{constructor(e=1,t=1,i={}){super(),this.isWebGLRenderTarget=!0,this.width=e,this.height=t,this.depth=1,this.scissor=new Et(0,0,e,t),this.scissorTest=!1,this.viewport=new Et(0,0,e,t);const r={width:e,height:t,depth:1};i.encoding!==void 0&&(il("THREE.WebGLRenderTarget: option.encoding has been replaced by option.colorSpace."),i.colorSpace=i.encoding===Di?pt:Ar),this.texture=new Zt(r,i.mapping,i.wrapS,i.wrapT,i.magFilter,i.minFilter,i.format,i.type,i.anisotropy,i.colorSpace),this.texture.isRenderTargetTexture=!0,this.texture.flipY=!1,this.texture.generateMipmaps=i.generateMipmaps!==void 0?i.generateMipmaps:!1,this.texture.internalFormat=i.internalFormat!==void 0?i.internalFormat:null,this.texture.minFilter=i.minFilter!==void 0?i.minFilter:Qe,this.depthBuffer=i.depthBuffer!==void 0?i.depthBuffer:!0,this.stencilBuffer=i.stencilBuffer!==void 0?i.stencilBuffer:!1,this.depthTexture=i.depthTexture!==void 0?i.depthTexture:null,this.samples=i.samples!==void 0?i.samples:0}setSize(e,t,i=1){(this.width!==e||this.height!==t||this.depth!==i)&&(this.width=e,this.height=t,this.depth=i,this.texture.image.width=e,this.texture.image.height=t,this.texture.image.depth=i,this.dispose()),this.viewport.set(0,0,e,t),this.scissor.set(0,0,e,t)}clone(){return new this.constructor().copy(this)}copy(e){this.width=e.width,this.height=e.height,this.depth=e.depth,this.scissor.copy(e.scissor),this.scissorTest=e.scissorTest,this.viewport.copy(e.viewport),this.texture=e.texture.clone(),this.texture.isRenderTargetTexture=!0;const t=Object.assign({},e.texture.image);return this.texture.source=new Fs(t),this.depthBuffer=e.depthBuffer,this.stencilBuffer=e.stencilBuffer,e.depthTexture!==null&&(this.depthTexture=e.depthTexture.clone()),this.samples=e.samples,this}dispose(){this.dispatchEvent({type:"dispose"})}}class ih extends Zt{constructor(e=null,t=1,i=1,r=1){super(null),this.isDataArrayTexture=!0,this.image={data:e,width:t,height:i,depth:r},this.magFilter=ct,this.minFilter=ct,this.wrapR=Mn,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1}}class f1 extends wt{constructor(e=1,t=1,i=1){super(e,t),this.isWebGLArrayRenderTarget=!0,this.depth=i,this.texture=new ih(null,e,t,i),this.texture.isRenderTargetTexture=!0}}class Vs extends Zt{constructor(e=null,t=1,i=1,r=1){super(null),this.isData3DTexture=!0,this.image={data:e,width:t,height:i,depth:r},this.magFilter=ct,this.minFilter=ct,this.wrapR=Mn,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1}}class d1 extends wt{constructor(e=1,t=1,i=1){super(e,t),this.isWebGL3DRenderTarget=!0,this.depth=i,this.texture=new Vs(null,e,t,i),this.texture.isRenderTargetTexture=!0}}class Vp extends wt{constructor(e=1,t=1,i=1,r={}){super(e,t,r),this.isWebGLMultipleRenderTargets=!0;const s=this.texture;this.texture=[];for(let a=0;a<i;a++)this.texture[a]=s.clone(),this.texture[a].isRenderTargetTexture=!0}setSize(e,t,i=1){if(this.width!==e||this.height!==t||this.depth!==i){this.width=e,this.height=t,this.depth=i;for(let r=0,s=this.texture.length;r<s;r++)this.texture[r].image.width=e,this.texture[r].image.height=t,this.texture[r].image.depth=i;this.dispose()}return this.viewport.set(0,0,e,t),this.scissor.set(0,0,e,t),this}copy(e){this.dispose(),this.width=e.width,this.height=e.height,this.depth=e.depth,this.scissor.copy(e.scissor),this.scissorTest=e.scissorTest,this.viewport.copy(e.viewport),this.depthBuffer=e.depthBuffer,this.stencilBuffer=e.stencilBuffer,e.depthTexture!==null&&(this.depthTexture=e.depthTexture.clone()),this.texture.length=0;for(let t=0,i=e.texture.length;t<i;t++)this.texture[t]=e.texture[t].clone(),this.texture[t].isRenderTargetTexture=!0;return this}}class hn{constructor(e=0,t=0,i=0,r=1){this.isQuaternion=!0,this._x=e,this._y=t,this._z=i,this._w=r}static slerpFlat(e,t,i,r,s,a,c){let u=i[r+0],h=i[r+1],f=i[r+2],p=i[r+3];const m=s[a+0],g=s[a+1],y=s[a+2],T=s[a+3];if(c===0){e[t+0]=u,e[t+1]=h,e[t+2]=f,e[t+3]=p;return}if(c===1){e[t+0]=m,e[t+1]=g,e[t+2]=y,e[t+3]=T;return}if(p!==T||u!==m||h!==g||f!==y){let S=1-c;const x=u*m+h*g+f*y+p*T,w=x>=0?1:-1,M=1-x*x;if(M>Number.EPSILON){const P=Math.sqrt(M),C=Math.atan2(P,x*w);S=Math.sin(S*C)/P,c=Math.sin(c*C)/P}const b=c*w;if(u=u*S+m*b,h=h*S+g*b,f=f*S+y*b,p=p*S+T*b,S===1-c){const P=1/Math.sqrt(u*u+h*h+f*f+p*p);u*=P,h*=P,f*=P,p*=P}}e[t]=u,e[t+1]=h,e[t+2]=f,e[t+3]=p}static multiplyQuaternionsFlat(e,t,i,r,s,a){const c=i[r],u=i[r+1],h=i[r+2],f=i[r+3],p=s[a],m=s[a+1],g=s[a+2],y=s[a+3];return e[t]=c*y+f*p+u*g-h*m,e[t+1]=u*y+f*m+h*p-c*g,e[t+2]=h*y+f*g+c*m-u*p,e[t+3]=f*y-c*p-u*m-h*g,e}get x(){return this._x}set x(e){this._x=e,this._onChangeCallback()}get y(){return this._y}set y(e){this._y=e,this._onChangeCallback()}get z(){return this._z}set z(e){this._z=e,this._onChangeCallback()}get w(){return this._w}set w(e){this._w=e,this._onChangeCallback()}set(e,t,i,r){return this._x=e,this._y=t,this._z=i,this._w=r,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._w)}copy(e){return this._x=e.x,this._y=e.y,this._z=e.z,this._w=e.w,this._onChangeCallback(),this}setFromEuler(e,t){const i=e._x,r=e._y,s=e._z,a=e._order,c=Math.cos,u=Math.sin,h=c(i/2),f=c(r/2),p=c(s/2),m=u(i/2),g=u(r/2),y=u(s/2);switch(a){case"XYZ":this._x=m*f*p+h*g*y,this._y=h*g*p-m*f*y,this._z=h*f*y+m*g*p,this._w=h*f*p-m*g*y;break;case"YXZ":this._x=m*f*p+h*g*y,this._y=h*g*p-m*f*y,this._z=h*f*y-m*g*p,this._w=h*f*p+m*g*y;break;case"ZXY":this._x=m*f*p-h*g*y,this._y=h*g*p+m*f*y,this._z=h*f*y+m*g*p,this._w=h*f*p-m*g*y;break;case"ZYX":this._x=m*f*p-h*g*y,this._y=h*g*p+m*f*y,this._z=h*f*y-m*g*p,this._w=h*f*p+m*g*y;break;case"YZX":this._x=m*f*p+h*g*y,this._y=h*g*p+m*f*y,this._z=h*f*y-m*g*p,this._w=h*f*p-m*g*y;break;case"XZY":this._x=m*f*p-h*g*y,this._y=h*g*p-m*f*y,this._z=h*f*y+m*g*p,this._w=h*f*p+m*g*y;break;default:console.warn("THREE.Quaternion: .setFromEuler() encountered an unknown order: "+a)}return t!==!1&&this._onChangeCallback(),this}setFromAxisAngle(e,t){const i=t/2,r=Math.sin(i);return this._x=e.x*r,this._y=e.y*r,this._z=e.z*r,this._w=Math.cos(i),this._onChangeCallback(),this}setFromRotationMatrix(e){const t=e.elements,i=t[0],r=t[4],s=t[8],a=t[1],c=t[5],u=t[9],h=t[2],f=t[6],p=t[10],m=i+c+p;if(m>0){const g=.5/Math.sqrt(m+1);this._w=.25/g,this._x=(f-u)*g,this._y=(s-h)*g,this._z=(a-r)*g}else if(i>c&&i>p){const g=2*Math.sqrt(1+i-c-p);this._w=(f-u)/g,this._x=.25*g,this._y=(r+a)/g,this._z=(s+h)/g}else if(c>p){const g=2*Math.sqrt(1+c-i-p);this._w=(s-h)/g,this._x=(r+a)/g,this._y=.25*g,this._z=(u+f)/g}else{const g=2*Math.sqrt(1+p-i-c);this._w=(a-r)/g,this._x=(s+h)/g,this._y=(u+f)/g,this._z=.25*g}return this._onChangeCallback(),this}setFromUnitVectors(e,t){let i=e.dot(t)+1;return i<Number.EPSILON?(i=0,Math.abs(e.x)>Math.abs(e.z)?(this._x=-e.y,this._y=e.x,this._z=0,this._w=i):(this._x=0,this._y=-e.z,this._z=e.y,this._w=i)):(this._x=e.y*t.z-e.z*t.y,this._y=e.z*t.x-e.x*t.z,this._z=e.x*t.y-e.y*t.x,this._w=i),this.normalize()}angleTo(e){return 2*Math.acos(Math.abs(ln(this.dot(e),-1,1)))}rotateTowards(e,t){const i=this.angleTo(e);if(i===0)return this;const r=Math.min(1,t/i);return this.slerp(e,r),this}identity(){return this.set(0,0,0,1)}invert(){return this.conjugate()}conjugate(){return this._x*=-1,this._y*=-1,this._z*=-1,this._onChangeCallback(),this}dot(e){return this._x*e._x+this._y*e._y+this._z*e._z+this._w*e._w}lengthSq(){return this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w}length(){return Math.sqrt(this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w)}normalize(){let e=this.length();return e===0?(this._x=0,this._y=0,this._z=0,this._w=1):(e=1/e,this._x=this._x*e,this._y=this._y*e,this._z=this._z*e,this._w=this._w*e),this._onChangeCallback(),this}multiply(e){return this.multiplyQuaternions(this,e)}premultiply(e){return this.multiplyQuaternions(e,this)}multiplyQuaternions(e,t){const i=e._x,r=e._y,s=e._z,a=e._w,c=t._x,u=t._y,h=t._z,f=t._w;return this._x=i*f+a*c+r*h-s*u,this._y=r*f+a*u+s*c-i*h,this._z=s*f+a*h+i*u-r*c,this._w=a*f-i*c-r*u-s*h,this._onChangeCallback(),this}slerp(e,t){if(t===0)return this;if(t===1)return this.copy(e);const i=this._x,r=this._y,s=this._z,a=this._w;let c=a*e._w+i*e._x+r*e._y+s*e._z;if(c<0?(this._w=-e._w,this._x=-e._x,this._y=-e._y,this._z=-e._z,c=-c):this.copy(e),c>=1)return this._w=a,this._x=i,this._y=r,this._z=s,this;const u=1-c*c;if(u<=Number.EPSILON){const g=1-t;return this._w=g*a+t*this._w,this._x=g*i+t*this._x,this._y=g*r+t*this._y,this._z=g*s+t*this._z,this.normalize(),this._onChangeCallback(),this}const h=Math.sqrt(u),f=Math.atan2(h,c),p=Math.sin((1-t)*f)/h,m=Math.sin(t*f)/h;return this._w=a*p+this._w*m,this._x=i*p+this._x*m,this._y=r*p+this._y*m,this._z=s*p+this._z*m,this._onChangeCallback(),this}slerpQuaternions(e,t,i){return this.copy(e).slerp(t,i)}random(){const e=Math.random(),t=Math.sqrt(1-e),i=Math.sqrt(e),r=2*Math.PI*Math.random(),s=2*Math.PI*Math.random();return this.set(t*Math.cos(r),i*Math.sin(s),i*Math.cos(s),t*Math.sin(r))}equals(e){return e._x===this._x&&e._y===this._y&&e._z===this._z&&e._w===this._w}fromArray(e,t=0){return this._x=e[t],this._y=e[t+1],this._z=e[t+2],this._w=e[t+3],this._onChangeCallback(),this}toArray(e=[],t=0){return e[t]=this._x,e[t+1]=this._y,e[t+2]=this._z,e[t+3]=this._w,e}fromBufferAttribute(e,t){return this._x=e.getX(t),this._y=e.getY(t),this._z=e.getZ(t),this._w=e.getW(t),this}toJSON(){return this.toArray()}_onChange(e){return this._onChangeCallback=e,this}_onChangeCallback(){}*[Symbol.iterator](){yield this._x,yield this._y,yield this._z,yield this._w}}class I{constructor(e=0,t=0,i=0){I.prototype.isVector3=!0,this.x=e,this.y=t,this.z=i}set(e,t,i){return i===void 0&&(i=this.z),this.x=e,this.y=t,this.z=i,this}setScalar(e){return this.x=e,this.y=e,this.z=e,this}setX(e){return this.x=e,this}setY(e){return this.y=e,this}setZ(e){return this.z=e,this}setComponent(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;case 2:this.z=t;break;default:throw new Error("index is out of range: "+e)}return this}getComponent(e){switch(e){case 0:return this.x;case 1:return this.y;case 2:return this.z;default:throw new Error("index is out of range: "+e)}}clone(){return new this.constructor(this.x,this.y,this.z)}copy(e){return this.x=e.x,this.y=e.y,this.z=e.z,this}add(e){return this.x+=e.x,this.y+=e.y,this.z+=e.z,this}addScalar(e){return this.x+=e,this.y+=e,this.z+=e,this}addVectors(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this.z=e.z+t.z,this}addScaledVector(e,t){return this.x+=e.x*t,this.y+=e.y*t,this.z+=e.z*t,this}sub(e){return this.x-=e.x,this.y-=e.y,this.z-=e.z,this}subScalar(e){return this.x-=e,this.y-=e,this.z-=e,this}subVectors(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this.z=e.z-t.z,this}multiply(e){return this.x*=e.x,this.y*=e.y,this.z*=e.z,this}multiplyScalar(e){return this.x*=e,this.y*=e,this.z*=e,this}multiplyVectors(e,t){return this.x=e.x*t.x,this.y=e.y*t.y,this.z=e.z*t.z,this}applyEuler(e){return this.applyQuaternion(ov.setFromEuler(e))}applyAxisAngle(e,t){return this.applyQuaternion(ov.setFromAxisAngle(e,t))}applyMatrix3(e){const t=this.x,i=this.y,r=this.z,s=e.elements;return this.x=s[0]*t+s[3]*i+s[6]*r,this.y=s[1]*t+s[4]*i+s[7]*r,this.z=s[2]*t+s[5]*i+s[8]*r,this}applyNormalMatrix(e){return this.applyMatrix3(e).normalize()}applyMatrix4(e){const t=this.x,i=this.y,r=this.z,s=e.elements,a=1/(s[3]*t+s[7]*i+s[11]*r+s[15]);return this.x=(s[0]*t+s[4]*i+s[8]*r+s[12])*a,this.y=(s[1]*t+s[5]*i+s[9]*r+s[13])*a,this.z=(s[2]*t+s[6]*i+s[10]*r+s[14])*a,this}applyQuaternion(e){const t=this.x,i=this.y,r=this.z,s=e.x,a=e.y,c=e.z,u=e.w,h=u*t+a*r-c*i,f=u*i+c*t-s*r,p=u*r+s*i-a*t,m=-s*t-a*i-c*r;return this.x=h*u+m*-s+f*-c-p*-a,this.y=f*u+m*-a+p*-s-h*-c,this.z=p*u+m*-c+h*-a-f*-s,this}project(e){return this.applyMatrix4(e.matrixWorldInverse).applyMatrix4(e.projectionMatrix)}unproject(e){return this.applyMatrix4(e.projectionMatrixInverse).applyMatrix4(e.matrixWorld)}transformDirection(e){const t=this.x,i=this.y,r=this.z,s=e.elements;return this.x=s[0]*t+s[4]*i+s[8]*r,this.y=s[1]*t+s[5]*i+s[9]*r,this.z=s[2]*t+s[6]*i+s[10]*r,this.normalize()}divide(e){return this.x/=e.x,this.y/=e.y,this.z/=e.z,this}divideScalar(e){return this.multiplyScalar(1/e)}min(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this.z=Math.min(this.z,e.z),this}max(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this.z=Math.max(this.z,e.z),this}clamp(e,t){return this.x=Math.max(e.x,Math.min(t.x,this.x)),this.y=Math.max(e.y,Math.min(t.y,this.y)),this.z=Math.max(e.z,Math.min(t.z,this.z)),this}clampScalar(e,t){return this.x=Math.max(e,Math.min(t,this.x)),this.y=Math.max(e,Math.min(t,this.y)),this.z=Math.max(e,Math.min(t,this.z)),this}clampLength(e,t){const i=this.length();return this.divideScalar(i||1).multiplyScalar(Math.max(e,Math.min(t,i)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this}roundToZero(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this.z=this.z<0?Math.ceil(this.z):Math.floor(this.z),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this}dot(e){return this.x*e.x+this.y*e.y+this.z*e.z}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)}normalize(){return this.divideScalar(this.length()||1)}setLength(e){return this.normalize().multiplyScalar(e)}lerp(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this.z+=(e.z-this.z)*t,this}lerpVectors(e,t,i){return this.x=e.x+(t.x-e.x)*i,this.y=e.y+(t.y-e.y)*i,this.z=e.z+(t.z-e.z)*i,this}cross(e){return this.crossVectors(this,e)}crossVectors(e,t){const i=e.x,r=e.y,s=e.z,a=t.x,c=t.y,u=t.z;return this.x=r*u-s*c,this.y=s*a-i*u,this.z=i*c-r*a,this}projectOnVector(e){const t=e.lengthSq();if(t===0)return this.set(0,0,0);const i=e.dot(this)/t;return this.copy(e).multiplyScalar(i)}projectOnPlane(e){return Gf.copy(this).projectOnVector(e),this.sub(Gf)}reflect(e){return this.sub(Gf.copy(e).multiplyScalar(2*this.dot(e)))}angleTo(e){const t=Math.sqrt(this.lengthSq()*e.lengthSq());if(t===0)return Math.PI/2;const i=this.dot(e)/t;return Math.acos(ln(i,-1,1))}distanceTo(e){return Math.sqrt(this.distanceToSquared(e))}distanceToSquared(e){const t=this.x-e.x,i=this.y-e.y,r=this.z-e.z;return t*t+i*i+r*r}manhattanDistanceTo(e){return Math.abs(this.x-e.x)+Math.abs(this.y-e.y)+Math.abs(this.z-e.z)}setFromSpherical(e){return this.setFromSphericalCoords(e.radius,e.phi,e.theta)}setFromSphericalCoords(e,t,i){const r=Math.sin(t)*e;return this.x=r*Math.sin(i),this.y=Math.cos(t)*e,this.z=r*Math.cos(i),this}setFromCylindrical(e){return this.setFromCylindricalCoords(e.radius,e.theta,e.y)}setFromCylindricalCoords(e,t,i){return this.x=e*Math.sin(t),this.y=i,this.z=e*Math.cos(t),this}setFromMatrixPosition(e){const t=e.elements;return this.x=t[12],this.y=t[13],this.z=t[14],this}setFromMatrixScale(e){const t=this.setFromMatrixColumn(e,0).length(),i=this.setFromMatrixColumn(e,1).length(),r=this.setFromMatrixColumn(e,2).length();return this.x=t,this.y=i,this.z=r,this}setFromMatrixColumn(e,t){return this.fromArray(e.elements,t*4)}setFromMatrix3Column(e,t){return this.fromArray(e.elements,t*3)}setFromEuler(e){return this.x=e._x,this.y=e._y,this.z=e._z,this}setFromColor(e){return this.x=e.r,this.y=e.g,this.z=e.b,this}equals(e){return e.x===this.x&&e.y===this.y&&e.z===this.z}fromArray(e,t=0){return this.x=e[t],this.y=e[t+1],this.z=e[t+2],this}toArray(e=[],t=0){return e[t]=this.x,e[t+1]=this.y,e[t+2]=this.z,e}fromBufferAttribute(e,t){return this.x=e.getX(t),this.y=e.getY(t),this.z=e.getZ(t),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this}randomDirection(){const e=(Math.random()-.5)*2,t=Math.random()*Math.PI*2,i=Math.sqrt(1-e**2);return this.x=i*Math.cos(t),this.y=i*Math.sin(t),this.z=e,this}*[Symbol.iterator](){yield this.x,yield this.y,yield this.z}}const Gf=new I,ov=new hn;class cr{constructor(e=new I(1/0,1/0,1/0),t=new I(-1/0,-1/0,-1/0)){this.isBox3=!0,this.min=e,this.max=t}set(e,t){return this.min.copy(e),this.max.copy(t),this}setFromArray(e){this.makeEmpty();for(let t=0,i=e.length;t<i;t+=3)this.expandByPoint(xr.fromArray(e,t));return this}setFromBufferAttribute(e){this.makeEmpty();for(let t=0,i=e.count;t<i;t++)this.expandByPoint(xr.fromBufferAttribute(e,t));return this}setFromPoints(e){this.makeEmpty();for(let t=0,i=e.length;t<i;t++)this.expandByPoint(e[t]);return this}setFromCenterAndSize(e,t){const i=xr.copy(t).multiplyScalar(.5);return this.min.copy(e).sub(i),this.max.copy(e).add(i),this}setFromObject(e,t=!1){return this.makeEmpty(),this.expandByObject(e,t)}clone(){return new this.constructor().copy(this)}copy(e){return this.min.copy(e.min),this.max.copy(e.max),this}makeEmpty(){return this.min.x=this.min.y=this.min.z=1/0,this.max.x=this.max.y=this.max.z=-1/0,this}isEmpty(){return this.max.x<this.min.x||this.max.y<this.min.y||this.max.z<this.min.z}getCenter(e){return this.isEmpty()?e.set(0,0,0):e.addVectors(this.min,this.max).multiplyScalar(.5)}getSize(e){return this.isEmpty()?e.set(0,0,0):e.subVectors(this.max,this.min)}expandByPoint(e){return this.min.min(e),this.max.max(e),this}expandByVector(e){return this.min.sub(e),this.max.add(e),this}expandByScalar(e){return this.min.addScalar(-e),this.max.addScalar(e),this}expandByObject(e,t=!1){if(e.updateWorldMatrix(!1,!1),e.boundingBox!==void 0)e.boundingBox===null&&e.computeBoundingBox(),ma.copy(e.boundingBox),ma.applyMatrix4(e.matrixWorld),this.union(ma);else{const r=e.geometry;if(r!==void 0)if(t&&r.attributes!==void 0&&r.attributes.position!==void 0){const s=r.attributes.position;for(let a=0,c=s.count;a<c;a++)xr.fromBufferAttribute(s,a).applyMatrix4(e.matrixWorld),this.expandByPoint(xr)}else r.boundingBox===null&&r.computeBoundingBox(),ma.copy(r.boundingBox),ma.applyMatrix4(e.matrixWorld),this.union(ma)}const i=e.children;for(let r=0,s=i.length;r<s;r++)this.expandByObject(i[r],t);return this}containsPoint(e){return!(e.x<this.min.x||e.x>this.max.x||e.y<this.min.y||e.y>this.max.y||e.z<this.min.z||e.z>this.max.z)}containsBox(e){return this.min.x<=e.min.x&&e.max.x<=this.max.x&&this.min.y<=e.min.y&&e.max.y<=this.max.y&&this.min.z<=e.min.z&&e.max.z<=this.max.z}getParameter(e,t){return t.set((e.x-this.min.x)/(this.max.x-this.min.x),(e.y-this.min.y)/(this.max.y-this.min.y),(e.z-this.min.z)/(this.max.z-this.min.z))}intersectsBox(e){return!(e.max.x<this.min.x||e.min.x>this.max.x||e.max.y<this.min.y||e.min.y>this.max.y||e.max.z<this.min.z||e.min.z>this.max.z)}intersectsSphere(e){return this.clampPoint(e.center,xr),xr.distanceToSquared(e.center)<=e.radius*e.radius}intersectsPlane(e){let t,i;return e.normal.x>0?(t=e.normal.x*this.min.x,i=e.normal.x*this.max.x):(t=e.normal.x*this.max.x,i=e.normal.x*this.min.x),e.normal.y>0?(t+=e.normal.y*this.min.y,i+=e.normal.y*this.max.y):(t+=e.normal.y*this.max.y,i+=e.normal.y*this.min.y),e.normal.z>0?(t+=e.normal.z*this.min.z,i+=e.normal.z*this.max.z):(t+=e.normal.z*this.max.z,i+=e.normal.z*this.min.z),t<=-e.constant&&i>=-e.constant}intersectsTriangle(e){if(this.isEmpty())return!1;this.getCenter(Io),Bc.subVectors(this.max,Io),ga.subVectors(e.a,Io),va.subVectors(e.b,Io),xa.subVectors(e.c,Io),Vr.subVectors(va,ga),Gr.subVectors(xa,va),vs.subVectors(ga,xa);let t=[0,-Vr.z,Vr.y,0,-Gr.z,Gr.y,0,-vs.z,vs.y,Vr.z,0,-Vr.x,Gr.z,0,-Gr.x,vs.z,0,-vs.x,-Vr.y,Vr.x,0,-Gr.y,Gr.x,0,-vs.y,vs.x,0];return!Wf(t,ga,va,xa,Bc)||(t=[1,0,0,0,1,0,0,0,1],!Wf(t,ga,va,xa,Bc))?!1:(zc.crossVectors(Vr,Gr),t=[zc.x,zc.y,zc.z],Wf(t,ga,va,xa,Bc))}clampPoint(e,t){return t.copy(e).clamp(this.min,this.max)}distanceToPoint(e){return this.clampPoint(e,xr).distanceTo(e)}getBoundingSphere(e){return this.isEmpty()?e.makeEmpty():(this.getCenter(e.center),e.radius=this.getSize(xr).length()*.5),e}intersect(e){return this.min.max(e.min),this.max.min(e.max),this.isEmpty()&&this.makeEmpty(),this}union(e){return this.min.min(e.min),this.max.max(e.max),this}applyMatrix4(e){return this.isEmpty()?this:(vr[0].set(this.min.x,this.min.y,this.min.z).applyMatrix4(e),vr[1].set(this.min.x,this.min.y,this.max.z).applyMatrix4(e),vr[2].set(this.min.x,this.max.y,this.min.z).applyMatrix4(e),vr[3].set(this.min.x,this.max.y,this.max.z).applyMatrix4(e),vr[4].set(this.max.x,this.min.y,this.min.z).applyMatrix4(e),vr[5].set(this.max.x,this.min.y,this.max.z).applyMatrix4(e),vr[6].set(this.max.x,this.max.y,this.min.z).applyMatrix4(e),vr[7].set(this.max.x,this.max.y,this.max.z).applyMatrix4(e),this.setFromPoints(vr),this)}translate(e){return this.min.add(e),this.max.add(e),this}equals(e){return e.min.equals(this.min)&&e.max.equals(this.max)}}const vr=[new I,new I,new I,new I,new I,new I,new I,new I],xr=new I,ma=new cr,ga=new I,va=new I,xa=new I,Vr=new I,Gr=new I,vs=new I,Io=new I,Bc=new I,zc=new I,xs=new I;function Wf(n,e,t,i,r){for(let s=0,a=n.length-3;s<=a;s+=3){xs.fromArray(n,s);const c=r.x*Math.abs(xs.x)+r.y*Math.abs(xs.y)+r.z*Math.abs(xs.z),u=e.dot(xs),h=t.dot(xs),f=i.dot(xs);if(Math.max(-Math.max(u,h,f),Math.min(u,h,f))>c)return!1}return!0}const p1=new cr,Uo=new I,Xf=new I;class Li{constructor(e=new I,t=-1){this.center=e,this.radius=t}set(e,t){return this.center.copy(e),this.radius=t,this}setFromPoints(e,t){const i=this.center;t!==void 0?i.copy(t):p1.setFromPoints(e).getCenter(i);let r=0;for(let s=0,a=e.length;s<a;s++)r=Math.max(r,i.distanceToSquared(e[s]));return this.radius=Math.sqrt(r),this}copy(e){return this.center.copy(e.center),this.radius=e.radius,this}isEmpty(){return this.radius<0}makeEmpty(){return this.center.set(0,0,0),this.radius=-1,this}containsPoint(e){return e.distanceToSquared(this.center)<=this.radius*this.radius}distanceToPoint(e){return e.distanceTo(this.center)-this.radius}intersectsSphere(e){const t=this.radius+e.radius;return e.center.distanceToSquared(this.center)<=t*t}intersectsBox(e){return e.intersectsSphere(this)}intersectsPlane(e){return Math.abs(e.distanceToPoint(this.center))<=this.radius}clampPoint(e,t){const i=this.center.distanceToSquared(e);return t.copy(e),i>this.radius*this.radius&&(t.sub(this.center).normalize(),t.multiplyScalar(this.radius).add(this.center)),t}getBoundingBox(e){return this.isEmpty()?(e.makeEmpty(),e):(e.set(this.center,this.center),e.expandByScalar(this.radius),e)}applyMatrix4(e){return this.center.applyMatrix4(e),this.radius=this.radius*e.getMaxScaleOnAxis(),this}translate(e){return this.center.add(e),this}expandByPoint(e){if(this.isEmpty())return this.center.copy(e),this.radius=0,this;Uo.subVectors(e,this.center);const t=Uo.lengthSq();if(t>this.radius*this.radius){const i=Math.sqrt(t),r=(i-this.radius)*.5;this.center.addScaledVector(Uo,r/i),this.radius+=r}return this}union(e){return e.isEmpty()?this:this.isEmpty()?(this.copy(e),this):(this.center.equals(e.center)===!0?this.radius=Math.max(this.radius,e.radius):(Xf.subVectors(e.center,this.center).setLength(e.radius),this.expandByPoint(Uo.copy(e.center).add(Xf)),this.expandByPoint(Uo.copy(e.center).sub(Xf))),this)}equals(e){return e.center.equals(this.center)&&e.radius===this.radius}clone(){return new this.constructor().copy(this)}}const yr=new I,Yf=new I,kc=new I,Wr=new I,Zf=new I,Hc=new I,qf=new I;class io{constructor(e=new I,t=new I(0,0,-1)){this.origin=e,this.direction=t}set(e,t){return this.origin.copy(e),this.direction.copy(t),this}copy(e){return this.origin.copy(e.origin),this.direction.copy(e.direction),this}at(e,t){return t.copy(this.origin).addScaledVector(this.direction,e)}lookAt(e){return this.direction.copy(e).sub(this.origin).normalize(),this}recast(e){return this.origin.copy(this.at(e,yr)),this}closestPointToPoint(e,t){t.subVectors(e,this.origin);const i=t.dot(this.direction);return i<0?t.copy(this.origin):t.copy(this.origin).addScaledVector(this.direction,i)}distanceToPoint(e){return Math.sqrt(this.distanceSqToPoint(e))}distanceSqToPoint(e){const t=yr.subVectors(e,this.origin).dot(this.direction);return t<0?this.origin.distanceToSquared(e):(yr.copy(this.origin).addScaledVector(this.direction,t),yr.distanceToSquared(e))}distanceSqToSegment(e,t,i,r){Yf.copy(e).add(t).multiplyScalar(.5),kc.copy(t).sub(e).normalize(),Wr.copy(this.origin).sub(Yf);const s=e.distanceTo(t)*.5,a=-this.direction.dot(kc),c=Wr.dot(this.direction),u=-Wr.dot(kc),h=Wr.lengthSq(),f=Math.abs(1-a*a);let p,m,g,y;if(f>0)if(p=a*u-c,m=a*c-u,y=s*f,p>=0)if(m>=-y)if(m<=y){const T=1/f;p*=T,m*=T,g=p*(p+a*m+2*c)+m*(a*p+m+2*u)+h}else m=s,p=Math.max(0,-(a*m+c)),g=-p*p+m*(m+2*u)+h;else m=-s,p=Math.max(0,-(a*m+c)),g=-p*p+m*(m+2*u)+h;else m<=-y?(p=Math.max(0,-(-a*s+c)),m=p>0?-s:Math.min(Math.max(-s,-u),s),g=-p*p+m*(m+2*u)+h):m<=y?(p=0,m=Math.min(Math.max(-s,-u),s),g=m*(m+2*u)+h):(p=Math.max(0,-(a*s+c)),m=p>0?s:Math.min(Math.max(-s,-u),s),g=-p*p+m*(m+2*u)+h);else m=a>0?-s:s,p=Math.max(0,-(a*m+c)),g=-p*p+m*(m+2*u)+h;return i&&i.copy(this.origin).addScaledVector(this.direction,p),r&&r.copy(Yf).addScaledVector(kc,m),g}intersectSphere(e,t){yr.subVectors(e.center,this.origin);const i=yr.dot(this.direction),r=yr.dot(yr)-i*i,s=e.radius*e.radius;if(r>s)return null;const a=Math.sqrt(s-r),c=i-a,u=i+a;return u<0?null:c<0?this.at(u,t):this.at(c,t)}intersectsSphere(e){return this.distanceSqToPoint(e.center)<=e.radius*e.radius}distanceToPlane(e){const t=e.normal.dot(this.direction);if(t===0)return e.distanceToPoint(this.origin)===0?0:null;const i=-(this.origin.dot(e.normal)+e.constant)/t;return i>=0?i:null}intersectPlane(e,t){const i=this.distanceToPlane(e);return i===null?null:this.at(i,t)}intersectsPlane(e){const t=e.distanceToPoint(this.origin);return t===0||e.normal.dot(this.direction)*t<0}intersectBox(e,t){let i,r,s,a,c,u;const h=1/this.direction.x,f=1/this.direction.y,p=1/this.direction.z,m=this.origin;return h>=0?(i=(e.min.x-m.x)*h,r=(e.max.x-m.x)*h):(i=(e.max.x-m.x)*h,r=(e.min.x-m.x)*h),f>=0?(s=(e.min.y-m.y)*f,a=(e.max.y-m.y)*f):(s=(e.max.y-m.y)*f,a=(e.min.y-m.y)*f),i>a||s>r||((s>i||isNaN(i))&&(i=s),(a<r||isNaN(r))&&(r=a),p>=0?(c=(e.min.z-m.z)*p,u=(e.max.z-m.z)*p):(c=(e.max.z-m.z)*p,u=(e.min.z-m.z)*p),i>u||c>r)||((c>i||i!==i)&&(i=c),(u<r||r!==r)&&(r=u),r<0)?null:this.at(i>=0?i:r,t)}intersectsBox(e){return this.intersectBox(e,yr)!==null}intersectTriangle(e,t,i,r,s){Zf.subVectors(t,e),Hc.subVectors(i,e),qf.crossVectors(Zf,Hc);let a=this.direction.dot(qf),c;if(a>0){if(r)return null;c=1}else if(a<0)c=-1,a=-a;else return null;Wr.subVectors(this.origin,e);const u=c*this.direction.dot(Hc.crossVectors(Wr,Hc));if(u<0)return null;const h=c*this.direction.dot(Zf.cross(Wr));if(h<0||u+h>a)return null;const f=-c*Wr.dot(qf);return f<0?null:this.at(f/a,s)}applyMatrix4(e){return this.origin.applyMatrix4(e),this.direction.transformDirection(e),this}equals(e){return e.origin.equals(this.origin)&&e.direction.equals(this.direction)}clone(){return new this.constructor().copy(this)}}class ze{constructor(e,t,i,r,s,a,c,u,h,f,p,m,g,y,T,S){ze.prototype.isMatrix4=!0,this.elements=[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1],e!==void 0&&this.set(e,t,i,r,s,a,c,u,h,f,p,m,g,y,T,S)}set(e,t,i,r,s,a,c,u,h,f,p,m,g,y,T,S){const x=this.elements;return x[0]=e,x[4]=t,x[8]=i,x[12]=r,x[1]=s,x[5]=a,x[9]=c,x[13]=u,x[2]=h,x[6]=f,x[10]=p,x[14]=m,x[3]=g,x[7]=y,x[11]=T,x[15]=S,this}identity(){return this.set(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1),this}clone(){return new ze().fromArray(this.elements)}copy(e){const t=this.elements,i=e.elements;return t[0]=i[0],t[1]=i[1],t[2]=i[2],t[3]=i[3],t[4]=i[4],t[5]=i[5],t[6]=i[6],t[7]=i[7],t[8]=i[8],t[9]=i[9],t[10]=i[10],t[11]=i[11],t[12]=i[12],t[13]=i[13],t[14]=i[14],t[15]=i[15],this}copyPosition(e){const t=this.elements,i=e.elements;return t[12]=i[12],t[13]=i[13],t[14]=i[14],this}setFromMatrix3(e){const t=e.elements;return this.set(t[0],t[3],t[6],0,t[1],t[4],t[7],0,t[2],t[5],t[8],0,0,0,0,1),this}extractBasis(e,t,i){return e.setFromMatrixColumn(this,0),t.setFromMatrixColumn(this,1),i.setFromMatrixColumn(this,2),this}makeBasis(e,t,i){return this.set(e.x,t.x,i.x,0,e.y,t.y,i.y,0,e.z,t.z,i.z,0,0,0,0,1),this}extractRotation(e){const t=this.elements,i=e.elements,r=1/ya.setFromMatrixColumn(e,0).length(),s=1/ya.setFromMatrixColumn(e,1).length(),a=1/ya.setFromMatrixColumn(e,2).length();return t[0]=i[0]*r,t[1]=i[1]*r,t[2]=i[2]*r,t[3]=0,t[4]=i[4]*s,t[5]=i[5]*s,t[6]=i[6]*s,t[7]=0,t[8]=i[8]*a,t[9]=i[9]*a,t[10]=i[10]*a,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,this}makeRotationFromEuler(e){const t=this.elements,i=e.x,r=e.y,s=e.z,a=Math.cos(i),c=Math.sin(i),u=Math.cos(r),h=Math.sin(r),f=Math.cos(s),p=Math.sin(s);if(e.order==="XYZ"){const m=a*f,g=a*p,y=c*f,T=c*p;t[0]=u*f,t[4]=-u*p,t[8]=h,t[1]=g+y*h,t[5]=m-T*h,t[9]=-c*u,t[2]=T-m*h,t[6]=y+g*h,t[10]=a*u}else if(e.order==="YXZ"){const m=u*f,g=u*p,y=h*f,T=h*p;t[0]=m+T*c,t[4]=y*c-g,t[8]=a*h,t[1]=a*p,t[5]=a*f,t[9]=-c,t[2]=g*c-y,t[6]=T+m*c,t[10]=a*u}else if(e.order==="ZXY"){const m=u*f,g=u*p,y=h*f,T=h*p;t[0]=m-T*c,t[4]=-a*p,t[8]=y+g*c,t[1]=g+y*c,t[5]=a*f,t[9]=T-m*c,t[2]=-a*h,t[6]=c,t[10]=a*u}else if(e.order==="ZYX"){const m=a*f,g=a*p,y=c*f,T=c*p;t[0]=u*f,t[4]=y*h-g,t[8]=m*h+T,t[1]=u*p,t[5]=T*h+m,t[9]=g*h-y,t[2]=-h,t[6]=c*u,t[10]=a*u}else if(e.order==="YZX"){const m=a*u,g=a*h,y=c*u,T=c*h;t[0]=u*f,t[4]=T-m*p,t[8]=y*p+g,t[1]=p,t[5]=a*f,t[9]=-c*f,t[2]=-h*f,t[6]=g*p+y,t[10]=m-T*p}else if(e.order==="XZY"){const m=a*u,g=a*h,y=c*u,T=c*h;t[0]=u*f,t[4]=-p,t[8]=h*f,t[1]=m*p+T,t[5]=a*f,t[9]=g*p-y,t[2]=y*p-g,t[6]=c*f,t[10]=T*p+m}return t[3]=0,t[7]=0,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,this}makeRotationFromQuaternion(e){return this.compose(m1,e,g1)}lookAt(e,t,i){const r=this.elements;return di.subVectors(e,t),di.lengthSq()===0&&(di.z=1),di.normalize(),Xr.crossVectors(i,di),Xr.lengthSq()===0&&(Math.abs(i.z)===1?di.x+=1e-4:di.z+=1e-4,di.normalize(),Xr.crossVectors(i,di)),Xr.normalize(),Vc.crossVectors(di,Xr),r[0]=Xr.x,r[4]=Vc.x,r[8]=di.x,r[1]=Xr.y,r[5]=Vc.y,r[9]=di.y,r[2]=Xr.z,r[6]=Vc.z,r[10]=di.z,this}multiply(e){return this.multiplyMatrices(this,e)}premultiply(e){return this.multiplyMatrices(e,this)}multiplyMatrices(e,t){const i=e.elements,r=t.elements,s=this.elements,a=i[0],c=i[4],u=i[8],h=i[12],f=i[1],p=i[5],m=i[9],g=i[13],y=i[2],T=i[6],S=i[10],x=i[14],w=i[3],M=i[7],b=i[11],P=i[15],C=r[0],L=r[4],U=r[8],A=r[12],R=r[1],z=r[5],te=r[9],W=r[13],J=r[2],ne=r[6],ue=r[10],ae=r[14],B=r[3],X=r[7],Y=r[11],H=r[15];return s[0]=a*C+c*R+u*J+h*B,s[4]=a*L+c*z+u*ne+h*X,s[8]=a*U+c*te+u*ue+h*Y,s[12]=a*A+c*W+u*ae+h*H,s[1]=f*C+p*R+m*J+g*B,s[5]=f*L+p*z+m*ne+g*X,s[9]=f*U+p*te+m*ue+g*Y,s[13]=f*A+p*W+m*ae+g*H,s[2]=y*C+T*R+S*J+x*B,s[6]=y*L+T*z+S*ne+x*X,s[10]=y*U+T*te+S*ue+x*Y,s[14]=y*A+T*W+S*ae+x*H,s[3]=w*C+M*R+b*J+P*B,s[7]=w*L+M*z+b*ne+P*X,s[11]=w*U+M*te+b*ue+P*Y,s[15]=w*A+M*W+b*ae+P*H,this}multiplyScalar(e){const t=this.elements;return t[0]*=e,t[4]*=e,t[8]*=e,t[12]*=e,t[1]*=e,t[5]*=e,t[9]*=e,t[13]*=e,t[2]*=e,t[6]*=e,t[10]*=e,t[14]*=e,t[3]*=e,t[7]*=e,t[11]*=e,t[15]*=e,this}determinant(){const e=this.elements,t=e[0],i=e[4],r=e[8],s=e[12],a=e[1],c=e[5],u=e[9],h=e[13],f=e[2],p=e[6],m=e[10],g=e[14],y=e[3],T=e[7],S=e[11],x=e[15];return y*(+s*u*p-r*h*p-s*c*m+i*h*m+r*c*g-i*u*g)+T*(+t*u*g-t*h*m+s*a*m-r*a*g+r*h*f-s*u*f)+S*(+t*h*p-t*c*g-s*a*p+i*a*g+s*c*f-i*h*f)+x*(-r*c*f-t*u*p+t*c*m+r*a*p-i*a*m+i*u*f)}transpose(){const e=this.elements;let t;return t=e[1],e[1]=e[4],e[4]=t,t=e[2],e[2]=e[8],e[8]=t,t=e[6],e[6]=e[9],e[9]=t,t=e[3],e[3]=e[12],e[12]=t,t=e[7],e[7]=e[13],e[13]=t,t=e[11],e[11]=e[14],e[14]=t,this}setPosition(e,t,i){const r=this.elements;return e.isVector3?(r[12]=e.x,r[13]=e.y,r[14]=e.z):(r[12]=e,r[13]=t,r[14]=i),this}invert(){const e=this.elements,t=e[0],i=e[1],r=e[2],s=e[3],a=e[4],c=e[5],u=e[6],h=e[7],f=e[8],p=e[9],m=e[10],g=e[11],y=e[12],T=e[13],S=e[14],x=e[15],w=p*S*h-T*m*h+T*u*g-c*S*g-p*u*x+c*m*x,M=y*m*h-f*S*h-y*u*g+a*S*g+f*u*x-a*m*x,b=f*T*h-y*p*h+y*c*g-a*T*g-f*c*x+a*p*x,P=y*p*u-f*T*u-y*c*m+a*T*m+f*c*S-a*p*S,C=t*w+i*M+r*b+s*P;if(C===0)return this.set(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0);const L=1/C;return e[0]=w*L,e[1]=(T*m*s-p*S*s-T*r*g+i*S*g+p*r*x-i*m*x)*L,e[2]=(c*S*s-T*u*s+T*r*h-i*S*h-c*r*x+i*u*x)*L,e[3]=(p*u*s-c*m*s-p*r*h+i*m*h+c*r*g-i*u*g)*L,e[4]=M*L,e[5]=(f*S*s-y*m*s+y*r*g-t*S*g-f*r*x+t*m*x)*L,e[6]=(y*u*s-a*S*s-y*r*h+t*S*h+a*r*x-t*u*x)*L,e[7]=(a*m*s-f*u*s+f*r*h-t*m*h-a*r*g+t*u*g)*L,e[8]=b*L,e[9]=(y*p*s-f*T*s-y*i*g+t*T*g+f*i*x-t*p*x)*L,e[10]=(a*T*s-y*c*s+y*i*h-t*T*h-a*i*x+t*c*x)*L,e[11]=(f*c*s-a*p*s-f*i*h+t*p*h+a*i*g-t*c*g)*L,e[12]=P*L,e[13]=(f*T*r-y*p*r+y*i*m-t*T*m-f*i*S+t*p*S)*L,e[14]=(y*c*r-a*T*r-y*i*u+t*T*u+a*i*S-t*c*S)*L,e[15]=(a*p*r-f*c*r+f*i*u-t*p*u-a*i*m+t*c*m)*L,this}scale(e){const t=this.elements,i=e.x,r=e.y,s=e.z;return t[0]*=i,t[4]*=r,t[8]*=s,t[1]*=i,t[5]*=r,t[9]*=s,t[2]*=i,t[6]*=r,t[10]*=s,t[3]*=i,t[7]*=r,t[11]*=s,this}getMaxScaleOnAxis(){const e=this.elements,t=e[0]*e[0]+e[1]*e[1]+e[2]*e[2],i=e[4]*e[4]+e[5]*e[5]+e[6]*e[6],r=e[8]*e[8]+e[9]*e[9]+e[10]*e[10];return Math.sqrt(Math.max(t,i,r))}makeTranslation(e,t,i){return e.isVector3?this.set(1,0,0,e.x,0,1,0,e.y,0,0,1,e.z,0,0,0,1):this.set(1,0,0,e,0,1,0,t,0,0,1,i,0,0,0,1),this}makeRotationX(e){const t=Math.cos(e),i=Math.sin(e);return this.set(1,0,0,0,0,t,-i,0,0,i,t,0,0,0,0,1),this}makeRotationY(e){const t=Math.cos(e),i=Math.sin(e);return this.set(t,0,i,0,0,1,0,0,-i,0,t,0,0,0,0,1),this}makeRotationZ(e){const t=Math.cos(e),i=Math.sin(e);return this.set(t,-i,0,0,i,t,0,0,0,0,1,0,0,0,0,1),this}makeRotationAxis(e,t){const i=Math.cos(t),r=Math.sin(t),s=1-i,a=e.x,c=e.y,u=e.z,h=s*a,f=s*c;return this.set(h*a+i,h*c-r*u,h*u+r*c,0,h*c+r*u,f*c+i,f*u-r*a,0,h*u-r*c,f*u+r*a,s*u*u+i,0,0,0,0,1),this}makeScale(e,t,i){return this.set(e,0,0,0,0,t,0,0,0,0,i,0,0,0,0,1),this}makeShear(e,t,i,r,s,a){return this.set(1,i,s,0,e,1,a,0,t,r,1,0,0,0,0,1),this}compose(e,t,i){const r=this.elements,s=t._x,a=t._y,c=t._z,u=t._w,h=s+s,f=a+a,p=c+c,m=s*h,g=s*f,y=s*p,T=a*f,S=a*p,x=c*p,w=u*h,M=u*f,b=u*p,P=i.x,C=i.y,L=i.z;return r[0]=(1-(T+x))*P,r[1]=(g+b)*P,r[2]=(y-M)*P,r[3]=0,r[4]=(g-b)*C,r[5]=(1-(m+x))*C,r[6]=(S+w)*C,r[7]=0,r[8]=(y+M)*L,r[9]=(S-w)*L,r[10]=(1-(m+T))*L,r[11]=0,r[12]=e.x,r[13]=e.y,r[14]=e.z,r[15]=1,this}decompose(e,t,i){const r=this.elements;let s=ya.set(r[0],r[1],r[2]).length();const a=ya.set(r[4],r[5],r[6]).length(),c=ya.set(r[8],r[9],r[10]).length();this.determinant()<0&&(s=-s),e.x=r[12],e.y=r[13],e.z=r[14],Oi.copy(this);const h=1/s,f=1/a,p=1/c;return Oi.elements[0]*=h,Oi.elements[1]*=h,Oi.elements[2]*=h,Oi.elements[4]*=f,Oi.elements[5]*=f,Oi.elements[6]*=f,Oi.elements[8]*=p,Oi.elements[9]*=p,Oi.elements[10]*=p,t.setFromRotationMatrix(Oi),i.x=s,i.y=a,i.z=c,this}makePerspective(e,t,i,r,s,a,c=rr){const u=this.elements,h=2*s/(t-e),f=2*s/(i-r),p=(t+e)/(t-e),m=(i+r)/(i-r);let g,y;if(c===rr)g=-(a+s)/(a-s),y=-2*a*s/(a-s);else if(c===xl)g=-a/(a-s),y=-a*s/(a-s);else throw new Error("THREE.Matrix4.makePerspective(): Invalid coordinate system: "+c);return u[0]=h,u[4]=0,u[8]=p,u[12]=0,u[1]=0,u[5]=f,u[9]=m,u[13]=0,u[2]=0,u[6]=0,u[10]=g,u[14]=y,u[3]=0,u[7]=0,u[11]=-1,u[15]=0,this}makeOrthographic(e,t,i,r,s,a,c=rr){const u=this.elements,h=1/(t-e),f=1/(i-r),p=1/(a-s),m=(t+e)*h,g=(i+r)*f;let y,T;if(c===rr)y=(a+s)*p,T=-2*p;else if(c===xl)y=s*p,T=-1*p;else throw new Error("THREE.Matrix4.makeOrthographic(): Invalid coordinate system: "+c);return u[0]=2*h,u[4]=0,u[8]=0,u[12]=-m,u[1]=0,u[5]=2*f,u[9]=0,u[13]=-g,u[2]=0,u[6]=0,u[10]=T,u[14]=-y,u[3]=0,u[7]=0,u[11]=0,u[15]=1,this}equals(e){const t=this.elements,i=e.elements;for(let r=0;r<16;r++)if(t[r]!==i[r])return!1;return!0}fromArray(e,t=0){for(let i=0;i<16;i++)this.elements[i]=e[i+t];return this}toArray(e=[],t=0){const i=this.elements;return e[t]=i[0],e[t+1]=i[1],e[t+2]=i[2],e[t+3]=i[3],e[t+4]=i[4],e[t+5]=i[5],e[t+6]=i[6],e[t+7]=i[7],e[t+8]=i[8],e[t+9]=i[9],e[t+10]=i[10],e[t+11]=i[11],e[t+12]=i[12],e[t+13]=i[13],e[t+14]=i[14],e[t+15]=i[15],e}}const ya=new I,Oi=new ze,m1=new I(0,0,0),g1=new I(1,1,1),Xr=new I,Vc=new I,di=new I,lv=new ze,cv=new hn;class ro{constructor(e=0,t=0,i=0,r=ro.DEFAULT_ORDER){this.isEuler=!0,this._x=e,this._y=t,this._z=i,this._order=r}get x(){return this._x}set x(e){this._x=e,this._onChangeCallback()}get y(){return this._y}set y(e){this._y=e,this._onChangeCallback()}get z(){return this._z}set z(e){this._z=e,this._onChangeCallback()}get order(){return this._order}set order(e){this._order=e,this._onChangeCallback()}set(e,t,i,r=this._order){return this._x=e,this._y=t,this._z=i,this._order=r,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._order)}copy(e){return this._x=e._x,this._y=e._y,this._z=e._z,this._order=e._order,this._onChangeCallback(),this}setFromRotationMatrix(e,t=this._order,i=!0){const r=e.elements,s=r[0],a=r[4],c=r[8],u=r[1],h=r[5],f=r[9],p=r[2],m=r[6],g=r[10];switch(t){case"XYZ":this._y=Math.asin(ln(c,-1,1)),Math.abs(c)<.9999999?(this._x=Math.atan2(-f,g),this._z=Math.atan2(-a,s)):(this._x=Math.atan2(m,h),this._z=0);break;case"YXZ":this._x=Math.asin(-ln(f,-1,1)),Math.abs(f)<.9999999?(this._y=Math.atan2(c,g),this._z=Math.atan2(u,h)):(this._y=Math.atan2(-p,s),this._z=0);break;case"ZXY":this._x=Math.asin(ln(m,-1,1)),Math.abs(m)<.9999999?(this._y=Math.atan2(-p,g),this._z=Math.atan2(-a,h)):(this._y=0,this._z=Math.atan2(u,s));break;case"ZYX":this._y=Math.asin(-ln(p,-1,1)),Math.abs(p)<.9999999?(this._x=Math.atan2(m,g),this._z=Math.atan2(u,s)):(this._x=0,this._z=Math.atan2(-a,h));break;case"YZX":this._z=Math.asin(ln(u,-1,1)),Math.abs(u)<.9999999?(this._x=Math.atan2(-f,h),this._y=Math.atan2(-p,s)):(this._x=0,this._y=Math.atan2(c,g));break;case"XZY":this._z=Math.asin(-ln(a,-1,1)),Math.abs(a)<.9999999?(this._x=Math.atan2(m,h),this._y=Math.atan2(c,s)):(this._x=Math.atan2(-f,g),this._y=0);break;default:console.warn("THREE.Euler: .setFromRotationMatrix() encountered an unknown order: "+t)}return this._order=t,i===!0&&this._onChangeCallback(),this}setFromQuaternion(e,t,i){return lv.makeRotationFromQuaternion(e),this.setFromRotationMatrix(lv,t,i)}setFromVector3(e,t=this._order){return this.set(e.x,e.y,e.z,t)}reorder(e){return cv.setFromEuler(this),this.setFromQuaternion(cv,e)}equals(e){return e._x===this._x&&e._y===this._y&&e._z===this._z&&e._order===this._order}fromArray(e){return this._x=e[0],this._y=e[1],this._z=e[2],e[3]!==void 0&&(this._order=e[3]),this._onChangeCallback(),this}toArray(e=[],t=0){return e[t]=this._x,e[t+1]=this._y,e[t+2]=this._z,e[t+3]=this._order,e}_onChange(e){return this._onChangeCallback=e,this}_onChangeCallback(){}*[Symbol.iterator](){yield this._x,yield this._y,yield this._z,yield this._order}}ro.DEFAULT_ORDER="XYZ";class Gs{constructor(){this.mask=1}set(e){this.mask=(1<<e|0)>>>0}enable(e){this.mask|=1<<e|0}enableAll(){this.mask=-1}toggle(e){this.mask^=1<<e|0}disable(e){this.mask&=~(1<<e|0)}disableAll(){this.mask=0}test(e){return(this.mask&e.mask)!==0}isEnabled(e){return(this.mask&(1<<e|0))!==0}}let v1=0;const uv=new I,Sa=new hn,Sr=new ze,Gc=new I,No=new I,x1=new I,y1=new hn,hv=new I(1,0,0),fv=new I(0,1,0),dv=new I(0,0,1),S1={type:"added"},pv={type:"removed"};class Ut extends xi{constructor(){super(),this.isObject3D=!0,Object.defineProperty(this,"id",{value:v1++}),this.uuid=gi(),this.name="",this.type="Object3D",this.parent=null,this.children=[],this.up=Ut.DEFAULT_UP.clone();const e=new I,t=new ro,i=new hn,r=new I(1,1,1);function s(){i.setFromEuler(t,!1)}function a(){t.setFromQuaternion(i,void 0,!1)}t._onChange(s),i._onChange(a),Object.defineProperties(this,{position:{configurable:!0,enumerable:!0,value:e},rotation:{configurable:!0,enumerable:!0,value:t},quaternion:{configurable:!0,enumerable:!0,value:i},scale:{configurable:!0,enumerable:!0,value:r},modelViewMatrix:{value:new ze},normalMatrix:{value:new gt}}),this.matrix=new ze,this.matrixWorld=new ze,this.matrixAutoUpdate=Ut.DEFAULT_MATRIX_AUTO_UPDATE,this.matrixWorldNeedsUpdate=!1,this.matrixWorldAutoUpdate=Ut.DEFAULT_MATRIX_WORLD_AUTO_UPDATE,this.layers=new Gs,this.visible=!0,this.castShadow=!1,this.receiveShadow=!1,this.frustumCulled=!0,this.renderOrder=0,this.animations=[],this.userData={}}onBeforeRender(){}onAfterRender(){}applyMatrix4(e){this.matrixAutoUpdate&&this.updateMatrix(),this.matrix.premultiply(e),this.matrix.decompose(this.position,this.quaternion,this.scale)}applyQuaternion(e){return this.quaternion.premultiply(e),this}setRotationFromAxisAngle(e,t){this.quaternion.setFromAxisAngle(e,t)}setRotationFromEuler(e){this.quaternion.setFromEuler(e,!0)}setRotationFromMatrix(e){this.quaternion.setFromRotationMatrix(e)}setRotationFromQuaternion(e){this.quaternion.copy(e)}rotateOnAxis(e,t){return Sa.setFromAxisAngle(e,t),this.quaternion.multiply(Sa),this}rotateOnWorldAxis(e,t){return Sa.setFromAxisAngle(e,t),this.quaternion.premultiply(Sa),this}rotateX(e){return this.rotateOnAxis(hv,e)}rotateY(e){return this.rotateOnAxis(fv,e)}rotateZ(e){return this.rotateOnAxis(dv,e)}translateOnAxis(e,t){return uv.copy(e).applyQuaternion(this.quaternion),this.position.add(uv.multiplyScalar(t)),this}translateX(e){return this.translateOnAxis(hv,e)}translateY(e){return this.translateOnAxis(fv,e)}translateZ(e){return this.translateOnAxis(dv,e)}localToWorld(e){return this.updateWorldMatrix(!0,!1),e.applyMatrix4(this.matrixWorld)}worldToLocal(e){return this.updateWorldMatrix(!0,!1),e.applyMatrix4(Sr.copy(this.matrixWorld).invert())}lookAt(e,t,i){e.isVector3?Gc.copy(e):Gc.set(e,t,i);const r=this.parent;this.updateWorldMatrix(!0,!1),No.setFromMatrixPosition(this.matrixWorld),this.isCamera||this.isLight?Sr.lookAt(No,Gc,this.up):Sr.lookAt(Gc,No,this.up),this.quaternion.setFromRotationMatrix(Sr),r&&(Sr.extractRotation(r.matrixWorld),Sa.setFromRotationMatrix(Sr),this.quaternion.premultiply(Sa.invert()))}add(e){if(arguments.length>1){for(let t=0;t<arguments.length;t++)this.add(arguments[t]);return this}return e===this?(console.error("THREE.Object3D.add: object can't be added as a child of itself.",e),this):(e&&e.isObject3D?(e.parent!==null&&e.parent.remove(e),e.parent=this,this.children.push(e),e.dispatchEvent(S1)):console.error("THREE.Object3D.add: object not an instance of THREE.Object3D.",e),this)}remove(e){if(arguments.length>1){for(let i=0;i<arguments.length;i++)this.remove(arguments[i]);return this}const t=this.children.indexOf(e);return t!==-1&&(e.parent=null,this.children.splice(t,1),e.dispatchEvent(pv)),this}removeFromParent(){const e=this.parent;return e!==null&&e.remove(this),this}clear(){for(let e=0;e<this.children.length;e++){const t=this.children[e];t.parent=null,t.dispatchEvent(pv)}return this.children.length=0,this}attach(e){return this.updateWorldMatrix(!0,!1),Sr.copy(this.matrixWorld).invert(),e.parent!==null&&(e.parent.updateWorldMatrix(!0,!1),Sr.multiply(e.parent.matrixWorld)),e.applyMatrix4(Sr),this.add(e),e.updateWorldMatrix(!1,!0),this}getObjectById(e){return this.getObjectByProperty("id",e)}getObjectByName(e){return this.getObjectByProperty("name",e)}getObjectByProperty(e,t){if(this[e]===t)return this;for(let i=0,r=this.children.length;i<r;i++){const a=this.children[i].getObjectByProperty(e,t);if(a!==void 0)return a}}getObjectsByProperty(e,t){let i=[];this[e]===t&&i.push(this);for(let r=0,s=this.children.length;r<s;r++){const a=this.children[r].getObjectsByProperty(e,t);a.length>0&&(i=i.concat(a))}return i}getWorldPosition(e){return this.updateWorldMatrix(!0,!1),e.setFromMatrixPosition(this.matrixWorld)}getWorldQuaternion(e){return this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(No,e,x1),e}getWorldScale(e){return this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(No,y1,e),e}getWorldDirection(e){this.updateWorldMatrix(!0,!1);const t=this.matrixWorld.elements;return e.set(t[8],t[9],t[10]).normalize()}raycast(){}traverse(e){e(this);const t=this.children;for(let i=0,r=t.length;i<r;i++)t[i].traverse(e)}traverseVisible(e){if(this.visible===!1)return;e(this);const t=this.children;for(let i=0,r=t.length;i<r;i++)t[i].traverseVisible(e)}traverseAncestors(e){const t=this.parent;t!==null&&(e(t),t.traverseAncestors(e))}updateMatrix(){this.matrix.compose(this.position,this.quaternion,this.scale),this.matrixWorldNeedsUpdate=!0}updateMatrixWorld(e){this.matrixAutoUpdate&&this.updateMatrix(),(this.matrixWorldNeedsUpdate||e)&&(this.parent===null?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),this.matrixWorldNeedsUpdate=!1,e=!0);const t=this.children;for(let i=0,r=t.length;i<r;i++){const s=t[i];(s.matrixWorldAutoUpdate===!0||e===!0)&&s.updateMatrixWorld(e)}}updateWorldMatrix(e,t){const i=this.parent;if(e===!0&&i!==null&&i.matrixWorldAutoUpdate===!0&&i.updateWorldMatrix(!0,!1),this.matrixAutoUpdate&&this.updateMatrix(),this.parent===null?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),t===!0){const r=this.children;for(let s=0,a=r.length;s<a;s++){const c=r[s];c.matrixWorldAutoUpdate===!0&&c.updateWorldMatrix(!1,!0)}}}toJSON(e){const t=e===void 0||typeof e=="string",i={};t&&(e={geometries:{},materials:{},textures:{},images:{},shapes:{},skeletons:{},animations:{},nodes:{}},i.metadata={version:4.6,type:"Object",generator:"Object3D.toJSON"});const r={};r.uuid=this.uuid,r.type=this.type,this.name!==""&&(r.name=this.name),this.castShadow===!0&&(r.castShadow=!0),this.receiveShadow===!0&&(r.receiveShadow=!0),this.visible===!1&&(r.visible=!1),this.frustumCulled===!1&&(r.frustumCulled=!1),this.renderOrder!==0&&(r.renderOrder=this.renderOrder),Object.keys(this.userData).length>0&&(r.userData=this.userData),r.layers=this.layers.mask,r.matrix=this.matrix.toArray(),r.up=this.up.toArray(),this.matrixAutoUpdate===!1&&(r.matrixAutoUpdate=!1),this.isInstancedMesh&&(r.type="InstancedMesh",r.count=this.count,r.instanceMatrix=this.instanceMatrix.toJSON(),this.instanceColor!==null&&(r.instanceColor=this.instanceColor.toJSON()));function s(c,u){return c[u.uuid]===void 0&&(c[u.uuid]=u.toJSON(e)),u.uuid}if(this.isScene)this.background&&(this.background.isColor?r.background=this.background.toJSON():this.background.isTexture&&(r.background=this.background.toJSON(e).uuid)),this.environment&&this.environment.isTexture&&this.environment.isRenderTargetTexture!==!0&&(r.environment=this.environment.toJSON(e).uuid);else if(this.isMesh||this.isLine||this.isPoints){r.geometry=s(e.geometries,this.geometry);const c=this.geometry.parameters;if(c!==void 0&&c.shapes!==void 0){const u=c.shapes;if(Array.isArray(u))for(let h=0,f=u.length;h<f;h++){const p=u[h];s(e.shapes,p)}else s(e.shapes,u)}}if(this.isSkinnedMesh&&(r.bindMode=this.bindMode,r.bindMatrix=this.bindMatrix.toArray(),this.skeleton!==void 0&&(s(e.skeletons,this.skeleton),r.skeleton=this.skeleton.uuid)),this.material!==void 0)if(Array.isArray(this.material)){const c=[];for(let u=0,h=this.material.length;u<h;u++)c.push(s(e.materials,this.material[u]));r.material=c}else r.material=s(e.materials,this.material);if(this.children.length>0){r.children=[];for(let c=0;c<this.children.length;c++)r.children.push(this.children[c].toJSON(e).object)}if(this.animations.length>0){r.animations=[];for(let c=0;c<this.animations.length;c++){const u=this.animations[c];r.animations.push(s(e.animations,u))}}if(t){const c=a(e.geometries),u=a(e.materials),h=a(e.textures),f=a(e.images),p=a(e.shapes),m=a(e.skeletons),g=a(e.animations),y=a(e.nodes);c.length>0&&(i.geometries=c),u.length>0&&(i.materials=u),h.length>0&&(i.textures=h),f.length>0&&(i.images=f),p.length>0&&(i.shapes=p),m.length>0&&(i.skeletons=m),g.length>0&&(i.animations=g),y.length>0&&(i.nodes=y)}return i.object=r,i;function a(c){const u=[];for(const h in c){const f=c[h];delete f.metadata,u.push(f)}return u}}clone(e){return new this.constructor().copy(this,e)}copy(e,t=!0){if(this.name=e.name,this.up.copy(e.up),this.position.copy(e.position),this.rotation.order=e.rotation.order,this.quaternion.copy(e.quaternion),this.scale.copy(e.scale),this.matrix.copy(e.matrix),this.matrixWorld.copy(e.matrixWorld),this.matrixAutoUpdate=e.matrixAutoUpdate,this.matrixWorldNeedsUpdate=e.matrixWorldNeedsUpdate,this.matrixWorldAutoUpdate=e.matrixWorldAutoUpdate,this.layers.mask=e.layers.mask,this.visible=e.visible,this.castShadow=e.castShadow,this.receiveShadow=e.receiveShadow,this.frustumCulled=e.frustumCulled,this.renderOrder=e.renderOrder,this.animations=e.animations,this.userData=JSON.parse(JSON.stringify(e.userData)),t===!0)for(let i=0;i<e.children.length;i++){const r=e.children[i];this.add(r.clone())}return this}}Ut.DEFAULT_UP=new I(0,1,0);Ut.DEFAULT_MATRIX_AUTO_UPDATE=!0;Ut.DEFAULT_MATRIX_WORLD_AUTO_UPDATE=!0;const Bi=new I,Mr=new I,jf=new I,_r=new I,Ma=new I,_a=new I,mv=new I,Kf=new I,Qf=new I,Jf=new I;let Wc=!1;class ti{constructor(e=new I,t=new I,i=new I){this.a=e,this.b=t,this.c=i}static getNormal(e,t,i,r){r.subVectors(i,t),Bi.subVectors(e,t),r.cross(Bi);const s=r.lengthSq();return s>0?r.multiplyScalar(1/Math.sqrt(s)):r.set(0,0,0)}static getBarycoord(e,t,i,r,s){Bi.subVectors(r,t),Mr.subVectors(i,t),jf.subVectors(e,t);const a=Bi.dot(Bi),c=Bi.dot(Mr),u=Bi.dot(jf),h=Mr.dot(Mr),f=Mr.dot(jf),p=a*h-c*c;if(p===0)return s.set(-2,-1,-1);const m=1/p,g=(h*u-c*f)*m,y=(a*f-c*u)*m;return s.set(1-g-y,y,g)}static containsPoint(e,t,i,r){return this.getBarycoord(e,t,i,r,_r),_r.x>=0&&_r.y>=0&&_r.x+_r.y<=1}static getUV(e,t,i,r,s,a,c,u){return Wc===!1&&(console.warn("THREE.Triangle.getUV() has been renamed to THREE.Triangle.getInterpolation()."),Wc=!0),this.getInterpolation(e,t,i,r,s,a,c,u)}static getInterpolation(e,t,i,r,s,a,c,u){return this.getBarycoord(e,t,i,r,_r),u.setScalar(0),u.addScaledVector(s,_r.x),u.addScaledVector(a,_r.y),u.addScaledVector(c,_r.z),u}static isFrontFacing(e,t,i,r){return Bi.subVectors(i,t),Mr.subVectors(e,t),Bi.cross(Mr).dot(r)<0}set(e,t,i){return this.a.copy(e),this.b.copy(t),this.c.copy(i),this}setFromPointsAndIndices(e,t,i,r){return this.a.copy(e[t]),this.b.copy(e[i]),this.c.copy(e[r]),this}setFromAttributeAndIndices(e,t,i,r){return this.a.fromBufferAttribute(e,t),this.b.fromBufferAttribute(e,i),this.c.fromBufferAttribute(e,r),this}clone(){return new this.constructor().copy(this)}copy(e){return this.a.copy(e.a),this.b.copy(e.b),this.c.copy(e.c),this}getArea(){return Bi.subVectors(this.c,this.b),Mr.subVectors(this.a,this.b),Bi.cross(Mr).length()*.5}getMidpoint(e){return e.addVectors(this.a,this.b).add(this.c).multiplyScalar(1/3)}getNormal(e){return ti.getNormal(this.a,this.b,this.c,e)}getPlane(e){return e.setFromCoplanarPoints(this.a,this.b,this.c)}getBarycoord(e,t){return ti.getBarycoord(e,this.a,this.b,this.c,t)}getUV(e,t,i,r,s){return Wc===!1&&(console.warn("THREE.Triangle.getUV() has been renamed to THREE.Triangle.getInterpolation()."),Wc=!0),ti.getInterpolation(e,this.a,this.b,this.c,t,i,r,s)}getInterpolation(e,t,i,r,s){return ti.getInterpolation(e,this.a,this.b,this.c,t,i,r,s)}containsPoint(e){return ti.containsPoint(e,this.a,this.b,this.c)}isFrontFacing(e){return ti.isFrontFacing(this.a,this.b,this.c,e)}intersectsBox(e){return e.intersectsTriangle(this)}closestPointToPoint(e,t){const i=this.a,r=this.b,s=this.c;let a,c;Ma.subVectors(r,i),_a.subVectors(s,i),Kf.subVectors(e,i);const u=Ma.dot(Kf),h=_a.dot(Kf);if(u<=0&&h<=0)return t.copy(i);Qf.subVectors(e,r);const f=Ma.dot(Qf),p=_a.dot(Qf);if(f>=0&&p<=f)return t.copy(r);const m=u*p-f*h;if(m<=0&&u>=0&&f<=0)return a=u/(u-f),t.copy(i).addScaledVector(Ma,a);Jf.subVectors(e,s);const g=Ma.dot(Jf),y=_a.dot(Jf);if(y>=0&&g<=y)return t.copy(s);const T=g*h-u*y;if(T<=0&&h>=0&&y<=0)return c=h/(h-y),t.copy(i).addScaledVector(_a,c);const S=f*y-g*p;if(S<=0&&p-f>=0&&g-y>=0)return mv.subVectors(s,r),c=(p-f)/(p-f+(g-y)),t.copy(r).addScaledVector(mv,c);const x=1/(S+T+m);return a=T*x,c=m*x,t.copy(i).addScaledVector(Ma,a).addScaledVector(_a,c)}equals(e){return e.a.equals(this.a)&&e.b.equals(this.b)&&e.c.equals(this.c)}}let M1=0;class Pn extends xi{constructor(){super(),this.isMaterial=!0,Object.defineProperty(this,"id",{value:M1++}),this.uuid=gi(),this.name="",this.type="Material",this.blending=ks,this.side=or,this.vertexColors=!1,this.opacity=1,this.transparent=!1,this.alphaHash=!1,this.blendSrc=Tp,this.blendDst=wp,this.blendEquation=Ds,this.blendSrcAlpha=null,this.blendDstAlpha=null,this.blendEquationAlpha=null,this.depthFunc=cl,this.depthTest=!0,this.depthWrite=!0,this.stencilWriteMask=255,this.stencilFunc=yy,this.stencilRef=0,this.stencilFuncMask=255,this.stencilFail=zu,this.stencilZFail=zu,this.stencilZPass=zu,this.stencilWrite=!1,this.clippingPlanes=null,this.clipIntersection=!1,this.clipShadows=!1,this.shadowSide=null,this.colorWrite=!0,this.precision=null,this.polygonOffset=!1,this.polygonOffsetFactor=0,this.polygonOffsetUnits=0,this.dithering=!1,this.alphaToCoverage=!1,this.premultipliedAlpha=!1,this.forceSinglePass=!1,this.visible=!0,this.toneMapped=!0,this.userData={},this.version=0,this._alphaTest=0}get alphaTest(){return this._alphaTest}set alphaTest(e){this._alphaTest>0!=e>0&&this.version++,this._alphaTest=e}onBuild(){}onBeforeRender(){}onBeforeCompile(){}customProgramCacheKey(){return this.onBeforeCompile.toString()}setValues(e){if(e!==void 0)for(const t in e){const i=e[t];if(i===void 0){console.warn(`THREE.Material: parameter '${t}' has value of undefined.`);continue}const r=this[t];if(r===void 0){console.warn(`THREE.Material: '${t}' is not a property of THREE.${this.type}.`);continue}r&&r.isColor?r.set(i):r&&r.isVector3&&i&&i.isVector3?r.copy(i):this[t]=i}}toJSON(e){const t=e===void 0||typeof e=="string";t&&(e={textures:{},images:{}});const i={metadata:{version:4.6,type:"Material",generator:"Material.toJSON"}};i.uuid=this.uuid,i.type=this.type,this.name!==""&&(i.name=this.name),this.color&&this.color.isColor&&(i.color=this.color.getHex()),this.roughness!==void 0&&(i.roughness=this.roughness),this.metalness!==void 0&&(i.metalness=this.metalness),this.sheen!==void 0&&(i.sheen=this.sheen),this.sheenColor&&this.sheenColor.isColor&&(i.sheenColor=this.sheenColor.getHex()),this.sheenRoughness!==void 0&&(i.sheenRoughness=this.sheenRoughness),this.emissive&&this.emissive.isColor&&(i.emissive=this.emissive.getHex()),this.emissiveIntensity&&this.emissiveIntensity!==1&&(i.emissiveIntensity=this.emissiveIntensity),this.specular&&this.specular.isColor&&(i.specular=this.specular.getHex()),this.specularIntensity!==void 0&&(i.specularIntensity=this.specularIntensity),this.specularColor&&this.specularColor.isColor&&(i.specularColor=this.specularColor.getHex()),this.shininess!==void 0&&(i.shininess=this.shininess),this.clearcoat!==void 0&&(i.clearcoat=this.clearcoat),this.clearcoatRoughness!==void 0&&(i.clearcoatRoughness=this.clearcoatRoughness),this.clearcoatMap&&this.clearcoatMap.isTexture&&(i.clearcoatMap=this.clearcoatMap.toJSON(e).uuid),this.clearcoatRoughnessMap&&this.clearcoatRoughnessMap.isTexture&&(i.clearcoatRoughnessMap=this.clearcoatRoughnessMap.toJSON(e).uuid),this.clearcoatNormalMap&&this.clearcoatNormalMap.isTexture&&(i.clearcoatNormalMap=this.clearcoatNormalMap.toJSON(e).uuid,i.clearcoatNormalScale=this.clearcoatNormalScale.toArray()),this.iridescence!==void 0&&(i.iridescence=this.iridescence),this.iridescenceIOR!==void 0&&(i.iridescenceIOR=this.iridescenceIOR),this.iridescenceThicknessRange!==void 0&&(i.iridescenceThicknessRange=this.iridescenceThicknessRange),this.iridescenceMap&&this.iridescenceMap.isTexture&&(i.iridescenceMap=this.iridescenceMap.toJSON(e).uuid),this.iridescenceThicknessMap&&this.iridescenceThicknessMap.isTexture&&(i.iridescenceThicknessMap=this.iridescenceThicknessMap.toJSON(e).uuid),this.anisotropy!==void 0&&(i.anisotropy=this.anisotropy),this.anisotropyRotation!==void 0&&(i.anisotropyRotation=this.anisotropyRotation),this.anisotropyMap&&this.anisotropyMap.isTexture&&(i.anisotropyMap=this.anisotropyMap.toJSON(e).uuid),this.map&&this.map.isTexture&&(i.map=this.map.toJSON(e).uuid),this.matcap&&this.matcap.isTexture&&(i.matcap=this.matcap.toJSON(e).uuid),this.alphaMap&&this.alphaMap.isTexture&&(i.alphaMap=this.alphaMap.toJSON(e).uuid),this.lightMap&&this.lightMap.isTexture&&(i.lightMap=this.lightMap.toJSON(e).uuid,i.lightMapIntensity=this.lightMapIntensity),this.aoMap&&this.aoMap.isTexture&&(i.aoMap=this.aoMap.toJSON(e).uuid,i.aoMapIntensity=this.aoMapIntensity),this.bumpMap&&this.bumpMap.isTexture&&(i.bumpMap=this.bumpMap.toJSON(e).uuid,i.bumpScale=this.bumpScale),this.normalMap&&this.normalMap.isTexture&&(i.normalMap=this.normalMap.toJSON(e).uuid,i.normalMapType=this.normalMapType,i.normalScale=this.normalScale.toArray()),this.displacementMap&&this.displacementMap.isTexture&&(i.displacementMap=this.displacementMap.toJSON(e).uuid,i.displacementScale=this.displacementScale,i.displacementBias=this.displacementBias),this.roughnessMap&&this.roughnessMap.isTexture&&(i.roughnessMap=this.roughnessMap.toJSON(e).uuid),this.metalnessMap&&this.metalnessMap.isTexture&&(i.metalnessMap=this.metalnessMap.toJSON(e).uuid),this.emissiveMap&&this.emissiveMap.isTexture&&(i.emissiveMap=this.emissiveMap.toJSON(e).uuid),this.specularMap&&this.specularMap.isTexture&&(i.specularMap=this.specularMap.toJSON(e).uuid),this.specularIntensityMap&&this.specularIntensityMap.isTexture&&(i.specularIntensityMap=this.specularIntensityMap.toJSON(e).uuid),this.specularColorMap&&this.specularColorMap.isTexture&&(i.specularColorMap=this.specularColorMap.toJSON(e).uuid),this.envMap&&this.envMap.isTexture&&(i.envMap=this.envMap.toJSON(e).uuid,this.combine!==void 0&&(i.combine=this.combine)),this.envMapIntensity!==void 0&&(i.envMapIntensity=this.envMapIntensity),this.reflectivity!==void 0&&(i.reflectivity=this.reflectivity),this.refractionRatio!==void 0&&(i.refractionRatio=this.refractionRatio),this.gradientMap&&this.gradientMap.isTexture&&(i.gradientMap=this.gradientMap.toJSON(e).uuid),this.transmission!==void 0&&(i.transmission=this.transmission),this.transmissionMap&&this.transmissionMap.isTexture&&(i.transmissionMap=this.transmissionMap.toJSON(e).uuid),this.thickness!==void 0&&(i.thickness=this.thickness),this.thicknessMap&&this.thicknessMap.isTexture&&(i.thicknessMap=this.thicknessMap.toJSON(e).uuid),this.attenuationDistance!==void 0&&this.attenuationDistance!==1/0&&(i.attenuationDistance=this.attenuationDistance),this.attenuationColor!==void 0&&(i.attenuationColor=this.attenuationColor.getHex()),this.size!==void 0&&(i.size=this.size),this.shadowSide!==null&&(i.shadowSide=this.shadowSide),this.sizeAttenuation!==void 0&&(i.sizeAttenuation=this.sizeAttenuation),this.blending!==ks&&(i.blending=this.blending),this.side!==or&&(i.side=this.side),this.vertexColors&&(i.vertexColors=!0),this.opacity<1&&(i.opacity=this.opacity),this.transparent===!0&&(i.transparent=this.transparent),i.depthFunc=this.depthFunc,i.depthTest=this.depthTest,i.depthWrite=this.depthWrite,i.colorWrite=this.colorWrite,i.stencilWrite=this.stencilWrite,i.stencilWriteMask=this.stencilWriteMask,i.stencilFunc=this.stencilFunc,i.stencilRef=this.stencilRef,i.stencilFuncMask=this.stencilFuncMask,i.stencilFail=this.stencilFail,i.stencilZFail=this.stencilZFail,i.stencilZPass=this.stencilZPass,this.rotation!==void 0&&this.rotation!==0&&(i.rotation=this.rotation),this.polygonOffset===!0&&(i.polygonOffset=!0),this.polygonOffsetFactor!==0&&(i.polygonOffsetFactor=this.polygonOffsetFactor),this.polygonOffsetUnits!==0&&(i.polygonOffsetUnits=this.polygonOffsetUnits),this.linewidth!==void 0&&this.linewidth!==1&&(i.linewidth=this.linewidth),this.dashSize!==void 0&&(i.dashSize=this.dashSize),this.gapSize!==void 0&&(i.gapSize=this.gapSize),this.scale!==void 0&&(i.scale=this.scale),this.dithering===!0&&(i.dithering=!0),this.alphaTest>0&&(i.alphaTest=this.alphaTest),this.alphaHash===!0&&(i.alphaHash=this.alphaHash),this.alphaToCoverage===!0&&(i.alphaToCoverage=this.alphaToCoverage),this.premultipliedAlpha===!0&&(i.premultipliedAlpha=this.premultipliedAlpha),this.forceSinglePass===!0&&(i.forceSinglePass=this.forceSinglePass),this.wireframe===!0&&(i.wireframe=this.wireframe),this.wireframeLinewidth>1&&(i.wireframeLinewidth=this.wireframeLinewidth),this.wireframeLinecap!=="round"&&(i.wireframeLinecap=this.wireframeLinecap),this.wireframeLinejoin!=="round"&&(i.wireframeLinejoin=this.wireframeLinejoin),this.flatShading===!0&&(i.flatShading=this.flatShading),this.visible===!1&&(i.visible=!1),this.toneMapped===!1&&(i.toneMapped=!1),this.fog===!1&&(i.fog=!1),Object.keys(this.userData).length>0&&(i.userData=this.userData);function r(s){const a=[];for(const c in s){const u=s[c];delete u.metadata,a.push(u)}return a}if(t){const s=r(e.textures),a=r(e.images);s.length>0&&(i.textures=s),a.length>0&&(i.images=a)}return i}clone(){return new this.constructor().copy(this)}copy(e){this.name=e.name,this.blending=e.blending,this.side=e.side,this.vertexColors=e.vertexColors,this.opacity=e.opacity,this.transparent=e.transparent,this.blendSrc=e.blendSrc,this.blendDst=e.blendDst,this.blendEquation=e.blendEquation,this.blendSrcAlpha=e.blendSrcAlpha,this.blendDstAlpha=e.blendDstAlpha,this.blendEquationAlpha=e.blendEquationAlpha,this.depthFunc=e.depthFunc,this.depthTest=e.depthTest,this.depthWrite=e.depthWrite,this.stencilWriteMask=e.stencilWriteMask,this.stencilFunc=e.stencilFunc,this.stencilRef=e.stencilRef,this.stencilFuncMask=e.stencilFuncMask,this.stencilFail=e.stencilFail,this.stencilZFail=e.stencilZFail,this.stencilZPass=e.stencilZPass,this.stencilWrite=e.stencilWrite;const t=e.clippingPlanes;let i=null;if(t!==null){const r=t.length;i=new Array(r);for(let s=0;s!==r;++s)i[s]=t[s].clone()}return this.clippingPlanes=i,this.clipIntersection=e.clipIntersection,this.clipShadows=e.clipShadows,this.shadowSide=e.shadowSide,this.colorWrite=e.colorWrite,this.precision=e.precision,this.polygonOffset=e.polygonOffset,this.polygonOffsetFactor=e.polygonOffsetFactor,this.polygonOffsetUnits=e.polygonOffsetUnits,this.dithering=e.dithering,this.alphaTest=e.alphaTest,this.alphaHash=e.alphaHash,this.alphaToCoverage=e.alphaToCoverage,this.premultipliedAlpha=e.premultipliedAlpha,this.forceSinglePass=e.forceSinglePass,this.visible=e.visible,this.toneMapped=e.toneMapped,this.userData=JSON.parse(JSON.stringify(e.userData)),this}dispose(){this.dispatchEvent({type:"dispose"})}set needsUpdate(e){e===!0&&this.version++}}const Ry={aliceblue:15792383,antiquewhite:16444375,aqua:65535,aquamarine:8388564,azure:15794175,beige:16119260,bisque:16770244,black:0,blanchedalmond:16772045,blue:255,blueviolet:9055202,brown:10824234,burlywood:14596231,cadetblue:6266528,chartreuse:8388352,chocolate:13789470,coral:16744272,cornflowerblue:6591981,cornsilk:16775388,crimson:14423100,cyan:65535,darkblue:139,darkcyan:35723,darkgoldenrod:12092939,darkgray:11119017,darkgreen:25600,darkgrey:11119017,darkkhaki:12433259,darkmagenta:9109643,darkolivegreen:5597999,darkorange:16747520,darkorchid:10040012,darkred:9109504,darksalmon:15308410,darkseagreen:9419919,darkslateblue:4734347,darkslategray:3100495,darkslategrey:3100495,darkturquoise:52945,darkviolet:9699539,deeppink:16716947,deepskyblue:49151,dimgray:6908265,dimgrey:6908265,dodgerblue:2003199,firebrick:11674146,floralwhite:16775920,forestgreen:2263842,fuchsia:16711935,gainsboro:14474460,ghostwhite:16316671,gold:16766720,goldenrod:14329120,gray:8421504,green:32768,greenyellow:11403055,grey:8421504,honeydew:15794160,hotpink:16738740,indianred:13458524,indigo:4915330,ivory:16777200,khaki:15787660,lavender:15132410,lavenderblush:16773365,lawngreen:8190976,lemonchiffon:16775885,lightblue:11393254,lightcoral:15761536,lightcyan:14745599,lightgoldenrodyellow:16448210,lightgray:13882323,lightgreen:9498256,lightgrey:13882323,lightpink:16758465,lightsalmon:16752762,lightseagreen:2142890,lightskyblue:8900346,lightslategray:7833753,lightslategrey:7833753,lightsteelblue:11584734,lightyellow:16777184,lime:65280,limegreen:3329330,linen:16445670,magenta:16711935,maroon:8388608,mediumaquamarine:6737322,mediumblue:205,mediumorchid:12211667,mediumpurple:9662683,mediumseagreen:3978097,mediumslateblue:8087790,mediumspringgreen:64154,mediumturquoise:4772300,mediumvioletred:13047173,midnightblue:1644912,mintcream:16121850,mistyrose:16770273,moccasin:16770229,navajowhite:16768685,navy:128,oldlace:16643558,olive:8421376,olivedrab:7048739,orange:16753920,orangered:16729344,orchid:14315734,palegoldenrod:15657130,palegreen:10025880,paleturquoise:11529966,palevioletred:14381203,papayawhip:16773077,peachpuff:16767673,peru:13468991,pink:16761035,plum:14524637,powderblue:11591910,purple:8388736,rebeccapurple:6697881,red:16711680,rosybrown:12357519,royalblue:4286945,saddlebrown:9127187,salmon:16416882,sandybrown:16032864,seagreen:3050327,seashell:16774638,sienna:10506797,silver:12632256,skyblue:8900331,slateblue:6970061,slategray:7372944,slategrey:7372944,snow:16775930,springgreen:65407,steelblue:4620980,tan:13808780,teal:32896,thistle:14204888,tomato:16737095,turquoise:4251856,violet:15631086,wheat:16113331,white:16777215,whitesmoke:16119285,yellow:16776960,yellowgreen:10145074},zi={h:0,s:0,l:0},Xc={h:0,s:0,l:0};function $f(n,e,t){return t<0&&(t+=1),t>1&&(t-=1),t<1/6?n+(e-n)*6*t:t<1/2?e:t<2/3?n+(e-n)*6*(2/3-t):n}class be{constructor(e,t,i){return this.isColor=!0,this.r=1,this.g=1,this.b=1,this.set(e,t,i)}set(e,t,i){if(t===void 0&&i===void 0){const r=e;r&&r.isColor?this.copy(r):typeof r=="number"?this.setHex(r):typeof r=="string"&&this.setStyle(r)}else this.setRGB(e,t,i);return this}setScalar(e){return this.r=e,this.g=e,this.b=e,this}setHex(e,t=pt){return e=Math.floor(e),this.r=(e>>16&255)/255,this.g=(e>>8&255)/255,this.b=(e&255)/255,Ci.toWorkingColorSpace(this,t),this}setRGB(e,t,i,r=Ci.workingColorSpace){return this.r=e,this.g=t,this.b=i,Ci.toWorkingColorSpace(this,r),this}setHSL(e,t,i,r=Ci.workingColorSpace){if(e=kp(e,1),t=ln(t,0,1),i=ln(i,0,1),t===0)this.r=this.g=this.b=i;else{const s=i<=.5?i*(1+t):i+t-i*t,a=2*i-s;this.r=$f(a,s,e+1/3),this.g=$f(a,s,e),this.b=$f(a,s,e-1/3)}return Ci.toWorkingColorSpace(this,r),this}setStyle(e,t=pt){function i(s){s!==void 0&&parseFloat(s)<1&&console.warn("THREE.Color: Alpha component of "+e+" will be ignored.")}let r;if(r=/^(\w+)\(([^\)]*)\)/.exec(e)){let s;const a=r[1],c=r[2];switch(a){case"rgb":case"rgba":if(s=/^\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(c))return i(s[4]),this.setRGB(Math.min(255,parseInt(s[1],10))/255,Math.min(255,parseInt(s[2],10))/255,Math.min(255,parseInt(s[3],10))/255,t);if(s=/^\s*(\d+)\%\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(c))return i(s[4]),this.setRGB(Math.min(100,parseInt(s[1],10))/100,Math.min(100,parseInt(s[2],10))/100,Math.min(100,parseInt(s[3],10))/100,t);break;case"hsl":case"hsla":if(s=/^\s*(\d*\.?\d+)\s*,\s*(\d*\.?\d+)\%\s*,\s*(\d*\.?\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(c))return i(s[4]),this.setHSL(parseFloat(s[1])/360,parseFloat(s[2])/100,parseFloat(s[3])/100,t);break;default:console.warn("THREE.Color: Unknown color model "+e)}}else if(r=/^\#([A-Fa-f\d]+)$/.exec(e)){const s=r[1],a=s.length;if(a===3)return this.setRGB(parseInt(s.charAt(0),16)/15,parseInt(s.charAt(1),16)/15,parseInt(s.charAt(2),16)/15,t);if(a===6)return this.setHex(parseInt(s,16),t);console.warn("THREE.Color: Invalid hex color "+e)}else if(e&&e.length>0)return this.setColorName(e,t);return this}setColorName(e,t=pt){const i=Ry[e.toLowerCase()];return i!==void 0?this.setHex(i,t):console.warn("THREE.Color: Unknown color "+e),this}clone(){return new this.constructor(this.r,this.g,this.b)}copy(e){return this.r=e.r,this.g=e.g,this.b=e.b,this}copySRGBToLinear(e){return this.r=ja(e.r),this.g=ja(e.g),this.b=ja(e.b),this}copyLinearToSRGB(e){return this.r=Hf(e.r),this.g=Hf(e.g),this.b=Hf(e.b),this}convertSRGBToLinear(){return this.copySRGBToLinear(this),this}convertLinearToSRGB(){return this.copyLinearToSRGB(this),this}getHex(e=pt){return Ci.fromWorkingColorSpace(Gn.copy(this),e),Math.round(ln(Gn.r*255,0,255))*65536+Math.round(ln(Gn.g*255,0,255))*256+Math.round(ln(Gn.b*255,0,255))}getHexString(e=pt){return("000000"+this.getHex(e).toString(16)).slice(-6)}getHSL(e,t=Ci.workingColorSpace){Ci.fromWorkingColorSpace(Gn.copy(this),t);const i=Gn.r,r=Gn.g,s=Gn.b,a=Math.max(i,r,s),c=Math.min(i,r,s);let u,h;const f=(c+a)/2;if(c===a)u=0,h=0;else{const p=a-c;switch(h=f<=.5?p/(a+c):p/(2-a-c),a){case i:u=(r-s)/p+(r<s?6:0);break;case r:u=(s-i)/p+2;break;case s:u=(i-r)/p+4;break}u/=6}return e.h=u,e.s=h,e.l=f,e}getRGB(e,t=Ci.workingColorSpace){return Ci.fromWorkingColorSpace(Gn.copy(this),t),e.r=Gn.r,e.g=Gn.g,e.b=Gn.b,e}getStyle(e=pt){Ci.fromWorkingColorSpace(Gn.copy(this),e);const t=Gn.r,i=Gn.g,r=Gn.b;return e!==pt?`color(${e} ${t.toFixed(3)} ${i.toFixed(3)} ${r.toFixed(3)})`:`rgb(${Math.round(t*255)},${Math.round(i*255)},${Math.round(r*255)})`}offsetHSL(e,t,i){return this.getHSL(zi),zi.h+=e,zi.s+=t,zi.l+=i,this.setHSL(zi.h,zi.s,zi.l),this}add(e){return this.r+=e.r,this.g+=e.g,this.b+=e.b,this}addColors(e,t){return this.r=e.r+t.r,this.g=e.g+t.g,this.b=e.b+t.b,this}addScalar(e){return this.r+=e,this.g+=e,this.b+=e,this}sub(e){return this.r=Math.max(0,this.r-e.r),this.g=Math.max(0,this.g-e.g),this.b=Math.max(0,this.b-e.b),this}multiply(e){return this.r*=e.r,this.g*=e.g,this.b*=e.b,this}multiplyScalar(e){return this.r*=e,this.g*=e,this.b*=e,this}lerp(e,t){return this.r+=(e.r-this.r)*t,this.g+=(e.g-this.g)*t,this.b+=(e.b-this.b)*t,this}lerpColors(e,t,i){return this.r=e.r+(t.r-e.r)*i,this.g=e.g+(t.g-e.g)*i,this.b=e.b+(t.b-e.b)*i,this}lerpHSL(e,t){this.getHSL(zi),e.getHSL(Xc);const i=nl(zi.h,Xc.h,t),r=nl(zi.s,Xc.s,t),s=nl(zi.l,Xc.l,t);return this.setHSL(i,r,s),this}setFromVector3(e){return this.r=e.x,this.g=e.y,this.b=e.z,this}applyMatrix3(e){const t=this.r,i=this.g,r=this.b,s=e.elements;return this.r=s[0]*t+s[3]*i+s[6]*r,this.g=s[1]*t+s[4]*i+s[7]*r,this.b=s[2]*t+s[5]*i+s[8]*r,this}equals(e){return e.r===this.r&&e.g===this.g&&e.b===this.b}fromArray(e,t=0){return this.r=e[t],this.g=e[t+1],this.b=e[t+2],this}toArray(e=[],t=0){return e[t]=this.r,e[t+1]=this.g,e[t+2]=this.b,e}fromBufferAttribute(e,t){return this.r=e.getX(t),this.g=e.getY(t),this.b=e.getZ(t),this}toJSON(){return this.getHex()}*[Symbol.iterator](){yield this.r,yield this.g,yield this.b}}const Gn=new be;be.NAMES=Ry;class rs extends Pn{constructor(e){super(),this.isMeshBasicMaterial=!0,this.type="MeshBasicMaterial",this.color=new be(16777215),this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=Rl,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.specularMap=e.specularMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.combine=e.combine,this.reflectivity=e.reflectivity,this.refractionRatio=e.refractionRatio,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.fog=e.fog,this}}const Er=_1();function _1(){const n=new ArrayBuffer(4),e=new Float32Array(n),t=new Uint32Array(n),i=new Uint32Array(512),r=new Uint32Array(512);for(let u=0;u<256;++u){const h=u-127;h<-27?(i[u]=0,i[u|256]=32768,r[u]=24,r[u|256]=24):h<-14?(i[u]=1024>>-h-14,i[u|256]=1024>>-h-14|32768,r[u]=-h-1,r[u|256]=-h-1):h<=15?(i[u]=h+15<<10,i[u|256]=h+15<<10|32768,r[u]=13,r[u|256]=13):h<128?(i[u]=31744,i[u|256]=64512,r[u]=24,r[u|256]=24):(i[u]=31744,i[u|256]=64512,r[u]=13,r[u|256]=13)}const s=new Uint32Array(2048),a=new Uint32Array(64),c=new Uint32Array(64);for(let u=1;u<1024;++u){let h=u<<13,f=0;for(;!(h&8388608);)h<<=1,f-=8388608;h&=-8388609,f+=947912704,s[u]=h|f}for(let u=1024;u<2048;++u)s[u]=939524096+(u-1024<<13);for(let u=1;u<31;++u)a[u]=u<<23;a[31]=1199570944,a[32]=2147483648;for(let u=33;u<63;++u)a[u]=2147483648+(u-32<<23);a[63]=3347054592;for(let u=1;u<64;++u)u!==32&&(c[u]=1024);return{floatView:e,uint32View:t,baseTable:i,shiftTable:r,mantissaTable:s,exponentTable:a,offsetTable:c}}function ei(n){Math.abs(n)>65504&&console.warn("THREE.DataUtils.toHalfFloat(): Value out of range."),n=ln(n,-65504,65504),Er.floatView[0]=n;const e=Er.uint32View[0],t=e>>23&511;return Er.baseTable[t]+((e&8388607)>>Er.shiftTable[t])}function Qo(n){const e=n>>10;return Er.uint32View[0]=Er.mantissaTable[Er.offsetTable[e]+(n&1023)]+Er.exponentTable[e],Er.floatView[0]}const T1={toHalfFloat:ei,fromHalfFloat:Qo},gn=new I,Yc=new K;class Ct{constructor(e,t,i=!1){if(Array.isArray(e))throw new TypeError("THREE.BufferAttribute: array should be a Typed Array.");this.isBufferAttribute=!0,this.name="",this.array=e,this.itemSize=t,this.count=e!==void 0?e.length/t:0,this.normalized=i,this.usage=vl,this.updateRange={offset:0,count:-1},this.gpuType=tn,this.version=0}onUploadCallback(){}set needsUpdate(e){e===!0&&this.version++}setUsage(e){return this.usage=e,this}copy(e){return this.name=e.name,this.array=new e.array.constructor(e.array),this.itemSize=e.itemSize,this.count=e.count,this.normalized=e.normalized,this.usage=e.usage,this.gpuType=e.gpuType,this}copyAt(e,t,i){e*=this.itemSize,i*=t.itemSize;for(let r=0,s=this.itemSize;r<s;r++)this.array[e+r]=t.array[i+r];return this}copyArray(e){return this.array.set(e),this}applyMatrix3(e){if(this.itemSize===2)for(let t=0,i=this.count;t<i;t++)Yc.fromBufferAttribute(this,t),Yc.applyMatrix3(e),this.setXY(t,Yc.x,Yc.y);else if(this.itemSize===3)for(let t=0,i=this.count;t<i;t++)gn.fromBufferAttribute(this,t),gn.applyMatrix3(e),this.setXYZ(t,gn.x,gn.y,gn.z);return this}applyMatrix4(e){for(let t=0,i=this.count;t<i;t++)gn.fromBufferAttribute(this,t),gn.applyMatrix4(e),this.setXYZ(t,gn.x,gn.y,gn.z);return this}applyNormalMatrix(e){for(let t=0,i=this.count;t<i;t++)gn.fromBufferAttribute(this,t),gn.applyNormalMatrix(e),this.setXYZ(t,gn.x,gn.y,gn.z);return this}transformDirection(e){for(let t=0,i=this.count;t<i;t++)gn.fromBufferAttribute(this,t),gn.transformDirection(e),this.setXYZ(t,gn.x,gn.y,gn.z);return this}set(e,t=0){return this.array.set(e,t),this}getX(e){let t=this.array[e*this.itemSize];return this.normalized&&(t=mi(t,this.array)),t}setX(e,t){return this.normalized&&(t=xt(t,this.array)),this.array[e*this.itemSize]=t,this}getY(e){let t=this.array[e*this.itemSize+1];return this.normalized&&(t=mi(t,this.array)),t}setY(e,t){return this.normalized&&(t=xt(t,this.array)),this.array[e*this.itemSize+1]=t,this}getZ(e){let t=this.array[e*this.itemSize+2];return this.normalized&&(t=mi(t,this.array)),t}setZ(e,t){return this.normalized&&(t=xt(t,this.array)),this.array[e*this.itemSize+2]=t,this}getW(e){let t=this.array[e*this.itemSize+3];return this.normalized&&(t=mi(t,this.array)),t}setW(e,t){return this.normalized&&(t=xt(t,this.array)),this.array[e*this.itemSize+3]=t,this}setXY(e,t,i){return e*=this.itemSize,this.normalized&&(t=xt(t,this.array),i=xt(i,this.array)),this.array[e+0]=t,this.array[e+1]=i,this}setXYZ(e,t,i,r){return e*=this.itemSize,this.normalized&&(t=xt(t,this.array),i=xt(i,this.array),r=xt(r,this.array)),this.array[e+0]=t,this.array[e+1]=i,this.array[e+2]=r,this}setXYZW(e,t,i,r,s){return e*=this.itemSize,this.normalized&&(t=xt(t,this.array),i=xt(i,this.array),r=xt(r,this.array),s=xt(s,this.array)),this.array[e+0]=t,this.array[e+1]=i,this.array[e+2]=r,this.array[e+3]=s,this}onUpload(e){return this.onUploadCallback=e,this}clone(){return new this.constructor(this.array,this.itemSize).copy(this)}toJSON(){const e={itemSize:this.itemSize,type:this.array.constructor.name,array:Array.from(this.array),normalized:this.normalized};return this.name!==""&&(e.name=this.name),this.usage!==vl&&(e.usage=this.usage),(this.updateRange.offset!==0||this.updateRange.count!==-1)&&(e.updateRange=this.updateRange),e}}class w1 extends Ct{constructor(e,t,i){super(new Int8Array(e),t,i)}}class E1 extends Ct{constructor(e,t,i){super(new Uint8Array(e),t,i)}}class b1 extends Ct{constructor(e,t,i){super(new Uint8ClampedArray(e),t,i)}}class A1 extends Ct{constructor(e,t,i){super(new Int16Array(e),t,i)}}class Gp extends Ct{constructor(e,t,i){super(new Uint16Array(e),t,i)}}class P1 extends Ct{constructor(e,t,i){super(new Int32Array(e),t,i)}}class Wp extends Ct{constructor(e,t,i){super(new Uint32Array(e),t,i)}}class C1 extends Ct{constructor(e,t,i){super(new Uint16Array(e),t,i),this.isFloat16BufferAttribute=!0}getX(e){let t=Qo(this.array[e*this.itemSize]);return this.normalized&&(t=mi(t,this.array)),t}setX(e,t){return this.normalized&&(t=xt(t,this.array)),this.array[e*this.itemSize]=ei(t),this}getY(e){let t=Qo(this.array[e*this.itemSize+1]);return this.normalized&&(t=mi(t,this.array)),t}setY(e,t){return this.normalized&&(t=xt(t,this.array)),this.array[e*this.itemSize+1]=ei(t),this}getZ(e){let t=Qo(this.array[e*this.itemSize+2]);return this.normalized&&(t=mi(t,this.array)),t}setZ(e,t){return this.normalized&&(t=xt(t,this.array)),this.array[e*this.itemSize+2]=ei(t),this}getW(e){let t=Qo(this.array[e*this.itemSize+3]);return this.normalized&&(t=mi(t,this.array)),t}setW(e,t){return this.normalized&&(t=xt(t,this.array)),this.array[e*this.itemSize+3]=ei(t),this}setXY(e,t,i){return e*=this.itemSize,this.normalized&&(t=xt(t,this.array),i=xt(i,this.array)),this.array[e+0]=ei(t),this.array[e+1]=ei(i),this}setXYZ(e,t,i,r){return e*=this.itemSize,this.normalized&&(t=xt(t,this.array),i=xt(i,this.array),r=xt(r,this.array)),this.array[e+0]=ei(t),this.array[e+1]=ei(i),this.array[e+2]=ei(r),this}setXYZW(e,t,i,r,s){return e*=this.itemSize,this.normalized&&(t=xt(t,this.array),i=xt(i,this.array),r=xt(r,this.array),s=xt(s,this.array)),this.array[e+0]=ei(t),this.array[e+1]=ei(i),this.array[e+2]=ei(r),this.array[e+3]=ei(s),this}}class Xe extends Ct{constructor(e,t,i){super(new Float32Array(e),t,i)}}class R1 extends Ct{constructor(e,t,i){super(new Float64Array(e),t,i)}}let D1=0;const Ai=new ze,ed=new Ut,Ta=new I,pi=new cr,Fo=new cr,Ln=new I;class mt extends xi{constructor(){super(),this.isBufferGeometry=!0,Object.defineProperty(this,"id",{value:D1++}),this.uuid=gi(),this.name="",this.type="BufferGeometry",this.index=null,this.attributes={},this.morphAttributes={},this.morphTargetsRelative=!1,this.groups=[],this.boundingBox=null,this.boundingSphere=null,this.drawRange={start:0,count:1/0},this.userData={}}getIndex(){return this.index}setIndex(e){return Array.isArray(e)?this.index=new(Cy(e)?Wp:Gp)(e,1):this.index=e,this}getAttribute(e){return this.attributes[e]}setAttribute(e,t){return this.attributes[e]=t,this}deleteAttribute(e){return delete this.attributes[e],this}hasAttribute(e){return this.attributes[e]!==void 0}addGroup(e,t,i=0){this.groups.push({start:e,count:t,materialIndex:i})}clearGroups(){this.groups=[]}setDrawRange(e,t){this.drawRange.start=e,this.drawRange.count=t}applyMatrix4(e){const t=this.attributes.position;t!==void 0&&(t.applyMatrix4(e),t.needsUpdate=!0);const i=this.attributes.normal;if(i!==void 0){const s=new gt().getNormalMatrix(e);i.applyNormalMatrix(s),i.needsUpdate=!0}const r=this.attributes.tangent;return r!==void 0&&(r.transformDirection(e),r.needsUpdate=!0),this.boundingBox!==null&&this.computeBoundingBox(),this.boundingSphere!==null&&this.computeBoundingSphere(),this}applyQuaternion(e){return Ai.makeRotationFromQuaternion(e),this.applyMatrix4(Ai),this}rotateX(e){return Ai.makeRotationX(e),this.applyMatrix4(Ai),this}rotateY(e){return Ai.makeRotationY(e),this.applyMatrix4(Ai),this}rotateZ(e){return Ai.makeRotationZ(e),this.applyMatrix4(Ai),this}translate(e,t,i){return Ai.makeTranslation(e,t,i),this.applyMatrix4(Ai),this}scale(e,t,i){return Ai.makeScale(e,t,i),this.applyMatrix4(Ai),this}lookAt(e){return ed.lookAt(e),ed.updateMatrix(),this.applyMatrix4(ed.matrix),this}center(){return this.computeBoundingBox(),this.boundingBox.getCenter(Ta).negate(),this.translate(Ta.x,Ta.y,Ta.z),this}setFromPoints(e){const t=[];for(let i=0,r=e.length;i<r;i++){const s=e[i];t.push(s.x,s.y,s.z||0)}return this.setAttribute("position",new Xe(t,3)),this}computeBoundingBox(){this.boundingBox===null&&(this.boundingBox=new cr);const e=this.attributes.position,t=this.morphAttributes.position;if(e&&e.isGLBufferAttribute){console.error('THREE.BufferGeometry.computeBoundingBox(): GLBufferAttribute requires a manual bounding box. Alternatively set "mesh.frustumCulled" to "false".',this),this.boundingBox.set(new I(-1/0,-1/0,-1/0),new I(1/0,1/0,1/0));return}if(e!==void 0){if(this.boundingBox.setFromBufferAttribute(e),t)for(let i=0,r=t.length;i<r;i++){const s=t[i];pi.setFromBufferAttribute(s),this.morphTargetsRelative?(Ln.addVectors(this.boundingBox.min,pi.min),this.boundingBox.expandByPoint(Ln),Ln.addVectors(this.boundingBox.max,pi.max),this.boundingBox.expandByPoint(Ln)):(this.boundingBox.expandByPoint(pi.min),this.boundingBox.expandByPoint(pi.max))}}else this.boundingBox.makeEmpty();(isNaN(this.boundingBox.min.x)||isNaN(this.boundingBox.min.y)||isNaN(this.boundingBox.min.z))&&console.error('THREE.BufferGeometry.computeBoundingBox(): Computed min/max have NaN values. The "position" attribute is likely to have NaN values.',this)}computeBoundingSphere(){this.boundingSphere===null&&(this.boundingSphere=new Li);const e=this.attributes.position,t=this.morphAttributes.position;if(e&&e.isGLBufferAttribute){console.error('THREE.BufferGeometry.computeBoundingSphere(): GLBufferAttribute requires a manual bounding sphere. Alternatively set "mesh.frustumCulled" to "false".',this),this.boundingSphere.set(new I,1/0);return}if(e){const i=this.boundingSphere.center;if(pi.setFromBufferAttribute(e),t)for(let s=0,a=t.length;s<a;s++){const c=t[s];Fo.setFromBufferAttribute(c),this.morphTargetsRelative?(Ln.addVectors(pi.min,Fo.min),pi.expandByPoint(Ln),Ln.addVectors(pi.max,Fo.max),pi.expandByPoint(Ln)):(pi.expandByPoint(Fo.min),pi.expandByPoint(Fo.max))}pi.getCenter(i);let r=0;for(let s=0,a=e.count;s<a;s++)Ln.fromBufferAttribute(e,s),r=Math.max(r,i.distanceToSquared(Ln));if(t)for(let s=0,a=t.length;s<a;s++){const c=t[s],u=this.morphTargetsRelative;for(let h=0,f=c.count;h<f;h++)Ln.fromBufferAttribute(c,h),u&&(Ta.fromBufferAttribute(e,h),Ln.add(Ta)),r=Math.max(r,i.distanceToSquared(Ln))}this.boundingSphere.radius=Math.sqrt(r),isNaN(this.boundingSphere.radius)&&console.error('THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The "position" attribute is likely to have NaN values.',this)}}computeTangents(){const e=this.index,t=this.attributes;if(e===null||t.position===void 0||t.normal===void 0||t.uv===void 0){console.error("THREE.BufferGeometry: .computeTangents() failed. Missing required attributes (index, position, normal or uv)");return}const i=e.array,r=t.position.array,s=t.normal.array,a=t.uv.array,c=r.length/3;this.hasAttribute("tangent")===!1&&this.setAttribute("tangent",new Ct(new Float32Array(4*c),4));const u=this.getAttribute("tangent").array,h=[],f=[];for(let R=0;R<c;R++)h[R]=new I,f[R]=new I;const p=new I,m=new I,g=new I,y=new K,T=new K,S=new K,x=new I,w=new I;function M(R,z,te){p.fromArray(r,R*3),m.fromArray(r,z*3),g.fromArray(r,te*3),y.fromArray(a,R*2),T.fromArray(a,z*2),S.fromArray(a,te*2),m.sub(p),g.sub(p),T.sub(y),S.sub(y);const W=1/(T.x*S.y-S.x*T.y);isFinite(W)&&(x.copy(m).multiplyScalar(S.y).addScaledVector(g,-T.y).multiplyScalar(W),w.copy(g).multiplyScalar(T.x).addScaledVector(m,-S.x).multiplyScalar(W),h[R].add(x),h[z].add(x),h[te].add(x),f[R].add(w),f[z].add(w),f[te].add(w))}let b=this.groups;b.length===0&&(b=[{start:0,count:i.length}]);for(let R=0,z=b.length;R<z;++R){const te=b[R],W=te.start,J=te.count;for(let ne=W,ue=W+J;ne<ue;ne+=3)M(i[ne+0],i[ne+1],i[ne+2])}const P=new I,C=new I,L=new I,U=new I;function A(R){L.fromArray(s,R*3),U.copy(L);const z=h[R];P.copy(z),P.sub(L.multiplyScalar(L.dot(z))).normalize(),C.crossVectors(U,z);const W=C.dot(f[R])<0?-1:1;u[R*4]=P.x,u[R*4+1]=P.y,u[R*4+2]=P.z,u[R*4+3]=W}for(let R=0,z=b.length;R<z;++R){const te=b[R],W=te.start,J=te.count;for(let ne=W,ue=W+J;ne<ue;ne+=3)A(i[ne+0]),A(i[ne+1]),A(i[ne+2])}}computeVertexNormals(){const e=this.index,t=this.getAttribute("position");if(t!==void 0){let i=this.getAttribute("normal");if(i===void 0)i=new Ct(new Float32Array(t.count*3),3),this.setAttribute("normal",i);else for(let m=0,g=i.count;m<g;m++)i.setXYZ(m,0,0,0);const r=new I,s=new I,a=new I,c=new I,u=new I,h=new I,f=new I,p=new I;if(e)for(let m=0,g=e.count;m<g;m+=3){const y=e.getX(m+0),T=e.getX(m+1),S=e.getX(m+2);r.fromBufferAttribute(t,y),s.fromBufferAttribute(t,T),a.fromBufferAttribute(t,S),f.subVectors(a,s),p.subVectors(r,s),f.cross(p),c.fromBufferAttribute(i,y),u.fromBufferAttribute(i,T),h.fromBufferAttribute(i,S),c.add(f),u.add(f),h.add(f),i.setXYZ(y,c.x,c.y,c.z),i.setXYZ(T,u.x,u.y,u.z),i.setXYZ(S,h.x,h.y,h.z)}else for(let m=0,g=t.count;m<g;m+=3)r.fromBufferAttribute(t,m+0),s.fromBufferAttribute(t,m+1),a.fromBufferAttribute(t,m+2),f.subVectors(a,s),p.subVectors(r,s),f.cross(p),i.setXYZ(m+0,f.x,f.y,f.z),i.setXYZ(m+1,f.x,f.y,f.z),i.setXYZ(m+2,f.x,f.y,f.z);this.normalizeNormals(),i.needsUpdate=!0}}normalizeNormals(){const e=this.attributes.normal;for(let t=0,i=e.count;t<i;t++)Ln.fromBufferAttribute(e,t),Ln.normalize(),e.setXYZ(t,Ln.x,Ln.y,Ln.z)}toNonIndexed(){function e(c,u){const h=c.array,f=c.itemSize,p=c.normalized,m=new h.constructor(u.length*f);let g=0,y=0;for(let T=0,S=u.length;T<S;T++){c.isInterleavedBufferAttribute?g=u[T]*c.data.stride+c.offset:g=u[T]*f;for(let x=0;x<f;x++)m[y++]=h[g++]}return new Ct(m,f,p)}if(this.index===null)return console.warn("THREE.BufferGeometry.toNonIndexed(): BufferGeometry is already non-indexed."),this;const t=new mt,i=this.index.array,r=this.attributes;for(const c in r){const u=r[c],h=e(u,i);t.setAttribute(c,h)}const s=this.morphAttributes;for(const c in s){const u=[],h=s[c];for(let f=0,p=h.length;f<p;f++){const m=h[f],g=e(m,i);u.push(g)}t.morphAttributes[c]=u}t.morphTargetsRelative=this.morphTargetsRelative;const a=this.groups;for(let c=0,u=a.length;c<u;c++){const h=a[c];t.addGroup(h.start,h.count,h.materialIndex)}return t}toJSON(){const e={metadata:{version:4.6,type:"BufferGeometry",generator:"BufferGeometry.toJSON"}};if(e.uuid=this.uuid,e.type=this.type,this.name!==""&&(e.name=this.name),Object.keys(this.userData).length>0&&(e.userData=this.userData),this.parameters!==void 0){const u=this.parameters;for(const h in u)u[h]!==void 0&&(e[h]=u[h]);return e}e.data={attributes:{}};const t=this.index;t!==null&&(e.data.index={type:t.array.constructor.name,array:Array.prototype.slice.call(t.array)});const i=this.attributes;for(const u in i){const h=i[u];e.data.attributes[u]=h.toJSON(e.data)}const r={};let s=!1;for(const u in this.morphAttributes){const h=this.morphAttributes[u],f=[];for(let p=0,m=h.length;p<m;p++){const g=h[p];f.push(g.toJSON(e.data))}f.length>0&&(r[u]=f,s=!0)}s&&(e.data.morphAttributes=r,e.data.morphTargetsRelative=this.morphTargetsRelative);const a=this.groups;a.length>0&&(e.data.groups=JSON.parse(JSON.stringify(a)));const c=this.boundingSphere;return c!==null&&(e.data.boundingSphere={center:c.center.toArray(),radius:c.radius}),e}clone(){return new this.constructor().copy(this)}copy(e){this.index=null,this.attributes={},this.morphAttributes={},this.groups=[],this.boundingBox=null,this.boundingSphere=null;const t={};this.name=e.name;const i=e.index;i!==null&&this.setIndex(i.clone(t));const r=e.attributes;for(const h in r){const f=r[h];this.setAttribute(h,f.clone(t))}const s=e.morphAttributes;for(const h in s){const f=[],p=s[h];for(let m=0,g=p.length;m<g;m++)f.push(p[m].clone(t));this.morphAttributes[h]=f}this.morphTargetsRelative=e.morphTargetsRelative;const a=e.groups;for(let h=0,f=a.length;h<f;h++){const p=a[h];this.addGroup(p.start,p.count,p.materialIndex)}const c=e.boundingBox;c!==null&&(this.boundingBox=c.clone());const u=e.boundingSphere;return u!==null&&(this.boundingSphere=u.clone()),this.drawRange.start=e.drawRange.start,this.drawRange.count=e.drawRange.count,this.userData=e.userData,this}dispose(){this.dispatchEvent({type:"dispose"})}}const gv=new ze,ys=new io,Zc=new Li,vv=new I,wa=new I,Ea=new I,ba=new I,td=new I,qc=new I,jc=new K,Kc=new K,Qc=new K,xv=new I,yv=new I,Sv=new I,Jc=new I,$c=new I;class Tn extends Ut{constructor(e=new mt,t=new rs){super(),this.isMesh=!0,this.type="Mesh",this.geometry=e,this.material=t,this.updateMorphTargets()}copy(e,t){return super.copy(e,t),e.morphTargetInfluences!==void 0&&(this.morphTargetInfluences=e.morphTargetInfluences.slice()),e.morphTargetDictionary!==void 0&&(this.morphTargetDictionary=Object.assign({},e.morphTargetDictionary)),this.material=e.material,this.geometry=e.geometry,this}updateMorphTargets(){const t=this.geometry.morphAttributes,i=Object.keys(t);if(i.length>0){const r=t[i[0]];if(r!==void 0){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let s=0,a=r.length;s<a;s++){const c=r[s].name||String(s);this.morphTargetInfluences.push(0),this.morphTargetDictionary[c]=s}}}}getVertexPosition(e,t){const i=this.geometry,r=i.attributes.position,s=i.morphAttributes.position,a=i.morphTargetsRelative;t.fromBufferAttribute(r,e);const c=this.morphTargetInfluences;if(s&&c){qc.set(0,0,0);for(let u=0,h=s.length;u<h;u++){const f=c[u],p=s[u];f!==0&&(td.fromBufferAttribute(p,e),a?qc.addScaledVector(td,f):qc.addScaledVector(td.sub(t),f))}t.add(qc)}return t}raycast(e,t){const i=this.geometry,r=this.material,s=this.matrixWorld;r!==void 0&&(i.boundingSphere===null&&i.computeBoundingSphere(),Zc.copy(i.boundingSphere),Zc.applyMatrix4(s),ys.copy(e.ray).recast(e.near),!(Zc.containsPoint(ys.origin)===!1&&(ys.intersectSphere(Zc,vv)===null||ys.origin.distanceToSquared(vv)>(e.far-e.near)**2))&&(gv.copy(s).invert(),ys.copy(e.ray).applyMatrix4(gv),!(i.boundingBox!==null&&ys.intersectsBox(i.boundingBox)===!1)&&this._computeIntersections(e,t,ys)))}_computeIntersections(e,t,i){let r;const s=this.geometry,a=this.material,c=s.index,u=s.attributes.position,h=s.attributes.uv,f=s.attributes.uv1,p=s.attributes.normal,m=s.groups,g=s.drawRange;if(c!==null)if(Array.isArray(a))for(let y=0,T=m.length;y<T;y++){const S=m[y],x=a[S.materialIndex],w=Math.max(S.start,g.start),M=Math.min(c.count,Math.min(S.start+S.count,g.start+g.count));for(let b=w,P=M;b<P;b+=3){const C=c.getX(b),L=c.getX(b+1),U=c.getX(b+2);r=eu(this,x,e,i,h,f,p,C,L,U),r&&(r.faceIndex=Math.floor(b/3),r.face.materialIndex=S.materialIndex,t.push(r))}}else{const y=Math.max(0,g.start),T=Math.min(c.count,g.start+g.count);for(let S=y,x=T;S<x;S+=3){const w=c.getX(S),M=c.getX(S+1),b=c.getX(S+2);r=eu(this,a,e,i,h,f,p,w,M,b),r&&(r.faceIndex=Math.floor(S/3),t.push(r))}}else if(u!==void 0)if(Array.isArray(a))for(let y=0,T=m.length;y<T;y++){const S=m[y],x=a[S.materialIndex],w=Math.max(S.start,g.start),M=Math.min(u.count,Math.min(S.start+S.count,g.start+g.count));for(let b=w,P=M;b<P;b+=3){const C=b,L=b+1,U=b+2;r=eu(this,x,e,i,h,f,p,C,L,U),r&&(r.faceIndex=Math.floor(b/3),r.face.materialIndex=S.materialIndex,t.push(r))}}else{const y=Math.max(0,g.start),T=Math.min(u.count,g.start+g.count);for(let S=y,x=T;S<x;S+=3){const w=S,M=S+1,b=S+2;r=eu(this,a,e,i,h,f,p,w,M,b),r&&(r.faceIndex=Math.floor(S/3),t.push(r))}}}}function L1(n,e,t,i,r,s,a,c){let u;if(e.side===_n?u=i.intersectTriangle(a,s,r,!0,c):u=i.intersectTriangle(r,s,a,e.side===or,c),u===null)return null;$c.copy(c),$c.applyMatrix4(n.matrixWorld);const h=t.ray.origin.distanceTo($c);return h<t.near||h>t.far?null:{distance:h,point:$c.clone(),object:n}}function eu(n,e,t,i,r,s,a,c,u,h){n.getVertexPosition(c,wa),n.getVertexPosition(u,Ea),n.getVertexPosition(h,ba);const f=L1(n,e,t,i,wa,Ea,ba,Jc);if(f){r&&(jc.fromBufferAttribute(r,c),Kc.fromBufferAttribute(r,u),Qc.fromBufferAttribute(r,h),f.uv=ti.getInterpolation(Jc,wa,Ea,ba,jc,Kc,Qc,new K)),s&&(jc.fromBufferAttribute(s,c),Kc.fromBufferAttribute(s,u),Qc.fromBufferAttribute(s,h),f.uv1=ti.getInterpolation(Jc,wa,Ea,ba,jc,Kc,Qc,new K),f.uv2=f.uv1),a&&(xv.fromBufferAttribute(a,c),yv.fromBufferAttribute(a,u),Sv.fromBufferAttribute(a,h),f.normal=ti.getInterpolation(Jc,wa,Ea,ba,xv,yv,Sv,new I),f.normal.dot(i.direction)>0&&f.normal.multiplyScalar(-1));const p={a:c,b:u,c:h,normal:new I,materialIndex:0};ti.getNormal(wa,Ea,ba,p.normal),f.face=p}return f}class js extends mt{constructor(e=1,t=1,i=1,r=1,s=1,a=1){super(),this.type="BoxGeometry",this.parameters={width:e,height:t,depth:i,widthSegments:r,heightSegments:s,depthSegments:a};const c=this;r=Math.floor(r),s=Math.floor(s),a=Math.floor(a);const u=[],h=[],f=[],p=[];let m=0,g=0;y("z","y","x",-1,-1,i,t,e,a,s,0),y("z","y","x",1,-1,i,t,-e,a,s,1),y("x","z","y",1,1,e,i,t,r,a,2),y("x","z","y",1,-1,e,i,-t,r,a,3),y("x","y","z",1,-1,e,t,i,r,s,4),y("x","y","z",-1,-1,e,t,-i,r,s,5),this.setIndex(u),this.setAttribute("position",new Xe(h,3)),this.setAttribute("normal",new Xe(f,3)),this.setAttribute("uv",new Xe(p,2));function y(T,S,x,w,M,b,P,C,L,U,A){const R=b/L,z=P/U,te=b/2,W=P/2,J=C/2,ne=L+1,ue=U+1;let ae=0,B=0;const X=new I;for(let Y=0;Y<ue;Y++){const H=Y*z-W;for(let q=0;q<ne;q++){const ye=q*R-te;X[T]=ye*w,X[S]=H*M,X[x]=J,h.push(X.x,X.y,X.z),X[T]=0,X[S]=0,X[x]=C>0?1:-1,f.push(X.x,X.y,X.z),p.push(q/L),p.push(1-Y/U),ae+=1}}for(let Y=0;Y<U;Y++)for(let H=0;H<L;H++){const q=m+H+ne*Y,ye=m+H+ne*(Y+1),ge=m+(H+1)+ne*(Y+1),Pe=m+(H+1)+ne*Y;u.push(q,ye,Pe),u.push(ye,ge,Pe),B+=6}c.addGroup(g,B,A),g+=B,m+=ae}}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new js(e.width,e.height,e.depth,e.widthSegments,e.heightSegments,e.depthSegments)}}function Ja(n){const e={};for(const t in n){e[t]={};for(const i in n[t]){const r=n[t][i];r&&(r.isColor||r.isMatrix3||r.isMatrix4||r.isVector2||r.isVector3||r.isVector4||r.isTexture||r.isQuaternion)?r.isRenderTargetTexture?(console.warn("UniformsUtils: Textures of render targets cannot be cloned via cloneUniforms() or mergeUniforms()."),e[t][i]=null):e[t][i]=r.clone():Array.isArray(r)?e[t][i]=r.slice():e[t][i]=r}}return e}function Zn(n){const e={};for(let t=0;t<n.length;t++){const i=Ja(n[t]);for(const r in i)e[r]=i[r]}return e}function I1(n){const e=[];for(let t=0;t<n.length;t++)e.push(n[t].clone());return e}function Dy(n){return n.getRenderTarget()===null?n.outputColorSpace:Yi}const Ly={clone:Ja,merge:Zn};var U1=`void main() {
	gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );
}`,N1=`void main() {
	gl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );
}`;class _t extends Pn{constructor(e){super(),this.isShaderMaterial=!0,this.type="ShaderMaterial",this.defines={},this.uniforms={},this.uniformsGroups=[],this.vertexShader=U1,this.fragmentShader=N1,this.linewidth=1,this.wireframe=!1,this.wireframeLinewidth=1,this.fog=!1,this.lights=!1,this.clipping=!1,this.forceSinglePass=!0,this.extensions={derivatives:!1,fragDepth:!1,drawBuffers:!1,shaderTextureLOD:!1},this.defaultAttributeValues={color:[1,1,1],uv:[0,0],uv1:[0,0]},this.index0AttributeName=void 0,this.uniformsNeedUpdate=!1,this.glslVersion=null,e!==void 0&&this.setValues(e)}copy(e){return super.copy(e),this.fragmentShader=e.fragmentShader,this.vertexShader=e.vertexShader,this.uniforms=Ja(e.uniforms),this.uniformsGroups=I1(e.uniformsGroups),this.defines=Object.assign({},e.defines),this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.fog=e.fog,this.lights=e.lights,this.clipping=e.clipping,this.extensions=Object.assign({},e.extensions),this.glslVersion=e.glslVersion,this}toJSON(e){const t=super.toJSON(e);t.glslVersion=this.glslVersion,t.uniforms={};for(const r in this.uniforms){const a=this.uniforms[r].value;a&&a.isTexture?t.uniforms[r]={type:"t",value:a.toJSON(e).uuid}:a&&a.isColor?t.uniforms[r]={type:"c",value:a.getHex()}:a&&a.isVector2?t.uniforms[r]={type:"v2",value:a.toArray()}:a&&a.isVector3?t.uniforms[r]={type:"v3",value:a.toArray()}:a&&a.isVector4?t.uniforms[r]={type:"v4",value:a.toArray()}:a&&a.isMatrix3?t.uniforms[r]={type:"m3",value:a.toArray()}:a&&a.isMatrix4?t.uniforms[r]={type:"m4",value:a.toArray()}:t.uniforms[r]={value:a}}Object.keys(this.defines).length>0&&(t.defines=this.defines),t.vertexShader=this.vertexShader,t.fragmentShader=this.fragmentShader,t.lights=this.lights,t.clipping=this.clipping;const i={};for(const r in this.extensions)this.extensions[r]===!0&&(i[r]=!0);return Object.keys(i).length>0&&(t.extensions=i),t}}class so extends Ut{constructor(){super(),this.isCamera=!0,this.type="Camera",this.matrixWorldInverse=new ze,this.projectionMatrix=new ze,this.projectionMatrixInverse=new ze,this.coordinateSystem=rr}copy(e,t){return super.copy(e,t),this.matrixWorldInverse.copy(e.matrixWorldInverse),this.projectionMatrix.copy(e.projectionMatrix),this.projectionMatrixInverse.copy(e.projectionMatrixInverse),this.coordinateSystem=e.coordinateSystem,this}getWorldDirection(e){this.updateWorldMatrix(!0,!1);const t=this.matrixWorld.elements;return e.set(-t[8],-t[9],-t[10]).normalize()}updateMatrixWorld(e){super.updateMatrixWorld(e),this.matrixWorldInverse.copy(this.matrixWorld).invert()}updateWorldMatrix(e,t){super.updateWorldMatrix(e,t),this.matrixWorldInverse.copy(this.matrixWorld).invert()}clone(){return new this.constructor().copy(this)}}class Yt extends so{constructor(e=50,t=1,i=.1,r=2e3){super(),this.isPerspectiveCamera=!0,this.type="PerspectiveCamera",this.fov=e,this.zoom=1,this.near=i,this.far=r,this.focus=10,this.aspect=t,this.view=null,this.filmGauge=35,this.filmOffset=0,this.updateProjectionMatrix()}copy(e,t){return super.copy(e,t),this.fov=e.fov,this.zoom=e.zoom,this.near=e.near,this.far=e.far,this.focus=e.focus,this.aspect=e.aspect,this.view=e.view===null?null:Object.assign({},e.view),this.filmGauge=e.filmGauge,this.filmOffset=e.filmOffset,this}setFocalLength(e){const t=.5*this.getFilmHeight()/e;this.fov=Qa*2*Math.atan(t),this.updateProjectionMatrix()}getFocalLength(){const e=Math.tan(Hs*.5*this.fov);return .5*this.getFilmHeight()/e}getEffectiveFOV(){return Qa*2*Math.atan(Math.tan(Hs*.5*this.fov)/this.zoom)}getFilmWidth(){return this.filmGauge*Math.min(this.aspect,1)}getFilmHeight(){return this.filmGauge/Math.max(this.aspect,1)}setViewOffset(e,t,i,r,s,a){this.aspect=e/t,this.view===null&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=e,this.view.fullHeight=t,this.view.offsetX=i,this.view.offsetY=r,this.view.width=s,this.view.height=a,this.updateProjectionMatrix()}clearViewOffset(){this.view!==null&&(this.view.enabled=!1),this.updateProjectionMatrix()}updateProjectionMatrix(){const e=this.near;let t=e*Math.tan(Hs*.5*this.fov)/this.zoom,i=2*t,r=this.aspect*i,s=-.5*r;const a=this.view;if(this.view!==null&&this.view.enabled){const u=a.fullWidth,h=a.fullHeight;s+=a.offsetX*r/u,t-=a.offsetY*i/h,r*=a.width/u,i*=a.height/h}const c=this.filmOffset;c!==0&&(s+=e*c/this.getFilmWidth()),this.projectionMatrix.makePerspective(s,s+r,t,t-i,e,this.far,this.coordinateSystem),this.projectionMatrixInverse.copy(this.projectionMatrix).invert()}toJSON(e){const t=super.toJSON(e);return t.object.fov=this.fov,t.object.zoom=this.zoom,t.object.near=this.near,t.object.far=this.far,t.object.focus=this.focus,t.object.aspect=this.aspect,this.view!==null&&(t.object.view=Object.assign({},this.view)),t.object.filmGauge=this.filmGauge,t.object.filmOffset=this.filmOffset,t}}const Aa=-90,Pa=1;class Xp extends Ut{constructor(e,t,i){super(),this.type="CubeCamera",this.renderTarget=i,this.coordinateSystem=null;const r=new Yt(Aa,Pa,e,t);r.layers=this.layers,this.add(r);const s=new Yt(Aa,Pa,e,t);s.layers=this.layers,this.add(s);const a=new Yt(Aa,Pa,e,t);a.layers=this.layers,this.add(a);const c=new Yt(Aa,Pa,e,t);c.layers=this.layers,this.add(c);const u=new Yt(Aa,Pa,e,t);u.layers=this.layers,this.add(u);const h=new Yt(Aa,Pa,e,t);h.layers=this.layers,this.add(h)}updateCoordinateSystem(){const e=this.coordinateSystem,t=this.children.concat(),[i,r,s,a,c,u]=t;for(const h of t)this.remove(h);if(e===rr)i.up.set(0,1,0),i.lookAt(1,0,0),r.up.set(0,1,0),r.lookAt(-1,0,0),s.up.set(0,0,-1),s.lookAt(0,1,0),a.up.set(0,0,1),a.lookAt(0,-1,0),c.up.set(0,1,0),c.lookAt(0,0,1),u.up.set(0,1,0),u.lookAt(0,0,-1);else if(e===xl)i.up.set(0,-1,0),i.lookAt(-1,0,0),r.up.set(0,-1,0),r.lookAt(1,0,0),s.up.set(0,0,1),s.lookAt(0,1,0),a.up.set(0,0,-1),a.lookAt(0,-1,0),c.up.set(0,-1,0),c.lookAt(0,0,1),u.up.set(0,-1,0),u.lookAt(0,0,-1);else throw new Error("THREE.CubeCamera.updateCoordinateSystem(): Invalid coordinate system: "+e);for(const h of t)this.add(h),h.updateMatrixWorld()}update(e,t){this.parent===null&&this.updateMatrixWorld();const i=this.renderTarget;this.coordinateSystem!==e.coordinateSystem&&(this.coordinateSystem=e.coordinateSystem,this.updateCoordinateSystem());const[r,s,a,c,u,h]=this.children,f=e.getRenderTarget(),p=e.toneMapping,m=e.xr.enabled;e.toneMapping=Wi,e.xr.enabled=!1;const g=i.texture.generateMipmaps;i.texture.generateMipmaps=!1,e.setRenderTarget(i,0),e.render(t,r),e.setRenderTarget(i,1),e.render(t,s),e.setRenderTarget(i,2),e.render(t,a),e.setRenderTarget(i,3),e.render(t,c),e.setRenderTarget(i,4),e.render(t,u),i.texture.generateMipmaps=g,e.setRenderTarget(i,5),e.render(t,h),e.setRenderTarget(f),e.toneMapping=p,e.xr.enabled=m,i.texture.needsPMREMUpdate=!0}}class Ll extends Zt{constructor(e,t,i,r,s,a,c,u,h,f){e=e!==void 0?e:[],t=t!==void 0?t:Jr,super(e,t,i,r,s,a,c,u,h,f),this.isCubeTexture=!0,this.flipY=!1}get images(){return this.image}set images(e){this.image=e}}class rh extends wt{constructor(e=1,t={}){super(e,e,t),this.isWebGLCubeRenderTarget=!0;const i={width:e,height:e,depth:1},r=[i,i,i,i,i,i];t.encoding!==void 0&&(il("THREE.WebGLCubeRenderTarget: option.encoding has been replaced by option.colorSpace."),t.colorSpace=t.encoding===Di?pt:Ar),this.texture=new Ll(r,t.mapping,t.wrapS,t.wrapT,t.magFilter,t.minFilter,t.format,t.type,t.anisotropy,t.colorSpace),this.texture.isRenderTargetTexture=!0,this.texture.generateMipmaps=t.generateMipmaps!==void 0?t.generateMipmaps:!1,this.texture.minFilter=t.minFilter!==void 0?t.minFilter:Qe}fromEquirectangularTexture(e,t){this.texture.type=t.type,this.texture.colorSpace=t.colorSpace,this.texture.generateMipmaps=t.generateMipmaps,this.texture.minFilter=t.minFilter,this.texture.magFilter=t.magFilter;const i={uniforms:{tEquirect:{value:null}},vertexShader:`

				varying vec3 vWorldDirection;

				vec3 transformDirection( in vec3 dir, in mat4 matrix ) {

					return normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );

				}

				void main() {

					vWorldDirection = transformDirection( position, modelMatrix );

					#include <begin_vertex>
					#include <project_vertex>

				}
			`,fragmentShader:`

				uniform sampler2D tEquirect;

				varying vec3 vWorldDirection;

				#include <common>

				void main() {

					vec3 direction = normalize( vWorldDirection );

					vec2 sampleUV = equirectUv( direction );

					gl_FragColor = texture2D( tEquirect, sampleUV );

				}
			`},r=new js(5,5,5),s=new _t({name:"CubemapFromEquirect",uniforms:Ja(i.uniforms),vertexShader:i.vertexShader,fragmentShader:i.fragmentShader,side:_n,blending:Jt});s.uniforms.tEquirect.value=t;const a=new Tn(r,s),c=t.minFilter;return t.minFilter===es&&(t.minFilter=Qe),new Xp(1,10,this).update(e,a),t.minFilter=c,a.geometry.dispose(),a.material.dispose(),this}clear(e,t,i,r){const s=e.getRenderTarget();for(let a=0;a<6;a++)e.setRenderTarget(this,a),e.clear(t,i,r);e.setRenderTarget(s)}}const nd=new I,F1=new I,O1=new gt;class jr{constructor(e=new I(1,0,0),t=0){this.isPlane=!0,this.normal=e,this.constant=t}set(e,t){return this.normal.copy(e),this.constant=t,this}setComponents(e,t,i,r){return this.normal.set(e,t,i),this.constant=r,this}setFromNormalAndCoplanarPoint(e,t){return this.normal.copy(e),this.constant=-t.dot(this.normal),this}setFromCoplanarPoints(e,t,i){const r=nd.subVectors(i,t).cross(F1.subVectors(e,t)).normalize();return this.setFromNormalAndCoplanarPoint(r,e),this}copy(e){return this.normal.copy(e.normal),this.constant=e.constant,this}normalize(){const e=1/this.normal.length();return this.normal.multiplyScalar(e),this.constant*=e,this}negate(){return this.constant*=-1,this.normal.negate(),this}distanceToPoint(e){return this.normal.dot(e)+this.constant}distanceToSphere(e){return this.distanceToPoint(e.center)-e.radius}projectPoint(e,t){return t.copy(e).addScaledVector(this.normal,-this.distanceToPoint(e))}intersectLine(e,t){const i=e.delta(nd),r=this.normal.dot(i);if(r===0)return this.distanceToPoint(e.start)===0?t.copy(e.start):null;const s=-(e.start.dot(this.normal)+this.constant)/r;return s<0||s>1?null:t.copy(e.start).addScaledVector(i,s)}intersectsLine(e){const t=this.distanceToPoint(e.start),i=this.distanceToPoint(e.end);return t<0&&i>0||i<0&&t>0}intersectsBox(e){return e.intersectsPlane(this)}intersectsSphere(e){return e.intersectsPlane(this)}coplanarPoint(e){return e.copy(this.normal).multiplyScalar(-this.constant)}applyMatrix4(e,t){const i=t||O1.getNormalMatrix(e),r=this.coplanarPoint(nd).applyMatrix4(e),s=this.normal.applyMatrix3(i).normalize();return this.constant=-r.dot(s),this}translate(e){return this.constant-=e.dot(this.normal),this}equals(e){return e.normal.equals(this.normal)&&e.constant===this.constant}clone(){return new this.constructor().copy(this)}}const Ss=new Li,tu=new I;class sh{constructor(e=new jr,t=new jr,i=new jr,r=new jr,s=new jr,a=new jr){this.planes=[e,t,i,r,s,a]}set(e,t,i,r,s,a){const c=this.planes;return c[0].copy(e),c[1].copy(t),c[2].copy(i),c[3].copy(r),c[4].copy(s),c[5].copy(a),this}copy(e){const t=this.planes;for(let i=0;i<6;i++)t[i].copy(e.planes[i]);return this}setFromProjectionMatrix(e,t=rr){const i=this.planes,r=e.elements,s=r[0],a=r[1],c=r[2],u=r[3],h=r[4],f=r[5],p=r[6],m=r[7],g=r[8],y=r[9],T=r[10],S=r[11],x=r[12],w=r[13],M=r[14],b=r[15];if(i[0].setComponents(u-s,m-h,S-g,b-x).normalize(),i[1].setComponents(u+s,m+h,S+g,b+x).normalize(),i[2].setComponents(u+a,m+f,S+y,b+w).normalize(),i[3].setComponents(u-a,m-f,S-y,b-w).normalize(),i[4].setComponents(u-c,m-p,S-T,b-M).normalize(),t===rr)i[5].setComponents(u+c,m+p,S+T,b+M).normalize();else if(t===xl)i[5].setComponents(c,p,T,M).normalize();else throw new Error("THREE.Frustum.setFromProjectionMatrix(): Invalid coordinate system: "+t);return this}intersectsObject(e){if(e.boundingSphere!==void 0)e.boundingSphere===null&&e.computeBoundingSphere(),Ss.copy(e.boundingSphere).applyMatrix4(e.matrixWorld);else{const t=e.geometry;t.boundingSphere===null&&t.computeBoundingSphere(),Ss.copy(t.boundingSphere).applyMatrix4(e.matrixWorld)}return this.intersectsSphere(Ss)}intersectsSprite(e){return Ss.center.set(0,0,0),Ss.radius=.7071067811865476,Ss.applyMatrix4(e.matrixWorld),this.intersectsSphere(Ss)}intersectsSphere(e){const t=this.planes,i=e.center,r=-e.radius;for(let s=0;s<6;s++)if(t[s].distanceToPoint(i)<r)return!1;return!0}intersectsBox(e){const t=this.planes;for(let i=0;i<6;i++){const r=t[i];if(tu.x=r.normal.x>0?e.max.x:e.min.x,tu.y=r.normal.y>0?e.max.y:e.min.y,tu.z=r.normal.z>0?e.max.z:e.min.z,r.distanceToPoint(tu)<0)return!1}return!0}containsPoint(e){const t=this.planes;for(let i=0;i<6;i++)if(t[i].distanceToPoint(e)<0)return!1;return!0}clone(){return new this.constructor().copy(this)}}function Iy(){let n=null,e=!1,t=null,i=null;function r(s,a){t(s,a),i=n.requestAnimationFrame(r)}return{start:function(){e!==!0&&t!==null&&(i=n.requestAnimationFrame(r),e=!0)},stop:function(){n.cancelAnimationFrame(i),e=!1},setAnimationLoop:function(s){t=s},setContext:function(s){n=s}}}function B1(n,e){const t=e.isWebGL2,i=new WeakMap;function r(h,f){const p=h.array,m=h.usage,g=n.createBuffer();n.bindBuffer(f,g),n.bufferData(f,p,m),h.onUploadCallback();let y;if(p instanceof Float32Array)y=n.FLOAT;else if(p instanceof Uint16Array)if(h.isFloat16BufferAttribute)if(t)y=n.HALF_FLOAT;else throw new Error("THREE.WebGLAttributes: Usage of Float16BufferAttribute requires WebGL2.");else y=n.UNSIGNED_SHORT;else if(p instanceof Int16Array)y=n.SHORT;else if(p instanceof Uint32Array)y=n.UNSIGNED_INT;else if(p instanceof Int32Array)y=n.INT;else if(p instanceof Int8Array)y=n.BYTE;else if(p instanceof Uint8Array)y=n.UNSIGNED_BYTE;else if(p instanceof Uint8ClampedArray)y=n.UNSIGNED_BYTE;else throw new Error("THREE.WebGLAttributes: Unsupported buffer data format: "+p);return{buffer:g,type:y,bytesPerElement:p.BYTES_PER_ELEMENT,version:h.version}}function s(h,f,p){const m=f.array,g=f.updateRange;n.bindBuffer(p,h),g.count===-1?n.bufferSubData(p,0,m):(t?n.bufferSubData(p,g.offset*m.BYTES_PER_ELEMENT,m,g.offset,g.count):n.bufferSubData(p,g.offset*m.BYTES_PER_ELEMENT,m.subarray(g.offset,g.offset+g.count)),g.count=-1),f.onUploadCallback()}function a(h){return h.isInterleavedBufferAttribute&&(h=h.data),i.get(h)}function c(h){h.isInterleavedBufferAttribute&&(h=h.data);const f=i.get(h);f&&(n.deleteBuffer(f.buffer),i.delete(h))}function u(h,f){if(h.isGLBufferAttribute){const m=i.get(h);(!m||m.version<h.version)&&i.set(h,{buffer:h.buffer,type:h.type,bytesPerElement:h.elementSize,version:h.version});return}h.isInterleavedBufferAttribute&&(h=h.data);const p=i.get(h);p===void 0?i.set(h,r(h,f)):p.version<h.version&&(s(p.buffer,h,f),p.version=h.version)}return{get:a,remove:c,update:u}}class Il extends mt{constructor(e=1,t=1,i=1,r=1){super(),this.type="PlaneGeometry",this.parameters={width:e,height:t,widthSegments:i,heightSegments:r};const s=e/2,a=t/2,c=Math.floor(i),u=Math.floor(r),h=c+1,f=u+1,p=e/c,m=t/u,g=[],y=[],T=[],S=[];for(let x=0;x<f;x++){const w=x*m-a;for(let M=0;M<h;M++){const b=M*p-s;y.push(b,-w,0),T.push(0,0,1),S.push(M/c),S.push(1-x/u)}}for(let x=0;x<u;x++)for(let w=0;w<c;w++){const M=w+h*x,b=w+h*(x+1),P=w+1+h*(x+1),C=w+1+h*x;g.push(M,b,C),g.push(b,P,C)}this.setIndex(g),this.setAttribute("position",new Xe(y,3)),this.setAttribute("normal",new Xe(T,3)),this.setAttribute("uv",new Xe(S,2))}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new Il(e.width,e.height,e.widthSegments,e.heightSegments)}}var z1=`#ifdef USE_ALPHAHASH
	if ( diffuseColor.a < getAlphaHashThreshold( vPosition ) ) discard;
#endif`,k1=`#ifdef USE_ALPHAHASH
	const float ALPHA_HASH_SCALE = 0.05;
	float hash2D( vec2 value ) {
		return fract( 1.0e4 * sin( 17.0 * value.x + 0.1 * value.y ) * ( 0.1 + abs( sin( 13.0 * value.y + value.x ) ) ) );
	}
	float hash3D( vec3 value ) {
		return hash2D( vec2( hash2D( value.xy ), value.z ) );
	}
	float getAlphaHashThreshold( vec3 position ) {
		float maxDeriv = max(
			length( dFdx( position.xyz ) ),
			length( dFdy( position.xyz ) )
		);
		float pixScale = 1.0 / ( ALPHA_HASH_SCALE * maxDeriv );
		vec2 pixScales = vec2(
			exp2( floor( log2( pixScale ) ) ),
			exp2( ceil( log2( pixScale ) ) )
		);
		vec2 alpha = vec2(
			hash3D( floor( pixScales.x * position.xyz ) ),
			hash3D( floor( pixScales.y * position.xyz ) )
		);
		float lerpFactor = fract( log2( pixScale ) );
		float x = ( 1.0 - lerpFactor ) * alpha.x + lerpFactor * alpha.y;
		float a = min( lerpFactor, 1.0 - lerpFactor );
		vec3 cases = vec3(
			x * x / ( 2.0 * a * ( 1.0 - a ) ),
			( x - 0.5 * a ) / ( 1.0 - a ),
			1.0 - ( ( 1.0 - x ) * ( 1.0 - x ) / ( 2.0 * a * ( 1.0 - a ) ) )
		);
		float threshold = ( x < ( 1.0 - a ) )
			? ( ( x < a ) ? cases.x : cases.y )
			: cases.z;
		return clamp( threshold , 1.0e-6, 1.0 );
	}
#endif`,H1=`#ifdef USE_ALPHAMAP
	diffuseColor.a *= texture2D( alphaMap, vAlphaMapUv ).g;
#endif`,V1=`#ifdef USE_ALPHAMAP
	uniform sampler2D alphaMap;
#endif`,G1=`#ifdef USE_ALPHATEST
	if ( diffuseColor.a < alphaTest ) discard;
#endif`,W1=`#ifdef USE_ALPHATEST
	uniform float alphaTest;
#endif`,X1=`#ifdef USE_AOMAP
	float ambientOcclusion = ( texture2D( aoMap, vAoMapUv ).r - 1.0 ) * aoMapIntensity + 1.0;
	reflectedLight.indirectDiffuse *= ambientOcclusion;
	#if defined( USE_ENVMAP ) && defined( STANDARD )
		float dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );
		reflectedLight.indirectSpecular *= computeSpecularOcclusion( dotNV, ambientOcclusion, material.roughness );
	#endif
#endif`,Y1=`#ifdef USE_AOMAP
	uniform sampler2D aoMap;
	uniform float aoMapIntensity;
#endif`,Z1=`vec3 transformed = vec3( position );
#ifdef USE_ALPHAHASH
	vPosition = vec3( position );
#endif`,q1=`vec3 objectNormal = vec3( normal );
#ifdef USE_TANGENT
	vec3 objectTangent = vec3( tangent.xyz );
#endif`,j1=`float G_BlinnPhong_Implicit( ) {
	return 0.25;
}
float D_BlinnPhong( const in float shininess, const in float dotNH ) {
	return RECIPROCAL_PI * ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );
}
vec3 BRDF_BlinnPhong( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in vec3 specularColor, const in float shininess ) {
	vec3 halfDir = normalize( lightDir + viewDir );
	float dotNH = saturate( dot( normal, halfDir ) );
	float dotVH = saturate( dot( viewDir, halfDir ) );
	vec3 F = F_Schlick( specularColor, 1.0, dotVH );
	float G = G_BlinnPhong_Implicit( );
	float D = D_BlinnPhong( shininess, dotNH );
	return F * ( G * D );
} // validated`,K1=`#ifdef USE_IRIDESCENCE
	const mat3 XYZ_TO_REC709 = mat3(
		 3.2404542, -0.9692660,  0.0556434,
		-1.5371385,  1.8760108, -0.2040259,
		-0.4985314,  0.0415560,  1.0572252
	);
	vec3 Fresnel0ToIor( vec3 fresnel0 ) {
		vec3 sqrtF0 = sqrt( fresnel0 );
		return ( vec3( 1.0 ) + sqrtF0 ) / ( vec3( 1.0 ) - sqrtF0 );
	}
	vec3 IorToFresnel0( vec3 transmittedIor, float incidentIor ) {
		return pow2( ( transmittedIor - vec3( incidentIor ) ) / ( transmittedIor + vec3( incidentIor ) ) );
	}
	float IorToFresnel0( float transmittedIor, float incidentIor ) {
		return pow2( ( transmittedIor - incidentIor ) / ( transmittedIor + incidentIor ));
	}
	vec3 evalSensitivity( float OPD, vec3 shift ) {
		float phase = 2.0 * PI * OPD * 1.0e-9;
		vec3 val = vec3( 5.4856e-13, 4.4201e-13, 5.2481e-13 );
		vec3 pos = vec3( 1.6810e+06, 1.7953e+06, 2.2084e+06 );
		vec3 var = vec3( 4.3278e+09, 9.3046e+09, 6.6121e+09 );
		vec3 xyz = val * sqrt( 2.0 * PI * var ) * cos( pos * phase + shift ) * exp( - pow2( phase ) * var );
		xyz.x += 9.7470e-14 * sqrt( 2.0 * PI * 4.5282e+09 ) * cos( 2.2399e+06 * phase + shift[ 0 ] ) * exp( - 4.5282e+09 * pow2( phase ) );
		xyz /= 1.0685e-7;
		vec3 rgb = XYZ_TO_REC709 * xyz;
		return rgb;
	}
	vec3 evalIridescence( float outsideIOR, float eta2, float cosTheta1, float thinFilmThickness, vec3 baseF0 ) {
		vec3 I;
		float iridescenceIOR = mix( outsideIOR, eta2, smoothstep( 0.0, 0.03, thinFilmThickness ) );
		float sinTheta2Sq = pow2( outsideIOR / iridescenceIOR ) * ( 1.0 - pow2( cosTheta1 ) );
		float cosTheta2Sq = 1.0 - sinTheta2Sq;
		if ( cosTheta2Sq < 0.0 ) {
			 return vec3( 1.0 );
		}
		float cosTheta2 = sqrt( cosTheta2Sq );
		float R0 = IorToFresnel0( iridescenceIOR, outsideIOR );
		float R12 = F_Schlick( R0, 1.0, cosTheta1 );
		float R21 = R12;
		float T121 = 1.0 - R12;
		float phi12 = 0.0;
		if ( iridescenceIOR < outsideIOR ) phi12 = PI;
		float phi21 = PI - phi12;
		vec3 baseIOR = Fresnel0ToIor( clamp( baseF0, 0.0, 0.9999 ) );		vec3 R1 = IorToFresnel0( baseIOR, iridescenceIOR );
		vec3 R23 = F_Schlick( R1, 1.0, cosTheta2 );
		vec3 phi23 = vec3( 0.0 );
		if ( baseIOR[ 0 ] < iridescenceIOR ) phi23[ 0 ] = PI;
		if ( baseIOR[ 1 ] < iridescenceIOR ) phi23[ 1 ] = PI;
		if ( baseIOR[ 2 ] < iridescenceIOR ) phi23[ 2 ] = PI;
		float OPD = 2.0 * iridescenceIOR * thinFilmThickness * cosTheta2;
		vec3 phi = vec3( phi21 ) + phi23;
		vec3 R123 = clamp( R12 * R23, 1e-5, 0.9999 );
		vec3 r123 = sqrt( R123 );
		vec3 Rs = pow2( T121 ) * R23 / ( vec3( 1.0 ) - R123 );
		vec3 C0 = R12 + Rs;
		I = C0;
		vec3 Cm = Rs - T121;
		for ( int m = 1; m <= 2; ++ m ) {
			Cm *= r123;
			vec3 Sm = 2.0 * evalSensitivity( float( m ) * OPD, float( m ) * phi );
			I += Cm * Sm;
		}
		return max( I, vec3( 0.0 ) );
	}
#endif`,Q1=`#ifdef USE_BUMPMAP
	uniform sampler2D bumpMap;
	uniform float bumpScale;
	vec2 dHdxy_fwd() {
		vec2 dSTdx = dFdx( vBumpMapUv );
		vec2 dSTdy = dFdy( vBumpMapUv );
		float Hll = bumpScale * texture2D( bumpMap, vBumpMapUv ).x;
		float dBx = bumpScale * texture2D( bumpMap, vBumpMapUv + dSTdx ).x - Hll;
		float dBy = bumpScale * texture2D( bumpMap, vBumpMapUv + dSTdy ).x - Hll;
		return vec2( dBx, dBy );
	}
	vec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy, float faceDirection ) {
		vec3 vSigmaX = dFdx( surf_pos.xyz );
		vec3 vSigmaY = dFdy( surf_pos.xyz );
		vec3 vN = surf_norm;
		vec3 R1 = cross( vSigmaY, vN );
		vec3 R2 = cross( vN, vSigmaX );
		float fDet = dot( vSigmaX, R1 ) * faceDirection;
		vec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );
		return normalize( abs( fDet ) * surf_norm - vGrad );
	}
#endif`,J1=`#if NUM_CLIPPING_PLANES > 0
	vec4 plane;
	#pragma unroll_loop_start
	for ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {
		plane = clippingPlanes[ i ];
		if ( dot( vClipPosition, plane.xyz ) > plane.w ) discard;
	}
	#pragma unroll_loop_end
	#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES
		bool clipped = true;
		#pragma unroll_loop_start
		for ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {
			plane = clippingPlanes[ i ];
			clipped = ( dot( vClipPosition, plane.xyz ) > plane.w ) && clipped;
		}
		#pragma unroll_loop_end
		if ( clipped ) discard;
	#endif
#endif`,$1=`#if NUM_CLIPPING_PLANES > 0
	varying vec3 vClipPosition;
	uniform vec4 clippingPlanes[ NUM_CLIPPING_PLANES ];
#endif`,eT=`#if NUM_CLIPPING_PLANES > 0
	varying vec3 vClipPosition;
#endif`,tT=`#if NUM_CLIPPING_PLANES > 0
	vClipPosition = - mvPosition.xyz;
#endif`,nT=`#if defined( USE_COLOR_ALPHA )
	diffuseColor *= vColor;
#elif defined( USE_COLOR )
	diffuseColor.rgb *= vColor;
#endif`,iT=`#if defined( USE_COLOR_ALPHA )
	varying vec4 vColor;
#elif defined( USE_COLOR )
	varying vec3 vColor;
#endif`,rT=`#if defined( USE_COLOR_ALPHA )
	varying vec4 vColor;
#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )
	varying vec3 vColor;
#endif`,sT=`#if defined( USE_COLOR_ALPHA )
	vColor = vec4( 1.0 );
#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )
	vColor = vec3( 1.0 );
#endif
#ifdef USE_COLOR
	vColor *= color;
#endif
#ifdef USE_INSTANCING_COLOR
	vColor.xyz *= instanceColor.xyz;
#endif`,aT=`#define PI 3.141592653589793
#define PI2 6.283185307179586
#define PI_HALF 1.5707963267948966
#define RECIPROCAL_PI 0.3183098861837907
#define RECIPROCAL_PI2 0.15915494309189535
#define EPSILON 1e-6
#ifndef saturate
#define saturate( a ) clamp( a, 0.0, 1.0 )
#endif
#define whiteComplement( a ) ( 1.0 - saturate( a ) )
float pow2( const in float x ) { return x*x; }
vec3 pow2( const in vec3 x ) { return x*x; }
float pow3( const in float x ) { return x*x*x; }
float pow4( const in float x ) { float x2 = x*x; return x2*x2; }
float max3( const in vec3 v ) { return max( max( v.x, v.y ), v.z ); }
float average( const in vec3 v ) { return dot( v, vec3( 0.3333333 ) ); }
highp float rand( const in vec2 uv ) {
	const highp float a = 12.9898, b = 78.233, c = 43758.5453;
	highp float dt = dot( uv.xy, vec2( a,b ) ), sn = mod( dt, PI );
	return fract( sin( sn ) * c );
}
#ifdef HIGH_PRECISION
	float precisionSafeLength( vec3 v ) { return length( v ); }
#else
	float precisionSafeLength( vec3 v ) {
		float maxComponent = max3( abs( v ) );
		return length( v / maxComponent ) * maxComponent;
	}
#endif
struct IncidentLight {
	vec3 color;
	vec3 direction;
	bool visible;
};
struct ReflectedLight {
	vec3 directDiffuse;
	vec3 directSpecular;
	vec3 indirectDiffuse;
	vec3 indirectSpecular;
};
struct GeometricContext {
	vec3 position;
	vec3 normal;
	vec3 viewDir;
#ifdef USE_CLEARCOAT
	vec3 clearcoatNormal;
#endif
};
#ifdef USE_ALPHAHASH
	varying vec3 vPosition;
#endif
vec3 transformDirection( in vec3 dir, in mat4 matrix ) {
	return normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );
}
vec3 inverseTransformDirection( in vec3 dir, in mat4 matrix ) {
	return normalize( ( vec4( dir, 0.0 ) * matrix ).xyz );
}
mat3 transposeMat3( const in mat3 m ) {
	mat3 tmp;
	tmp[ 0 ] = vec3( m[ 0 ].x, m[ 1 ].x, m[ 2 ].x );
	tmp[ 1 ] = vec3( m[ 0 ].y, m[ 1 ].y, m[ 2 ].y );
	tmp[ 2 ] = vec3( m[ 0 ].z, m[ 1 ].z, m[ 2 ].z );
	return tmp;
}
float luminance( const in vec3 rgb ) {
	const vec3 weights = vec3( 0.2126729, 0.7151522, 0.0721750 );
	return dot( weights, rgb );
}
bool isPerspectiveMatrix( mat4 m ) {
	return m[ 2 ][ 3 ] == - 1.0;
}
vec2 equirectUv( in vec3 dir ) {
	float u = atan( dir.z, dir.x ) * RECIPROCAL_PI2 + 0.5;
	float v = asin( clamp( dir.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;
	return vec2( u, v );
}
vec3 BRDF_Lambert( const in vec3 diffuseColor ) {
	return RECIPROCAL_PI * diffuseColor;
}
vec3 F_Schlick( const in vec3 f0, const in float f90, const in float dotVH ) {
	float fresnel = exp2( ( - 5.55473 * dotVH - 6.98316 ) * dotVH );
	return f0 * ( 1.0 - fresnel ) + ( f90 * fresnel );
}
float F_Schlick( const in float f0, const in float f90, const in float dotVH ) {
	float fresnel = exp2( ( - 5.55473 * dotVH - 6.98316 ) * dotVH );
	return f0 * ( 1.0 - fresnel ) + ( f90 * fresnel );
} // validated`,oT=`#ifdef ENVMAP_TYPE_CUBE_UV
	#define cubeUV_minMipLevel 4.0
	#define cubeUV_minTileSize 16.0
	float getFace( vec3 direction ) {
		vec3 absDirection = abs( direction );
		float face = - 1.0;
		if ( absDirection.x > absDirection.z ) {
			if ( absDirection.x > absDirection.y )
				face = direction.x > 0.0 ? 0.0 : 3.0;
			else
				face = direction.y > 0.0 ? 1.0 : 4.0;
		} else {
			if ( absDirection.z > absDirection.y )
				face = direction.z > 0.0 ? 2.0 : 5.0;
			else
				face = direction.y > 0.0 ? 1.0 : 4.0;
		}
		return face;
	}
	vec2 getUV( vec3 direction, float face ) {
		vec2 uv;
		if ( face == 0.0 ) {
			uv = vec2( direction.z, direction.y ) / abs( direction.x );
		} else if ( face == 1.0 ) {
			uv = vec2( - direction.x, - direction.z ) / abs( direction.y );
		} else if ( face == 2.0 ) {
			uv = vec2( - direction.x, direction.y ) / abs( direction.z );
		} else if ( face == 3.0 ) {
			uv = vec2( - direction.z, direction.y ) / abs( direction.x );
		} else if ( face == 4.0 ) {
			uv = vec2( - direction.x, direction.z ) / abs( direction.y );
		} else {
			uv = vec2( direction.x, direction.y ) / abs( direction.z );
		}
		return 0.5 * ( uv + 1.0 );
	}
	vec3 bilinearCubeUV( sampler2D envMap, vec3 direction, float mipInt ) {
		float face = getFace( direction );
		float filterInt = max( cubeUV_minMipLevel - mipInt, 0.0 );
		mipInt = max( mipInt, cubeUV_minMipLevel );
		float faceSize = exp2( mipInt );
		highp vec2 uv = getUV( direction, face ) * ( faceSize - 2.0 ) + 1.0;
		if ( face > 2.0 ) {
			uv.y += faceSize;
			face -= 3.0;
		}
		uv.x += face * faceSize;
		uv.x += filterInt * 3.0 * cubeUV_minTileSize;
		uv.y += 4.0 * ( exp2( CUBEUV_MAX_MIP ) - faceSize );
		uv.x *= CUBEUV_TEXEL_WIDTH;
		uv.y *= CUBEUV_TEXEL_HEIGHT;
		#ifdef texture2DGradEXT
			return texture2DGradEXT( envMap, uv, vec2( 0.0 ), vec2( 0.0 ) ).rgb;
		#else
			return texture2D( envMap, uv ).rgb;
		#endif
	}
	#define cubeUV_r0 1.0
	#define cubeUV_v0 0.339
	#define cubeUV_m0 - 2.0
	#define cubeUV_r1 0.8
	#define cubeUV_v1 0.276
	#define cubeUV_m1 - 1.0
	#define cubeUV_r4 0.4
	#define cubeUV_v4 0.046
	#define cubeUV_m4 2.0
	#define cubeUV_r5 0.305
	#define cubeUV_v5 0.016
	#define cubeUV_m5 3.0
	#define cubeUV_r6 0.21
	#define cubeUV_v6 0.0038
	#define cubeUV_m6 4.0
	float roughnessToMip( float roughness ) {
		float mip = 0.0;
		if ( roughness >= cubeUV_r1 ) {
			mip = ( cubeUV_r0 - roughness ) * ( cubeUV_m1 - cubeUV_m0 ) / ( cubeUV_r0 - cubeUV_r1 ) + cubeUV_m0;
		} else if ( roughness >= cubeUV_r4 ) {
			mip = ( cubeUV_r1 - roughness ) * ( cubeUV_m4 - cubeUV_m1 ) / ( cubeUV_r1 - cubeUV_r4 ) + cubeUV_m1;
		} else if ( roughness >= cubeUV_r5 ) {
			mip = ( cubeUV_r4 - roughness ) * ( cubeUV_m5 - cubeUV_m4 ) / ( cubeUV_r4 - cubeUV_r5 ) + cubeUV_m4;
		} else if ( roughness >= cubeUV_r6 ) {
			mip = ( cubeUV_r5 - roughness ) * ( cubeUV_m6 - cubeUV_m5 ) / ( cubeUV_r5 - cubeUV_r6 ) + cubeUV_m5;
		} else {
			mip = - 2.0 * log2( 1.16 * roughness );		}
		return mip;
	}
	vec4 textureCubeUV( sampler2D envMap, vec3 sampleDir, float roughness ) {
		float mip = clamp( roughnessToMip( roughness ), cubeUV_m0, CUBEUV_MAX_MIP );
		float mipF = fract( mip );
		float mipInt = floor( mip );
		vec3 color0 = bilinearCubeUV( envMap, sampleDir, mipInt );
		if ( mipF == 0.0 ) {
			return vec4( color0, 1.0 );
		} else {
			vec3 color1 = bilinearCubeUV( envMap, sampleDir, mipInt + 1.0 );
			return vec4( mix( color0, color1, mipF ), 1.0 );
		}
	}
#endif`,lT=`vec3 transformedNormal = objectNormal;
#ifdef USE_INSTANCING
	mat3 m = mat3( instanceMatrix );
	transformedNormal /= vec3( dot( m[ 0 ], m[ 0 ] ), dot( m[ 1 ], m[ 1 ] ), dot( m[ 2 ], m[ 2 ] ) );
	transformedNormal = m * transformedNormal;
#endif
transformedNormal = normalMatrix * transformedNormal;
#ifdef FLIP_SIDED
	transformedNormal = - transformedNormal;
#endif
#ifdef USE_TANGENT
	vec3 transformedTangent = ( modelViewMatrix * vec4( objectTangent, 0.0 ) ).xyz;
	#ifdef FLIP_SIDED
		transformedTangent = - transformedTangent;
	#endif
#endif`,cT=`#ifdef USE_DISPLACEMENTMAP
	uniform sampler2D displacementMap;
	uniform float displacementScale;
	uniform float displacementBias;
#endif`,uT=`#ifdef USE_DISPLACEMENTMAP
	transformed += normalize( objectNormal ) * ( texture2D( displacementMap, vDisplacementMapUv ).x * displacementScale + displacementBias );
#endif`,hT=`#ifdef USE_EMISSIVEMAP
	vec4 emissiveColor = texture2D( emissiveMap, vEmissiveMapUv );
	totalEmissiveRadiance *= emissiveColor.rgb;
#endif`,fT=`#ifdef USE_EMISSIVEMAP
	uniform sampler2D emissiveMap;
#endif`,dT="gl_FragColor = linearToOutputTexel( gl_FragColor );",pT=`vec4 LinearToLinear( in vec4 value ) {
	return value;
}
vec4 LinearTosRGB( in vec4 value ) {
	return vec4( mix( pow( value.rgb, vec3( 0.41666 ) ) * 1.055 - vec3( 0.055 ), value.rgb * 12.92, vec3( lessThanEqual( value.rgb, vec3( 0.0031308 ) ) ) ), value.a );
}`,mT=`#ifdef USE_ENVMAP
	#ifdef ENV_WORLDPOS
		vec3 cameraToFrag;
		if ( isOrthographic ) {
			cameraToFrag = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );
		} else {
			cameraToFrag = normalize( vWorldPosition - cameraPosition );
		}
		vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );
		#ifdef ENVMAP_MODE_REFLECTION
			vec3 reflectVec = reflect( cameraToFrag, worldNormal );
		#else
			vec3 reflectVec = refract( cameraToFrag, worldNormal, refractionRatio );
		#endif
	#else
		vec3 reflectVec = vReflect;
	#endif
	#ifdef ENVMAP_TYPE_CUBE
		vec4 envColor = textureCube( envMap, vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );
	#else
		vec4 envColor = vec4( 0.0 );
	#endif
	#ifdef ENVMAP_BLENDING_MULTIPLY
		outgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );
	#elif defined( ENVMAP_BLENDING_MIX )
		outgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );
	#elif defined( ENVMAP_BLENDING_ADD )
		outgoingLight += envColor.xyz * specularStrength * reflectivity;
	#endif
#endif`,gT=`#ifdef USE_ENVMAP
	uniform float envMapIntensity;
	uniform float flipEnvMap;
	#ifdef ENVMAP_TYPE_CUBE
		uniform samplerCube envMap;
	#else
		uniform sampler2D envMap;
	#endif
	
#endif`,vT=`#ifdef USE_ENVMAP
	uniform float reflectivity;
	#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( LAMBERT )
		#define ENV_WORLDPOS
	#endif
	#ifdef ENV_WORLDPOS
		varying vec3 vWorldPosition;
		uniform float refractionRatio;
	#else
		varying vec3 vReflect;
	#endif
#endif`,xT=`#ifdef USE_ENVMAP
	#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( LAMBERT )
		#define ENV_WORLDPOS
	#endif
	#ifdef ENV_WORLDPOS
		
		varying vec3 vWorldPosition;
	#else
		varying vec3 vReflect;
		uniform float refractionRatio;
	#endif
#endif`,yT=`#ifdef USE_ENVMAP
	#ifdef ENV_WORLDPOS
		vWorldPosition = worldPosition.xyz;
	#else
		vec3 cameraToVertex;
		if ( isOrthographic ) {
			cameraToVertex = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );
		} else {
			cameraToVertex = normalize( worldPosition.xyz - cameraPosition );
		}
		vec3 worldNormal = inverseTransformDirection( transformedNormal, viewMatrix );
		#ifdef ENVMAP_MODE_REFLECTION
			vReflect = reflect( cameraToVertex, worldNormal );
		#else
			vReflect = refract( cameraToVertex, worldNormal, refractionRatio );
		#endif
	#endif
#endif`,ST=`#ifdef USE_FOG
	vFogDepth = - mvPosition.z;
#endif`,MT=`#ifdef USE_FOG
	varying float vFogDepth;
#endif`,_T=`#ifdef USE_FOG
	#ifdef FOG_EXP2
		float fogFactor = 1.0 - exp( - fogDensity * fogDensity * vFogDepth * vFogDepth );
	#else
		float fogFactor = smoothstep( fogNear, fogFar, vFogDepth );
	#endif
	gl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );
#endif`,TT=`#ifdef USE_FOG
	uniform vec3 fogColor;
	varying float vFogDepth;
	#ifdef FOG_EXP2
		uniform float fogDensity;
	#else
		uniform float fogNear;
		uniform float fogFar;
	#endif
#endif`,wT=`#ifdef USE_GRADIENTMAP
	uniform sampler2D gradientMap;
#endif
vec3 getGradientIrradiance( vec3 normal, vec3 lightDirection ) {
	float dotNL = dot( normal, lightDirection );
	vec2 coord = vec2( dotNL * 0.5 + 0.5, 0.0 );
	#ifdef USE_GRADIENTMAP
		return vec3( texture2D( gradientMap, coord ).r );
	#else
		vec2 fw = fwidth( coord ) * 0.5;
		return mix( vec3( 0.7 ), vec3( 1.0 ), smoothstep( 0.7 - fw.x, 0.7 + fw.x, coord.x ) );
	#endif
}`,ET=`#ifdef USE_LIGHTMAP
	vec4 lightMapTexel = texture2D( lightMap, vLightMapUv );
	vec3 lightMapIrradiance = lightMapTexel.rgb * lightMapIntensity;
	reflectedLight.indirectDiffuse += lightMapIrradiance;
#endif`,bT=`#ifdef USE_LIGHTMAP
	uniform sampler2D lightMap;
	uniform float lightMapIntensity;
#endif`,AT=`LambertMaterial material;
material.diffuseColor = diffuseColor.rgb;
material.specularStrength = specularStrength;`,PT=`varying vec3 vViewPosition;
struct LambertMaterial {
	vec3 diffuseColor;
	float specularStrength;
};
void RE_Direct_Lambert( const in IncidentLight directLight, const in GeometricContext geometry, const in LambertMaterial material, inout ReflectedLight reflectedLight ) {
	float dotNL = saturate( dot( geometry.normal, directLight.direction ) );
	vec3 irradiance = dotNL * directLight.color;
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectDiffuse_Lambert( const in vec3 irradiance, const in GeometricContext geometry, const in LambertMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
#define RE_Direct				RE_Direct_Lambert
#define RE_IndirectDiffuse		RE_IndirectDiffuse_Lambert`,CT=`uniform bool receiveShadow;
uniform vec3 ambientLightColor;
uniform vec3 lightProbe[ 9 ];
vec3 shGetIrradianceAt( in vec3 normal, in vec3 shCoefficients[ 9 ] ) {
	float x = normal.x, y = normal.y, z = normal.z;
	vec3 result = shCoefficients[ 0 ] * 0.886227;
	result += shCoefficients[ 1 ] * 2.0 * 0.511664 * y;
	result += shCoefficients[ 2 ] * 2.0 * 0.511664 * z;
	result += shCoefficients[ 3 ] * 2.0 * 0.511664 * x;
	result += shCoefficients[ 4 ] * 2.0 * 0.429043 * x * y;
	result += shCoefficients[ 5 ] * 2.0 * 0.429043 * y * z;
	result += shCoefficients[ 6 ] * ( 0.743125 * z * z - 0.247708 );
	result += shCoefficients[ 7 ] * 2.0 * 0.429043 * x * z;
	result += shCoefficients[ 8 ] * 0.429043 * ( x * x - y * y );
	return result;
}
vec3 getLightProbeIrradiance( const in vec3 lightProbe[ 9 ], const in vec3 normal ) {
	vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );
	vec3 irradiance = shGetIrradianceAt( worldNormal, lightProbe );
	return irradiance;
}
vec3 getAmbientLightIrradiance( const in vec3 ambientLightColor ) {
	vec3 irradiance = ambientLightColor;
	return irradiance;
}
float getDistanceAttenuation( const in float lightDistance, const in float cutoffDistance, const in float decayExponent ) {
	#if defined ( LEGACY_LIGHTS )
		if ( cutoffDistance > 0.0 && decayExponent > 0.0 ) {
			return pow( saturate( - lightDistance / cutoffDistance + 1.0 ), decayExponent );
		}
		return 1.0;
	#else
		float distanceFalloff = 1.0 / max( pow( lightDistance, decayExponent ), 0.01 );
		if ( cutoffDistance > 0.0 ) {
			distanceFalloff *= pow2( saturate( 1.0 - pow4( lightDistance / cutoffDistance ) ) );
		}
		return distanceFalloff;
	#endif
}
float getSpotAttenuation( const in float coneCosine, const in float penumbraCosine, const in float angleCosine ) {
	return smoothstep( coneCosine, penumbraCosine, angleCosine );
}
#if NUM_DIR_LIGHTS > 0
	struct DirectionalLight {
		vec3 direction;
		vec3 color;
	};
	uniform DirectionalLight directionalLights[ NUM_DIR_LIGHTS ];
	void getDirectionalLightInfo( const in DirectionalLight directionalLight, const in GeometricContext geometry, out IncidentLight light ) {
		light.color = directionalLight.color;
		light.direction = directionalLight.direction;
		light.visible = true;
	}
#endif
#if NUM_POINT_LIGHTS > 0
	struct PointLight {
		vec3 position;
		vec3 color;
		float distance;
		float decay;
	};
	uniform PointLight pointLights[ NUM_POINT_LIGHTS ];
	void getPointLightInfo( const in PointLight pointLight, const in GeometricContext geometry, out IncidentLight light ) {
		vec3 lVector = pointLight.position - geometry.position;
		light.direction = normalize( lVector );
		float lightDistance = length( lVector );
		light.color = pointLight.color;
		light.color *= getDistanceAttenuation( lightDistance, pointLight.distance, pointLight.decay );
		light.visible = ( light.color != vec3( 0.0 ) );
	}
#endif
#if NUM_SPOT_LIGHTS > 0
	struct SpotLight {
		vec3 position;
		vec3 direction;
		vec3 color;
		float distance;
		float decay;
		float coneCos;
		float penumbraCos;
	};
	uniform SpotLight spotLights[ NUM_SPOT_LIGHTS ];
	void getSpotLightInfo( const in SpotLight spotLight, const in GeometricContext geometry, out IncidentLight light ) {
		vec3 lVector = spotLight.position - geometry.position;
		light.direction = normalize( lVector );
		float angleCos = dot( light.direction, spotLight.direction );
		float spotAttenuation = getSpotAttenuation( spotLight.coneCos, spotLight.penumbraCos, angleCos );
		if ( spotAttenuation > 0.0 ) {
			float lightDistance = length( lVector );
			light.color = spotLight.color * spotAttenuation;
			light.color *= getDistanceAttenuation( lightDistance, spotLight.distance, spotLight.decay );
			light.visible = ( light.color != vec3( 0.0 ) );
		} else {
			light.color = vec3( 0.0 );
			light.visible = false;
		}
	}
#endif
#if NUM_RECT_AREA_LIGHTS > 0
	struct RectAreaLight {
		vec3 color;
		vec3 position;
		vec3 halfWidth;
		vec3 halfHeight;
	};
	uniform sampler2D ltc_1;	uniform sampler2D ltc_2;
	uniform RectAreaLight rectAreaLights[ NUM_RECT_AREA_LIGHTS ];
#endif
#if NUM_HEMI_LIGHTS > 0
	struct HemisphereLight {
		vec3 direction;
		vec3 skyColor;
		vec3 groundColor;
	};
	uniform HemisphereLight hemisphereLights[ NUM_HEMI_LIGHTS ];
	vec3 getHemisphereLightIrradiance( const in HemisphereLight hemiLight, const in vec3 normal ) {
		float dotNL = dot( normal, hemiLight.direction );
		float hemiDiffuseWeight = 0.5 * dotNL + 0.5;
		vec3 irradiance = mix( hemiLight.groundColor, hemiLight.skyColor, hemiDiffuseWeight );
		return irradiance;
	}
#endif`,RT=`#ifdef USE_ENVMAP
	vec3 getIBLIrradiance( const in vec3 normal ) {
		#ifdef ENVMAP_TYPE_CUBE_UV
			vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );
			vec4 envMapColor = textureCubeUV( envMap, worldNormal, 1.0 );
			return PI * envMapColor.rgb * envMapIntensity;
		#else
			return vec3( 0.0 );
		#endif
	}
	vec3 getIBLRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness ) {
		#ifdef ENVMAP_TYPE_CUBE_UV
			vec3 reflectVec = reflect( - viewDir, normal );
			reflectVec = normalize( mix( reflectVec, normal, roughness * roughness) );
			reflectVec = inverseTransformDirection( reflectVec, viewMatrix );
			vec4 envMapColor = textureCubeUV( envMap, reflectVec, roughness );
			return envMapColor.rgb * envMapIntensity;
		#else
			return vec3( 0.0 );
		#endif
	}
	#ifdef USE_ANISOTROPY
		vec3 getIBLAnisotropyRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness, const in vec3 bitangent, const in float anisotropy ) {
			#ifdef ENVMAP_TYPE_CUBE_UV
				vec3 bentNormal = cross( bitangent, viewDir );
				bentNormal = normalize( cross( bentNormal, bitangent ) );
				bentNormal = normalize( mix( bentNormal, normal, pow2( pow2( 1.0 - anisotropy * ( 1.0 - roughness ) ) ) ) );
				return getIBLRadiance( viewDir, bentNormal, roughness );
			#else
				return vec3( 0.0 );
			#endif
		}
	#endif
#endif`,DT=`ToonMaterial material;
material.diffuseColor = diffuseColor.rgb;`,LT=`varying vec3 vViewPosition;
struct ToonMaterial {
	vec3 diffuseColor;
};
void RE_Direct_Toon( const in IncidentLight directLight, const in GeometricContext geometry, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {
	vec3 irradiance = getGradientIrradiance( geometry.normal, directLight.direction ) * directLight.color;
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectDiffuse_Toon( const in vec3 irradiance, const in GeometricContext geometry, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
#define RE_Direct				RE_Direct_Toon
#define RE_IndirectDiffuse		RE_IndirectDiffuse_Toon`,IT=`BlinnPhongMaterial material;
material.diffuseColor = diffuseColor.rgb;
material.specularColor = specular;
material.specularShininess = shininess;
material.specularStrength = specularStrength;`,UT=`varying vec3 vViewPosition;
struct BlinnPhongMaterial {
	vec3 diffuseColor;
	vec3 specularColor;
	float specularShininess;
	float specularStrength;
};
void RE_Direct_BlinnPhong( const in IncidentLight directLight, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {
	float dotNL = saturate( dot( geometry.normal, directLight.direction ) );
	vec3 irradiance = dotNL * directLight.color;
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
	reflectedLight.directSpecular += irradiance * BRDF_BlinnPhong( directLight.direction, geometry.viewDir, geometry.normal, material.specularColor, material.specularShininess ) * material.specularStrength;
}
void RE_IndirectDiffuse_BlinnPhong( const in vec3 irradiance, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
#define RE_Direct				RE_Direct_BlinnPhong
#define RE_IndirectDiffuse		RE_IndirectDiffuse_BlinnPhong`,NT=`PhysicalMaterial material;
material.diffuseColor = diffuseColor.rgb * ( 1.0 - metalnessFactor );
vec3 dxy = max( abs( dFdx( geometryNormal ) ), abs( dFdy( geometryNormal ) ) );
float geometryRoughness = max( max( dxy.x, dxy.y ), dxy.z );
material.roughness = max( roughnessFactor, 0.0525 );material.roughness += geometryRoughness;
material.roughness = min( material.roughness, 1.0 );
#ifdef IOR
	material.ior = ior;
	#ifdef USE_SPECULAR
		float specularIntensityFactor = specularIntensity;
		vec3 specularColorFactor = specularColor;
		#ifdef USE_SPECULAR_COLORMAP
			specularColorFactor *= texture2D( specularColorMap, vSpecularColorMapUv ).rgb;
		#endif
		#ifdef USE_SPECULAR_INTENSITYMAP
			specularIntensityFactor *= texture2D( specularIntensityMap, vSpecularIntensityMapUv ).a;
		#endif
		material.specularF90 = mix( specularIntensityFactor, 1.0, metalnessFactor );
	#else
		float specularIntensityFactor = 1.0;
		vec3 specularColorFactor = vec3( 1.0 );
		material.specularF90 = 1.0;
	#endif
	material.specularColor = mix( min( pow2( ( material.ior - 1.0 ) / ( material.ior + 1.0 ) ) * specularColorFactor, vec3( 1.0 ) ) * specularIntensityFactor, diffuseColor.rgb, metalnessFactor );
#else
	material.specularColor = mix( vec3( 0.04 ), diffuseColor.rgb, metalnessFactor );
	material.specularF90 = 1.0;
#endif
#ifdef USE_CLEARCOAT
	material.clearcoat = clearcoat;
	material.clearcoatRoughness = clearcoatRoughness;
	material.clearcoatF0 = vec3( 0.04 );
	material.clearcoatF90 = 1.0;
	#ifdef USE_CLEARCOATMAP
		material.clearcoat *= texture2D( clearcoatMap, vClearcoatMapUv ).x;
	#endif
	#ifdef USE_CLEARCOAT_ROUGHNESSMAP
		material.clearcoatRoughness *= texture2D( clearcoatRoughnessMap, vClearcoatRoughnessMapUv ).y;
	#endif
	material.clearcoat = saturate( material.clearcoat );	material.clearcoatRoughness = max( material.clearcoatRoughness, 0.0525 );
	material.clearcoatRoughness += geometryRoughness;
	material.clearcoatRoughness = min( material.clearcoatRoughness, 1.0 );
#endif
#ifdef USE_IRIDESCENCE
	material.iridescence = iridescence;
	material.iridescenceIOR = iridescenceIOR;
	#ifdef USE_IRIDESCENCEMAP
		material.iridescence *= texture2D( iridescenceMap, vIridescenceMapUv ).r;
	#endif
	#ifdef USE_IRIDESCENCE_THICKNESSMAP
		material.iridescenceThickness = (iridescenceThicknessMaximum - iridescenceThicknessMinimum) * texture2D( iridescenceThicknessMap, vIridescenceThicknessMapUv ).g + iridescenceThicknessMinimum;
	#else
		material.iridescenceThickness = iridescenceThicknessMaximum;
	#endif
#endif
#ifdef USE_SHEEN
	material.sheenColor = sheenColor;
	#ifdef USE_SHEEN_COLORMAP
		material.sheenColor *= texture2D( sheenColorMap, vSheenColorMapUv ).rgb;
	#endif
	material.sheenRoughness = clamp( sheenRoughness, 0.07, 1.0 );
	#ifdef USE_SHEEN_ROUGHNESSMAP
		material.sheenRoughness *= texture2D( sheenRoughnessMap, vSheenRoughnessMapUv ).a;
	#endif
#endif
#ifdef USE_ANISOTROPY
	#ifdef USE_ANISOTROPYMAP
		mat2 anisotropyMat = mat2( anisotropyVector.x, anisotropyVector.y, - anisotropyVector.y, anisotropyVector.x );
		vec3 anisotropyPolar = texture2D( anisotropyMap, vAnisotropyMapUv ).rgb;
		vec2 anisotropyV = anisotropyMat * normalize( 2.0 * anisotropyPolar.rg - vec2( 1.0 ) ) * anisotropyPolar.b;
	#else
		vec2 anisotropyV = anisotropyVector;
	#endif
	material.anisotropy = length( anisotropyV );
	anisotropyV /= material.anisotropy;
	material.anisotropy = saturate( material.anisotropy );
	material.alphaT = mix( pow2( material.roughness ), 1.0, pow2( material.anisotropy ) );
	material.anisotropyT = tbn[ 0 ] * anisotropyV.x - tbn[ 1 ] * anisotropyV.y;
	material.anisotropyB = tbn[ 1 ] * anisotropyV.x + tbn[ 0 ] * anisotropyV.y;
#endif`,FT=`struct PhysicalMaterial {
	vec3 diffuseColor;
	float roughness;
	vec3 specularColor;
	float specularF90;
	#ifdef USE_CLEARCOAT
		float clearcoat;
		float clearcoatRoughness;
		vec3 clearcoatF0;
		float clearcoatF90;
	#endif
	#ifdef USE_IRIDESCENCE
		float iridescence;
		float iridescenceIOR;
		float iridescenceThickness;
		vec3 iridescenceFresnel;
		vec3 iridescenceF0;
	#endif
	#ifdef USE_SHEEN
		vec3 sheenColor;
		float sheenRoughness;
	#endif
	#ifdef IOR
		float ior;
	#endif
	#ifdef USE_TRANSMISSION
		float transmission;
		float transmissionAlpha;
		float thickness;
		float attenuationDistance;
		vec3 attenuationColor;
	#endif
	#ifdef USE_ANISOTROPY
		float anisotropy;
		float alphaT;
		vec3 anisotropyT;
		vec3 anisotropyB;
	#endif
};
vec3 clearcoatSpecular = vec3( 0.0 );
vec3 sheenSpecular = vec3( 0.0 );
vec3 Schlick_to_F0( const in vec3 f, const in float f90, const in float dotVH ) {
    float x = clamp( 1.0 - dotVH, 0.0, 1.0 );
    float x2 = x * x;
    float x5 = clamp( x * x2 * x2, 0.0, 0.9999 );
    return ( f - vec3( f90 ) * x5 ) / ( 1.0 - x5 );
}
float V_GGX_SmithCorrelated( const in float alpha, const in float dotNL, const in float dotNV ) {
	float a2 = pow2( alpha );
	float gv = dotNL * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );
	float gl = dotNV * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );
	return 0.5 / max( gv + gl, EPSILON );
}
float D_GGX( const in float alpha, const in float dotNH ) {
	float a2 = pow2( alpha );
	float denom = pow2( dotNH ) * ( a2 - 1.0 ) + 1.0;
	return RECIPROCAL_PI * a2 / pow2( denom );
}
#ifdef USE_ANISOTROPY
	float V_GGX_SmithCorrelated_Anisotropic( const in float alphaT, const in float alphaB, const in float dotTV, const in float dotBV, const in float dotTL, const in float dotBL, const in float dotNV, const in float dotNL ) {
		float gv = dotNL * length( vec3( alphaT * dotTV, alphaB * dotBV, dotNV ) );
		float gl = dotNV * length( vec3( alphaT * dotTL, alphaB * dotBL, dotNL ) );
		float v = 0.5 / ( gv + gl );
		return saturate(v);
	}
	float D_GGX_Anisotropic( const in float alphaT, const in float alphaB, const in float dotNH, const in float dotTH, const in float dotBH ) {
		float a2 = alphaT * alphaB;
		highp vec3 v = vec3( alphaB * dotTH, alphaT * dotBH, a2 * dotNH );
		highp float v2 = dot( v, v );
		float w2 = a2 / v2;
		return RECIPROCAL_PI * a2 * pow2 ( w2 );
	}
#endif
#ifdef USE_CLEARCOAT
	vec3 BRDF_GGX_Clearcoat( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in PhysicalMaterial material) {
		vec3 f0 = material.clearcoatF0;
		float f90 = material.clearcoatF90;
		float roughness = material.clearcoatRoughness;
		float alpha = pow2( roughness );
		vec3 halfDir = normalize( lightDir + viewDir );
		float dotNL = saturate( dot( normal, lightDir ) );
		float dotNV = saturate( dot( normal, viewDir ) );
		float dotNH = saturate( dot( normal, halfDir ) );
		float dotVH = saturate( dot( viewDir, halfDir ) );
		vec3 F = F_Schlick( f0, f90, dotVH );
		float V = V_GGX_SmithCorrelated( alpha, dotNL, dotNV );
		float D = D_GGX( alpha, dotNH );
		return F * ( V * D );
	}
#endif
vec3 BRDF_GGX( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in PhysicalMaterial material ) {
	vec3 f0 = material.specularColor;
	float f90 = material.specularF90;
	float roughness = material.roughness;
	float alpha = pow2( roughness );
	vec3 halfDir = normalize( lightDir + viewDir );
	float dotNL = saturate( dot( normal, lightDir ) );
	float dotNV = saturate( dot( normal, viewDir ) );
	float dotNH = saturate( dot( normal, halfDir ) );
	float dotVH = saturate( dot( viewDir, halfDir ) );
	vec3 F = F_Schlick( f0, f90, dotVH );
	#ifdef USE_IRIDESCENCE
		F = mix( F, material.iridescenceFresnel, material.iridescence );
	#endif
	#ifdef USE_ANISOTROPY
		float dotTL = dot( material.anisotropyT, lightDir );
		float dotTV = dot( material.anisotropyT, viewDir );
		float dotTH = dot( material.anisotropyT, halfDir );
		float dotBL = dot( material.anisotropyB, lightDir );
		float dotBV = dot( material.anisotropyB, viewDir );
		float dotBH = dot( material.anisotropyB, halfDir );
		float V = V_GGX_SmithCorrelated_Anisotropic( material.alphaT, alpha, dotTV, dotBV, dotTL, dotBL, dotNV, dotNL );
		float D = D_GGX_Anisotropic( material.alphaT, alpha, dotNH, dotTH, dotBH );
	#else
		float V = V_GGX_SmithCorrelated( alpha, dotNL, dotNV );
		float D = D_GGX( alpha, dotNH );
	#endif
	return F * ( V * D );
}
vec2 LTC_Uv( const in vec3 N, const in vec3 V, const in float roughness ) {
	const float LUT_SIZE = 64.0;
	const float LUT_SCALE = ( LUT_SIZE - 1.0 ) / LUT_SIZE;
	const float LUT_BIAS = 0.5 / LUT_SIZE;
	float dotNV = saturate( dot( N, V ) );
	vec2 uv = vec2( roughness, sqrt( 1.0 - dotNV ) );
	uv = uv * LUT_SCALE + LUT_BIAS;
	return uv;
}
float LTC_ClippedSphereFormFactor( const in vec3 f ) {
	float l = length( f );
	return max( ( l * l + f.z ) / ( l + 1.0 ), 0.0 );
}
vec3 LTC_EdgeVectorFormFactor( const in vec3 v1, const in vec3 v2 ) {
	float x = dot( v1, v2 );
	float y = abs( x );
	float a = 0.8543985 + ( 0.4965155 + 0.0145206 * y ) * y;
	float b = 3.4175940 + ( 4.1616724 + y ) * y;
	float v = a / b;
	float theta_sintheta = ( x > 0.0 ) ? v : 0.5 * inversesqrt( max( 1.0 - x * x, 1e-7 ) ) - v;
	return cross( v1, v2 ) * theta_sintheta;
}
vec3 LTC_Evaluate( const in vec3 N, const in vec3 V, const in vec3 P, const in mat3 mInv, const in vec3 rectCoords[ 4 ] ) {
	vec3 v1 = rectCoords[ 1 ] - rectCoords[ 0 ];
	vec3 v2 = rectCoords[ 3 ] - rectCoords[ 0 ];
	vec3 lightNormal = cross( v1, v2 );
	if( dot( lightNormal, P - rectCoords[ 0 ] ) < 0.0 ) return vec3( 0.0 );
	vec3 T1, T2;
	T1 = normalize( V - N * dot( V, N ) );
	T2 = - cross( N, T1 );
	mat3 mat = mInv * transposeMat3( mat3( T1, T2, N ) );
	vec3 coords[ 4 ];
	coords[ 0 ] = mat * ( rectCoords[ 0 ] - P );
	coords[ 1 ] = mat * ( rectCoords[ 1 ] - P );
	coords[ 2 ] = mat * ( rectCoords[ 2 ] - P );
	coords[ 3 ] = mat * ( rectCoords[ 3 ] - P );
	coords[ 0 ] = normalize( coords[ 0 ] );
	coords[ 1 ] = normalize( coords[ 1 ] );
	coords[ 2 ] = normalize( coords[ 2 ] );
	coords[ 3 ] = normalize( coords[ 3 ] );
	vec3 vectorFormFactor = vec3( 0.0 );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 0 ], coords[ 1 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 1 ], coords[ 2 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 2 ], coords[ 3 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 3 ], coords[ 0 ] );
	float result = LTC_ClippedSphereFormFactor( vectorFormFactor );
	return vec3( result );
}
#if defined( USE_SHEEN )
float D_Charlie( float roughness, float dotNH ) {
	float alpha = pow2( roughness );
	float invAlpha = 1.0 / alpha;
	float cos2h = dotNH * dotNH;
	float sin2h = max( 1.0 - cos2h, 0.0078125 );
	return ( 2.0 + invAlpha ) * pow( sin2h, invAlpha * 0.5 ) / ( 2.0 * PI );
}
float V_Neubelt( float dotNV, float dotNL ) {
	return saturate( 1.0 / ( 4.0 * ( dotNL + dotNV - dotNL * dotNV ) ) );
}
vec3 BRDF_Sheen( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, vec3 sheenColor, const in float sheenRoughness ) {
	vec3 halfDir = normalize( lightDir + viewDir );
	float dotNL = saturate( dot( normal, lightDir ) );
	float dotNV = saturate( dot( normal, viewDir ) );
	float dotNH = saturate( dot( normal, halfDir ) );
	float D = D_Charlie( sheenRoughness, dotNH );
	float V = V_Neubelt( dotNV, dotNL );
	return sheenColor * ( D * V );
}
#endif
float IBLSheenBRDF( const in vec3 normal, const in vec3 viewDir, const in float roughness ) {
	float dotNV = saturate( dot( normal, viewDir ) );
	float r2 = roughness * roughness;
	float a = roughness < 0.25 ? -339.2 * r2 + 161.4 * roughness - 25.9 : -8.48 * r2 + 14.3 * roughness - 9.95;
	float b = roughness < 0.25 ? 44.0 * r2 - 23.7 * roughness + 3.26 : 1.97 * r2 - 3.27 * roughness + 0.72;
	float DG = exp( a * dotNV + b ) + ( roughness < 0.25 ? 0.0 : 0.1 * ( roughness - 0.25 ) );
	return saturate( DG * RECIPROCAL_PI );
}
vec2 DFGApprox( const in vec3 normal, const in vec3 viewDir, const in float roughness ) {
	float dotNV = saturate( dot( normal, viewDir ) );
	const vec4 c0 = vec4( - 1, - 0.0275, - 0.572, 0.022 );
	const vec4 c1 = vec4( 1, 0.0425, 1.04, - 0.04 );
	vec4 r = roughness * c0 + c1;
	float a004 = min( r.x * r.x, exp2( - 9.28 * dotNV ) ) * r.x + r.y;
	vec2 fab = vec2( - 1.04, 1.04 ) * a004 + r.zw;
	return fab;
}
vec3 EnvironmentBRDF( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness ) {
	vec2 fab = DFGApprox( normal, viewDir, roughness );
	return specularColor * fab.x + specularF90 * fab.y;
}
#ifdef USE_IRIDESCENCE
void computeMultiscatteringIridescence( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float iridescence, const in vec3 iridescenceF0, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {
#else
void computeMultiscattering( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {
#endif
	vec2 fab = DFGApprox( normal, viewDir, roughness );
	#ifdef USE_IRIDESCENCE
		vec3 Fr = mix( specularColor, iridescenceF0, iridescence );
	#else
		vec3 Fr = specularColor;
	#endif
	vec3 FssEss = Fr * fab.x + specularF90 * fab.y;
	float Ess = fab.x + fab.y;
	float Ems = 1.0 - Ess;
	vec3 Favg = Fr + ( 1.0 - Fr ) * 0.047619;	vec3 Fms = FssEss * Favg / ( 1.0 - Ems * Favg );
	singleScatter += FssEss;
	multiScatter += Fms * Ems;
}
#if NUM_RECT_AREA_LIGHTS > 0
	void RE_Direct_RectArea_Physical( const in RectAreaLight rectAreaLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
		vec3 normal = geometry.normal;
		vec3 viewDir = geometry.viewDir;
		vec3 position = geometry.position;
		vec3 lightPos = rectAreaLight.position;
		vec3 halfWidth = rectAreaLight.halfWidth;
		vec3 halfHeight = rectAreaLight.halfHeight;
		vec3 lightColor = rectAreaLight.color;
		float roughness = material.roughness;
		vec3 rectCoords[ 4 ];
		rectCoords[ 0 ] = lightPos + halfWidth - halfHeight;		rectCoords[ 1 ] = lightPos - halfWidth - halfHeight;
		rectCoords[ 2 ] = lightPos - halfWidth + halfHeight;
		rectCoords[ 3 ] = lightPos + halfWidth + halfHeight;
		vec2 uv = LTC_Uv( normal, viewDir, roughness );
		vec4 t1 = texture2D( ltc_1, uv );
		vec4 t2 = texture2D( ltc_2, uv );
		mat3 mInv = mat3(
			vec3( t1.x, 0, t1.y ),
			vec3(    0, 1,    0 ),
			vec3( t1.z, 0, t1.w )
		);
		vec3 fresnel = ( material.specularColor * t2.x + ( vec3( 1.0 ) - material.specularColor ) * t2.y );
		reflectedLight.directSpecular += lightColor * fresnel * LTC_Evaluate( normal, viewDir, position, mInv, rectCoords );
		reflectedLight.directDiffuse += lightColor * material.diffuseColor * LTC_Evaluate( normal, viewDir, position, mat3( 1.0 ), rectCoords );
	}
#endif
void RE_Direct_Physical( const in IncidentLight directLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
	float dotNL = saturate( dot( geometry.normal, directLight.direction ) );
	vec3 irradiance = dotNL * directLight.color;
	#ifdef USE_CLEARCOAT
		float dotNLcc = saturate( dot( geometry.clearcoatNormal, directLight.direction ) );
		vec3 ccIrradiance = dotNLcc * directLight.color;
		clearcoatSpecular += ccIrradiance * BRDF_GGX_Clearcoat( directLight.direction, geometry.viewDir, geometry.clearcoatNormal, material );
	#endif
	#ifdef USE_SHEEN
		sheenSpecular += irradiance * BRDF_Sheen( directLight.direction, geometry.viewDir, geometry.normal, material.sheenColor, material.sheenRoughness );
	#endif
	reflectedLight.directSpecular += irradiance * BRDF_GGX( directLight.direction, geometry.viewDir, geometry.normal, material );
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectDiffuse_Physical( const in vec3 irradiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectSpecular_Physical( const in vec3 radiance, const in vec3 irradiance, const in vec3 clearcoatRadiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight) {
	#ifdef USE_CLEARCOAT
		clearcoatSpecular += clearcoatRadiance * EnvironmentBRDF( geometry.clearcoatNormal, geometry.viewDir, material.clearcoatF0, material.clearcoatF90, material.clearcoatRoughness );
	#endif
	#ifdef USE_SHEEN
		sheenSpecular += irradiance * material.sheenColor * IBLSheenBRDF( geometry.normal, geometry.viewDir, material.sheenRoughness );
	#endif
	vec3 singleScattering = vec3( 0.0 );
	vec3 multiScattering = vec3( 0.0 );
	vec3 cosineWeightedIrradiance = irradiance * RECIPROCAL_PI;
	#ifdef USE_IRIDESCENCE
		computeMultiscatteringIridescence( geometry.normal, geometry.viewDir, material.specularColor, material.specularF90, material.iridescence, material.iridescenceFresnel, material.roughness, singleScattering, multiScattering );
	#else
		computeMultiscattering( geometry.normal, geometry.viewDir, material.specularColor, material.specularF90, material.roughness, singleScattering, multiScattering );
	#endif
	vec3 totalScattering = singleScattering + multiScattering;
	vec3 diffuse = material.diffuseColor * ( 1.0 - max( max( totalScattering.r, totalScattering.g ), totalScattering.b ) );
	reflectedLight.indirectSpecular += radiance * singleScattering;
	reflectedLight.indirectSpecular += multiScattering * cosineWeightedIrradiance;
	reflectedLight.indirectDiffuse += diffuse * cosineWeightedIrradiance;
}
#define RE_Direct				RE_Direct_Physical
#define RE_Direct_RectArea		RE_Direct_RectArea_Physical
#define RE_IndirectDiffuse		RE_IndirectDiffuse_Physical
#define RE_IndirectSpecular		RE_IndirectSpecular_Physical
float computeSpecularOcclusion( const in float dotNV, const in float ambientOcclusion, const in float roughness ) {
	return saturate( pow( dotNV + ambientOcclusion, exp2( - 16.0 * roughness - 1.0 ) ) - 1.0 + ambientOcclusion );
}`,OT=`
GeometricContext geometry;
geometry.position = - vViewPosition;
geometry.normal = normal;
geometry.viewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( vViewPosition );
#ifdef USE_CLEARCOAT
	geometry.clearcoatNormal = clearcoatNormal;
#endif
#ifdef USE_IRIDESCENCE
	float dotNVi = saturate( dot( normal, geometry.viewDir ) );
	if ( material.iridescenceThickness == 0.0 ) {
		material.iridescence = 0.0;
	} else {
		material.iridescence = saturate( material.iridescence );
	}
	if ( material.iridescence > 0.0 ) {
		material.iridescenceFresnel = evalIridescence( 1.0, material.iridescenceIOR, dotNVi, material.iridescenceThickness, material.specularColor );
		material.iridescenceF0 = Schlick_to_F0( material.iridescenceFresnel, 1.0, dotNVi );
	}
#endif
IncidentLight directLight;
#if ( NUM_POINT_LIGHTS > 0 ) && defined( RE_Direct )
	PointLight pointLight;
	#if defined( USE_SHADOWMAP ) && NUM_POINT_LIGHT_SHADOWS > 0
	PointLightShadow pointLightShadow;
	#endif
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {
		pointLight = pointLights[ i ];
		getPointLightInfo( pointLight, geometry, directLight );
		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_POINT_LIGHT_SHADOWS )
		pointLightShadow = pointLightShadows[ i ];
		directLight.color *= ( directLight.visible && receiveShadow ) ? getPointShadow( pointShadowMap[ i ], pointLightShadow.shadowMapSize, pointLightShadow.shadowBias, pointLightShadow.shadowRadius, vPointShadowCoord[ i ], pointLightShadow.shadowCameraNear, pointLightShadow.shadowCameraFar ) : 1.0;
		#endif
		RE_Direct( directLight, geometry, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if ( NUM_SPOT_LIGHTS > 0 ) && defined( RE_Direct )
	SpotLight spotLight;
	vec4 spotColor;
	vec3 spotLightCoord;
	bool inSpotLightMap;
	#if defined( USE_SHADOWMAP ) && NUM_SPOT_LIGHT_SHADOWS > 0
	SpotLightShadow spotLightShadow;
	#endif
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {
		spotLight = spotLights[ i ];
		getSpotLightInfo( spotLight, geometry, directLight );
		#if ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS )
		#define SPOT_LIGHT_MAP_INDEX UNROLLED_LOOP_INDEX
		#elif ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )
		#define SPOT_LIGHT_MAP_INDEX NUM_SPOT_LIGHT_MAPS
		#else
		#define SPOT_LIGHT_MAP_INDEX ( UNROLLED_LOOP_INDEX - NUM_SPOT_LIGHT_SHADOWS + NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS )
		#endif
		#if ( SPOT_LIGHT_MAP_INDEX < NUM_SPOT_LIGHT_MAPS )
			spotLightCoord = vSpotLightCoord[ i ].xyz / vSpotLightCoord[ i ].w;
			inSpotLightMap = all( lessThan( abs( spotLightCoord * 2. - 1. ), vec3( 1.0 ) ) );
			spotColor = texture2D( spotLightMap[ SPOT_LIGHT_MAP_INDEX ], spotLightCoord.xy );
			directLight.color = inSpotLightMap ? directLight.color * spotColor.rgb : directLight.color;
		#endif
		#undef SPOT_LIGHT_MAP_INDEX
		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )
		spotLightShadow = spotLightShadows[ i ];
		directLight.color *= ( directLight.visible && receiveShadow ) ? getShadow( spotShadowMap[ i ], spotLightShadow.shadowMapSize, spotLightShadow.shadowBias, spotLightShadow.shadowRadius, vSpotLightCoord[ i ] ) : 1.0;
		#endif
		RE_Direct( directLight, geometry, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if ( NUM_DIR_LIGHTS > 0 ) && defined( RE_Direct )
	DirectionalLight directionalLight;
	#if defined( USE_SHADOWMAP ) && NUM_DIR_LIGHT_SHADOWS > 0
	DirectionalLightShadow directionalLightShadow;
	#endif
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {
		directionalLight = directionalLights[ i ];
		getDirectionalLightInfo( directionalLight, geometry, directLight );
		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_DIR_LIGHT_SHADOWS )
		directionalLightShadow = directionalLightShadows[ i ];
		directLight.color *= ( directLight.visible && receiveShadow ) ? getShadow( directionalShadowMap[ i ], directionalLightShadow.shadowMapSize, directionalLightShadow.shadowBias, directionalLightShadow.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;
		#endif
		RE_Direct( directLight, geometry, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if ( NUM_RECT_AREA_LIGHTS > 0 ) && defined( RE_Direct_RectArea )
	RectAreaLight rectAreaLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_RECT_AREA_LIGHTS; i ++ ) {
		rectAreaLight = rectAreaLights[ i ];
		RE_Direct_RectArea( rectAreaLight, geometry, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if defined( RE_IndirectDiffuse )
	vec3 iblIrradiance = vec3( 0.0 );
	vec3 irradiance = getAmbientLightIrradiance( ambientLightColor );
	irradiance += getLightProbeIrradiance( lightProbe, geometry.normal );
	#if ( NUM_HEMI_LIGHTS > 0 )
		#pragma unroll_loop_start
		for ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {
			irradiance += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry.normal );
		}
		#pragma unroll_loop_end
	#endif
#endif
#if defined( RE_IndirectSpecular )
	vec3 radiance = vec3( 0.0 );
	vec3 clearcoatRadiance = vec3( 0.0 );
#endif`,BT=`#if defined( RE_IndirectDiffuse )
	#ifdef USE_LIGHTMAP
		vec4 lightMapTexel = texture2D( lightMap, vLightMapUv );
		vec3 lightMapIrradiance = lightMapTexel.rgb * lightMapIntensity;
		irradiance += lightMapIrradiance;
	#endif
	#if defined( USE_ENVMAP ) && defined( STANDARD ) && defined( ENVMAP_TYPE_CUBE_UV )
		iblIrradiance += getIBLIrradiance( geometry.normal );
	#endif
#endif
#if defined( USE_ENVMAP ) && defined( RE_IndirectSpecular )
	#ifdef USE_ANISOTROPY
		radiance += getIBLAnisotropyRadiance( geometry.viewDir, geometry.normal, material.roughness, material.anisotropyB, material.anisotropy );
	#else
		radiance += getIBLRadiance( geometry.viewDir, geometry.normal, material.roughness );
	#endif
	#ifdef USE_CLEARCOAT
		clearcoatRadiance += getIBLRadiance( geometry.viewDir, geometry.clearcoatNormal, material.clearcoatRoughness );
	#endif
#endif`,zT=`#if defined( RE_IndirectDiffuse )
	RE_IndirectDiffuse( irradiance, geometry, material, reflectedLight );
#endif
#if defined( RE_IndirectSpecular )
	RE_IndirectSpecular( radiance, iblIrradiance, clearcoatRadiance, geometry, material, reflectedLight );
#endif`,kT=`#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )
	gl_FragDepthEXT = vIsPerspective == 0.0 ? gl_FragCoord.z : log2( vFragDepth ) * logDepthBufFC * 0.5;
#endif`,HT=`#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )
	uniform float logDepthBufFC;
	varying float vFragDepth;
	varying float vIsPerspective;
#endif`,VT=`#ifdef USE_LOGDEPTHBUF
	#ifdef USE_LOGDEPTHBUF_EXT
		varying float vFragDepth;
		varying float vIsPerspective;
	#else
		uniform float logDepthBufFC;
	#endif
#endif`,GT=`#ifdef USE_LOGDEPTHBUF
	#ifdef USE_LOGDEPTHBUF_EXT
		vFragDepth = 1.0 + gl_Position.w;
		vIsPerspective = float( isPerspectiveMatrix( projectionMatrix ) );
	#else
		if ( isPerspectiveMatrix( projectionMatrix ) ) {
			gl_Position.z = log2( max( EPSILON, gl_Position.w + 1.0 ) ) * logDepthBufFC - 1.0;
			gl_Position.z *= gl_Position.w;
		}
	#endif
#endif`,WT=`#ifdef USE_MAP
	diffuseColor *= texture2D( map, vMapUv );
#endif`,XT=`#ifdef USE_MAP
	uniform sampler2D map;
#endif`,YT=`#if defined( USE_MAP ) || defined( USE_ALPHAMAP )
	#if defined( USE_POINTS_UV )
		vec2 uv = vUv;
	#else
		vec2 uv = ( uvTransform * vec3( gl_PointCoord.x, 1.0 - gl_PointCoord.y, 1 ) ).xy;
	#endif
#endif
#ifdef USE_MAP
	diffuseColor *= texture2D( map, uv );
#endif
#ifdef USE_ALPHAMAP
	diffuseColor.a *= texture2D( alphaMap, uv ).g;
#endif`,ZT=`#if defined( USE_POINTS_UV )
	varying vec2 vUv;
#else
	#if defined( USE_MAP ) || defined( USE_ALPHAMAP )
		uniform mat3 uvTransform;
	#endif
#endif
#ifdef USE_MAP
	uniform sampler2D map;
#endif
#ifdef USE_ALPHAMAP
	uniform sampler2D alphaMap;
#endif`,qT=`float metalnessFactor = metalness;
#ifdef USE_METALNESSMAP
	vec4 texelMetalness = texture2D( metalnessMap, vMetalnessMapUv );
	metalnessFactor *= texelMetalness.b;
#endif`,jT=`#ifdef USE_METALNESSMAP
	uniform sampler2D metalnessMap;
#endif`,KT=`#if defined( USE_MORPHCOLORS ) && defined( MORPHTARGETS_TEXTURE )
	vColor *= morphTargetBaseInfluence;
	for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
		#if defined( USE_COLOR_ALPHA )
			if ( morphTargetInfluences[ i ] != 0.0 ) vColor += getMorph( gl_VertexID, i, 2 ) * morphTargetInfluences[ i ];
		#elif defined( USE_COLOR )
			if ( morphTargetInfluences[ i ] != 0.0 ) vColor += getMorph( gl_VertexID, i, 2 ).rgb * morphTargetInfluences[ i ];
		#endif
	}
#endif`,QT=`#ifdef USE_MORPHNORMALS
	objectNormal *= morphTargetBaseInfluence;
	#ifdef MORPHTARGETS_TEXTURE
		for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
			if ( morphTargetInfluences[ i ] != 0.0 ) objectNormal += getMorph( gl_VertexID, i, 1 ).xyz * morphTargetInfluences[ i ];
		}
	#else
		objectNormal += morphNormal0 * morphTargetInfluences[ 0 ];
		objectNormal += morphNormal1 * morphTargetInfluences[ 1 ];
		objectNormal += morphNormal2 * morphTargetInfluences[ 2 ];
		objectNormal += morphNormal3 * morphTargetInfluences[ 3 ];
	#endif
#endif`,JT=`#ifdef USE_MORPHTARGETS
	uniform float morphTargetBaseInfluence;
	#ifdef MORPHTARGETS_TEXTURE
		uniform float morphTargetInfluences[ MORPHTARGETS_COUNT ];
		uniform sampler2DArray morphTargetsTexture;
		uniform ivec2 morphTargetsTextureSize;
		vec4 getMorph( const in int vertexIndex, const in int morphTargetIndex, const in int offset ) {
			int texelIndex = vertexIndex * MORPHTARGETS_TEXTURE_STRIDE + offset;
			int y = texelIndex / morphTargetsTextureSize.x;
			int x = texelIndex - y * morphTargetsTextureSize.x;
			ivec3 morphUV = ivec3( x, y, morphTargetIndex );
			return texelFetch( morphTargetsTexture, morphUV, 0 );
		}
	#else
		#ifndef USE_MORPHNORMALS
			uniform float morphTargetInfluences[ 8 ];
		#else
			uniform float morphTargetInfluences[ 4 ];
		#endif
	#endif
#endif`,$T=`#ifdef USE_MORPHTARGETS
	transformed *= morphTargetBaseInfluence;
	#ifdef MORPHTARGETS_TEXTURE
		for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
			if ( morphTargetInfluences[ i ] != 0.0 ) transformed += getMorph( gl_VertexID, i, 0 ).xyz * morphTargetInfluences[ i ];
		}
	#else
		transformed += morphTarget0 * morphTargetInfluences[ 0 ];
		transformed += morphTarget1 * morphTargetInfluences[ 1 ];
		transformed += morphTarget2 * morphTargetInfluences[ 2 ];
		transformed += morphTarget3 * morphTargetInfluences[ 3 ];
		#ifndef USE_MORPHNORMALS
			transformed += morphTarget4 * morphTargetInfluences[ 4 ];
			transformed += morphTarget5 * morphTargetInfluences[ 5 ];
			transformed += morphTarget6 * morphTargetInfluences[ 6 ];
			transformed += morphTarget7 * morphTargetInfluences[ 7 ];
		#endif
	#endif
#endif`,ew=`float faceDirection = gl_FrontFacing ? 1.0 : - 1.0;
#ifdef FLAT_SHADED
	vec3 fdx = dFdx( vViewPosition );
	vec3 fdy = dFdy( vViewPosition );
	vec3 normal = normalize( cross( fdx, fdy ) );
#else
	vec3 normal = normalize( vNormal );
	#ifdef DOUBLE_SIDED
		normal *= faceDirection;
	#endif
#endif
#if defined( USE_NORMALMAP_TANGENTSPACE ) || defined( USE_CLEARCOAT_NORMALMAP ) || defined( USE_ANISOTROPY )
	#ifdef USE_TANGENT
		mat3 tbn = mat3( normalize( vTangent ), normalize( vBitangent ), normal );
	#else
		mat3 tbn = getTangentFrame( - vViewPosition, normal,
		#if defined( USE_NORMALMAP )
			vNormalMapUv
		#elif defined( USE_CLEARCOAT_NORMALMAP )
			vClearcoatNormalMapUv
		#else
			vUv
		#endif
		);
	#endif
	#if defined( DOUBLE_SIDED ) && ! defined( FLAT_SHADED )
		tbn[0] *= faceDirection;
		tbn[1] *= faceDirection;
	#endif
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	#ifdef USE_TANGENT
		mat3 tbn2 = mat3( normalize( vTangent ), normalize( vBitangent ), normal );
	#else
		mat3 tbn2 = getTangentFrame( - vViewPosition, normal, vClearcoatNormalMapUv );
	#endif
	#if defined( DOUBLE_SIDED ) && ! defined( FLAT_SHADED )
		tbn2[0] *= faceDirection;
		tbn2[1] *= faceDirection;
	#endif
#endif
vec3 geometryNormal = normal;`,tw=`#ifdef USE_NORMALMAP_OBJECTSPACE
	normal = texture2D( normalMap, vNormalMapUv ).xyz * 2.0 - 1.0;
	#ifdef FLIP_SIDED
		normal = - normal;
	#endif
	#ifdef DOUBLE_SIDED
		normal = normal * faceDirection;
	#endif
	normal = normalize( normalMatrix * normal );
#elif defined( USE_NORMALMAP_TANGENTSPACE )
	vec3 mapN = texture2D( normalMap, vNormalMapUv ).xyz * 2.0 - 1.0;
	mapN.xy *= normalScale;
	normal = normalize( tbn * mapN );
#elif defined( USE_BUMPMAP )
	normal = perturbNormalArb( - vViewPosition, normal, dHdxy_fwd(), faceDirection );
#endif`,nw=`#ifndef FLAT_SHADED
	varying vec3 vNormal;
	#ifdef USE_TANGENT
		varying vec3 vTangent;
		varying vec3 vBitangent;
	#endif
#endif`,iw=`#ifndef FLAT_SHADED
	varying vec3 vNormal;
	#ifdef USE_TANGENT
		varying vec3 vTangent;
		varying vec3 vBitangent;
	#endif
#endif`,rw=`#ifndef FLAT_SHADED
	vNormal = normalize( transformedNormal );
	#ifdef USE_TANGENT
		vTangent = normalize( transformedTangent );
		vBitangent = normalize( cross( vNormal, vTangent ) * tangent.w );
	#endif
#endif`,sw=`#ifdef USE_NORMALMAP
	uniform sampler2D normalMap;
	uniform vec2 normalScale;
#endif
#ifdef USE_NORMALMAP_OBJECTSPACE
	uniform mat3 normalMatrix;
#endif
#if ! defined ( USE_TANGENT ) && ( defined ( USE_NORMALMAP_TANGENTSPACE ) || defined ( USE_CLEARCOAT_NORMALMAP ) || defined( USE_ANISOTROPY ) )
	mat3 getTangentFrame( vec3 eye_pos, vec3 surf_norm, vec2 uv ) {
		vec3 q0 = dFdx( eye_pos.xyz );
		vec3 q1 = dFdy( eye_pos.xyz );
		vec2 st0 = dFdx( uv.st );
		vec2 st1 = dFdy( uv.st );
		vec3 N = surf_norm;
		vec3 q1perp = cross( q1, N );
		vec3 q0perp = cross( N, q0 );
		vec3 T = q1perp * st0.x + q0perp * st1.x;
		vec3 B = q1perp * st0.y + q0perp * st1.y;
		float det = max( dot( T, T ), dot( B, B ) );
		float scale = ( det == 0.0 ) ? 0.0 : inversesqrt( det );
		return mat3( T * scale, B * scale, N );
	}
#endif`,aw=`#ifdef USE_CLEARCOAT
	vec3 clearcoatNormal = geometryNormal;
#endif`,ow=`#ifdef USE_CLEARCOAT_NORMALMAP
	vec3 clearcoatMapN = texture2D( clearcoatNormalMap, vClearcoatNormalMapUv ).xyz * 2.0 - 1.0;
	clearcoatMapN.xy *= clearcoatNormalScale;
	clearcoatNormal = normalize( tbn2 * clearcoatMapN );
#endif`,lw=`#ifdef USE_CLEARCOATMAP
	uniform sampler2D clearcoatMap;
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	uniform sampler2D clearcoatNormalMap;
	uniform vec2 clearcoatNormalScale;
#endif
#ifdef USE_CLEARCOAT_ROUGHNESSMAP
	uniform sampler2D clearcoatRoughnessMap;
#endif`,cw=`#ifdef USE_IRIDESCENCEMAP
	uniform sampler2D iridescenceMap;
#endif
#ifdef USE_IRIDESCENCE_THICKNESSMAP
	uniform sampler2D iridescenceThicknessMap;
#endif`,uw=`#ifdef OPAQUE
diffuseColor.a = 1.0;
#endif
#ifdef USE_TRANSMISSION
diffuseColor.a *= material.transmissionAlpha;
#endif
gl_FragColor = vec4( outgoingLight, diffuseColor.a );`,hw=`vec3 packNormalToRGB( const in vec3 normal ) {
	return normalize( normal ) * 0.5 + 0.5;
}
vec3 unpackRGBToNormal( const in vec3 rgb ) {
	return 2.0 * rgb.xyz - 1.0;
}
const float PackUpscale = 256. / 255.;const float UnpackDownscale = 255. / 256.;
const vec3 PackFactors = vec3( 256. * 256. * 256., 256. * 256., 256. );
const vec4 UnpackFactors = UnpackDownscale / vec4( PackFactors, 1. );
const float ShiftRight8 = 1. / 256.;
vec4 packDepthToRGBA( const in float v ) {
	vec4 r = vec4( fract( v * PackFactors ), v );
	r.yzw -= r.xyz * ShiftRight8;	return r * PackUpscale;
}
float unpackRGBAToDepth( const in vec4 v ) {
	return dot( v, UnpackFactors );
}
vec2 packDepthToRG( in highp float v ) {
	return packDepthToRGBA( v ).yx;
}
float unpackRGToDepth( const in highp vec2 v ) {
	return unpackRGBAToDepth( vec4( v.xy, 0.0, 0.0 ) );
}
vec4 pack2HalfToRGBA( vec2 v ) {
	vec4 r = vec4( v.x, fract( v.x * 255.0 ), v.y, fract( v.y * 255.0 ) );
	return vec4( r.x - r.y / 255.0, r.y, r.z - r.w / 255.0, r.w );
}
vec2 unpackRGBATo2Half( vec4 v ) {
	return vec2( v.x + ( v.y / 255.0 ), v.z + ( v.w / 255.0 ) );
}
float viewZToOrthographicDepth( const in float viewZ, const in float near, const in float far ) {
	return ( viewZ + near ) / ( near - far );
}
float orthographicDepthToViewZ( const in float depth, const in float near, const in float far ) {
	return depth * ( near - far ) - near;
}
float viewZToPerspectiveDepth( const in float viewZ, const in float near, const in float far ) {
	return ( ( near + viewZ ) * far ) / ( ( far - near ) * viewZ );
}
float perspectiveDepthToViewZ( const in float depth, const in float near, const in float far ) {
	return ( near * far ) / ( ( far - near ) * depth - far );
}`,fw=`#ifdef PREMULTIPLIED_ALPHA
	gl_FragColor.rgb *= gl_FragColor.a;
#endif`,dw=`vec4 mvPosition = vec4( transformed, 1.0 );
#ifdef USE_INSTANCING
	mvPosition = instanceMatrix * mvPosition;
#endif
mvPosition = modelViewMatrix * mvPosition;
gl_Position = projectionMatrix * mvPosition;`,pw=`#ifdef DITHERING
	gl_FragColor.rgb = dithering( gl_FragColor.rgb );
#endif`,mw=`#ifdef DITHERING
	vec3 dithering( vec3 color ) {
		float grid_position = rand( gl_FragCoord.xy );
		vec3 dither_shift_RGB = vec3( 0.25 / 255.0, -0.25 / 255.0, 0.25 / 255.0 );
		dither_shift_RGB = mix( 2.0 * dither_shift_RGB, -2.0 * dither_shift_RGB, grid_position );
		return color + dither_shift_RGB;
	}
#endif`,gw=`float roughnessFactor = roughness;
#ifdef USE_ROUGHNESSMAP
	vec4 texelRoughness = texture2D( roughnessMap, vRoughnessMapUv );
	roughnessFactor *= texelRoughness.g;
#endif`,vw=`#ifdef USE_ROUGHNESSMAP
	uniform sampler2D roughnessMap;
#endif`,xw=`#if NUM_SPOT_LIGHT_COORDS > 0
	varying vec4 vSpotLightCoord[ NUM_SPOT_LIGHT_COORDS ];
#endif
#if NUM_SPOT_LIGHT_MAPS > 0
	uniform sampler2D spotLightMap[ NUM_SPOT_LIGHT_MAPS ];
#endif
#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0
		uniform sampler2D directionalShadowMap[ NUM_DIR_LIGHT_SHADOWS ];
		varying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];
		struct DirectionalLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
		uniform sampler2D spotShadowMap[ NUM_SPOT_LIGHT_SHADOWS ];
		struct SpotLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
		uniform sampler2D pointShadowMap[ NUM_POINT_LIGHT_SHADOWS ];
		varying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];
		struct PointLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
			float shadowCameraNear;
			float shadowCameraFar;
		};
		uniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];
	#endif
	float texture2DCompare( sampler2D depths, vec2 uv, float compare ) {
		return step( compare, unpackRGBAToDepth( texture2D( depths, uv ) ) );
	}
	vec2 texture2DDistribution( sampler2D shadow, vec2 uv ) {
		return unpackRGBATo2Half( texture2D( shadow, uv ) );
	}
	float VSMShadow (sampler2D shadow, vec2 uv, float compare ){
		float occlusion = 1.0;
		vec2 distribution = texture2DDistribution( shadow, uv );
		float hard_shadow = step( compare , distribution.x );
		if (hard_shadow != 1.0 ) {
			float distance = compare - distribution.x ;
			float variance = max( 0.00000, distribution.y * distribution.y );
			float softness_probability = variance / (variance + distance * distance );			softness_probability = clamp( ( softness_probability - 0.3 ) / ( 0.95 - 0.3 ), 0.0, 1.0 );			occlusion = clamp( max( hard_shadow, softness_probability ), 0.0, 1.0 );
		}
		return occlusion;
	}
	float getShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord ) {
		float shadow = 1.0;
		shadowCoord.xyz /= shadowCoord.w;
		shadowCoord.z += shadowBias;
		bool inFrustum = shadowCoord.x >= 0.0 && shadowCoord.x <= 1.0 && shadowCoord.y >= 0.0 && shadowCoord.y <= 1.0;
		bool frustumTest = inFrustum && shadowCoord.z <= 1.0;
		if ( frustumTest ) {
		#if defined( SHADOWMAP_TYPE_PCF )
			vec2 texelSize = vec2( 1.0 ) / shadowMapSize;
			float dx0 = - texelSize.x * shadowRadius;
			float dy0 = - texelSize.y * shadowRadius;
			float dx1 = + texelSize.x * shadowRadius;
			float dy1 = + texelSize.y * shadowRadius;
			float dx2 = dx0 / 2.0;
			float dy2 = dy0 / 2.0;
			float dx3 = dx1 / 2.0;
			float dy3 = dy1 / 2.0;
			shadow = (
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy2 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy2 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy2 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy3 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy3 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy3 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )
			) * ( 1.0 / 17.0 );
		#elif defined( SHADOWMAP_TYPE_PCF_SOFT )
			vec2 texelSize = vec2( 1.0 ) / shadowMapSize;
			float dx = texelSize.x;
			float dy = texelSize.y;
			vec2 uv = shadowCoord.xy;
			vec2 f = fract( uv * shadowMapSize + 0.5 );
			uv -= f * texelSize;
			shadow = (
				texture2DCompare( shadowMap, uv, shadowCoord.z ) +
				texture2DCompare( shadowMap, uv + vec2( dx, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, uv + vec2( 0.0, dy ), shadowCoord.z ) +
				texture2DCompare( shadowMap, uv + texelSize, shadowCoord.z ) +
				mix( texture2DCompare( shadowMap, uv + vec2( -dx, 0.0 ), shadowCoord.z ),
					 texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 0.0 ), shadowCoord.z ),
					 f.x ) +
				mix( texture2DCompare( shadowMap, uv + vec2( -dx, dy ), shadowCoord.z ),
					 texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, dy ), shadowCoord.z ),
					 f.x ) +
				mix( texture2DCompare( shadowMap, uv + vec2( 0.0, -dy ), shadowCoord.z ),
					 texture2DCompare( shadowMap, uv + vec2( 0.0, 2.0 * dy ), shadowCoord.z ),
					 f.y ) +
				mix( texture2DCompare( shadowMap, uv + vec2( dx, -dy ), shadowCoord.z ),
					 texture2DCompare( shadowMap, uv + vec2( dx, 2.0 * dy ), shadowCoord.z ),
					 f.y ) +
				mix( mix( texture2DCompare( shadowMap, uv + vec2( -dx, -dy ), shadowCoord.z ),
						  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, -dy ), shadowCoord.z ),
						  f.x ),
					 mix( texture2DCompare( shadowMap, uv + vec2( -dx, 2.0 * dy ), shadowCoord.z ),
						  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 2.0 * dy ), shadowCoord.z ),
						  f.x ),
					 f.y )
			) * ( 1.0 / 9.0 );
		#elif defined( SHADOWMAP_TYPE_VSM )
			shadow = VSMShadow( shadowMap, shadowCoord.xy, shadowCoord.z );
		#else
			shadow = texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z );
		#endif
		}
		return shadow;
	}
	vec2 cubeToUV( vec3 v, float texelSizeY ) {
		vec3 absV = abs( v );
		float scaleToCube = 1.0 / max( absV.x, max( absV.y, absV.z ) );
		absV *= scaleToCube;
		v *= scaleToCube * ( 1.0 - 2.0 * texelSizeY );
		vec2 planar = v.xy;
		float almostATexel = 1.5 * texelSizeY;
		float almostOne = 1.0 - almostATexel;
		if ( absV.z >= almostOne ) {
			if ( v.z > 0.0 )
				planar.x = 4.0 - v.x;
		} else if ( absV.x >= almostOne ) {
			float signX = sign( v.x );
			planar.x = v.z * signX + 2.0 * signX;
		} else if ( absV.y >= almostOne ) {
			float signY = sign( v.y );
			planar.x = v.x + 2.0 * signY + 2.0;
			planar.y = v.z * signY - 2.0;
		}
		return vec2( 0.125, 0.25 ) * planar + vec2( 0.375, 0.75 );
	}
	float getPointShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord, float shadowCameraNear, float shadowCameraFar ) {
		vec2 texelSize = vec2( 1.0 ) / ( shadowMapSize * vec2( 4.0, 2.0 ) );
		vec3 lightToPosition = shadowCoord.xyz;
		float dp = ( length( lightToPosition ) - shadowCameraNear ) / ( shadowCameraFar - shadowCameraNear );		dp += shadowBias;
		vec3 bd3D = normalize( lightToPosition );
		#if defined( SHADOWMAP_TYPE_PCF ) || defined( SHADOWMAP_TYPE_PCF_SOFT ) || defined( SHADOWMAP_TYPE_VSM )
			vec2 offset = vec2( - 1, 1 ) * shadowRadius * texelSize.y;
			return (
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyy, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyy, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyx, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyx, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxy, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxy, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxx, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxx, texelSize.y ), dp )
			) * ( 1.0 / 9.0 );
		#else
			return texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp );
		#endif
	}
#endif`,yw=`#if NUM_SPOT_LIGHT_COORDS > 0
	uniform mat4 spotLightMatrix[ NUM_SPOT_LIGHT_COORDS ];
	varying vec4 vSpotLightCoord[ NUM_SPOT_LIGHT_COORDS ];
#endif
#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0
		uniform mat4 directionalShadowMatrix[ NUM_DIR_LIGHT_SHADOWS ];
		varying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];
		struct DirectionalLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
		struct SpotLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
		uniform mat4 pointShadowMatrix[ NUM_POINT_LIGHT_SHADOWS ];
		varying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];
		struct PointLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
			float shadowCameraNear;
			float shadowCameraFar;
		};
		uniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];
	#endif
#endif`,Sw=`#if ( defined( USE_SHADOWMAP ) && ( NUM_DIR_LIGHT_SHADOWS > 0 || NUM_POINT_LIGHT_SHADOWS > 0 ) ) || ( NUM_SPOT_LIGHT_COORDS > 0 )
	vec3 shadowWorldNormal = inverseTransformDirection( transformedNormal, viewMatrix );
	vec4 shadowWorldPosition;
#endif
#if defined( USE_SHADOWMAP )
	#if NUM_DIR_LIGHT_SHADOWS > 0
		#pragma unroll_loop_start
		for ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {
			shadowWorldPosition = worldPosition + vec4( shadowWorldNormal * directionalLightShadows[ i ].shadowNormalBias, 0 );
			vDirectionalShadowCoord[ i ] = directionalShadowMatrix[ i ] * shadowWorldPosition;
		}
		#pragma unroll_loop_end
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
		#pragma unroll_loop_start
		for ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {
			shadowWorldPosition = worldPosition + vec4( shadowWorldNormal * pointLightShadows[ i ].shadowNormalBias, 0 );
			vPointShadowCoord[ i ] = pointShadowMatrix[ i ] * shadowWorldPosition;
		}
		#pragma unroll_loop_end
	#endif
#endif
#if NUM_SPOT_LIGHT_COORDS > 0
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHT_COORDS; i ++ ) {
		shadowWorldPosition = worldPosition;
		#if ( defined( USE_SHADOWMAP ) && UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )
			shadowWorldPosition.xyz += shadowWorldNormal * spotLightShadows[ i ].shadowNormalBias;
		#endif
		vSpotLightCoord[ i ] = spotLightMatrix[ i ] * shadowWorldPosition;
	}
	#pragma unroll_loop_end
#endif`,Mw=`float getShadowMask() {
	float shadow = 1.0;
	#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0
	DirectionalLightShadow directionalLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {
		directionalLight = directionalLightShadows[ i ];
		shadow *= receiveShadow ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;
	}
	#pragma unroll_loop_end
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
	SpotLightShadow spotLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {
		spotLight = spotLightShadows[ i ];
		shadow *= receiveShadow ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotLightCoord[ i ] ) : 1.0;
	}
	#pragma unroll_loop_end
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
	PointLightShadow pointLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {
		pointLight = pointLightShadows[ i ];
		shadow *= receiveShadow ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;
	}
	#pragma unroll_loop_end
	#endif
	#endif
	return shadow;
}`,_w=`#ifdef USE_SKINNING
	mat4 boneMatX = getBoneMatrix( skinIndex.x );
	mat4 boneMatY = getBoneMatrix( skinIndex.y );
	mat4 boneMatZ = getBoneMatrix( skinIndex.z );
	mat4 boneMatW = getBoneMatrix( skinIndex.w );
#endif`,Tw=`#ifdef USE_SKINNING
	uniform mat4 bindMatrix;
	uniform mat4 bindMatrixInverse;
	uniform highp sampler2D boneTexture;
	uniform int boneTextureSize;
	mat4 getBoneMatrix( const in float i ) {
		float j = i * 4.0;
		float x = mod( j, float( boneTextureSize ) );
		float y = floor( j / float( boneTextureSize ) );
		float dx = 1.0 / float( boneTextureSize );
		float dy = 1.0 / float( boneTextureSize );
		y = dy * ( y + 0.5 );
		vec4 v1 = texture2D( boneTexture, vec2( dx * ( x + 0.5 ), y ) );
		vec4 v2 = texture2D( boneTexture, vec2( dx * ( x + 1.5 ), y ) );
		vec4 v3 = texture2D( boneTexture, vec2( dx * ( x + 2.5 ), y ) );
		vec4 v4 = texture2D( boneTexture, vec2( dx * ( x + 3.5 ), y ) );
		mat4 bone = mat4( v1, v2, v3, v4 );
		return bone;
	}
#endif`,ww=`#ifdef USE_SKINNING
	vec4 skinVertex = bindMatrix * vec4( transformed, 1.0 );
	vec4 skinned = vec4( 0.0 );
	skinned += boneMatX * skinVertex * skinWeight.x;
	skinned += boneMatY * skinVertex * skinWeight.y;
	skinned += boneMatZ * skinVertex * skinWeight.z;
	skinned += boneMatW * skinVertex * skinWeight.w;
	transformed = ( bindMatrixInverse * skinned ).xyz;
#endif`,Ew=`#ifdef USE_SKINNING
	mat4 skinMatrix = mat4( 0.0 );
	skinMatrix += skinWeight.x * boneMatX;
	skinMatrix += skinWeight.y * boneMatY;
	skinMatrix += skinWeight.z * boneMatZ;
	skinMatrix += skinWeight.w * boneMatW;
	skinMatrix = bindMatrixInverse * skinMatrix * bindMatrix;
	objectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;
	#ifdef USE_TANGENT
		objectTangent = vec4( skinMatrix * vec4( objectTangent, 0.0 ) ).xyz;
	#endif
#endif`,bw=`float specularStrength;
#ifdef USE_SPECULARMAP
	vec4 texelSpecular = texture2D( specularMap, vSpecularMapUv );
	specularStrength = texelSpecular.r;
#else
	specularStrength = 1.0;
#endif`,Aw=`#ifdef USE_SPECULARMAP
	uniform sampler2D specularMap;
#endif`,Pw=`#if defined( TONE_MAPPING )
	gl_FragColor.rgb = toneMapping( gl_FragColor.rgb );
#endif`,Cw=`#ifndef saturate
#define saturate( a ) clamp( a, 0.0, 1.0 )
#endif
uniform float toneMappingExposure;
vec3 LinearToneMapping( vec3 color ) {
	return saturate( toneMappingExposure * color );
}
vec3 ReinhardToneMapping( vec3 color ) {
	color *= toneMappingExposure;
	return saturate( color / ( vec3( 1.0 ) + color ) );
}
vec3 OptimizedCineonToneMapping( vec3 color ) {
	color *= toneMappingExposure;
	color = max( vec3( 0.0 ), color - 0.004 );
	return pow( ( color * ( 6.2 * color + 0.5 ) ) / ( color * ( 6.2 * color + 1.7 ) + 0.06 ), vec3( 2.2 ) );
}
vec3 RRTAndODTFit( vec3 v ) {
	vec3 a = v * ( v + 0.0245786 ) - 0.000090537;
	vec3 b = v * ( 0.983729 * v + 0.4329510 ) + 0.238081;
	return a / b;
}
vec3 ACESFilmicToneMapping( vec3 color ) {
	const mat3 ACESInputMat = mat3(
		vec3( 0.59719, 0.07600, 0.02840 ),		vec3( 0.35458, 0.90834, 0.13383 ),
		vec3( 0.04823, 0.01566, 0.83777 )
	);
	const mat3 ACESOutputMat = mat3(
		vec3(  1.60475, -0.10208, -0.00327 ),		vec3( -0.53108,  1.10813, -0.07276 ),
		vec3( -0.07367, -0.00605,  1.07602 )
	);
	color *= toneMappingExposure / 0.6;
	color = ACESInputMat * color;
	color = RRTAndODTFit( color );
	color = ACESOutputMat * color;
	return saturate( color );
}
vec3 CustomToneMapping( vec3 color ) { return color; }`,Rw=`#ifdef USE_TRANSMISSION
	material.transmission = transmission;
	material.transmissionAlpha = 1.0;
	material.thickness = thickness;
	material.attenuationDistance = attenuationDistance;
	material.attenuationColor = attenuationColor;
	#ifdef USE_TRANSMISSIONMAP
		material.transmission *= texture2D( transmissionMap, vTransmissionMapUv ).r;
	#endif
	#ifdef USE_THICKNESSMAP
		material.thickness *= texture2D( thicknessMap, vThicknessMapUv ).g;
	#endif
	vec3 pos = vWorldPosition;
	vec3 v = normalize( cameraPosition - pos );
	vec3 n = inverseTransformDirection( normal, viewMatrix );
	vec4 transmitted = getIBLVolumeRefraction(
		n, v, material.roughness, material.diffuseColor, material.specularColor, material.specularF90,
		pos, modelMatrix, viewMatrix, projectionMatrix, material.ior, material.thickness,
		material.attenuationColor, material.attenuationDistance );
	material.transmissionAlpha = mix( material.transmissionAlpha, transmitted.a, material.transmission );
	totalDiffuse = mix( totalDiffuse, transmitted.rgb, material.transmission );
#endif`,Dw=`#ifdef USE_TRANSMISSION
	uniform float transmission;
	uniform float thickness;
	uniform float attenuationDistance;
	uniform vec3 attenuationColor;
	#ifdef USE_TRANSMISSIONMAP
		uniform sampler2D transmissionMap;
	#endif
	#ifdef USE_THICKNESSMAP
		uniform sampler2D thicknessMap;
	#endif
	uniform vec2 transmissionSamplerSize;
	uniform sampler2D transmissionSamplerMap;
	uniform mat4 modelMatrix;
	uniform mat4 projectionMatrix;
	varying vec3 vWorldPosition;
	float w0( float a ) {
		return ( 1.0 / 6.0 ) * ( a * ( a * ( - a + 3.0 ) - 3.0 ) + 1.0 );
	}
	float w1( float a ) {
		return ( 1.0 / 6.0 ) * ( a *  a * ( 3.0 * a - 6.0 ) + 4.0 );
	}
	float w2( float a ){
		return ( 1.0 / 6.0 ) * ( a * ( a * ( - 3.0 * a + 3.0 ) + 3.0 ) + 1.0 );
	}
	float w3( float a ) {
		return ( 1.0 / 6.0 ) * ( a * a * a );
	}
	float g0( float a ) {
		return w0( a ) + w1( a );
	}
	float g1( float a ) {
		return w2( a ) + w3( a );
	}
	float h0( float a ) {
		return - 1.0 + w1( a ) / ( w0( a ) + w1( a ) );
	}
	float h1( float a ) {
		return 1.0 + w3( a ) / ( w2( a ) + w3( a ) );
	}
	vec4 bicubic( sampler2D tex, vec2 uv, vec4 texelSize, float lod ) {
		uv = uv * texelSize.zw + 0.5;
		vec2 iuv = floor( uv );
		vec2 fuv = fract( uv );
		float g0x = g0( fuv.x );
		float g1x = g1( fuv.x );
		float h0x = h0( fuv.x );
		float h1x = h1( fuv.x );
		float h0y = h0( fuv.y );
		float h1y = h1( fuv.y );
		vec2 p0 = ( vec2( iuv.x + h0x, iuv.y + h0y ) - 0.5 ) * texelSize.xy;
		vec2 p1 = ( vec2( iuv.x + h1x, iuv.y + h0y ) - 0.5 ) * texelSize.xy;
		vec2 p2 = ( vec2( iuv.x + h0x, iuv.y + h1y ) - 0.5 ) * texelSize.xy;
		vec2 p3 = ( vec2( iuv.x + h1x, iuv.y + h1y ) - 0.5 ) * texelSize.xy;
		return g0( fuv.y ) * ( g0x * textureLod( tex, p0, lod ) + g1x * textureLod( tex, p1, lod ) ) +
			g1( fuv.y ) * ( g0x * textureLod( tex, p2, lod ) + g1x * textureLod( tex, p3, lod ) );
	}
	vec4 textureBicubic( sampler2D sampler, vec2 uv, float lod ) {
		vec2 fLodSize = vec2( textureSize( sampler, int( lod ) ) );
		vec2 cLodSize = vec2( textureSize( sampler, int( lod + 1.0 ) ) );
		vec2 fLodSizeInv = 1.0 / fLodSize;
		vec2 cLodSizeInv = 1.0 / cLodSize;
		vec4 fSample = bicubic( sampler, uv, vec4( fLodSizeInv, fLodSize ), floor( lod ) );
		vec4 cSample = bicubic( sampler, uv, vec4( cLodSizeInv, cLodSize ), ceil( lod ) );
		return mix( fSample, cSample, fract( lod ) );
	}
	vec3 getVolumeTransmissionRay( const in vec3 n, const in vec3 v, const in float thickness, const in float ior, const in mat4 modelMatrix ) {
		vec3 refractionVector = refract( - v, normalize( n ), 1.0 / ior );
		vec3 modelScale;
		modelScale.x = length( vec3( modelMatrix[ 0 ].xyz ) );
		modelScale.y = length( vec3( modelMatrix[ 1 ].xyz ) );
		modelScale.z = length( vec3( modelMatrix[ 2 ].xyz ) );
		return normalize( refractionVector ) * thickness * modelScale;
	}
	float applyIorToRoughness( const in float roughness, const in float ior ) {
		return roughness * clamp( ior * 2.0 - 2.0, 0.0, 1.0 );
	}
	vec4 getTransmissionSample( const in vec2 fragCoord, const in float roughness, const in float ior ) {
		float lod = log2( transmissionSamplerSize.x ) * applyIorToRoughness( roughness, ior );
		return textureBicubic( transmissionSamplerMap, fragCoord.xy, lod );
	}
	vec3 volumeAttenuation( const in float transmissionDistance, const in vec3 attenuationColor, const in float attenuationDistance ) {
		if ( isinf( attenuationDistance ) ) {
			return vec3( 1.0 );
		} else {
			vec3 attenuationCoefficient = -log( attenuationColor ) / attenuationDistance;
			vec3 transmittance = exp( - attenuationCoefficient * transmissionDistance );			return transmittance;
		}
	}
	vec4 getIBLVolumeRefraction( const in vec3 n, const in vec3 v, const in float roughness, const in vec3 diffuseColor,
		const in vec3 specularColor, const in float specularF90, const in vec3 position, const in mat4 modelMatrix,
		const in mat4 viewMatrix, const in mat4 projMatrix, const in float ior, const in float thickness,
		const in vec3 attenuationColor, const in float attenuationDistance ) {
		vec3 transmissionRay = getVolumeTransmissionRay( n, v, thickness, ior, modelMatrix );
		vec3 refractedRayExit = position + transmissionRay;
		vec4 ndcPos = projMatrix * viewMatrix * vec4( refractedRayExit, 1.0 );
		vec2 refractionCoords = ndcPos.xy / ndcPos.w;
		refractionCoords += 1.0;
		refractionCoords /= 2.0;
		vec4 transmittedLight = getTransmissionSample( refractionCoords, roughness, ior );
		vec3 transmittance = diffuseColor * volumeAttenuation( length( transmissionRay ), attenuationColor, attenuationDistance );
		vec3 attenuatedColor = transmittance * transmittedLight.rgb;
		vec3 F = EnvironmentBRDF( n, v, specularColor, specularF90, roughness );
		float transmittanceFactor = ( transmittance.r + transmittance.g + transmittance.b ) / 3.0;
		return vec4( ( 1.0 - F ) * attenuatedColor, 1.0 - ( 1.0 - transmittedLight.a ) * transmittanceFactor );
	}
#endif`,Lw=`#if defined( USE_UV ) || defined( USE_ANISOTROPY )
	varying vec2 vUv;
#endif
#ifdef USE_MAP
	varying vec2 vMapUv;
#endif
#ifdef USE_ALPHAMAP
	varying vec2 vAlphaMapUv;
#endif
#ifdef USE_LIGHTMAP
	varying vec2 vLightMapUv;
#endif
#ifdef USE_AOMAP
	varying vec2 vAoMapUv;
#endif
#ifdef USE_BUMPMAP
	varying vec2 vBumpMapUv;
#endif
#ifdef USE_NORMALMAP
	varying vec2 vNormalMapUv;
#endif
#ifdef USE_EMISSIVEMAP
	varying vec2 vEmissiveMapUv;
#endif
#ifdef USE_METALNESSMAP
	varying vec2 vMetalnessMapUv;
#endif
#ifdef USE_ROUGHNESSMAP
	varying vec2 vRoughnessMapUv;
#endif
#ifdef USE_ANISOTROPYMAP
	varying vec2 vAnisotropyMapUv;
#endif
#ifdef USE_CLEARCOATMAP
	varying vec2 vClearcoatMapUv;
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	varying vec2 vClearcoatNormalMapUv;
#endif
#ifdef USE_CLEARCOAT_ROUGHNESSMAP
	varying vec2 vClearcoatRoughnessMapUv;
#endif
#ifdef USE_IRIDESCENCEMAP
	varying vec2 vIridescenceMapUv;
#endif
#ifdef USE_IRIDESCENCE_THICKNESSMAP
	varying vec2 vIridescenceThicknessMapUv;
#endif
#ifdef USE_SHEEN_COLORMAP
	varying vec2 vSheenColorMapUv;
#endif
#ifdef USE_SHEEN_ROUGHNESSMAP
	varying vec2 vSheenRoughnessMapUv;
#endif
#ifdef USE_SPECULARMAP
	varying vec2 vSpecularMapUv;
#endif
#ifdef USE_SPECULAR_COLORMAP
	varying vec2 vSpecularColorMapUv;
#endif
#ifdef USE_SPECULAR_INTENSITYMAP
	varying vec2 vSpecularIntensityMapUv;
#endif
#ifdef USE_TRANSMISSIONMAP
	uniform mat3 transmissionMapTransform;
	varying vec2 vTransmissionMapUv;
#endif
#ifdef USE_THICKNESSMAP
	uniform mat3 thicknessMapTransform;
	varying vec2 vThicknessMapUv;
#endif`,Iw=`#if defined( USE_UV ) || defined( USE_ANISOTROPY )
	varying vec2 vUv;
#endif
#ifdef USE_MAP
	uniform mat3 mapTransform;
	varying vec2 vMapUv;
#endif
#ifdef USE_ALPHAMAP
	uniform mat3 alphaMapTransform;
	varying vec2 vAlphaMapUv;
#endif
#ifdef USE_LIGHTMAP
	uniform mat3 lightMapTransform;
	varying vec2 vLightMapUv;
#endif
#ifdef USE_AOMAP
	uniform mat3 aoMapTransform;
	varying vec2 vAoMapUv;
#endif
#ifdef USE_BUMPMAP
	uniform mat3 bumpMapTransform;
	varying vec2 vBumpMapUv;
#endif
#ifdef USE_NORMALMAP
	uniform mat3 normalMapTransform;
	varying vec2 vNormalMapUv;
#endif
#ifdef USE_DISPLACEMENTMAP
	uniform mat3 displacementMapTransform;
	varying vec2 vDisplacementMapUv;
#endif
#ifdef USE_EMISSIVEMAP
	uniform mat3 emissiveMapTransform;
	varying vec2 vEmissiveMapUv;
#endif
#ifdef USE_METALNESSMAP
	uniform mat3 metalnessMapTransform;
	varying vec2 vMetalnessMapUv;
#endif
#ifdef USE_ROUGHNESSMAP
	uniform mat3 roughnessMapTransform;
	varying vec2 vRoughnessMapUv;
#endif
#ifdef USE_ANISOTROPYMAP
	uniform mat3 anisotropyMapTransform;
	varying vec2 vAnisotropyMapUv;
#endif
#ifdef USE_CLEARCOATMAP
	uniform mat3 clearcoatMapTransform;
	varying vec2 vClearcoatMapUv;
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	uniform mat3 clearcoatNormalMapTransform;
	varying vec2 vClearcoatNormalMapUv;
#endif
#ifdef USE_CLEARCOAT_ROUGHNESSMAP
	uniform mat3 clearcoatRoughnessMapTransform;
	varying vec2 vClearcoatRoughnessMapUv;
#endif
#ifdef USE_SHEEN_COLORMAP
	uniform mat3 sheenColorMapTransform;
	varying vec2 vSheenColorMapUv;
#endif
#ifdef USE_SHEEN_ROUGHNESSMAP
	uniform mat3 sheenRoughnessMapTransform;
	varying vec2 vSheenRoughnessMapUv;
#endif
#ifdef USE_IRIDESCENCEMAP
	uniform mat3 iridescenceMapTransform;
	varying vec2 vIridescenceMapUv;
#endif
#ifdef USE_IRIDESCENCE_THICKNESSMAP
	uniform mat3 iridescenceThicknessMapTransform;
	varying vec2 vIridescenceThicknessMapUv;
#endif
#ifdef USE_SPECULARMAP
	uniform mat3 specularMapTransform;
	varying vec2 vSpecularMapUv;
#endif
#ifdef USE_SPECULAR_COLORMAP
	uniform mat3 specularColorMapTransform;
	varying vec2 vSpecularColorMapUv;
#endif
#ifdef USE_SPECULAR_INTENSITYMAP
	uniform mat3 specularIntensityMapTransform;
	varying vec2 vSpecularIntensityMapUv;
#endif
#ifdef USE_TRANSMISSIONMAP
	uniform mat3 transmissionMapTransform;
	varying vec2 vTransmissionMapUv;
#endif
#ifdef USE_THICKNESSMAP
	uniform mat3 thicknessMapTransform;
	varying vec2 vThicknessMapUv;
#endif`,Uw=`#if defined( USE_UV ) || defined( USE_ANISOTROPY )
	vUv = vec3( uv, 1 ).xy;
#endif
#ifdef USE_MAP
	vMapUv = ( mapTransform * vec3( MAP_UV, 1 ) ).xy;
#endif
#ifdef USE_ALPHAMAP
	vAlphaMapUv = ( alphaMapTransform * vec3( ALPHAMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_LIGHTMAP
	vLightMapUv = ( lightMapTransform * vec3( LIGHTMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_AOMAP
	vAoMapUv = ( aoMapTransform * vec3( AOMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_BUMPMAP
	vBumpMapUv = ( bumpMapTransform * vec3( BUMPMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_NORMALMAP
	vNormalMapUv = ( normalMapTransform * vec3( NORMALMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_DISPLACEMENTMAP
	vDisplacementMapUv = ( displacementMapTransform * vec3( DISPLACEMENTMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_EMISSIVEMAP
	vEmissiveMapUv = ( emissiveMapTransform * vec3( EMISSIVEMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_METALNESSMAP
	vMetalnessMapUv = ( metalnessMapTransform * vec3( METALNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_ROUGHNESSMAP
	vRoughnessMapUv = ( roughnessMapTransform * vec3( ROUGHNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_ANISOTROPYMAP
	vAnisotropyMapUv = ( anisotropyMapTransform * vec3( ANISOTROPYMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_CLEARCOATMAP
	vClearcoatMapUv = ( clearcoatMapTransform * vec3( CLEARCOATMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	vClearcoatNormalMapUv = ( clearcoatNormalMapTransform * vec3( CLEARCOAT_NORMALMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_CLEARCOAT_ROUGHNESSMAP
	vClearcoatRoughnessMapUv = ( clearcoatRoughnessMapTransform * vec3( CLEARCOAT_ROUGHNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_IRIDESCENCEMAP
	vIridescenceMapUv = ( iridescenceMapTransform * vec3( IRIDESCENCEMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_IRIDESCENCE_THICKNESSMAP
	vIridescenceThicknessMapUv = ( iridescenceThicknessMapTransform * vec3( IRIDESCENCE_THICKNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SHEEN_COLORMAP
	vSheenColorMapUv = ( sheenColorMapTransform * vec3( SHEEN_COLORMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SHEEN_ROUGHNESSMAP
	vSheenRoughnessMapUv = ( sheenRoughnessMapTransform * vec3( SHEEN_ROUGHNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SPECULARMAP
	vSpecularMapUv = ( specularMapTransform * vec3( SPECULARMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SPECULAR_COLORMAP
	vSpecularColorMapUv = ( specularColorMapTransform * vec3( SPECULAR_COLORMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SPECULAR_INTENSITYMAP
	vSpecularIntensityMapUv = ( specularIntensityMapTransform * vec3( SPECULAR_INTENSITYMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_TRANSMISSIONMAP
	vTransmissionMapUv = ( transmissionMapTransform * vec3( TRANSMISSIONMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_THICKNESSMAP
	vThicknessMapUv = ( thicknessMapTransform * vec3( THICKNESSMAP_UV, 1 ) ).xy;
#endif`,Nw=`#if defined( USE_ENVMAP ) || defined( DISTANCE ) || defined ( USE_SHADOWMAP ) || defined ( USE_TRANSMISSION ) || NUM_SPOT_LIGHT_COORDS > 0
	vec4 worldPosition = vec4( transformed, 1.0 );
	#ifdef USE_INSTANCING
		worldPosition = instanceMatrix * worldPosition;
	#endif
	worldPosition = modelMatrix * worldPosition;
#endif`;const Fw=`varying vec2 vUv;
uniform mat3 uvTransform;
void main() {
	vUv = ( uvTransform * vec3( uv, 1 ) ).xy;
	gl_Position = vec4( position.xy, 1.0, 1.0 );
}`,Ow=`uniform sampler2D t2D;
uniform float backgroundIntensity;
varying vec2 vUv;
void main() {
	vec4 texColor = texture2D( t2D, vUv );
	texColor.rgb *= backgroundIntensity;
	gl_FragColor = texColor;
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
}`,Bw=`varying vec3 vWorldDirection;
#include <common>
void main() {
	vWorldDirection = transformDirection( position, modelMatrix );
	#include <begin_vertex>
	#include <project_vertex>
	gl_Position.z = gl_Position.w;
}`,zw=`#ifdef ENVMAP_TYPE_CUBE
	uniform samplerCube envMap;
#elif defined( ENVMAP_TYPE_CUBE_UV )
	uniform sampler2D envMap;
#endif
uniform float flipEnvMap;
uniform float backgroundBlurriness;
uniform float backgroundIntensity;
varying vec3 vWorldDirection;
#include <cube_uv_reflection_fragment>
void main() {
	#ifdef ENVMAP_TYPE_CUBE
		vec4 texColor = textureCube( envMap, vec3( flipEnvMap * vWorldDirection.x, vWorldDirection.yz ) );
	#elif defined( ENVMAP_TYPE_CUBE_UV )
		vec4 texColor = textureCubeUV( envMap, vWorldDirection, backgroundBlurriness );
	#else
		vec4 texColor = vec4( 0.0, 0.0, 0.0, 1.0 );
	#endif
	texColor.rgb *= backgroundIntensity;
	gl_FragColor = texColor;
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
}`,kw=`varying vec3 vWorldDirection;
#include <common>
void main() {
	vWorldDirection = transformDirection( position, modelMatrix );
	#include <begin_vertex>
	#include <project_vertex>
	gl_Position.z = gl_Position.w;
}`,Hw=`uniform samplerCube tCube;
uniform float tFlip;
uniform float opacity;
varying vec3 vWorldDirection;
void main() {
	vec4 texColor = textureCube( tCube, vec3( tFlip * vWorldDirection.x, vWorldDirection.yz ) );
	gl_FragColor = texColor;
	gl_FragColor.a *= opacity;
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
}`,Vw=`#include <common>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
varying vec2 vHighPrecisionZW;
void main() {
	#include <uv_vertex>
	#include <skinbase_vertex>
	#ifdef USE_DISPLACEMENTMAP
		#include <beginnormal_vertex>
		#include <morphnormal_vertex>
		#include <skinnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vHighPrecisionZW = gl_Position.zw;
}`,Gw=`#if DEPTH_PACKING == 3200
	uniform float opacity;
#endif
#include <common>
#include <packing>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
varying vec2 vHighPrecisionZW;
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( 1.0 );
	#if DEPTH_PACKING == 3200
		diffuseColor.a = opacity;
	#endif
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <logdepthbuf_fragment>
	float fragCoordZ = 0.5 * vHighPrecisionZW[0] / vHighPrecisionZW[1] + 0.5;
	#if DEPTH_PACKING == 3200
		gl_FragColor = vec4( vec3( 1.0 - fragCoordZ ), opacity );
	#elif DEPTH_PACKING == 3201
		gl_FragColor = packDepthToRGBA( fragCoordZ );
	#endif
}`,Ww=`#define DISTANCE
varying vec3 vWorldPosition;
#include <common>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <skinbase_vertex>
	#ifdef USE_DISPLACEMENTMAP
		#include <beginnormal_vertex>
		#include <morphnormal_vertex>
		#include <skinnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <worldpos_vertex>
	#include <clipping_planes_vertex>
	vWorldPosition = worldPosition.xyz;
}`,Xw=`#define DISTANCE
uniform vec3 referencePosition;
uniform float nearDistance;
uniform float farDistance;
varying vec3 vWorldPosition;
#include <common>
#include <packing>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <clipping_planes_pars_fragment>
void main () {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( 1.0 );
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	float dist = length( vWorldPosition - referencePosition );
	dist = ( dist - nearDistance ) / ( farDistance - nearDistance );
	dist = saturate( dist );
	gl_FragColor = packDepthToRGBA( dist );
}`,Yw=`varying vec3 vWorldDirection;
#include <common>
void main() {
	vWorldDirection = transformDirection( position, modelMatrix );
	#include <begin_vertex>
	#include <project_vertex>
}`,Zw=`uniform sampler2D tEquirect;
varying vec3 vWorldDirection;
#include <common>
void main() {
	vec3 direction = normalize( vWorldDirection );
	vec2 sampleUV = equirectUv( direction );
	gl_FragColor = texture2D( tEquirect, sampleUV );
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
}`,qw=`uniform float scale;
attribute float lineDistance;
varying float vLineDistance;
#include <common>
#include <uv_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	vLineDistance = scale * lineDistance;
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
}`,jw=`uniform vec3 diffuse;
uniform float opacity;
uniform float dashSize;
uniform float totalSize;
varying float vLineDistance;
#include <common>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	if ( mod( vLineDistance, totalSize ) > dashSize ) {
		discard;
	}
	vec3 outgoingLight = vec3( 0.0 );
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	outgoingLight = diffuseColor.rgb;
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
}`,Kw=`#include <common>
#include <uv_pars_vertex>
#include <envmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#if defined ( USE_ENVMAP ) || defined ( USE_SKINNING )
		#include <beginnormal_vertex>
		#include <morphnormal_vertex>
		#include <skinbase_vertex>
		#include <skinnormal_vertex>
		#include <defaultnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <worldpos_vertex>
	#include <envmap_vertex>
	#include <fog_vertex>
}`,Qw=`uniform vec3 diffuse;
uniform float opacity;
#ifndef FLAT_SHADED
	varying vec3 vNormal;
#endif
#include <common>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_pars_fragment>
#include <fog_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <specularmap_fragment>
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	#ifdef USE_LIGHTMAP
		vec4 lightMapTexel = texture2D( lightMap, vLightMapUv );
		reflectedLight.indirectDiffuse += lightMapTexel.rgb * lightMapIntensity * RECIPROCAL_PI;
	#else
		reflectedLight.indirectDiffuse += vec3( 1.0 );
	#endif
	#include <aomap_fragment>
	reflectedLight.indirectDiffuse *= diffuseColor.rgb;
	vec3 outgoingLight = reflectedLight.indirectDiffuse;
	#include <envmap_fragment>
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,Jw=`#define LAMBERT
varying vec3 vViewPosition;
#include <common>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <envmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <envmap_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,$w=`#define LAMBERT
uniform vec3 diffuse;
uniform vec3 emissive;
uniform float opacity;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_pars_fragment>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_lambert_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <specularmap_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_lambert_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;
	#include <envmap_fragment>
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,eE=`#define MATCAP
varying vec3 vViewPosition;
#include <common>
#include <uv_pars_vertex>
#include <color_pars_vertex>
#include <displacementmap_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
	vViewPosition = - mvPosition.xyz;
}`,tE=`#define MATCAP
uniform vec3 diffuse;
uniform float opacity;
uniform sampler2D matcap;
varying vec3 vViewPosition;
#include <common>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <fog_pars_fragment>
#include <normal_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	vec3 viewDir = normalize( vViewPosition );
	vec3 x = normalize( vec3( viewDir.z, 0.0, - viewDir.x ) );
	vec3 y = cross( viewDir, x );
	vec2 uv = vec2( dot( x, normal ), dot( y, normal ) ) * 0.495 + 0.5;
	#ifdef USE_MATCAP
		vec4 matcapColor = texture2D( matcap, uv );
	#else
		vec4 matcapColor = vec4( vec3( mix( 0.2, 0.8, uv.y ) ), 1.0 );
	#endif
	vec3 outgoingLight = diffuseColor.rgb * matcapColor.rgb;
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,nE=`#define NORMAL
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP_TANGENTSPACE )
	varying vec3 vViewPosition;
#endif
#include <common>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP_TANGENTSPACE )
	vViewPosition = - mvPosition.xyz;
#endif
}`,iE=`#define NORMAL
uniform float opacity;
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP_TANGENTSPACE )
	varying vec3 vViewPosition;
#endif
#include <packing>
#include <uv_pars_fragment>
#include <normal_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	#include <logdepthbuf_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	gl_FragColor = vec4( packNormalToRGB( normal ), opacity );
	#ifdef OPAQUE
		gl_FragColor.a = 1.0;
	#endif
}`,rE=`#define PHONG
varying vec3 vViewPosition;
#include <common>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <envmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <envmap_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,sE=`#define PHONG
uniform vec3 diffuse;
uniform vec3 emissive;
uniform vec3 specular;
uniform float shininess;
uniform float opacity;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_pars_fragment>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_phong_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <specularmap_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_phong_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;
	#include <envmap_fragment>
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,aE=`#define STANDARD
varying vec3 vViewPosition;
#ifdef USE_TRANSMISSION
	varying vec3 vWorldPosition;
#endif
#include <common>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
#ifdef USE_TRANSMISSION
	vWorldPosition = worldPosition.xyz;
#endif
}`,oE=`#define STANDARD
#ifdef PHYSICAL
	#define IOR
	#define USE_SPECULAR
#endif
uniform vec3 diffuse;
uniform vec3 emissive;
uniform float roughness;
uniform float metalness;
uniform float opacity;
#ifdef IOR
	uniform float ior;
#endif
#ifdef USE_SPECULAR
	uniform float specularIntensity;
	uniform vec3 specularColor;
	#ifdef USE_SPECULAR_COLORMAP
		uniform sampler2D specularColorMap;
	#endif
	#ifdef USE_SPECULAR_INTENSITYMAP
		uniform sampler2D specularIntensityMap;
	#endif
#endif
#ifdef USE_CLEARCOAT
	uniform float clearcoat;
	uniform float clearcoatRoughness;
#endif
#ifdef USE_IRIDESCENCE
	uniform float iridescence;
	uniform float iridescenceIOR;
	uniform float iridescenceThicknessMinimum;
	uniform float iridescenceThicknessMaximum;
#endif
#ifdef USE_SHEEN
	uniform vec3 sheenColor;
	uniform float sheenRoughness;
	#ifdef USE_SHEEN_COLORMAP
		uniform sampler2D sheenColorMap;
	#endif
	#ifdef USE_SHEEN_ROUGHNESSMAP
		uniform sampler2D sheenRoughnessMap;
	#endif
#endif
#ifdef USE_ANISOTROPY
	uniform vec2 anisotropyVector;
	#ifdef USE_ANISOTROPYMAP
		uniform sampler2D anisotropyMap;
	#endif
#endif
varying vec3 vViewPosition;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <iridescence_fragment>
#include <cube_uv_reflection_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_physical_pars_fragment>
#include <fog_pars_fragment>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_physical_pars_fragment>
#include <transmission_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <clearcoat_pars_fragment>
#include <iridescence_pars_fragment>
#include <roughnessmap_pars_fragment>
#include <metalnessmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <roughnessmap_fragment>
	#include <metalnessmap_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <clearcoat_normal_fragment_begin>
	#include <clearcoat_normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_physical_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 totalDiffuse = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse;
	vec3 totalSpecular = reflectedLight.directSpecular + reflectedLight.indirectSpecular;
	#include <transmission_fragment>
	vec3 outgoingLight = totalDiffuse + totalSpecular + totalEmissiveRadiance;
	#ifdef USE_SHEEN
		float sheenEnergyComp = 1.0 - 0.157 * max3( material.sheenColor );
		outgoingLight = outgoingLight * sheenEnergyComp + sheenSpecular;
	#endif
	#ifdef USE_CLEARCOAT
		float dotNVcc = saturate( dot( geometry.clearcoatNormal, geometry.viewDir ) );
		vec3 Fcc = F_Schlick( material.clearcoatF0, material.clearcoatF90, dotNVcc );
		outgoingLight = outgoingLight * ( 1.0 - material.clearcoat * Fcc ) + clearcoatSpecular * material.clearcoat;
	#endif
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,lE=`#define TOON
varying vec3 vViewPosition;
#include <common>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,cE=`#define TOON
uniform vec3 diffuse;
uniform vec3 emissive;
uniform float opacity;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <gradientmap_pars_fragment>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_toon_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_toon_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,uE=`uniform float size;
uniform float scale;
#include <common>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
#ifdef USE_POINTS_UV
	varying vec2 vUv;
	uniform mat3 uvTransform;
#endif
void main() {
	#ifdef USE_POINTS_UV
		vUv = ( uvTransform * vec3( uv, 1 ) ).xy;
	#endif
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <project_vertex>
	gl_PointSize = size;
	#ifdef USE_SIZEATTENUATION
		bool isPerspective = isPerspectiveMatrix( projectionMatrix );
		if ( isPerspective ) gl_PointSize *= ( scale / - mvPosition.z );
	#endif
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <worldpos_vertex>
	#include <fog_vertex>
}`,hE=`uniform vec3 diffuse;
uniform float opacity;
#include <common>
#include <color_pars_fragment>
#include <map_particle_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec3 outgoingLight = vec3( 0.0 );
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <map_particle_fragment>
	#include <color_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	outgoingLight = diffuseColor.rgb;
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
}`,fE=`#include <common>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <shadowmap_pars_vertex>
void main() {
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <worldpos_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,dE=`uniform vec3 color;
uniform float opacity;
#include <common>
#include <packing>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <logdepthbuf_pars_fragment>
#include <shadowmap_pars_fragment>
#include <shadowmask_pars_fragment>
void main() {
	#include <logdepthbuf_fragment>
	gl_FragColor = vec4( color, opacity * ( 1.0 - getShadowMask() ) );
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
}`,pE=`uniform float rotation;
uniform vec2 center;
#include <common>
#include <uv_pars_vertex>
#include <fog_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	vec4 mvPosition = modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );
	vec2 scale;
	scale.x = length( vec3( modelMatrix[ 0 ].x, modelMatrix[ 0 ].y, modelMatrix[ 0 ].z ) );
	scale.y = length( vec3( modelMatrix[ 1 ].x, modelMatrix[ 1 ].y, modelMatrix[ 1 ].z ) );
	#ifndef USE_SIZEATTENUATION
		bool isPerspective = isPerspectiveMatrix( projectionMatrix );
		if ( isPerspective ) scale *= - mvPosition.z;
	#endif
	vec2 alignedPosition = ( position.xy - ( center - vec2( 0.5 ) ) ) * scale;
	vec2 rotatedPosition;
	rotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;
	rotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;
	mvPosition.xy += rotatedPosition;
	gl_Position = projectionMatrix * mvPosition;
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
}`,mE=`uniform vec3 diffuse;
uniform float opacity;
#include <common>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec3 outgoingLight = vec3( 0.0 );
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	outgoingLight = diffuseColor.rgb;
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
}`,Je={alphahash_fragment:z1,alphahash_pars_fragment:k1,alphamap_fragment:H1,alphamap_pars_fragment:V1,alphatest_fragment:G1,alphatest_pars_fragment:W1,aomap_fragment:X1,aomap_pars_fragment:Y1,begin_vertex:Z1,beginnormal_vertex:q1,bsdfs:j1,iridescence_fragment:K1,bumpmap_pars_fragment:Q1,clipping_planes_fragment:J1,clipping_planes_pars_fragment:$1,clipping_planes_pars_vertex:eT,clipping_planes_vertex:tT,color_fragment:nT,color_pars_fragment:iT,color_pars_vertex:rT,color_vertex:sT,common:aT,cube_uv_reflection_fragment:oT,defaultnormal_vertex:lT,displacementmap_pars_vertex:cT,displacementmap_vertex:uT,emissivemap_fragment:hT,emissivemap_pars_fragment:fT,colorspace_fragment:dT,colorspace_pars_fragment:pT,envmap_fragment:mT,envmap_common_pars_fragment:gT,envmap_pars_fragment:vT,envmap_pars_vertex:xT,envmap_physical_pars_fragment:RT,envmap_vertex:yT,fog_vertex:ST,fog_pars_vertex:MT,fog_fragment:_T,fog_pars_fragment:TT,gradientmap_pars_fragment:wT,lightmap_fragment:ET,lightmap_pars_fragment:bT,lights_lambert_fragment:AT,lights_lambert_pars_fragment:PT,lights_pars_begin:CT,lights_toon_fragment:DT,lights_toon_pars_fragment:LT,lights_phong_fragment:IT,lights_phong_pars_fragment:UT,lights_physical_fragment:NT,lights_physical_pars_fragment:FT,lights_fragment_begin:OT,lights_fragment_maps:BT,lights_fragment_end:zT,logdepthbuf_fragment:kT,logdepthbuf_pars_fragment:HT,logdepthbuf_pars_vertex:VT,logdepthbuf_vertex:GT,map_fragment:WT,map_pars_fragment:XT,map_particle_fragment:YT,map_particle_pars_fragment:ZT,metalnessmap_fragment:qT,metalnessmap_pars_fragment:jT,morphcolor_vertex:KT,morphnormal_vertex:QT,morphtarget_pars_vertex:JT,morphtarget_vertex:$T,normal_fragment_begin:ew,normal_fragment_maps:tw,normal_pars_fragment:nw,normal_pars_vertex:iw,normal_vertex:rw,normalmap_pars_fragment:sw,clearcoat_normal_fragment_begin:aw,clearcoat_normal_fragment_maps:ow,clearcoat_pars_fragment:lw,iridescence_pars_fragment:cw,opaque_fragment:uw,packing:hw,premultiplied_alpha_fragment:fw,project_vertex:dw,dithering_fragment:pw,dithering_pars_fragment:mw,roughnessmap_fragment:gw,roughnessmap_pars_fragment:vw,shadowmap_pars_fragment:xw,shadowmap_pars_vertex:yw,shadowmap_vertex:Sw,shadowmask_pars_fragment:Mw,skinbase_vertex:_w,skinning_pars_vertex:Tw,skinning_vertex:ww,skinnormal_vertex:Ew,specularmap_fragment:bw,specularmap_pars_fragment:Aw,tonemapping_fragment:Pw,tonemapping_pars_fragment:Cw,transmission_fragment:Rw,transmission_pars_fragment:Dw,uv_pars_fragment:Lw,uv_pars_vertex:Iw,uv_vertex:Uw,worldpos_vertex:Nw,background_vert:Fw,background_frag:Ow,backgroundCube_vert:Bw,backgroundCube_frag:zw,cube_vert:kw,cube_frag:Hw,depth_vert:Vw,depth_frag:Gw,distanceRGBA_vert:Ww,distanceRGBA_frag:Xw,equirect_vert:Yw,equirect_frag:Zw,linedashed_vert:qw,linedashed_frag:jw,meshbasic_vert:Kw,meshbasic_frag:Qw,meshlambert_vert:Jw,meshlambert_frag:$w,meshmatcap_vert:eE,meshmatcap_frag:tE,meshnormal_vert:nE,meshnormal_frag:iE,meshphong_vert:rE,meshphong_frag:sE,meshphysical_vert:aE,meshphysical_frag:oE,meshtoon_vert:lE,meshtoon_frag:cE,points_vert:uE,points_frag:hE,shadow_vert:fE,shadow_frag:dE,sprite_vert:pE,sprite_frag:mE},Ie={common:{diffuse:{value:new be(16777215)},opacity:{value:1},map:{value:null},mapTransform:{value:new gt},alphaMap:{value:null},alphaMapTransform:{value:new gt},alphaTest:{value:0}},specularmap:{specularMap:{value:null},specularMapTransform:{value:new gt}},envmap:{envMap:{value:null},flipEnvMap:{value:-1},reflectivity:{value:1},ior:{value:1.5},refractionRatio:{value:.98}},aomap:{aoMap:{value:null},aoMapIntensity:{value:1},aoMapTransform:{value:new gt}},lightmap:{lightMap:{value:null},lightMapIntensity:{value:1},lightMapTransform:{value:new gt}},bumpmap:{bumpMap:{value:null},bumpMapTransform:{value:new gt},bumpScale:{value:1}},normalmap:{normalMap:{value:null},normalMapTransform:{value:new gt},normalScale:{value:new K(1,1)}},displacementmap:{displacementMap:{value:null},displacementMapTransform:{value:new gt},displacementScale:{value:1},displacementBias:{value:0}},emissivemap:{emissiveMap:{value:null},emissiveMapTransform:{value:new gt}},metalnessmap:{metalnessMap:{value:null},metalnessMapTransform:{value:new gt}},roughnessmap:{roughnessMap:{value:null},roughnessMapTransform:{value:new gt}},gradientmap:{gradientMap:{value:null}},fog:{fogDensity:{value:25e-5},fogNear:{value:1},fogFar:{value:2e3},fogColor:{value:new be(16777215)}},lights:{ambientLightColor:{value:[]},lightProbe:{value:[]},directionalLights:{value:[],properties:{direction:{},color:{}}},directionalLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},directionalShadowMap:{value:[]},directionalShadowMatrix:{value:[]},spotLights:{value:[],properties:{color:{},position:{},direction:{},distance:{},coneCos:{},penumbraCos:{},decay:{}}},spotLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},spotLightMap:{value:[]},spotShadowMap:{value:[]},spotLightMatrix:{value:[]},pointLights:{value:[],properties:{color:{},position:{},decay:{},distance:{}}},pointLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{},shadowCameraNear:{},shadowCameraFar:{}}},pointShadowMap:{value:[]},pointShadowMatrix:{value:[]},hemisphereLights:{value:[],properties:{direction:{},skyColor:{},groundColor:{}}},rectAreaLights:{value:[],properties:{color:{},position:{},width:{},height:{}}},ltc_1:{value:null},ltc_2:{value:null}},points:{diffuse:{value:new be(16777215)},opacity:{value:1},size:{value:1},scale:{value:1},map:{value:null},alphaMap:{value:null},alphaMapTransform:{value:new gt},alphaTest:{value:0},uvTransform:{value:new gt}},sprite:{diffuse:{value:new be(16777215)},opacity:{value:1},center:{value:new K(.5,.5)},rotation:{value:0},map:{value:null},mapTransform:{value:new gt},alphaMap:{value:null},alphaMapTransform:{value:new gt},alphaTest:{value:0}}},Vi={basic:{uniforms:Zn([Ie.common,Ie.specularmap,Ie.envmap,Ie.aomap,Ie.lightmap,Ie.fog]),vertexShader:Je.meshbasic_vert,fragmentShader:Je.meshbasic_frag},lambert:{uniforms:Zn([Ie.common,Ie.specularmap,Ie.envmap,Ie.aomap,Ie.lightmap,Ie.emissivemap,Ie.bumpmap,Ie.normalmap,Ie.displacementmap,Ie.fog,Ie.lights,{emissive:{value:new be(0)}}]),vertexShader:Je.meshlambert_vert,fragmentShader:Je.meshlambert_frag},phong:{uniforms:Zn([Ie.common,Ie.specularmap,Ie.envmap,Ie.aomap,Ie.lightmap,Ie.emissivemap,Ie.bumpmap,Ie.normalmap,Ie.displacementmap,Ie.fog,Ie.lights,{emissive:{value:new be(0)},specular:{value:new be(1118481)},shininess:{value:30}}]),vertexShader:Je.meshphong_vert,fragmentShader:Je.meshphong_frag},standard:{uniforms:Zn([Ie.common,Ie.envmap,Ie.aomap,Ie.lightmap,Ie.emissivemap,Ie.bumpmap,Ie.normalmap,Ie.displacementmap,Ie.roughnessmap,Ie.metalnessmap,Ie.fog,Ie.lights,{emissive:{value:new be(0)},roughness:{value:1},metalness:{value:0},envMapIntensity:{value:1}}]),vertexShader:Je.meshphysical_vert,fragmentShader:Je.meshphysical_frag},toon:{uniforms:Zn([Ie.common,Ie.aomap,Ie.lightmap,Ie.emissivemap,Ie.bumpmap,Ie.normalmap,Ie.displacementmap,Ie.gradientmap,Ie.fog,Ie.lights,{emissive:{value:new be(0)}}]),vertexShader:Je.meshtoon_vert,fragmentShader:Je.meshtoon_frag},matcap:{uniforms:Zn([Ie.common,Ie.bumpmap,Ie.normalmap,Ie.displacementmap,Ie.fog,{matcap:{value:null}}]),vertexShader:Je.meshmatcap_vert,fragmentShader:Je.meshmatcap_frag},points:{uniforms:Zn([Ie.points,Ie.fog]),vertexShader:Je.points_vert,fragmentShader:Je.points_frag},dashed:{uniforms:Zn([Ie.common,Ie.fog,{scale:{value:1},dashSize:{value:1},totalSize:{value:2}}]),vertexShader:Je.linedashed_vert,fragmentShader:Je.linedashed_frag},depth:{uniforms:Zn([Ie.common,Ie.displacementmap]),vertexShader:Je.depth_vert,fragmentShader:Je.depth_frag},normal:{uniforms:Zn([Ie.common,Ie.bumpmap,Ie.normalmap,Ie.displacementmap,{opacity:{value:1}}]),vertexShader:Je.meshnormal_vert,fragmentShader:Je.meshnormal_frag},sprite:{uniforms:Zn([Ie.sprite,Ie.fog]),vertexShader:Je.sprite_vert,fragmentShader:Je.sprite_frag},background:{uniforms:{uvTransform:{value:new gt},t2D:{value:null},backgroundIntensity:{value:1}},vertexShader:Je.background_vert,fragmentShader:Je.background_frag},backgroundCube:{uniforms:{envMap:{value:null},flipEnvMap:{value:-1},backgroundBlurriness:{value:0},backgroundIntensity:{value:1}},vertexShader:Je.backgroundCube_vert,fragmentShader:Je.backgroundCube_frag},cube:{uniforms:{tCube:{value:null},tFlip:{value:-1},opacity:{value:1}},vertexShader:Je.cube_vert,fragmentShader:Je.cube_frag},equirect:{uniforms:{tEquirect:{value:null}},vertexShader:Je.equirect_vert,fragmentShader:Je.equirect_frag},distanceRGBA:{uniforms:Zn([Ie.common,Ie.displacementmap,{referencePosition:{value:new I},nearDistance:{value:1},farDistance:{value:1e3}}]),vertexShader:Je.distanceRGBA_vert,fragmentShader:Je.distanceRGBA_frag},shadow:{uniforms:Zn([Ie.lights,Ie.fog,{color:{value:new be(0)},opacity:{value:1}}]),vertexShader:Je.shadow_vert,fragmentShader:Je.shadow_frag}};Vi.physical={uniforms:Zn([Vi.standard.uniforms,{clearcoat:{value:0},clearcoatMap:{value:null},clearcoatMapTransform:{value:new gt},clearcoatNormalMap:{value:null},clearcoatNormalMapTransform:{value:new gt},clearcoatNormalScale:{value:new K(1,1)},clearcoatRoughness:{value:0},clearcoatRoughnessMap:{value:null},clearcoatRoughnessMapTransform:{value:new gt},iridescence:{value:0},iridescenceMap:{value:null},iridescenceMapTransform:{value:new gt},iridescenceIOR:{value:1.3},iridescenceThicknessMinimum:{value:100},iridescenceThicknessMaximum:{value:400},iridescenceThicknessMap:{value:null},iridescenceThicknessMapTransform:{value:new gt},sheen:{value:0},sheenColor:{value:new be(0)},sheenColorMap:{value:null},sheenColorMapTransform:{value:new gt},sheenRoughness:{value:1},sheenRoughnessMap:{value:null},sheenRoughnessMapTransform:{value:new gt},transmission:{value:0},transmissionMap:{value:null},transmissionMapTransform:{value:new gt},transmissionSamplerSize:{value:new K},transmissionSamplerMap:{value:null},thickness:{value:0},thicknessMap:{value:null},thicknessMapTransform:{value:new gt},attenuationDistance:{value:0},attenuationColor:{value:new be(0)},specularColor:{value:new be(1,1,1)},specularColorMap:{value:null},specularColorMapTransform:{value:new gt},specularIntensity:{value:1},specularIntensityMap:{value:null},specularIntensityMapTransform:{value:new gt},anisotropyVector:{value:new K},anisotropyMap:{value:null},anisotropyMapTransform:{value:new gt}}]),vertexShader:Je.meshphysical_vert,fragmentShader:Je.meshphysical_frag};const nu={r:0,b:0,g:0};function gE(n,e,t,i,r,s,a){const c=new be(0);let u=s===!0?0:1,h,f,p=null,m=0,g=null;function y(S,x){let w=!1,M=x.isScene===!0?x.background:null;switch(M&&M.isTexture&&(M=(x.backgroundBlurriness>0?t:e).get(M)),M===null?T(c,u):M&&M.isColor&&(T(M,1),w=!0),n.xr.getEnvironmentBlendMode()){case"opaque":w=!0;break;case"additive":i.buffers.color.setClear(0,0,0,1,a),w=!0;break;case"alpha-blend":i.buffers.color.setClear(0,0,0,0,a),w=!0;break}(n.autoClear||w)&&n.clear(n.autoClearColor,n.autoClearDepth,n.autoClearStencil),M&&(M.isCubeTexture||M.mapping===no)?(f===void 0&&(f=new Tn(new js(1,1,1),new _t({name:"BackgroundCubeMaterial",uniforms:Ja(Vi.backgroundCube.uniforms),vertexShader:Vi.backgroundCube.vertexShader,fragmentShader:Vi.backgroundCube.fragmentShader,side:_n,depthTest:!1,depthWrite:!1,fog:!1})),f.geometry.deleteAttribute("normal"),f.geometry.deleteAttribute("uv"),f.onBeforeRender=function(C,L,U){this.matrixWorld.copyPosition(U.matrixWorld)},Object.defineProperty(f.material,"envMap",{get:function(){return this.uniforms.envMap.value}}),r.update(f)),f.material.uniforms.envMap.value=M,f.material.uniforms.flipEnvMap.value=M.isCubeTexture&&M.isRenderTargetTexture===!1?-1:1,f.material.uniforms.backgroundBlurriness.value=x.backgroundBlurriness,f.material.uniforms.backgroundIntensity.value=x.backgroundIntensity,f.material.toneMapped=M.colorSpace!==pt,(p!==M||m!==M.version||g!==n.toneMapping)&&(f.material.needsUpdate=!0,p=M,m=M.version,g=n.toneMapping),f.layers.enableAll(),S.unshift(f,f.geometry,f.material,0,0,null)):M&&M.isTexture&&(h===void 0&&(h=new Tn(new Il(2,2),new _t({name:"BackgroundMaterial",uniforms:Ja(Vi.background.uniforms),vertexShader:Vi.background.vertexShader,fragmentShader:Vi.background.fragmentShader,side:or,depthTest:!1,depthWrite:!1,fog:!1})),h.geometry.deleteAttribute("normal"),Object.defineProperty(h.material,"map",{get:function(){return this.uniforms.t2D.value}}),r.update(h)),h.material.uniforms.t2D.value=M,h.material.uniforms.backgroundIntensity.value=x.backgroundIntensity,h.material.toneMapped=M.colorSpace!==pt,M.matrixAutoUpdate===!0&&M.updateMatrix(),h.material.uniforms.uvTransform.value.copy(M.matrix),(p!==M||m!==M.version||g!==n.toneMapping)&&(h.material.needsUpdate=!0,p=M,m=M.version,g=n.toneMapping),h.layers.enableAll(),S.unshift(h,h.geometry,h.material,0,0,null))}function T(S,x){S.getRGB(nu,Dy(n)),i.buffers.color.setClear(nu.r,nu.g,nu.b,x,a)}return{getClearColor:function(){return c},setClearColor:function(S,x=1){c.set(S),u=x,T(c,u)},getClearAlpha:function(){return u},setClearAlpha:function(S){u=S,T(c,u)},render:y}}function vE(n,e,t,i){const r=n.getParameter(n.MAX_VERTEX_ATTRIBS),s=i.isWebGL2?null:e.get("OES_vertex_array_object"),a=i.isWebGL2||s!==null,c={},u=S(null);let h=u,f=!1;function p(J,ne,ue,ae,B){let X=!1;if(a){const Y=T(ae,ue,ne);h!==Y&&(h=Y,g(h.object)),X=x(J,ae,ue,B),X&&w(J,ae,ue,B)}else{const Y=ne.wireframe===!0;(h.geometry!==ae.id||h.program!==ue.id||h.wireframe!==Y)&&(h.geometry=ae.id,h.program=ue.id,h.wireframe=Y,X=!0)}B!==null&&t.update(B,n.ELEMENT_ARRAY_BUFFER),(X||f)&&(f=!1,U(J,ne,ue,ae),B!==null&&n.bindBuffer(n.ELEMENT_ARRAY_BUFFER,t.get(B).buffer))}function m(){return i.isWebGL2?n.createVertexArray():s.createVertexArrayOES()}function g(J){return i.isWebGL2?n.bindVertexArray(J):s.bindVertexArrayOES(J)}function y(J){return i.isWebGL2?n.deleteVertexArray(J):s.deleteVertexArrayOES(J)}function T(J,ne,ue){const ae=ue.wireframe===!0;let B=c[J.id];B===void 0&&(B={},c[J.id]=B);let X=B[ne.id];X===void 0&&(X={},B[ne.id]=X);let Y=X[ae];return Y===void 0&&(Y=S(m()),X[ae]=Y),Y}function S(J){const ne=[],ue=[],ae=[];for(let B=0;B<r;B++)ne[B]=0,ue[B]=0,ae[B]=0;return{geometry:null,program:null,wireframe:!1,newAttributes:ne,enabledAttributes:ue,attributeDivisors:ae,object:J,attributes:{},index:null}}function x(J,ne,ue,ae){const B=h.attributes,X=ne.attributes;let Y=0;const H=ue.getAttributes();for(const q in H)if(H[q].location>=0){const ge=B[q];let Pe=X[q];if(Pe===void 0&&(q==="instanceMatrix"&&J.instanceMatrix&&(Pe=J.instanceMatrix),q==="instanceColor"&&J.instanceColor&&(Pe=J.instanceColor)),ge===void 0||ge.attribute!==Pe||Pe&&ge.data!==Pe.data)return!0;Y++}return h.attributesNum!==Y||h.index!==ae}function w(J,ne,ue,ae){const B={},X=ne.attributes;let Y=0;const H=ue.getAttributes();for(const q in H)if(H[q].location>=0){let ge=X[q];ge===void 0&&(q==="instanceMatrix"&&J.instanceMatrix&&(ge=J.instanceMatrix),q==="instanceColor"&&J.instanceColor&&(ge=J.instanceColor));const Pe={};Pe.attribute=ge,ge&&ge.data&&(Pe.data=ge.data),B[q]=Pe,Y++}h.attributes=B,h.attributesNum=Y,h.index=ae}function M(){const J=h.newAttributes;for(let ne=0,ue=J.length;ne<ue;ne++)J[ne]=0}function b(J){P(J,0)}function P(J,ne){const ue=h.newAttributes,ae=h.enabledAttributes,B=h.attributeDivisors;ue[J]=1,ae[J]===0&&(n.enableVertexAttribArray(J),ae[J]=1),B[J]!==ne&&((i.isWebGL2?n:e.get("ANGLE_instanced_arrays"))[i.isWebGL2?"vertexAttribDivisor":"vertexAttribDivisorANGLE"](J,ne),B[J]=ne)}function C(){const J=h.newAttributes,ne=h.enabledAttributes;for(let ue=0,ae=ne.length;ue<ae;ue++)ne[ue]!==J[ue]&&(n.disableVertexAttribArray(ue),ne[ue]=0)}function L(J,ne,ue,ae,B,X,Y){Y===!0?n.vertexAttribIPointer(J,ne,ue,B,X):n.vertexAttribPointer(J,ne,ue,ae,B,X)}function U(J,ne,ue,ae){if(i.isWebGL2===!1&&(J.isInstancedMesh||ae.isInstancedBufferGeometry)&&e.get("ANGLE_instanced_arrays")===null)return;M();const B=ae.attributes,X=ue.getAttributes(),Y=ne.defaultAttributeValues;for(const H in X){const q=X[H];if(q.location>=0){let ye=B[H];if(ye===void 0&&(H==="instanceMatrix"&&J.instanceMatrix&&(ye=J.instanceMatrix),H==="instanceColor"&&J.instanceColor&&(ye=J.instanceColor)),ye!==void 0){const ge=ye.normalized,Pe=ye.itemSize,Ue=t.get(ye);if(Ue===void 0)continue;const He=Ue.buffer,je=Ue.type,Tt=Ue.bytesPerElement,Nt=i.isWebGL2===!0&&(je===n.INT||je===n.UNSIGNED_INT||ye.gpuType===Dp);if(ye.isInterleavedBufferAttribute){const Ye=ye.data,k=Ye.stride,xe=ye.offset;if(Ye.isInstancedInterleavedBuffer){for(let me=0;me<q.locationSize;me++)P(q.location+me,Ye.meshPerAttribute);J.isInstancedMesh!==!0&&ae._maxInstanceCount===void 0&&(ae._maxInstanceCount=Ye.meshPerAttribute*Ye.count)}else for(let me=0;me<q.locationSize;me++)b(q.location+me);n.bindBuffer(n.ARRAY_BUFFER,He);for(let me=0;me<q.locationSize;me++)L(q.location+me,Pe/q.locationSize,je,ge,k*Tt,(xe+Pe/q.locationSize*me)*Tt,Nt)}else{if(ye.isInstancedBufferAttribute){for(let Ye=0;Ye<q.locationSize;Ye++)P(q.location+Ye,ye.meshPerAttribute);J.isInstancedMesh!==!0&&ae._maxInstanceCount===void 0&&(ae._maxInstanceCount=ye.meshPerAttribute*ye.count)}else for(let Ye=0;Ye<q.locationSize;Ye++)b(q.location+Ye);n.bindBuffer(n.ARRAY_BUFFER,He);for(let Ye=0;Ye<q.locationSize;Ye++)L(q.location+Ye,Pe/q.locationSize,je,ge,Pe*Tt,Pe/q.locationSize*Ye*Tt,Nt)}}else if(Y!==void 0){const ge=Y[H];if(ge!==void 0)switch(ge.length){case 2:n.vertexAttrib2fv(q.location,ge);break;case 3:n.vertexAttrib3fv(q.location,ge);break;case 4:n.vertexAttrib4fv(q.location,ge);break;default:n.vertexAttrib1fv(q.location,ge)}}}}C()}function A(){te();for(const J in c){const ne=c[J];for(const ue in ne){const ae=ne[ue];for(const B in ae)y(ae[B].object),delete ae[B];delete ne[ue]}delete c[J]}}function R(J){if(c[J.id]===void 0)return;const ne=c[J.id];for(const ue in ne){const ae=ne[ue];for(const B in ae)y(ae[B].object),delete ae[B];delete ne[ue]}delete c[J.id]}function z(J){for(const ne in c){const ue=c[ne];if(ue[J.id]===void 0)continue;const ae=ue[J.id];for(const B in ae)y(ae[B].object),delete ae[B];delete ue[J.id]}}function te(){W(),f=!0,h!==u&&(h=u,g(h.object))}function W(){u.geometry=null,u.program=null,u.wireframe=!1}return{setup:p,reset:te,resetDefaultState:W,dispose:A,releaseStatesOfGeometry:R,releaseStatesOfProgram:z,initAttributes:M,enableAttribute:b,disableUnusedAttributes:C}}function xE(n,e,t,i){const r=i.isWebGL2;let s;function a(h){s=h}function c(h,f){n.drawArrays(s,h,f),t.update(f,s,1)}function u(h,f,p){if(p===0)return;let m,g;if(r)m=n,g="drawArraysInstanced";else if(m=e.get("ANGLE_instanced_arrays"),g="drawArraysInstancedANGLE",m===null){console.error("THREE.WebGLBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.");return}m[g](s,h,f,p),t.update(f,s,p)}this.setMode=a,this.render=c,this.renderInstances=u}function yE(n,e,t){let i;function r(){if(i!==void 0)return i;if(e.has("EXT_texture_filter_anisotropic")===!0){const L=e.get("EXT_texture_filter_anisotropic");i=n.getParameter(L.MAX_TEXTURE_MAX_ANISOTROPY_EXT)}else i=0;return i}function s(L){if(L==="highp"){if(n.getShaderPrecisionFormat(n.VERTEX_SHADER,n.HIGH_FLOAT).precision>0&&n.getShaderPrecisionFormat(n.FRAGMENT_SHADER,n.HIGH_FLOAT).precision>0)return"highp";L="mediump"}return L==="mediump"&&n.getShaderPrecisionFormat(n.VERTEX_SHADER,n.MEDIUM_FLOAT).precision>0&&n.getShaderPrecisionFormat(n.FRAGMENT_SHADER,n.MEDIUM_FLOAT).precision>0?"mediump":"lowp"}const a=typeof WebGL2RenderingContext<"u"&&n.constructor.name==="WebGL2RenderingContext";let c=t.precision!==void 0?t.precision:"highp";const u=s(c);u!==c&&(console.warn("THREE.WebGLRenderer:",c,"not supported, using",u,"instead."),c=u);const h=a||e.has("WEBGL_draw_buffers"),f=t.logarithmicDepthBuffer===!0,p=n.getParameter(n.MAX_TEXTURE_IMAGE_UNITS),m=n.getParameter(n.MAX_VERTEX_TEXTURE_IMAGE_UNITS),g=n.getParameter(n.MAX_TEXTURE_SIZE),y=n.getParameter(n.MAX_CUBE_MAP_TEXTURE_SIZE),T=n.getParameter(n.MAX_VERTEX_ATTRIBS),S=n.getParameter(n.MAX_VERTEX_UNIFORM_VECTORS),x=n.getParameter(n.MAX_VARYING_VECTORS),w=n.getParameter(n.MAX_FRAGMENT_UNIFORM_VECTORS),M=m>0,b=a||e.has("OES_texture_float"),P=M&&b,C=a?n.getParameter(n.MAX_SAMPLES):0;return{isWebGL2:a,drawBuffers:h,getMaxAnisotropy:r,getMaxPrecision:s,precision:c,logarithmicDepthBuffer:f,maxTextures:p,maxVertexTextures:m,maxTextureSize:g,maxCubemapSize:y,maxAttributes:T,maxVertexUniforms:S,maxVaryings:x,maxFragmentUniforms:w,vertexTextures:M,floatFragmentTextures:b,floatVertexTextures:P,maxSamples:C}}function SE(n){const e=this;let t=null,i=0,r=!1,s=!1;const a=new jr,c=new gt,u={value:null,needsUpdate:!1};this.uniform=u,this.numPlanes=0,this.numIntersection=0,this.init=function(p,m){const g=p.length!==0||m||i!==0||r;return r=m,i=p.length,g},this.beginShadows=function(){s=!0,f(null)},this.endShadows=function(){s=!1},this.setGlobalState=function(p,m){t=f(p,m,0)},this.setState=function(p,m,g){const y=p.clippingPlanes,T=p.clipIntersection,S=p.clipShadows,x=n.get(p);if(!r||y===null||y.length===0||s&&!S)s?f(null):h();else{const w=s?0:i,M=w*4;let b=x.clippingState||null;u.value=b,b=f(y,m,M,g);for(let P=0;P!==M;++P)b[P]=t[P];x.clippingState=b,this.numIntersection=T?this.numPlanes:0,this.numPlanes+=w}};function h(){u.value!==t&&(u.value=t,u.needsUpdate=i>0),e.numPlanes=i,e.numIntersection=0}function f(p,m,g,y){const T=p!==null?p.length:0;let S=null;if(T!==0){if(S=u.value,y!==!0||S===null){const x=g+T*4,w=m.matrixWorldInverse;c.getNormalMatrix(w),(S===null||S.length<x)&&(S=new Float32Array(x));for(let M=0,b=g;M!==T;++M,b+=4)a.copy(p[M]).applyMatrix4(w,c),a.normal.toArray(S,b),S[b+3]=a.constant}u.value=S,u.needsUpdate=!0}return e.numPlanes=T,e.numIntersection=0,S}}function ME(n){let e=new WeakMap;function t(a,c){return c===hl?a.mapping=Jr:c===fl&&(a.mapping=$r),a}function i(a){if(a&&a.isTexture&&a.isRenderTargetTexture===!1){const c=a.mapping;if(c===hl||c===fl)if(e.has(a)){const u=e.get(a).texture;return t(u,a.mapping)}else{const u=a.image;if(u&&u.height>0){const h=new rh(u.height/2);return h.fromEquirectangularTexture(n,a),e.set(a,h),a.addEventListener("dispose",r),t(h.texture,a.mapping)}else return null}}return a}function r(a){const c=a.target;c.removeEventListener("dispose",r);const u=e.get(c);u!==void 0&&(e.delete(c),u.dispose())}function s(){e=new WeakMap}return{get:i,dispose:s}}class Pr extends so{constructor(e=-1,t=1,i=1,r=-1,s=.1,a=2e3){super(),this.isOrthographicCamera=!0,this.type="OrthographicCamera",this.zoom=1,this.view=null,this.left=e,this.right=t,this.top=i,this.bottom=r,this.near=s,this.far=a,this.updateProjectionMatrix()}copy(e,t){return super.copy(e,t),this.left=e.left,this.right=e.right,this.top=e.top,this.bottom=e.bottom,this.near=e.near,this.far=e.far,this.zoom=e.zoom,this.view=e.view===null?null:Object.assign({},e.view),this}setViewOffset(e,t,i,r,s,a){this.view===null&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=e,this.view.fullHeight=t,this.view.offsetX=i,this.view.offsetY=r,this.view.width=s,this.view.height=a,this.updateProjectionMatrix()}clearViewOffset(){this.view!==null&&(this.view.enabled=!1),this.updateProjectionMatrix()}updateProjectionMatrix(){const e=(this.right-this.left)/(2*this.zoom),t=(this.top-this.bottom)/(2*this.zoom),i=(this.right+this.left)/2,r=(this.top+this.bottom)/2;let s=i-e,a=i+e,c=r+t,u=r-t;if(this.view!==null&&this.view.enabled){const h=(this.right-this.left)/this.view.fullWidth/this.zoom,f=(this.top-this.bottom)/this.view.fullHeight/this.zoom;s+=h*this.view.offsetX,a=s+h*this.view.width,c-=f*this.view.offsetY,u=c-f*this.view.height}this.projectionMatrix.makeOrthographic(s,a,c,u,this.near,this.far,this.coordinateSystem),this.projectionMatrixInverse.copy(this.projectionMatrix).invert()}toJSON(e){const t=super.toJSON(e);return t.object.zoom=this.zoom,t.object.left=this.left,t.object.right=this.right,t.object.top=this.top,t.object.bottom=this.bottom,t.object.near=this.near,t.object.far=this.far,this.view!==null&&(t.object.view=Object.assign({},this.view)),t}}const Ga=4,Mv=[.125,.215,.35,.446,.526,.582],Ls=20,id=new Pr,_v=new be;let rd=null;const Cs=(1+Math.sqrt(5))/2,Ca=1/Cs,Tv=[new I(1,1,1),new I(-1,1,1),new I(1,1,-1),new I(-1,1,-1),new I(0,Cs,Ca),new I(0,Cs,-Ca),new I(Ca,0,Cs),new I(-Ca,0,Cs),new I(Cs,Ca,0),new I(-Cs,Ca,0)];class qu{constructor(e){this._renderer=e,this._pingPongRenderTarget=null,this._lodMax=0,this._cubeSize=0,this._lodPlanes=[],this._sizeLods=[],this._sigmas=[],this._blurMaterial=null,this._cubemapMaterial=null,this._equirectMaterial=null,this._compileMaterial(this._blurMaterial)}fromScene(e,t=0,i=.1,r=100){rd=this._renderer.getRenderTarget(),this._setSize(256);const s=this._allocateTargets();return s.depthBuffer=!0,this._sceneToCubeUV(e,i,r,s),t>0&&this._blur(s,0,0,t),this._applyPMREM(s),this._cleanup(s),s}fromEquirectangular(e,t=null){return this._fromTexture(e,t)}fromCubemap(e,t=null){return this._fromTexture(e,t)}compileCubemapShader(){this._cubemapMaterial===null&&(this._cubemapMaterial=bv(),this._compileMaterial(this._cubemapMaterial))}compileEquirectangularShader(){this._equirectMaterial===null&&(this._equirectMaterial=Ev(),this._compileMaterial(this._equirectMaterial))}dispose(){this._dispose(),this._cubemapMaterial!==null&&this._cubemapMaterial.dispose(),this._equirectMaterial!==null&&this._equirectMaterial.dispose()}_setSize(e){this._lodMax=Math.floor(Math.log2(e)),this._cubeSize=Math.pow(2,this._lodMax)}_dispose(){this._blurMaterial!==null&&this._blurMaterial.dispose(),this._pingPongRenderTarget!==null&&this._pingPongRenderTarget.dispose();for(let e=0;e<this._lodPlanes.length;e++)this._lodPlanes[e].dispose()}_cleanup(e){this._renderer.setRenderTarget(rd),e.scissorTest=!1,iu(e,0,0,e.width,e.height)}_fromTexture(e,t){e.mapping===Jr||e.mapping===$r?this._setSize(e.image.length===0?16:e.image[0].width||e.image[0].image.width):this._setSize(e.image.width/4),rd=this._renderer.getRenderTarget();const i=t||this._allocateTargets();return this._textureToCubeUV(e,i),this._applyPMREM(i),this._cleanup(i),i}_allocateTargets(){const e=3*Math.max(this._cubeSize,112),t=4*this._cubeSize,i={magFilter:Qe,minFilter:Qe,generateMipmaps:!1,type:ii,format:Qt,colorSpace:Yi,depthBuffer:!1},r=wv(e,t,i);if(this._pingPongRenderTarget===null||this._pingPongRenderTarget.width!==e||this._pingPongRenderTarget.height!==t){this._pingPongRenderTarget!==null&&this._dispose(),this._pingPongRenderTarget=wv(e,t,i);const{_lodMax:s}=this;({sizeLods:this._sizeLods,lodPlanes:this._lodPlanes,sigmas:this._sigmas}=_E(s)),this._blurMaterial=TE(s,e,t)}return r}_compileMaterial(e){const t=new Tn(this._lodPlanes[0],e);this._renderer.compile(t,id)}_sceneToCubeUV(e,t,i,r){const c=new Yt(90,1,t,i),u=[1,-1,1,1,1,1],h=[1,1,1,-1,-1,-1],f=this._renderer,p=f.autoClear,m=f.toneMapping;f.getClearColor(_v),f.toneMapping=Wi,f.autoClear=!1;const g=new rs({name:"PMREM.Background",side:_n,depthWrite:!1,depthTest:!1}),y=new Tn(new js,g);let T=!1;const S=e.background;S?S.isColor&&(g.color.copy(S),e.background=null,T=!0):(g.color.copy(_v),T=!0);for(let x=0;x<6;x++){const w=x%3;w===0?(c.up.set(0,u[x],0),c.lookAt(h[x],0,0)):w===1?(c.up.set(0,0,u[x]),c.lookAt(0,h[x],0)):(c.up.set(0,u[x],0),c.lookAt(0,0,h[x]));const M=this._cubeSize;iu(r,w*M,x>2?M:0,M,M),f.setRenderTarget(r),T&&f.render(y,c),f.render(e,c)}y.geometry.dispose(),y.material.dispose(),f.toneMapping=m,f.autoClear=p,e.background=S}_textureToCubeUV(e,t){const i=this._renderer,r=e.mapping===Jr||e.mapping===$r;r?(this._cubemapMaterial===null&&(this._cubemapMaterial=bv()),this._cubemapMaterial.uniforms.flipEnvMap.value=e.isRenderTargetTexture===!1?-1:1):this._equirectMaterial===null&&(this._equirectMaterial=Ev());const s=r?this._cubemapMaterial:this._equirectMaterial,a=new Tn(this._lodPlanes[0],s),c=s.uniforms;c.envMap.value=e;const u=this._cubeSize;iu(t,0,0,3*u,2*u),i.setRenderTarget(t),i.render(a,id)}_applyPMREM(e){const t=this._renderer,i=t.autoClear;t.autoClear=!1;for(let r=1;r<this._lodPlanes.length;r++){const s=Math.sqrt(this._sigmas[r]*this._sigmas[r]-this._sigmas[r-1]*this._sigmas[r-1]),a=Tv[(r-1)%Tv.length];this._blur(e,r-1,r,s,a)}t.autoClear=i}_blur(e,t,i,r,s){const a=this._pingPongRenderTarget;this._halfBlur(e,a,t,i,r,"latitudinal",s),this._halfBlur(a,e,i,i,r,"longitudinal",s)}_halfBlur(e,t,i,r,s,a,c){const u=this._renderer,h=this._blurMaterial;a!=="latitudinal"&&a!=="longitudinal"&&console.error("blur direction must be either latitudinal or longitudinal!");const f=3,p=new Tn(this._lodPlanes[r],h),m=h.uniforms,g=this._sizeLods[i]-1,y=isFinite(s)?Math.PI/(2*g):2*Math.PI/(2*Ls-1),T=s/y,S=isFinite(s)?1+Math.floor(f*T):Ls;S>Ls&&console.warn(`sigmaRadians, ${s}, is too large and will clip, as it requested ${S} samples when the maximum is set to ${Ls}`);const x=[];let w=0;for(let L=0;L<Ls;++L){const U=L/T,A=Math.exp(-U*U/2);x.push(A),L===0?w+=A:L<S&&(w+=2*A)}for(let L=0;L<x.length;L++)x[L]=x[L]/w;m.envMap.value=e.texture,m.samples.value=S,m.weights.value=x,m.latitudinal.value=a==="latitudinal",c&&(m.poleAxis.value=c);const{_lodMax:M}=this;m.dTheta.value=y,m.mipInt.value=M-i;const b=this._sizeLods[r],P=3*b*(r>M-Ga?r-M+Ga:0),C=4*(this._cubeSize-b);iu(t,P,C,3*b,2*b),u.setRenderTarget(t),u.render(p,id)}}function _E(n){const e=[],t=[],i=[];let r=n;const s=n-Ga+1+Mv.length;for(let a=0;a<s;a++){const c=Math.pow(2,r);t.push(c);let u=1/c;a>n-Ga?u=Mv[a-n+Ga-1]:a===0&&(u=0),i.push(u);const h=1/(c-2),f=-h,p=1+h,m=[f,f,p,f,p,p,f,f,p,p,f,p],g=6,y=6,T=3,S=2,x=1,w=new Float32Array(T*y*g),M=new Float32Array(S*y*g),b=new Float32Array(x*y*g);for(let C=0;C<g;C++){const L=C%3*2/3-1,U=C>2?0:-1,A=[L,U,0,L+2/3,U,0,L+2/3,U+1,0,L,U,0,L+2/3,U+1,0,L,U+1,0];w.set(A,T*y*C),M.set(m,S*y*C);const R=[C,C,C,C,C,C];b.set(R,x*y*C)}const P=new mt;P.setAttribute("position",new Ct(w,T)),P.setAttribute("uv",new Ct(M,S)),P.setAttribute("faceIndex",new Ct(b,x)),e.push(P),r>Ga&&r--}return{lodPlanes:e,sizeLods:t,sigmas:i}}function wv(n,e,t){const i=new wt(n,e,t);return i.texture.mapping=no,i.texture.name="PMREM.cubeUv",i.scissorTest=!0,i}function iu(n,e,t,i,r){n.viewport.set(e,t,i,r),n.scissor.set(e,t,i,r)}function TE(n,e,t){const i=new Float32Array(Ls),r=new I(0,1,0);return new _t({name:"SphericalGaussianBlur",defines:{n:Ls,CUBEUV_TEXEL_WIDTH:1/e,CUBEUV_TEXEL_HEIGHT:1/t,CUBEUV_MAX_MIP:`${n}.0`},uniforms:{envMap:{value:null},samples:{value:1},weights:{value:i},latitudinal:{value:!1},dTheta:{value:0},mipInt:{value:0},poleAxis:{value:r}},vertexShader:Yp(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			varying vec3 vOutputDirection;

			uniform sampler2D envMap;
			uniform int samples;
			uniform float weights[ n ];
			uniform bool latitudinal;
			uniform float dTheta;
			uniform float mipInt;
			uniform vec3 poleAxis;

			#define ENVMAP_TYPE_CUBE_UV
			#include <cube_uv_reflection_fragment>

			vec3 getSample( float theta, vec3 axis ) {

				float cosTheta = cos( theta );
				// Rodrigues' axis-angle rotation
				vec3 sampleDirection = vOutputDirection * cosTheta
					+ cross( axis, vOutputDirection ) * sin( theta )
					+ axis * dot( axis, vOutputDirection ) * ( 1.0 - cosTheta );

				return bilinearCubeUV( envMap, sampleDirection, mipInt );

			}

			void main() {

				vec3 axis = latitudinal ? poleAxis : cross( poleAxis, vOutputDirection );

				if ( all( equal( axis, vec3( 0.0 ) ) ) ) {

					axis = vec3( vOutputDirection.z, 0.0, - vOutputDirection.x );

				}

				axis = normalize( axis );

				gl_FragColor = vec4( 0.0, 0.0, 0.0, 1.0 );
				gl_FragColor.rgb += weights[ 0 ] * getSample( 0.0, axis );

				for ( int i = 1; i < n; i++ ) {

					if ( i >= samples ) {

						break;

					}

					float theta = dTheta * float( i );
					gl_FragColor.rgb += weights[ i ] * getSample( -1.0 * theta, axis );
					gl_FragColor.rgb += weights[ i ] * getSample( theta, axis );

				}

			}
		`,blending:Jt,depthTest:!1,depthWrite:!1})}function Ev(){return new _t({name:"EquirectangularToCubeUV",uniforms:{envMap:{value:null}},vertexShader:Yp(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			varying vec3 vOutputDirection;

			uniform sampler2D envMap;

			#include <common>

			void main() {

				vec3 outputDirection = normalize( vOutputDirection );
				vec2 uv = equirectUv( outputDirection );

				gl_FragColor = vec4( texture2D ( envMap, uv ).rgb, 1.0 );

			}
		`,blending:Jt,depthTest:!1,depthWrite:!1})}function bv(){return new _t({name:"CubemapToCubeUV",uniforms:{envMap:{value:null},flipEnvMap:{value:-1}},vertexShader:Yp(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			uniform float flipEnvMap;

			varying vec3 vOutputDirection;

			uniform samplerCube envMap;

			void main() {

				gl_FragColor = textureCube( envMap, vec3( flipEnvMap * vOutputDirection.x, vOutputDirection.yz ) );

			}
		`,blending:Jt,depthTest:!1,depthWrite:!1})}function Yp(){return`

		precision mediump float;
		precision mediump int;

		attribute float faceIndex;

		varying vec3 vOutputDirection;

		// RH coordinate system; PMREM face-indexing convention
		vec3 getDirection( vec2 uv, float face ) {

			uv = 2.0 * uv - 1.0;

			vec3 direction = vec3( uv, 1.0 );

			if ( face == 0.0 ) {

				direction = direction.zyx; // ( 1, v, u ) pos x

			} else if ( face == 1.0 ) {

				direction = direction.xzy;
				direction.xz *= -1.0; // ( -u, 1, -v ) pos y

			} else if ( face == 2.0 ) {

				direction.x *= -1.0; // ( -u, v, 1 ) pos z

			} else if ( face == 3.0 ) {

				direction = direction.zyx;
				direction.xz *= -1.0; // ( -1, v, -u ) neg x

			} else if ( face == 4.0 ) {

				direction = direction.xzy;
				direction.xy *= -1.0; // ( -u, -1, v ) neg y

			} else if ( face == 5.0 ) {

				direction.z *= -1.0; // ( u, v, -1 ) neg z

			}

			return direction;

		}

		void main() {

			vOutputDirection = getDirection( uv, faceIndex );
			gl_Position = vec4( position, 1.0 );

		}
	`}function wE(n){let e=new WeakMap,t=null;function i(c){if(c&&c.isTexture){const u=c.mapping,h=u===hl||u===fl,f=u===Jr||u===$r;if(h||f)if(c.isRenderTargetTexture&&c.needsPMREMUpdate===!0){c.needsPMREMUpdate=!1;let p=e.get(c);return t===null&&(t=new qu(n)),p=h?t.fromEquirectangular(c,p):t.fromCubemap(c,p),e.set(c,p),p.texture}else{if(e.has(c))return e.get(c).texture;{const p=c.image;if(h&&p&&p.height>0||f&&p&&r(p)){t===null&&(t=new qu(n));const m=h?t.fromEquirectangular(c):t.fromCubemap(c);return e.set(c,m),c.addEventListener("dispose",s),m.texture}else return null}}}return c}function r(c){let u=0;const h=6;for(let f=0;f<h;f++)c[f]!==void 0&&u++;return u===h}function s(c){const u=c.target;u.removeEventListener("dispose",s);const h=e.get(u);h!==void 0&&(e.delete(u),h.dispose())}function a(){e=new WeakMap,t!==null&&(t.dispose(),t=null)}return{get:i,dispose:a}}function EE(n){const e={};function t(i){if(e[i]!==void 0)return e[i];let r;switch(i){case"WEBGL_depth_texture":r=n.getExtension("WEBGL_depth_texture")||n.getExtension("MOZ_WEBGL_depth_texture")||n.getExtension("WEBKIT_WEBGL_depth_texture");break;case"EXT_texture_filter_anisotropic":r=n.getExtension("EXT_texture_filter_anisotropic")||n.getExtension("MOZ_EXT_texture_filter_anisotropic")||n.getExtension("WEBKIT_EXT_texture_filter_anisotropic");break;case"WEBGL_compressed_texture_s3tc":r=n.getExtension("WEBGL_compressed_texture_s3tc")||n.getExtension("MOZ_WEBGL_compressed_texture_s3tc")||n.getExtension("WEBKIT_WEBGL_compressed_texture_s3tc");break;case"WEBGL_compressed_texture_pvrtc":r=n.getExtension("WEBGL_compressed_texture_pvrtc")||n.getExtension("WEBKIT_WEBGL_compressed_texture_pvrtc");break;default:r=n.getExtension(i)}return e[i]=r,r}return{has:function(i){return t(i)!==null},init:function(i){i.isWebGL2?t("EXT_color_buffer_float"):(t("WEBGL_depth_texture"),t("OES_texture_float"),t("OES_texture_half_float"),t("OES_texture_half_float_linear"),t("OES_standard_derivatives"),t("OES_element_index_uint"),t("OES_vertex_array_object"),t("ANGLE_instanced_arrays")),t("OES_texture_float_linear"),t("EXT_color_buffer_half_float"),t("WEBGL_multisampled_render_to_texture")},get:function(i){const r=t(i);return r===null&&console.warn("THREE.WebGLRenderer: "+i+" extension not supported."),r}}}function bE(n,e,t,i){const r={},s=new WeakMap;function a(p){const m=p.target;m.index!==null&&e.remove(m.index);for(const y in m.attributes)e.remove(m.attributes[y]);for(const y in m.morphAttributes){const T=m.morphAttributes[y];for(let S=0,x=T.length;S<x;S++)e.remove(T[S])}m.removeEventListener("dispose",a),delete r[m.id];const g=s.get(m);g&&(e.remove(g),s.delete(m)),i.releaseStatesOfGeometry(m),m.isInstancedBufferGeometry===!0&&delete m._maxInstanceCount,t.memory.geometries--}function c(p,m){return r[m.id]===!0||(m.addEventListener("dispose",a),r[m.id]=!0,t.memory.geometries++),m}function u(p){const m=p.attributes;for(const y in m)e.update(m[y],n.ARRAY_BUFFER);const g=p.morphAttributes;for(const y in g){const T=g[y];for(let S=0,x=T.length;S<x;S++)e.update(T[S],n.ARRAY_BUFFER)}}function h(p){const m=[],g=p.index,y=p.attributes.position;let T=0;if(g!==null){const w=g.array;T=g.version;for(let M=0,b=w.length;M<b;M+=3){const P=w[M+0],C=w[M+1],L=w[M+2];m.push(P,C,C,L,L,P)}}else{const w=y.array;T=y.version;for(let M=0,b=w.length/3-1;M<b;M+=3){const P=M+0,C=M+1,L=M+2;m.push(P,C,C,L,L,P)}}const S=new(Cy(m)?Wp:Gp)(m,1);S.version=T;const x=s.get(p);x&&e.remove(x),s.set(p,S)}function f(p){const m=s.get(p);if(m){const g=p.index;g!==null&&m.version<g.version&&h(p)}else h(p);return s.get(p)}return{get:c,update:u,getWireframeAttribute:f}}function AE(n,e,t,i){const r=i.isWebGL2;let s;function a(m){s=m}let c,u;function h(m){c=m.type,u=m.bytesPerElement}function f(m,g){n.drawElements(s,g,c,m*u),t.update(g,s,1)}function p(m,g,y){if(y===0)return;let T,S;if(r)T=n,S="drawElementsInstanced";else if(T=e.get("ANGLE_instanced_arrays"),S="drawElementsInstancedANGLE",T===null){console.error("THREE.WebGLIndexedBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.");return}T[S](s,g,c,m*u,y),t.update(g,s,y)}this.setMode=a,this.setIndex=h,this.render=f,this.renderInstances=p}function PE(n){const e={geometries:0,textures:0},t={frame:0,calls:0,triangles:0,points:0,lines:0};function i(s,a,c){switch(t.calls++,a){case n.TRIANGLES:t.triangles+=c*(s/3);break;case n.LINES:t.lines+=c*(s/2);break;case n.LINE_STRIP:t.lines+=c*(s-1);break;case n.LINE_LOOP:t.lines+=c*s;break;case n.POINTS:t.points+=c*s;break;default:console.error("THREE.WebGLInfo: Unknown draw mode:",a);break}}function r(){t.calls=0,t.triangles=0,t.points=0,t.lines=0}return{memory:e,render:t,programs:null,autoReset:!0,reset:r,update:i}}function CE(n,e){return n[0]-e[0]}function RE(n,e){return Math.abs(e[1])-Math.abs(n[1])}function DE(n,e,t){const i={},r=new Float32Array(8),s=new WeakMap,a=new Et,c=[];for(let h=0;h<8;h++)c[h]=[h,0];function u(h,f,p){const m=h.morphTargetInfluences;if(e.isWebGL2===!0){const g=f.morphAttributes.position||f.morphAttributes.normal||f.morphAttributes.color,y=g!==void 0?g.length:0;let T=s.get(f);if(T===void 0||T.count!==y){let J=function(){te.dispose(),s.delete(f),f.removeEventListener("dispose",J)};T!==void 0&&T.texture.dispose();const w=f.morphAttributes.position!==void 0,M=f.morphAttributes.normal!==void 0,b=f.morphAttributes.color!==void 0,P=f.morphAttributes.position||[],C=f.morphAttributes.normal||[],L=f.morphAttributes.color||[];let U=0;w===!0&&(U=1),M===!0&&(U=2),b===!0&&(U=3);let A=f.attributes.position.count*U,R=1;A>e.maxTextureSize&&(R=Math.ceil(A/e.maxTextureSize),A=e.maxTextureSize);const z=new Float32Array(A*R*4*y),te=new ih(z,A,R,y);te.type=tn,te.needsUpdate=!0;const W=U*4;for(let ne=0;ne<y;ne++){const ue=P[ne],ae=C[ne],B=L[ne],X=A*R*4*ne;for(let Y=0;Y<ue.count;Y++){const H=Y*W;w===!0&&(a.fromBufferAttribute(ue,Y),z[X+H+0]=a.x,z[X+H+1]=a.y,z[X+H+2]=a.z,z[X+H+3]=0),M===!0&&(a.fromBufferAttribute(ae,Y),z[X+H+4]=a.x,z[X+H+5]=a.y,z[X+H+6]=a.z,z[X+H+7]=0),b===!0&&(a.fromBufferAttribute(B,Y),z[X+H+8]=a.x,z[X+H+9]=a.y,z[X+H+10]=a.z,z[X+H+11]=B.itemSize===4?a.w:1)}}T={count:y,texture:te,size:new K(A,R)},s.set(f,T),f.addEventListener("dispose",J)}let S=0;for(let w=0;w<m.length;w++)S+=m[w];const x=f.morphTargetsRelative?1:1-S;p.getUniforms().setValue(n,"morphTargetBaseInfluence",x),p.getUniforms().setValue(n,"morphTargetInfluences",m),p.getUniforms().setValue(n,"morphTargetsTexture",T.texture,t),p.getUniforms().setValue(n,"morphTargetsTextureSize",T.size)}else{const g=m===void 0?0:m.length;let y=i[f.id];if(y===void 0||y.length!==g){y=[];for(let M=0;M<g;M++)y[M]=[M,0];i[f.id]=y}for(let M=0;M<g;M++){const b=y[M];b[0]=M,b[1]=m[M]}y.sort(RE);for(let M=0;M<8;M++)M<g&&y[M][1]?(c[M][0]=y[M][0],c[M][1]=y[M][1]):(c[M][0]=Number.MAX_SAFE_INTEGER,c[M][1]=0);c.sort(CE);const T=f.morphAttributes.position,S=f.morphAttributes.normal;let x=0;for(let M=0;M<8;M++){const b=c[M],P=b[0],C=b[1];P!==Number.MAX_SAFE_INTEGER&&C?(T&&f.getAttribute("morphTarget"+M)!==T[P]&&f.setAttribute("morphTarget"+M,T[P]),S&&f.getAttribute("morphNormal"+M)!==S[P]&&f.setAttribute("morphNormal"+M,S[P]),r[M]=C,x+=C):(T&&f.hasAttribute("morphTarget"+M)===!0&&f.deleteAttribute("morphTarget"+M),S&&f.hasAttribute("morphNormal"+M)===!0&&f.deleteAttribute("morphNormal"+M),r[M]=0)}const w=f.morphTargetsRelative?1:1-x;p.getUniforms().setValue(n,"morphTargetBaseInfluence",w),p.getUniforms().setValue(n,"morphTargetInfluences",r)}}return{update:u}}function LE(n,e,t,i){let r=new WeakMap;function s(u){const h=i.render.frame,f=u.geometry,p=e.get(u,f);if(r.get(p)!==h&&(e.update(p),r.set(p,h)),u.isInstancedMesh&&(u.hasEventListener("dispose",c)===!1&&u.addEventListener("dispose",c),r.get(u)!==h&&(t.update(u.instanceMatrix,n.ARRAY_BUFFER),u.instanceColor!==null&&t.update(u.instanceColor,n.ARRAY_BUFFER),r.set(u,h))),u.isSkinnedMesh){const m=u.skeleton;r.get(m)!==h&&(m.update(),r.set(m,h))}return p}function a(){r=new WeakMap}function c(u){const h=u.target;h.removeEventListener("dispose",c),t.remove(h.instanceMatrix),h.instanceColor!==null&&t.remove(h.instanceColor)}return{update:s,dispose:a}}const Uy=new Zt,Ny=new ih,Fy=new Vs,Oy=new Ll,Av=[],Pv=[],Cv=new Float32Array(16),Rv=new Float32Array(9),Dv=new Float32Array(4);function ao(n,e,t){const i=n[0];if(i<=0||i>0)return n;const r=e*t;let s=Av[r];if(s===void 0&&(s=new Float32Array(r),Av[r]=s),e!==0){i.toArray(s,0);for(let a=1,c=0;a!==e;++a)c+=t,n[a].toArray(s,c)}return s}function bn(n,e){if(n.length!==e.length)return!1;for(let t=0,i=n.length;t<i;t++)if(n[t]!==e[t])return!1;return!0}function An(n,e){for(let t=0,i=e.length;t<i;t++)n[t]=e[t]}function ah(n,e){let t=Pv[e];t===void 0&&(t=new Int32Array(e),Pv[e]=t);for(let i=0;i!==e;++i)t[i]=n.allocateTextureUnit();return t}function IE(n,e){const t=this.cache;t[0]!==e&&(n.uniform1f(this.addr,e),t[0]=e)}function UE(n,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y)&&(n.uniform2f(this.addr,e.x,e.y),t[0]=e.x,t[1]=e.y);else{if(bn(t,e))return;n.uniform2fv(this.addr,e),An(t,e)}}function NE(n,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y||t[2]!==e.z)&&(n.uniform3f(this.addr,e.x,e.y,e.z),t[0]=e.x,t[1]=e.y,t[2]=e.z);else if(e.r!==void 0)(t[0]!==e.r||t[1]!==e.g||t[2]!==e.b)&&(n.uniform3f(this.addr,e.r,e.g,e.b),t[0]=e.r,t[1]=e.g,t[2]=e.b);else{if(bn(t,e))return;n.uniform3fv(this.addr,e),An(t,e)}}function FE(n,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y||t[2]!==e.z||t[3]!==e.w)&&(n.uniform4f(this.addr,e.x,e.y,e.z,e.w),t[0]=e.x,t[1]=e.y,t[2]=e.z,t[3]=e.w);else{if(bn(t,e))return;n.uniform4fv(this.addr,e),An(t,e)}}function OE(n,e){const t=this.cache,i=e.elements;if(i===void 0){if(bn(t,e))return;n.uniformMatrix2fv(this.addr,!1,e),An(t,e)}else{if(bn(t,i))return;Dv.set(i),n.uniformMatrix2fv(this.addr,!1,Dv),An(t,i)}}function BE(n,e){const t=this.cache,i=e.elements;if(i===void 0){if(bn(t,e))return;n.uniformMatrix3fv(this.addr,!1,e),An(t,e)}else{if(bn(t,i))return;Rv.set(i),n.uniformMatrix3fv(this.addr,!1,Rv),An(t,i)}}function zE(n,e){const t=this.cache,i=e.elements;if(i===void 0){if(bn(t,e))return;n.uniformMatrix4fv(this.addr,!1,e),An(t,e)}else{if(bn(t,i))return;Cv.set(i),n.uniformMatrix4fv(this.addr,!1,Cv),An(t,i)}}function kE(n,e){const t=this.cache;t[0]!==e&&(n.uniform1i(this.addr,e),t[0]=e)}function HE(n,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y)&&(n.uniform2i(this.addr,e.x,e.y),t[0]=e.x,t[1]=e.y);else{if(bn(t,e))return;n.uniform2iv(this.addr,e),An(t,e)}}function VE(n,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y||t[2]!==e.z)&&(n.uniform3i(this.addr,e.x,e.y,e.z),t[0]=e.x,t[1]=e.y,t[2]=e.z);else{if(bn(t,e))return;n.uniform3iv(this.addr,e),An(t,e)}}function GE(n,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y||t[2]!==e.z||t[3]!==e.w)&&(n.uniform4i(this.addr,e.x,e.y,e.z,e.w),t[0]=e.x,t[1]=e.y,t[2]=e.z,t[3]=e.w);else{if(bn(t,e))return;n.uniform4iv(this.addr,e),An(t,e)}}function WE(n,e){const t=this.cache;t[0]!==e&&(n.uniform1ui(this.addr,e),t[0]=e)}function XE(n,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y)&&(n.uniform2ui(this.addr,e.x,e.y),t[0]=e.x,t[1]=e.y);else{if(bn(t,e))return;n.uniform2uiv(this.addr,e),An(t,e)}}function YE(n,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y||t[2]!==e.z)&&(n.uniform3ui(this.addr,e.x,e.y,e.z),t[0]=e.x,t[1]=e.y,t[2]=e.z);else{if(bn(t,e))return;n.uniform3uiv(this.addr,e),An(t,e)}}function ZE(n,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y||t[2]!==e.z||t[3]!==e.w)&&(n.uniform4ui(this.addr,e.x,e.y,e.z,e.w),t[0]=e.x,t[1]=e.y,t[2]=e.z,t[3]=e.w);else{if(bn(t,e))return;n.uniform4uiv(this.addr,e),An(t,e)}}function qE(n,e,t){const i=this.cache,r=t.allocateTextureUnit();i[0]!==r&&(n.uniform1i(this.addr,r),i[0]=r),t.setTexture2D(e||Uy,r)}function jE(n,e,t){const i=this.cache,r=t.allocateTextureUnit();i[0]!==r&&(n.uniform1i(this.addr,r),i[0]=r),t.setTexture3D(e||Fy,r)}function KE(n,e,t){const i=this.cache,r=t.allocateTextureUnit();i[0]!==r&&(n.uniform1i(this.addr,r),i[0]=r),t.setTextureCube(e||Oy,r)}function QE(n,e,t){const i=this.cache,r=t.allocateTextureUnit();i[0]!==r&&(n.uniform1i(this.addr,r),i[0]=r),t.setTexture2DArray(e||Ny,r)}function JE(n){switch(n){case 5126:return IE;case 35664:return UE;case 35665:return NE;case 35666:return FE;case 35674:return OE;case 35675:return BE;case 35676:return zE;case 5124:case 35670:return kE;case 35667:case 35671:return HE;case 35668:case 35672:return VE;case 35669:case 35673:return GE;case 5125:return WE;case 36294:return XE;case 36295:return YE;case 36296:return ZE;case 35678:case 36198:case 36298:case 36306:case 35682:return qE;case 35679:case 36299:case 36307:return jE;case 35680:case 36300:case 36308:case 36293:return KE;case 36289:case 36303:case 36311:case 36292:return QE}}function $E(n,e){n.uniform1fv(this.addr,e)}function eb(n,e){const t=ao(e,this.size,2);n.uniform2fv(this.addr,t)}function tb(n,e){const t=ao(e,this.size,3);n.uniform3fv(this.addr,t)}function nb(n,e){const t=ao(e,this.size,4);n.uniform4fv(this.addr,t)}function ib(n,e){const t=ao(e,this.size,4);n.uniformMatrix2fv(this.addr,!1,t)}function rb(n,e){const t=ao(e,this.size,9);n.uniformMatrix3fv(this.addr,!1,t)}function sb(n,e){const t=ao(e,this.size,16);n.uniformMatrix4fv(this.addr,!1,t)}function ab(n,e){n.uniform1iv(this.addr,e)}function ob(n,e){n.uniform2iv(this.addr,e)}function lb(n,e){n.uniform3iv(this.addr,e)}function cb(n,e){n.uniform4iv(this.addr,e)}function ub(n,e){n.uniform1uiv(this.addr,e)}function hb(n,e){n.uniform2uiv(this.addr,e)}function fb(n,e){n.uniform3uiv(this.addr,e)}function db(n,e){n.uniform4uiv(this.addr,e)}function pb(n,e,t){const i=this.cache,r=e.length,s=ah(t,r);bn(i,s)||(n.uniform1iv(this.addr,s),An(i,s));for(let a=0;a!==r;++a)t.setTexture2D(e[a]||Uy,s[a])}function mb(n,e,t){const i=this.cache,r=e.length,s=ah(t,r);bn(i,s)||(n.uniform1iv(this.addr,s),An(i,s));for(let a=0;a!==r;++a)t.setTexture3D(e[a]||Fy,s[a])}function gb(n,e,t){const i=this.cache,r=e.length,s=ah(t,r);bn(i,s)||(n.uniform1iv(this.addr,s),An(i,s));for(let a=0;a!==r;++a)t.setTextureCube(e[a]||Oy,s[a])}function vb(n,e,t){const i=this.cache,r=e.length,s=ah(t,r);bn(i,s)||(n.uniform1iv(this.addr,s),An(i,s));for(let a=0;a!==r;++a)t.setTexture2DArray(e[a]||Ny,s[a])}function xb(n){switch(n){case 5126:return $E;case 35664:return eb;case 35665:return tb;case 35666:return nb;case 35674:return ib;case 35675:return rb;case 35676:return sb;case 5124:case 35670:return ab;case 35667:case 35671:return ob;case 35668:case 35672:return lb;case 35669:case 35673:return cb;case 5125:return ub;case 36294:return hb;case 36295:return fb;case 36296:return db;case 35678:case 36198:case 36298:case 36306:case 35682:return pb;case 35679:case 36299:case 36307:return mb;case 35680:case 36300:case 36308:case 36293:return gb;case 36289:case 36303:case 36311:case 36292:return vb}}class yb{constructor(e,t,i){this.id=e,this.addr=i,this.cache=[],this.setValue=JE(t.type)}}class Sb{constructor(e,t,i){this.id=e,this.addr=i,this.cache=[],this.size=t.size,this.setValue=xb(t.type)}}class Mb{constructor(e){this.id=e,this.seq=[],this.map={}}setValue(e,t,i){const r=this.seq;for(let s=0,a=r.length;s!==a;++s){const c=r[s];c.setValue(e,t[c.id],i)}}}const sd=/(\w+)(\])?(\[|\.)?/g;function Lv(n,e){n.seq.push(e),n.map[e.id]=e}function _b(n,e,t){const i=n.name,r=i.length;for(sd.lastIndex=0;;){const s=sd.exec(i),a=sd.lastIndex;let c=s[1];const u=s[2]==="]",h=s[3];if(u&&(c=c|0),h===void 0||h==="["&&a+2===r){Lv(t,h===void 0?new yb(c,n,e):new Sb(c,n,e));break}else{let p=t.map[c];p===void 0&&(p=new Mb(c),Lv(t,p)),t=p}}}class ku{constructor(e,t){this.seq=[],this.map={};const i=e.getProgramParameter(t,e.ACTIVE_UNIFORMS);for(let r=0;r<i;++r){const s=e.getActiveUniform(t,r),a=e.getUniformLocation(t,s.name);_b(s,a,this)}}setValue(e,t,i,r){const s=this.map[t];s!==void 0&&s.setValue(e,i,r)}setOptional(e,t,i){const r=t[i];r!==void 0&&this.setValue(e,i,r)}static upload(e,t,i,r){for(let s=0,a=t.length;s!==a;++s){const c=t[s],u=i[c.id];u.needsUpdate!==!1&&c.setValue(e,u.value,r)}}static seqWithValue(e,t){const i=[];for(let r=0,s=e.length;r!==s;++r){const a=e[r];a.id in t&&i.push(a)}return i}}function Iv(n,e,t){const i=n.createShader(e);return n.shaderSource(i,t),n.compileShader(i),i}let Tb=0;function wb(n,e){const t=n.split(`
`),i=[],r=Math.max(e-6,0),s=Math.min(e+6,t.length);for(let a=r;a<s;a++){const c=a+1;i.push(`${c===e?">":" "} ${c}: ${t[a]}`)}return i.join(`
`)}function Eb(n){switch(n){case Yi:return["Linear","( value )"];case pt:return["sRGB","( value )"];default:return console.warn("THREE.WebGLProgram: Unsupported color space:",n),["Linear","( value )"]}}function Uv(n,e,t){const i=n.getShaderParameter(e,n.COMPILE_STATUS),r=n.getShaderInfoLog(e).trim();if(i&&r==="")return"";const s=/ERROR: 0:(\d+)/.exec(r);if(s){const a=parseInt(s[1]);return t.toUpperCase()+`

`+r+`

`+wb(n.getShaderSource(e),a)}else return r}function bb(n,e){const t=Eb(e);return"vec4 "+n+"( vec4 value ) { return LinearTo"+t[0]+t[1]+"; }"}function Ab(n,e){let t;switch(e){case sy:t="Linear";break;case ay:t="Reinhard";break;case oy:t="OptimizedCineon";break;case Cp:t="ACESFilmic";break;case ly:t="Custom";break;default:console.warn("THREE.WebGLProgram: Unsupported toneMapping:",e),t="Linear"}return"vec3 "+n+"( vec3 color ) { return "+t+"ToneMapping( color ); }"}function Pb(n){return[n.extensionDerivatives||n.envMapCubeUVHeight||n.bumpMap||n.normalMapTangentSpace||n.clearcoatNormalMap||n.flatShading||n.shaderID==="physical"?"#extension GL_OES_standard_derivatives : enable":"",(n.extensionFragDepth||n.logarithmicDepthBuffer)&&n.rendererExtensionFragDepth?"#extension GL_EXT_frag_depth : enable":"",n.extensionDrawBuffers&&n.rendererExtensionDrawBuffers?"#extension GL_EXT_draw_buffers : require":"",(n.extensionShaderTextureLOD||n.envMap||n.transmission)&&n.rendererExtensionShaderTextureLod?"#extension GL_EXT_shader_texture_lod : enable":""].filter(Jo).join(`
`)}function Cb(n){const e=[];for(const t in n){const i=n[t];i!==!1&&e.push("#define "+t+" "+i)}return e.join(`
`)}function Rb(n,e){const t={},i=n.getProgramParameter(e,n.ACTIVE_ATTRIBUTES);for(let r=0;r<i;r++){const s=n.getActiveAttrib(e,r),a=s.name;let c=1;s.type===n.FLOAT_MAT2&&(c=2),s.type===n.FLOAT_MAT3&&(c=3),s.type===n.FLOAT_MAT4&&(c=4),t[a]={type:s.type,location:n.getAttribLocation(e,a),locationSize:c}}return t}function Jo(n){return n!==""}function Nv(n,e){const t=e.numSpotLightShadows+e.numSpotLightMaps-e.numSpotLightShadowsWithMaps;return n.replace(/NUM_DIR_LIGHTS/g,e.numDirLights).replace(/NUM_SPOT_LIGHTS/g,e.numSpotLights).replace(/NUM_SPOT_LIGHT_MAPS/g,e.numSpotLightMaps).replace(/NUM_SPOT_LIGHT_COORDS/g,t).replace(/NUM_RECT_AREA_LIGHTS/g,e.numRectAreaLights).replace(/NUM_POINT_LIGHTS/g,e.numPointLights).replace(/NUM_HEMI_LIGHTS/g,e.numHemiLights).replace(/NUM_DIR_LIGHT_SHADOWS/g,e.numDirLightShadows).replace(/NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS/g,e.numSpotLightShadowsWithMaps).replace(/NUM_SPOT_LIGHT_SHADOWS/g,e.numSpotLightShadows).replace(/NUM_POINT_LIGHT_SHADOWS/g,e.numPointLightShadows)}function Fv(n,e){return n.replace(/NUM_CLIPPING_PLANES/g,e.numClippingPlanes).replace(/UNION_CLIPPING_PLANES/g,e.numClippingPlanes-e.numClipIntersection)}const Db=/^[ \t]*#include +<([\w\d./]+)>/gm;function cp(n){return n.replace(Db,Ib)}const Lb=new Map([["encodings_fragment","colorspace_fragment"],["encodings_pars_fragment","colorspace_pars_fragment"],["output_fragment","opaque_fragment"]]);function Ib(n,e){let t=Je[e];if(t===void 0){const i=Lb.get(e);if(i!==void 0)t=Je[i],console.warn('THREE.WebGLRenderer: Shader chunk "%s" has been deprecated. Use "%s" instead.',e,i);else throw new Error("Can not resolve #include <"+e+">")}return cp(t)}const Ub=/#pragma unroll_loop_start\s+for\s*\(\s*int\s+i\s*=\s*(\d+)\s*;\s*i\s*<\s*(\d+)\s*;\s*i\s*\+\+\s*\)\s*{([\s\S]+?)}\s+#pragma unroll_loop_end/g;function Ov(n){return n.replace(Ub,Nb)}function Nb(n,e,t,i){let r="";for(let s=parseInt(e);s<parseInt(t);s++)r+=i.replace(/\[\s*i\s*\]/g,"[ "+s+" ]").replace(/UNROLLED_LOOP_INDEX/g,s);return r}function Bv(n){let e="precision "+n.precision+` float;
precision `+n.precision+" int;";return n.precision==="highp"?e+=`
#define HIGH_PRECISION`:n.precision==="mediump"?e+=`
#define MEDIUM_PRECISION`:n.precision==="lowp"&&(e+=`
#define LOW_PRECISION`),e}function Fb(n){let e="SHADOWMAP_TYPE_BASIC";return n.shadowMapType===Ku?e="SHADOWMAP_TYPE_PCF":n.shadowMapType===el?e="SHADOWMAP_TYPE_PCF_SOFT":n.shadowMapType===Hi&&(e="SHADOWMAP_TYPE_VSM"),e}function Ob(n){let e="ENVMAP_TYPE_CUBE";if(n.envMap)switch(n.envMapMode){case Jr:case $r:e="ENVMAP_TYPE_CUBE";break;case no:e="ENVMAP_TYPE_CUBE_UV";break}return e}function Bb(n){let e="ENVMAP_MODE_REFLECTION";if(n.envMap)switch(n.envMapMode){case $r:e="ENVMAP_MODE_REFRACTION";break}return e}function zb(n){let e="ENVMAP_BLENDING_NONE";if(n.envMap)switch(n.combine){case Rl:e="ENVMAP_BLENDING_MULTIPLY";break;case iy:e="ENVMAP_BLENDING_MIX";break;case ry:e="ENVMAP_BLENDING_ADD";break}return e}function kb(n){const e=n.envMapCubeUVHeight;if(e===null)return null;const t=Math.log2(e)-2,i=1/e;return{texelWidth:1/(3*Math.max(Math.pow(2,t),7*16)),texelHeight:i,maxMip:t}}function Hb(n,e,t,i){const r=n.getContext(),s=t.defines;let a=t.vertexShader,c=t.fragmentShader;const u=Fb(t),h=Ob(t),f=Bb(t),p=zb(t),m=kb(t),g=t.isWebGL2?"":Pb(t),y=Cb(s),T=r.createProgram();let S,x,w=t.glslVersion?"#version "+t.glslVersion+`
`:"";t.isRawShaderMaterial?(S=["#define SHADER_TYPE "+t.shaderType,"#define SHADER_NAME "+t.shaderName,y].filter(Jo).join(`
`),S.length>0&&(S+=`
`),x=[g,"#define SHADER_TYPE "+t.shaderType,"#define SHADER_NAME "+t.shaderName,y].filter(Jo).join(`
`),x.length>0&&(x+=`
`)):(S=[Bv(t),"#define SHADER_TYPE "+t.shaderType,"#define SHADER_NAME "+t.shaderName,y,t.instancing?"#define USE_INSTANCING":"",t.instancingColor?"#define USE_INSTANCING_COLOR":"",t.useFog&&t.fog?"#define USE_FOG":"",t.useFog&&t.fogExp2?"#define FOG_EXP2":"",t.map?"#define USE_MAP":"",t.envMap?"#define USE_ENVMAP":"",t.envMap?"#define "+f:"",t.lightMap?"#define USE_LIGHTMAP":"",t.aoMap?"#define USE_AOMAP":"",t.bumpMap?"#define USE_BUMPMAP":"",t.normalMap?"#define USE_NORMALMAP":"",t.normalMapObjectSpace?"#define USE_NORMALMAP_OBJECTSPACE":"",t.normalMapTangentSpace?"#define USE_NORMALMAP_TANGENTSPACE":"",t.displacementMap?"#define USE_DISPLACEMENTMAP":"",t.emissiveMap?"#define USE_EMISSIVEMAP":"",t.anisotropyMap?"#define USE_ANISOTROPYMAP":"",t.clearcoatMap?"#define USE_CLEARCOATMAP":"",t.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",t.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",t.iridescenceMap?"#define USE_IRIDESCENCEMAP":"",t.iridescenceThicknessMap?"#define USE_IRIDESCENCE_THICKNESSMAP":"",t.specularMap?"#define USE_SPECULARMAP":"",t.specularColorMap?"#define USE_SPECULAR_COLORMAP":"",t.specularIntensityMap?"#define USE_SPECULAR_INTENSITYMAP":"",t.roughnessMap?"#define USE_ROUGHNESSMAP":"",t.metalnessMap?"#define USE_METALNESSMAP":"",t.alphaMap?"#define USE_ALPHAMAP":"",t.alphaHash?"#define USE_ALPHAHASH":"",t.transmission?"#define USE_TRANSMISSION":"",t.transmissionMap?"#define USE_TRANSMISSIONMAP":"",t.thicknessMap?"#define USE_THICKNESSMAP":"",t.sheenColorMap?"#define USE_SHEEN_COLORMAP":"",t.sheenRoughnessMap?"#define USE_SHEEN_ROUGHNESSMAP":"",t.mapUv?"#define MAP_UV "+t.mapUv:"",t.alphaMapUv?"#define ALPHAMAP_UV "+t.alphaMapUv:"",t.lightMapUv?"#define LIGHTMAP_UV "+t.lightMapUv:"",t.aoMapUv?"#define AOMAP_UV "+t.aoMapUv:"",t.emissiveMapUv?"#define EMISSIVEMAP_UV "+t.emissiveMapUv:"",t.bumpMapUv?"#define BUMPMAP_UV "+t.bumpMapUv:"",t.normalMapUv?"#define NORMALMAP_UV "+t.normalMapUv:"",t.displacementMapUv?"#define DISPLACEMENTMAP_UV "+t.displacementMapUv:"",t.metalnessMapUv?"#define METALNESSMAP_UV "+t.metalnessMapUv:"",t.roughnessMapUv?"#define ROUGHNESSMAP_UV "+t.roughnessMapUv:"",t.anisotropyMapUv?"#define ANISOTROPYMAP_UV "+t.anisotropyMapUv:"",t.clearcoatMapUv?"#define CLEARCOATMAP_UV "+t.clearcoatMapUv:"",t.clearcoatNormalMapUv?"#define CLEARCOAT_NORMALMAP_UV "+t.clearcoatNormalMapUv:"",t.clearcoatRoughnessMapUv?"#define CLEARCOAT_ROUGHNESSMAP_UV "+t.clearcoatRoughnessMapUv:"",t.iridescenceMapUv?"#define IRIDESCENCEMAP_UV "+t.iridescenceMapUv:"",t.iridescenceThicknessMapUv?"#define IRIDESCENCE_THICKNESSMAP_UV "+t.iridescenceThicknessMapUv:"",t.sheenColorMapUv?"#define SHEEN_COLORMAP_UV "+t.sheenColorMapUv:"",t.sheenRoughnessMapUv?"#define SHEEN_ROUGHNESSMAP_UV "+t.sheenRoughnessMapUv:"",t.specularMapUv?"#define SPECULARMAP_UV "+t.specularMapUv:"",t.specularColorMapUv?"#define SPECULAR_COLORMAP_UV "+t.specularColorMapUv:"",t.specularIntensityMapUv?"#define SPECULAR_INTENSITYMAP_UV "+t.specularIntensityMapUv:"",t.transmissionMapUv?"#define TRANSMISSIONMAP_UV "+t.transmissionMapUv:"",t.thicknessMapUv?"#define THICKNESSMAP_UV "+t.thicknessMapUv:"",t.vertexTangents&&t.flatShading===!1?"#define USE_TANGENT":"",t.vertexColors?"#define USE_COLOR":"",t.vertexAlphas?"#define USE_COLOR_ALPHA":"",t.vertexUv1s?"#define USE_UV1":"",t.vertexUv2s?"#define USE_UV2":"",t.vertexUv3s?"#define USE_UV3":"",t.pointsUvs?"#define USE_POINTS_UV":"",t.flatShading?"#define FLAT_SHADED":"",t.skinning?"#define USE_SKINNING":"",t.morphTargets?"#define USE_MORPHTARGETS":"",t.morphNormals&&t.flatShading===!1?"#define USE_MORPHNORMALS":"",t.morphColors&&t.isWebGL2?"#define USE_MORPHCOLORS":"",t.morphTargetsCount>0&&t.isWebGL2?"#define MORPHTARGETS_TEXTURE":"",t.morphTargetsCount>0&&t.isWebGL2?"#define MORPHTARGETS_TEXTURE_STRIDE "+t.morphTextureStride:"",t.morphTargetsCount>0&&t.isWebGL2?"#define MORPHTARGETS_COUNT "+t.morphTargetsCount:"",t.doubleSided?"#define DOUBLE_SIDED":"",t.flipSided?"#define FLIP_SIDED":"",t.shadowMapEnabled?"#define USE_SHADOWMAP":"",t.shadowMapEnabled?"#define "+u:"",t.sizeAttenuation?"#define USE_SIZEATTENUATION":"",t.useLegacyLights?"#define LEGACY_LIGHTS":"",t.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",t.logarithmicDepthBuffer&&t.rendererExtensionFragDepth?"#define USE_LOGDEPTHBUF_EXT":"","uniform mat4 modelMatrix;","uniform mat4 modelViewMatrix;","uniform mat4 projectionMatrix;","uniform mat4 viewMatrix;","uniform mat3 normalMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;","#ifdef USE_INSTANCING","	attribute mat4 instanceMatrix;","#endif","#ifdef USE_INSTANCING_COLOR","	attribute vec3 instanceColor;","#endif","attribute vec3 position;","attribute vec3 normal;","attribute vec2 uv;","#ifdef USE_UV1","	attribute vec2 uv1;","#endif","#ifdef USE_UV2","	attribute vec2 uv2;","#endif","#ifdef USE_UV3","	attribute vec2 uv3;","#endif","#ifdef USE_TANGENT","	attribute vec4 tangent;","#endif","#if defined( USE_COLOR_ALPHA )","	attribute vec4 color;","#elif defined( USE_COLOR )","	attribute vec3 color;","#endif","#if ( defined( USE_MORPHTARGETS ) && ! defined( MORPHTARGETS_TEXTURE ) )","	attribute vec3 morphTarget0;","	attribute vec3 morphTarget1;","	attribute vec3 morphTarget2;","	attribute vec3 morphTarget3;","	#ifdef USE_MORPHNORMALS","		attribute vec3 morphNormal0;","		attribute vec3 morphNormal1;","		attribute vec3 morphNormal2;","		attribute vec3 morphNormal3;","	#else","		attribute vec3 morphTarget4;","		attribute vec3 morphTarget5;","		attribute vec3 morphTarget6;","		attribute vec3 morphTarget7;","	#endif","#endif","#ifdef USE_SKINNING","	attribute vec4 skinIndex;","	attribute vec4 skinWeight;","#endif",`
`].filter(Jo).join(`
`),x=[g,Bv(t),"#define SHADER_TYPE "+t.shaderType,"#define SHADER_NAME "+t.shaderName,y,t.useFog&&t.fog?"#define USE_FOG":"",t.useFog&&t.fogExp2?"#define FOG_EXP2":"",t.map?"#define USE_MAP":"",t.matcap?"#define USE_MATCAP":"",t.envMap?"#define USE_ENVMAP":"",t.envMap?"#define "+h:"",t.envMap?"#define "+f:"",t.envMap?"#define "+p:"",m?"#define CUBEUV_TEXEL_WIDTH "+m.texelWidth:"",m?"#define CUBEUV_TEXEL_HEIGHT "+m.texelHeight:"",m?"#define CUBEUV_MAX_MIP "+m.maxMip+".0":"",t.lightMap?"#define USE_LIGHTMAP":"",t.aoMap?"#define USE_AOMAP":"",t.bumpMap?"#define USE_BUMPMAP":"",t.normalMap?"#define USE_NORMALMAP":"",t.normalMapObjectSpace?"#define USE_NORMALMAP_OBJECTSPACE":"",t.normalMapTangentSpace?"#define USE_NORMALMAP_TANGENTSPACE":"",t.emissiveMap?"#define USE_EMISSIVEMAP":"",t.anisotropy?"#define USE_ANISOTROPY":"",t.anisotropyMap?"#define USE_ANISOTROPYMAP":"",t.clearcoat?"#define USE_CLEARCOAT":"",t.clearcoatMap?"#define USE_CLEARCOATMAP":"",t.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",t.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",t.iridescence?"#define USE_IRIDESCENCE":"",t.iridescenceMap?"#define USE_IRIDESCENCEMAP":"",t.iridescenceThicknessMap?"#define USE_IRIDESCENCE_THICKNESSMAP":"",t.specularMap?"#define USE_SPECULARMAP":"",t.specularColorMap?"#define USE_SPECULAR_COLORMAP":"",t.specularIntensityMap?"#define USE_SPECULAR_INTENSITYMAP":"",t.roughnessMap?"#define USE_ROUGHNESSMAP":"",t.metalnessMap?"#define USE_METALNESSMAP":"",t.alphaMap?"#define USE_ALPHAMAP":"",t.alphaTest?"#define USE_ALPHATEST":"",t.alphaHash?"#define USE_ALPHAHASH":"",t.sheen?"#define USE_SHEEN":"",t.sheenColorMap?"#define USE_SHEEN_COLORMAP":"",t.sheenRoughnessMap?"#define USE_SHEEN_ROUGHNESSMAP":"",t.transmission?"#define USE_TRANSMISSION":"",t.transmissionMap?"#define USE_TRANSMISSIONMAP":"",t.thicknessMap?"#define USE_THICKNESSMAP":"",t.vertexTangents&&t.flatShading===!1?"#define USE_TANGENT":"",t.vertexColors||t.instancingColor?"#define USE_COLOR":"",t.vertexAlphas?"#define USE_COLOR_ALPHA":"",t.vertexUv1s?"#define USE_UV1":"",t.vertexUv2s?"#define USE_UV2":"",t.vertexUv3s?"#define USE_UV3":"",t.pointsUvs?"#define USE_POINTS_UV":"",t.gradientMap?"#define USE_GRADIENTMAP":"",t.flatShading?"#define FLAT_SHADED":"",t.doubleSided?"#define DOUBLE_SIDED":"",t.flipSided?"#define FLIP_SIDED":"",t.shadowMapEnabled?"#define USE_SHADOWMAP":"",t.shadowMapEnabled?"#define "+u:"",t.premultipliedAlpha?"#define PREMULTIPLIED_ALPHA":"",t.useLegacyLights?"#define LEGACY_LIGHTS":"",t.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",t.logarithmicDepthBuffer&&t.rendererExtensionFragDepth?"#define USE_LOGDEPTHBUF_EXT":"","uniform mat4 viewMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;",t.toneMapping!==Wi?"#define TONE_MAPPING":"",t.toneMapping!==Wi?Je.tonemapping_pars_fragment:"",t.toneMapping!==Wi?Ab("toneMapping",t.toneMapping):"",t.dithering?"#define DITHERING":"",t.opaque?"#define OPAQUE":"",Je.colorspace_pars_fragment,bb("linearToOutputTexel",t.outputColorSpace),t.useDepthPacking?"#define DEPTH_PACKING "+t.depthPacking:"",`
`].filter(Jo).join(`
`)),a=cp(a),a=Nv(a,t),a=Fv(a,t),c=cp(c),c=Nv(c,t),c=Fv(c,t),a=Ov(a),c=Ov(c),t.isWebGL2&&t.isRawShaderMaterial!==!0&&(w=`#version 300 es
`,S=["precision mediump sampler2DArray;","#define attribute in","#define varying out","#define texture2D texture"].join(`
`)+`
`+S,x=["#define varying in",t.glslVersion===Xu?"":"layout(location = 0) out highp vec4 pc_fragColor;",t.glslVersion===Xu?"":"#define gl_FragColor pc_fragColor","#define gl_FragDepthEXT gl_FragDepth","#define texture2D texture","#define textureCube texture","#define texture2DProj textureProj","#define texture2DLodEXT textureLod","#define texture2DProjLodEXT textureProjLod","#define textureCubeLodEXT textureLod","#define texture2DGradEXT textureGrad","#define texture2DProjGradEXT textureProjGrad","#define textureCubeGradEXT textureGrad"].join(`
`)+`
`+x);const M=w+S+a,b=w+x+c,P=Iv(r,r.VERTEX_SHADER,M),C=Iv(r,r.FRAGMENT_SHADER,b);if(r.attachShader(T,P),r.attachShader(T,C),t.index0AttributeName!==void 0?r.bindAttribLocation(T,0,t.index0AttributeName):t.morphTargets===!0&&r.bindAttribLocation(T,0,"position"),r.linkProgram(T),n.debug.checkShaderErrors){const A=r.getProgramInfoLog(T).trim(),R=r.getShaderInfoLog(P).trim(),z=r.getShaderInfoLog(C).trim();let te=!0,W=!0;if(r.getProgramParameter(T,r.LINK_STATUS)===!1)if(te=!1,typeof n.debug.onShaderError=="function")n.debug.onShaderError(r,T,P,C);else{const J=Uv(r,P,"vertex"),ne=Uv(r,C,"fragment");console.error("THREE.WebGLProgram: Shader Error "+r.getError()+" - VALIDATE_STATUS "+r.getProgramParameter(T,r.VALIDATE_STATUS)+`

Program Info Log: `+A+`
`+J+`
`+ne)}else A!==""?console.warn("THREE.WebGLProgram: Program Info Log:",A):(R===""||z==="")&&(W=!1);W&&(this.diagnostics={runnable:te,programLog:A,vertexShader:{log:R,prefix:S},fragmentShader:{log:z,prefix:x}})}r.deleteShader(P),r.deleteShader(C);let L;this.getUniforms=function(){return L===void 0&&(L=new ku(r,T)),L};let U;return this.getAttributes=function(){return U===void 0&&(U=Rb(r,T)),U},this.destroy=function(){i.releaseStatesOfProgram(this),r.deleteProgram(T),this.program=void 0},this.type=t.shaderType,this.name=t.shaderName,this.id=Tb++,this.cacheKey=e,this.usedTimes=1,this.program=T,this.vertexShader=P,this.fragmentShader=C,this}let Vb=0;class Gb{constructor(){this.shaderCache=new Map,this.materialCache=new Map}update(e){const t=e.vertexShader,i=e.fragmentShader,r=this._getShaderStage(t),s=this._getShaderStage(i),a=this._getShaderCacheForMaterial(e);return a.has(r)===!1&&(a.add(r),r.usedTimes++),a.has(s)===!1&&(a.add(s),s.usedTimes++),this}remove(e){const t=this.materialCache.get(e);for(const i of t)i.usedTimes--,i.usedTimes===0&&this.shaderCache.delete(i.code);return this.materialCache.delete(e),this}getVertexShaderID(e){return this._getShaderStage(e.vertexShader).id}getFragmentShaderID(e){return this._getShaderStage(e.fragmentShader).id}dispose(){this.shaderCache.clear(),this.materialCache.clear()}_getShaderCacheForMaterial(e){const t=this.materialCache;let i=t.get(e);return i===void 0&&(i=new Set,t.set(e,i)),i}_getShaderStage(e){const t=this.shaderCache;let i=t.get(e);return i===void 0&&(i=new Wb(e),t.set(e,i)),i}}class Wb{constructor(e){this.id=Vb++,this.code=e,this.usedTimes=0}}function Xb(n,e,t,i,r,s,a){const c=new Gs,u=new Gb,h=[],f=r.isWebGL2,p=r.logarithmicDepthBuffer,m=r.vertexTextures;let g=r.precision;const y={MeshDepthMaterial:"depth",MeshDistanceMaterial:"distanceRGBA",MeshNormalMaterial:"normal",MeshBasicMaterial:"basic",MeshLambertMaterial:"lambert",MeshPhongMaterial:"phong",MeshToonMaterial:"toon",MeshStandardMaterial:"physical",MeshPhysicalMaterial:"physical",MeshMatcapMaterial:"matcap",LineBasicMaterial:"basic",LineDashedMaterial:"dashed",PointsMaterial:"points",ShadowMaterial:"shadow",SpriteMaterial:"sprite"};function T(A){return A===0?"uv":`uv${A}`}function S(A,R,z,te,W){const J=te.fog,ne=W.geometry,ue=A.isMeshStandardMaterial?te.environment:null,ae=(A.isMeshStandardMaterial?t:e).get(A.envMap||ue),B=ae&&ae.mapping===no?ae.image.height:null,X=y[A.type];A.precision!==null&&(g=r.getMaxPrecision(A.precision),g!==A.precision&&console.warn("THREE.WebGLProgram.getParameters:",A.precision,"not supported, using",g,"instead."));const Y=ne.morphAttributes.position||ne.morphAttributes.normal||ne.morphAttributes.color,H=Y!==void 0?Y.length:0;let q=0;ne.morphAttributes.position!==void 0&&(q=1),ne.morphAttributes.normal!==void 0&&(q=2),ne.morphAttributes.color!==void 0&&(q=3);let ye,ge,Pe,Ue;if(X){const si=Vi[X];ye=si.vertexShader,ge=si.fragmentShader}else ye=A.vertexShader,ge=A.fragmentShader,u.update(A),Pe=u.getVertexShaderID(A),Ue=u.getFragmentShaderID(A);const He=n.getRenderTarget(),je=W.isInstancedMesh===!0,Tt=!!A.map,Nt=!!A.matcap,Ye=!!ae,k=!!A.aoMap,xe=!!A.lightMap,me=!!A.bumpMap,we=!!A.normalMap,ve=!!A.displacementMap,Ze=!!A.emissiveMap,Be=!!A.metalnessMap,ke=!!A.roughnessMap,$e=A.anisotropy>0,yt=A.clearcoat>0,Gt=A.iridescence>0,O=A.sheen>0,D=A.transmission>0,ce=$e&&!!A.anisotropyMap,Te=yt&&!!A.clearcoatMap,Me=yt&&!!A.clearcoatNormalMap,Le=yt&&!!A.clearcoatRoughnessMap,We=Gt&&!!A.iridescenceMap,Re=Gt&&!!A.iridescenceThicknessMap,fe=O&&!!A.sheenColorMap,V=O&&!!A.sheenRoughnessMap,he=!!A.specularMap,Se=!!A.specularColorMap,_e=!!A.specularIntensityMap,De=D&&!!A.transmissionMap,nt=D&&!!A.thicknessMap,At=!!A.gradientMap,G=!!A.alphaMap,Ae=A.alphaTest>0,se=!!A.alphaHash,Ce=!!A.extensions,Fe=!!ne.attributes.uv1,bt=!!ne.attributes.uv2,Wt=!!ne.attributes.uv3;return{isWebGL2:f,shaderID:X,shaderType:A.type,shaderName:A.name,vertexShader:ye,fragmentShader:ge,defines:A.defines,customVertexShaderID:Pe,customFragmentShaderID:Ue,isRawShaderMaterial:A.isRawShaderMaterial===!0,glslVersion:A.glslVersion,precision:g,instancing:je,instancingColor:je&&W.instanceColor!==null,supportsVertexTextures:m,outputColorSpace:He===null?n.outputColorSpace:He.isXRRenderTarget===!0?He.texture.colorSpace:Yi,map:Tt,matcap:Nt,envMap:Ye,envMapMode:Ye&&ae.mapping,envMapCubeUVHeight:B,aoMap:k,lightMap:xe,bumpMap:me,normalMap:we,displacementMap:m&&ve,emissiveMap:Ze,normalMapObjectSpace:we&&A.normalMapType===xy,normalMapTangentSpace:we&&A.normalMapType===Dr,metalnessMap:Be,roughnessMap:ke,anisotropy:$e,anisotropyMap:ce,clearcoat:yt,clearcoatMap:Te,clearcoatNormalMap:Me,clearcoatRoughnessMap:Le,iridescence:Gt,iridescenceMap:We,iridescenceThicknessMap:Re,sheen:O,sheenColorMap:fe,sheenRoughnessMap:V,specularMap:he,specularColorMap:Se,specularIntensityMap:_e,transmission:D,transmissionMap:De,thicknessMap:nt,gradientMap:At,opaque:A.transparent===!1&&A.blending===ks,alphaMap:G,alphaTest:Ae,alphaHash:se,combine:A.combine,mapUv:Tt&&T(A.map.channel),aoMapUv:k&&T(A.aoMap.channel),lightMapUv:xe&&T(A.lightMap.channel),bumpMapUv:me&&T(A.bumpMap.channel),normalMapUv:we&&T(A.normalMap.channel),displacementMapUv:ve&&T(A.displacementMap.channel),emissiveMapUv:Ze&&T(A.emissiveMap.channel),metalnessMapUv:Be&&T(A.metalnessMap.channel),roughnessMapUv:ke&&T(A.roughnessMap.channel),anisotropyMapUv:ce&&T(A.anisotropyMap.channel),clearcoatMapUv:Te&&T(A.clearcoatMap.channel),clearcoatNormalMapUv:Me&&T(A.clearcoatNormalMap.channel),clearcoatRoughnessMapUv:Le&&T(A.clearcoatRoughnessMap.channel),iridescenceMapUv:We&&T(A.iridescenceMap.channel),iridescenceThicknessMapUv:Re&&T(A.iridescenceThicknessMap.channel),sheenColorMapUv:fe&&T(A.sheenColorMap.channel),sheenRoughnessMapUv:V&&T(A.sheenRoughnessMap.channel),specularMapUv:he&&T(A.specularMap.channel),specularColorMapUv:Se&&T(A.specularColorMap.channel),specularIntensityMapUv:_e&&T(A.specularIntensityMap.channel),transmissionMapUv:De&&T(A.transmissionMap.channel),thicknessMapUv:nt&&T(A.thicknessMap.channel),alphaMapUv:G&&T(A.alphaMap.channel),vertexTangents:!!ne.attributes.tangent&&(we||$e),vertexColors:A.vertexColors,vertexAlphas:A.vertexColors===!0&&!!ne.attributes.color&&ne.attributes.color.itemSize===4,vertexUv1s:Fe,vertexUv2s:bt,vertexUv3s:Wt,pointsUvs:W.isPoints===!0&&!!ne.attributes.uv&&(Tt||G),fog:!!J,useFog:A.fog===!0,fogExp2:J&&J.isFogExp2,flatShading:A.flatShading===!0,sizeAttenuation:A.sizeAttenuation===!0,logarithmicDepthBuffer:p,skinning:W.isSkinnedMesh===!0,morphTargets:ne.morphAttributes.position!==void 0,morphNormals:ne.morphAttributes.normal!==void 0,morphColors:ne.morphAttributes.color!==void 0,morphTargetsCount:H,morphTextureStride:q,numDirLights:R.directional.length,numPointLights:R.point.length,numSpotLights:R.spot.length,numSpotLightMaps:R.spotLightMap.length,numRectAreaLights:R.rectArea.length,numHemiLights:R.hemi.length,numDirLightShadows:R.directionalShadowMap.length,numPointLightShadows:R.pointShadowMap.length,numSpotLightShadows:R.spotShadowMap.length,numSpotLightShadowsWithMaps:R.numSpotLightShadowsWithMaps,numClippingPlanes:a.numPlanes,numClipIntersection:a.numIntersection,dithering:A.dithering,shadowMapEnabled:n.shadowMap.enabled&&z.length>0,shadowMapType:n.shadowMap.type,toneMapping:A.toneMapped?n.toneMapping:Wi,useLegacyLights:n.useLegacyLights,premultipliedAlpha:A.premultipliedAlpha,doubleSided:A.side===ni,flipSided:A.side===_n,useDepthPacking:A.depthPacking>=0,depthPacking:A.depthPacking||0,index0AttributeName:A.index0AttributeName,extensionDerivatives:Ce&&A.extensions.derivatives===!0,extensionFragDepth:Ce&&A.extensions.fragDepth===!0,extensionDrawBuffers:Ce&&A.extensions.drawBuffers===!0,extensionShaderTextureLOD:Ce&&A.extensions.shaderTextureLOD===!0,rendererExtensionFragDepth:f||i.has("EXT_frag_depth"),rendererExtensionDrawBuffers:f||i.has("WEBGL_draw_buffers"),rendererExtensionShaderTextureLod:f||i.has("EXT_shader_texture_lod"),customProgramCacheKey:A.customProgramCacheKey()}}function x(A){const R=[];if(A.shaderID?R.push(A.shaderID):(R.push(A.customVertexShaderID),R.push(A.customFragmentShaderID)),A.defines!==void 0)for(const z in A.defines)R.push(z),R.push(A.defines[z]);return A.isRawShaderMaterial===!1&&(w(R,A),M(R,A),R.push(n.outputColorSpace)),R.push(A.customProgramCacheKey),R.join()}function w(A,R){A.push(R.precision),A.push(R.outputColorSpace),A.push(R.envMapMode),A.push(R.envMapCubeUVHeight),A.push(R.mapUv),A.push(R.alphaMapUv),A.push(R.lightMapUv),A.push(R.aoMapUv),A.push(R.bumpMapUv),A.push(R.normalMapUv),A.push(R.displacementMapUv),A.push(R.emissiveMapUv),A.push(R.metalnessMapUv),A.push(R.roughnessMapUv),A.push(R.anisotropyMapUv),A.push(R.clearcoatMapUv),A.push(R.clearcoatNormalMapUv),A.push(R.clearcoatRoughnessMapUv),A.push(R.iridescenceMapUv),A.push(R.iridescenceThicknessMapUv),A.push(R.sheenColorMapUv),A.push(R.sheenRoughnessMapUv),A.push(R.specularMapUv),A.push(R.specularColorMapUv),A.push(R.specularIntensityMapUv),A.push(R.transmissionMapUv),A.push(R.thicknessMapUv),A.push(R.combine),A.push(R.fogExp2),A.push(R.sizeAttenuation),A.push(R.morphTargetsCount),A.push(R.morphAttributeCount),A.push(R.numDirLights),A.push(R.numPointLights),A.push(R.numSpotLights),A.push(R.numSpotLightMaps),A.push(R.numHemiLights),A.push(R.numRectAreaLights),A.push(R.numDirLightShadows),A.push(R.numPointLightShadows),A.push(R.numSpotLightShadows),A.push(R.numSpotLightShadowsWithMaps),A.push(R.shadowMapType),A.push(R.toneMapping),A.push(R.numClippingPlanes),A.push(R.numClipIntersection),A.push(R.depthPacking)}function M(A,R){c.disableAll(),R.isWebGL2&&c.enable(0),R.supportsVertexTextures&&c.enable(1),R.instancing&&c.enable(2),R.instancingColor&&c.enable(3),R.matcap&&c.enable(4),R.envMap&&c.enable(5),R.normalMapObjectSpace&&c.enable(6),R.normalMapTangentSpace&&c.enable(7),R.clearcoat&&c.enable(8),R.iridescence&&c.enable(9),R.alphaTest&&c.enable(10),R.vertexColors&&c.enable(11),R.vertexAlphas&&c.enable(12),R.vertexUv1s&&c.enable(13),R.vertexUv2s&&c.enable(14),R.vertexUv3s&&c.enable(15),R.vertexTangents&&c.enable(16),R.anisotropy&&c.enable(17),A.push(c.mask),c.disableAll(),R.fog&&c.enable(0),R.useFog&&c.enable(1),R.flatShading&&c.enable(2),R.logarithmicDepthBuffer&&c.enable(3),R.skinning&&c.enable(4),R.morphTargets&&c.enable(5),R.morphNormals&&c.enable(6),R.morphColors&&c.enable(7),R.premultipliedAlpha&&c.enable(8),R.shadowMapEnabled&&c.enable(9),R.useLegacyLights&&c.enable(10),R.doubleSided&&c.enable(11),R.flipSided&&c.enable(12),R.useDepthPacking&&c.enable(13),R.dithering&&c.enable(14),R.transmission&&c.enable(15),R.sheen&&c.enable(16),R.opaque&&c.enable(17),R.pointsUvs&&c.enable(18),A.push(c.mask)}function b(A){const R=y[A.type];let z;if(R){const te=Vi[R];z=Ly.clone(te.uniforms)}else z=A.uniforms;return z}function P(A,R){let z;for(let te=0,W=h.length;te<W;te++){const J=h[te];if(J.cacheKey===R){z=J,++z.usedTimes;break}}return z===void 0&&(z=new Hb(n,R,A,s),h.push(z)),z}function C(A){if(--A.usedTimes===0){const R=h.indexOf(A);h[R]=h[h.length-1],h.pop(),A.destroy()}}function L(A){u.remove(A)}function U(){u.dispose()}return{getParameters:S,getProgramCacheKey:x,getUniforms:b,acquireProgram:P,releaseProgram:C,releaseShaderCache:L,programs:h,dispose:U}}function Yb(){let n=new WeakMap;function e(s){let a=n.get(s);return a===void 0&&(a={},n.set(s,a)),a}function t(s){n.delete(s)}function i(s,a,c){n.get(s)[a]=c}function r(){n=new WeakMap}return{get:e,remove:t,update:i,dispose:r}}function Zb(n,e){return n.groupOrder!==e.groupOrder?n.groupOrder-e.groupOrder:n.renderOrder!==e.renderOrder?n.renderOrder-e.renderOrder:n.material.id!==e.material.id?n.material.id-e.material.id:n.z!==e.z?n.z-e.z:n.id-e.id}function zv(n,e){return n.groupOrder!==e.groupOrder?n.groupOrder-e.groupOrder:n.renderOrder!==e.renderOrder?n.renderOrder-e.renderOrder:n.z!==e.z?e.z-n.z:n.id-e.id}function kv(){const n=[];let e=0;const t=[],i=[],r=[];function s(){e=0,t.length=0,i.length=0,r.length=0}function a(p,m,g,y,T,S){let x=n[e];return x===void 0?(x={id:p.id,object:p,geometry:m,material:g,groupOrder:y,renderOrder:p.renderOrder,z:T,group:S},n[e]=x):(x.id=p.id,x.object=p,x.geometry=m,x.material=g,x.groupOrder=y,x.renderOrder=p.renderOrder,x.z=T,x.group=S),e++,x}function c(p,m,g,y,T,S){const x=a(p,m,g,y,T,S);g.transmission>0?i.push(x):g.transparent===!0?r.push(x):t.push(x)}function u(p,m,g,y,T,S){const x=a(p,m,g,y,T,S);g.transmission>0?i.unshift(x):g.transparent===!0?r.unshift(x):t.unshift(x)}function h(p,m){t.length>1&&t.sort(p||Zb),i.length>1&&i.sort(m||zv),r.length>1&&r.sort(m||zv)}function f(){for(let p=e,m=n.length;p<m;p++){const g=n[p];if(g.id===null)break;g.id=null,g.object=null,g.geometry=null,g.material=null,g.group=null}}return{opaque:t,transmissive:i,transparent:r,init:s,push:c,unshift:u,finish:f,sort:h}}function qb(){let n=new WeakMap;function e(i,r){const s=n.get(i);let a;return s===void 0?(a=new kv,n.set(i,[a])):r>=s.length?(a=new kv,s.push(a)):a=s[r],a}function t(){n=new WeakMap}return{get:e,dispose:t}}function jb(){const n={};return{get:function(e){if(n[e.id]!==void 0)return n[e.id];let t;switch(e.type){case"DirectionalLight":t={direction:new I,color:new be};break;case"SpotLight":t={position:new I,direction:new I,color:new be,distance:0,coneCos:0,penumbraCos:0,decay:0};break;case"PointLight":t={position:new I,color:new be,distance:0,decay:0};break;case"HemisphereLight":t={direction:new I,skyColor:new be,groundColor:new be};break;case"RectAreaLight":t={color:new be,position:new I,halfWidth:new I,halfHeight:new I};break}return n[e.id]=t,t}}}function Kb(){const n={};return{get:function(e){if(n[e.id]!==void 0)return n[e.id];let t;switch(e.type){case"DirectionalLight":t={shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new K};break;case"SpotLight":t={shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new K};break;case"PointLight":t={shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new K,shadowCameraNear:1,shadowCameraFar:1e3};break}return n[e.id]=t,t}}}let Qb=0;function Jb(n,e){return(e.castShadow?2:0)-(n.castShadow?2:0)+(e.map?1:0)-(n.map?1:0)}function $b(n,e){const t=new jb,i=Kb(),r={version:0,hash:{directionalLength:-1,pointLength:-1,spotLength:-1,rectAreaLength:-1,hemiLength:-1,numDirectionalShadows:-1,numPointShadows:-1,numSpotShadows:-1,numSpotMaps:-1},ambient:[0,0,0],probe:[],directional:[],directionalShadow:[],directionalShadowMap:[],directionalShadowMatrix:[],spot:[],spotLightMap:[],spotShadow:[],spotShadowMap:[],spotLightMatrix:[],rectArea:[],rectAreaLTC1:null,rectAreaLTC2:null,point:[],pointShadow:[],pointShadowMap:[],pointShadowMatrix:[],hemi:[],numSpotLightShadowsWithMaps:0};for(let f=0;f<9;f++)r.probe.push(new I);const s=new I,a=new ze,c=new ze;function u(f,p){let m=0,g=0,y=0;for(let z=0;z<9;z++)r.probe[z].set(0,0,0);let T=0,S=0,x=0,w=0,M=0,b=0,P=0,C=0,L=0,U=0;f.sort(Jb);const A=p===!0?Math.PI:1;for(let z=0,te=f.length;z<te;z++){const W=f[z],J=W.color,ne=W.intensity,ue=W.distance,ae=W.shadow&&W.shadow.map?W.shadow.map.texture:null;if(W.isAmbientLight)m+=J.r*ne*A,g+=J.g*ne*A,y+=J.b*ne*A;else if(W.isLightProbe)for(let B=0;B<9;B++)r.probe[B].addScaledVector(W.sh.coefficients[B],ne);else if(W.isDirectionalLight){const B=t.get(W);if(B.color.copy(W.color).multiplyScalar(W.intensity*A),W.castShadow){const X=W.shadow,Y=i.get(W);Y.shadowBias=X.bias,Y.shadowNormalBias=X.normalBias,Y.shadowRadius=X.radius,Y.shadowMapSize=X.mapSize,r.directionalShadow[T]=Y,r.directionalShadowMap[T]=ae,r.directionalShadowMatrix[T]=W.shadow.matrix,b++}r.directional[T]=B,T++}else if(W.isSpotLight){const B=t.get(W);B.position.setFromMatrixPosition(W.matrixWorld),B.color.copy(J).multiplyScalar(ne*A),B.distance=ue,B.coneCos=Math.cos(W.angle),B.penumbraCos=Math.cos(W.angle*(1-W.penumbra)),B.decay=W.decay,r.spot[x]=B;const X=W.shadow;if(W.map&&(r.spotLightMap[L]=W.map,L++,X.updateMatrices(W),W.castShadow&&U++),r.spotLightMatrix[x]=X.matrix,W.castShadow){const Y=i.get(W);Y.shadowBias=X.bias,Y.shadowNormalBias=X.normalBias,Y.shadowRadius=X.radius,Y.shadowMapSize=X.mapSize,r.spotShadow[x]=Y,r.spotShadowMap[x]=ae,C++}x++}else if(W.isRectAreaLight){const B=t.get(W);B.color.copy(J).multiplyScalar(ne),B.halfWidth.set(W.width*.5,0,0),B.halfHeight.set(0,W.height*.5,0),r.rectArea[w]=B,w++}else if(W.isPointLight){const B=t.get(W);if(B.color.copy(W.color).multiplyScalar(W.intensity*A),B.distance=W.distance,B.decay=W.decay,W.castShadow){const X=W.shadow,Y=i.get(W);Y.shadowBias=X.bias,Y.shadowNormalBias=X.normalBias,Y.shadowRadius=X.radius,Y.shadowMapSize=X.mapSize,Y.shadowCameraNear=X.camera.near,Y.shadowCameraFar=X.camera.far,r.pointShadow[S]=Y,r.pointShadowMap[S]=ae,r.pointShadowMatrix[S]=W.shadow.matrix,P++}r.point[S]=B,S++}else if(W.isHemisphereLight){const B=t.get(W);B.skyColor.copy(W.color).multiplyScalar(ne*A),B.groundColor.copy(W.groundColor).multiplyScalar(ne*A),r.hemi[M]=B,M++}}w>0&&(e.isWebGL2||n.has("OES_texture_float_linear")===!0?(r.rectAreaLTC1=Ie.LTC_FLOAT_1,r.rectAreaLTC2=Ie.LTC_FLOAT_2):n.has("OES_texture_half_float_linear")===!0?(r.rectAreaLTC1=Ie.LTC_HALF_1,r.rectAreaLTC2=Ie.LTC_HALF_2):console.error("THREE.WebGLRenderer: Unable to use RectAreaLight. Missing WebGL extensions.")),r.ambient[0]=m,r.ambient[1]=g,r.ambient[2]=y;const R=r.hash;(R.directionalLength!==T||R.pointLength!==S||R.spotLength!==x||R.rectAreaLength!==w||R.hemiLength!==M||R.numDirectionalShadows!==b||R.numPointShadows!==P||R.numSpotShadows!==C||R.numSpotMaps!==L)&&(r.directional.length=T,r.spot.length=x,r.rectArea.length=w,r.point.length=S,r.hemi.length=M,r.directionalShadow.length=b,r.directionalShadowMap.length=b,r.pointShadow.length=P,r.pointShadowMap.length=P,r.spotShadow.length=C,r.spotShadowMap.length=C,r.directionalShadowMatrix.length=b,r.pointShadowMatrix.length=P,r.spotLightMatrix.length=C+L-U,r.spotLightMap.length=L,r.numSpotLightShadowsWithMaps=U,R.directionalLength=T,R.pointLength=S,R.spotLength=x,R.rectAreaLength=w,R.hemiLength=M,R.numDirectionalShadows=b,R.numPointShadows=P,R.numSpotShadows=C,R.numSpotMaps=L,r.version=Qb++)}function h(f,p){let m=0,g=0,y=0,T=0,S=0;const x=p.matrixWorldInverse;for(let w=0,M=f.length;w<M;w++){const b=f[w];if(b.isDirectionalLight){const P=r.directional[m];P.direction.setFromMatrixPosition(b.matrixWorld),s.setFromMatrixPosition(b.target.matrixWorld),P.direction.sub(s),P.direction.transformDirection(x),m++}else if(b.isSpotLight){const P=r.spot[y];P.position.setFromMatrixPosition(b.matrixWorld),P.position.applyMatrix4(x),P.direction.setFromMatrixPosition(b.matrixWorld),s.setFromMatrixPosition(b.target.matrixWorld),P.direction.sub(s),P.direction.transformDirection(x),y++}else if(b.isRectAreaLight){const P=r.rectArea[T];P.position.setFromMatrixPosition(b.matrixWorld),P.position.applyMatrix4(x),c.identity(),a.copy(b.matrixWorld),a.premultiply(x),c.extractRotation(a),P.halfWidth.set(b.width*.5,0,0),P.halfHeight.set(0,b.height*.5,0),P.halfWidth.applyMatrix4(c),P.halfHeight.applyMatrix4(c),T++}else if(b.isPointLight){const P=r.point[g];P.position.setFromMatrixPosition(b.matrixWorld),P.position.applyMatrix4(x),g++}else if(b.isHemisphereLight){const P=r.hemi[S];P.direction.setFromMatrixPosition(b.matrixWorld),P.direction.transformDirection(x),S++}}}return{setup:u,setupView:h,state:r}}function Hv(n,e){const t=new $b(n,e),i=[],r=[];function s(){i.length=0,r.length=0}function a(p){i.push(p)}function c(p){r.push(p)}function u(p){t.setup(i,p)}function h(p){t.setupView(i,p)}return{init:s,state:{lightsArray:i,shadowsArray:r,lights:t},setupLights:u,setupLightsView:h,pushLight:a,pushShadow:c}}function eA(n,e){let t=new WeakMap;function i(s,a=0){const c=t.get(s);let u;return c===void 0?(u=new Hv(n,e),t.set(s,[u])):a>=c.length?(u=new Hv(n,e),c.push(u)):u=c[a],u}function r(){t=new WeakMap}return{get:i,dispose:r}}class oh extends Pn{constructor(e){super(),this.isMeshDepthMaterial=!0,this.type="MeshDepthMaterial",this.depthPacking=In,this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.wireframe=!1,this.wireframeLinewidth=1,this.setValues(e)}copy(e){return super.copy(e),this.depthPacking=e.depthPacking,this.map=e.map,this.alphaMap=e.alphaMap,this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this}}class Zp extends Pn{constructor(e){super(),this.isMeshDistanceMaterial=!0,this.type="MeshDistanceMaterial",this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.setValues(e)}copy(e){return super.copy(e),this.map=e.map,this.alphaMap=e.alphaMap,this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this}}const tA=`void main() {
	gl_Position = vec4( position, 1.0 );
}`,nA=`uniform sampler2D shadow_pass;
uniform vec2 resolution;
uniform float radius;
#include <packing>
void main() {
	const float samples = float( VSM_SAMPLES );
	float mean = 0.0;
	float squared_mean = 0.0;
	float uvStride = samples <= 1.0 ? 0.0 : 2.0 / ( samples - 1.0 );
	float uvStart = samples <= 1.0 ? 0.0 : - 1.0;
	for ( float i = 0.0; i < samples; i ++ ) {
		float uvOffset = uvStart + i * uvStride;
		#ifdef HORIZONTAL_PASS
			vec2 distribution = unpackRGBATo2Half( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( uvOffset, 0.0 ) * radius ) / resolution ) );
			mean += distribution.x;
			squared_mean += distribution.y * distribution.y + distribution.x * distribution.x;
		#else
			float depth = unpackRGBAToDepth( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( 0.0, uvOffset ) * radius ) / resolution ) );
			mean += depth;
			squared_mean += depth * depth;
		#endif
	}
	mean = mean / samples;
	squared_mean = squared_mean / samples;
	float std_dev = sqrt( squared_mean - mean * mean );
	gl_FragColor = pack2HalfToRGBA( vec2( mean, std_dev ) );
}`;function iA(n,e,t){let i=new sh;const r=new K,s=new K,a=new Et,c=new oh({depthPacking:lr}),u=new Zp,h={},f=t.maxTextureSize,p={[or]:_n,[_n]:or,[ni]:ni},m=new _t({defines:{VSM_SAMPLES:8},uniforms:{shadow_pass:{value:null},resolution:{value:new K},radius:{value:4}},vertexShader:tA,fragmentShader:nA}),g=m.clone();g.defines.HORIZONTAL_PASS=1;const y=new mt;y.setAttribute("position",new Ct(new Float32Array([-1,-1,.5,3,-1,.5,-1,3,.5]),3));const T=new Tn(y,m),S=this;this.enabled=!1,this.autoUpdate=!0,this.needsUpdate=!1,this.type=Ku;let x=this.type;this.render=function(P,C,L){if(S.enabled===!1||S.autoUpdate===!1&&S.needsUpdate===!1||P.length===0)return;const U=n.getRenderTarget(),A=n.getActiveCubeFace(),R=n.getActiveMipmapLevel(),z=n.state;z.setBlending(Jt),z.buffers.color.setClear(1,1,1,1),z.buffers.depth.setTest(!0),z.setScissorTest(!1);const te=x!==Hi&&this.type===Hi,W=x===Hi&&this.type!==Hi;for(let J=0,ne=P.length;J<ne;J++){const ue=P[J],ae=ue.shadow;if(ae===void 0){console.warn("THREE.WebGLShadowMap:",ue,"has no shadow.");continue}if(ae.autoUpdate===!1&&ae.needsUpdate===!1)continue;r.copy(ae.mapSize);const B=ae.getFrameExtents();if(r.multiply(B),s.copy(ae.mapSize),(r.x>f||r.y>f)&&(r.x>f&&(s.x=Math.floor(f/B.x),r.x=s.x*B.x,ae.mapSize.x=s.x),r.y>f&&(s.y=Math.floor(f/B.y),r.y=s.y*B.y,ae.mapSize.y=s.y)),ae.map===null||te===!0||W===!0){const Y=this.type!==Hi?{minFilter:ct,magFilter:ct}:{};ae.map!==null&&ae.map.dispose(),ae.map=new wt(r.x,r.y,Y),ae.map.texture.name=ue.name+".shadowMap",ae.camera.updateProjectionMatrix()}n.setRenderTarget(ae.map),n.clear();const X=ae.getViewportCount();for(let Y=0;Y<X;Y++){const H=ae.getViewport(Y);a.set(s.x*H.x,s.y*H.y,s.x*H.z,s.y*H.w),z.viewport(a),ae.updateMatrices(ue,Y),i=ae.getFrustum(),b(C,L,ae.camera,ue,this.type)}ae.isPointLightShadow!==!0&&this.type===Hi&&w(ae,L),ae.needsUpdate=!1}x=this.type,S.needsUpdate=!1,n.setRenderTarget(U,A,R)};function w(P,C){const L=e.update(T);m.defines.VSM_SAMPLES!==P.blurSamples&&(m.defines.VSM_SAMPLES=P.blurSamples,g.defines.VSM_SAMPLES=P.blurSamples,m.needsUpdate=!0,g.needsUpdate=!0),P.mapPass===null&&(P.mapPass=new wt(r.x,r.y)),m.uniforms.shadow_pass.value=P.map.texture,m.uniforms.resolution.value=P.mapSize,m.uniforms.radius.value=P.radius,n.setRenderTarget(P.mapPass),n.clear(),n.renderBufferDirect(C,null,L,m,T,null),g.uniforms.shadow_pass.value=P.mapPass.texture,g.uniforms.resolution.value=P.mapSize,g.uniforms.radius.value=P.radius,n.setRenderTarget(P.map),n.clear(),n.renderBufferDirect(C,null,L,g,T,null)}function M(P,C,L,U){let A=null;const R=L.isPointLight===!0?P.customDistanceMaterial:P.customDepthMaterial;if(R!==void 0)A=R;else if(A=L.isPointLight===!0?u:c,n.localClippingEnabled&&C.clipShadows===!0&&Array.isArray(C.clippingPlanes)&&C.clippingPlanes.length!==0||C.displacementMap&&C.displacementScale!==0||C.alphaMap&&C.alphaTest>0||C.map&&C.alphaTest>0){const z=A.uuid,te=C.uuid;let W=h[z];W===void 0&&(W={},h[z]=W);let J=W[te];J===void 0&&(J=A.clone(),W[te]=J),A=J}if(A.visible=C.visible,A.wireframe=C.wireframe,U===Hi?A.side=C.shadowSide!==null?C.shadowSide:C.side:A.side=C.shadowSide!==null?C.shadowSide:p[C.side],A.alphaMap=C.alphaMap,A.alphaTest=C.alphaTest,A.map=C.map,A.clipShadows=C.clipShadows,A.clippingPlanes=C.clippingPlanes,A.clipIntersection=C.clipIntersection,A.displacementMap=C.displacementMap,A.displacementScale=C.displacementScale,A.displacementBias=C.displacementBias,A.wireframeLinewidth=C.wireframeLinewidth,A.linewidth=C.linewidth,L.isPointLight===!0&&A.isMeshDistanceMaterial===!0){const z=n.properties.get(A);z.light=L}return A}function b(P,C,L,U,A){if(P.visible===!1)return;if(P.layers.test(C.layers)&&(P.isMesh||P.isLine||P.isPoints)&&(P.castShadow||P.receiveShadow&&A===Hi)&&(!P.frustumCulled||i.intersectsObject(P))){P.modelViewMatrix.multiplyMatrices(L.matrixWorldInverse,P.matrixWorld);const te=e.update(P),W=P.material;if(Array.isArray(W)){const J=te.groups;for(let ne=0,ue=J.length;ne<ue;ne++){const ae=J[ne],B=W[ae.materialIndex];if(B&&B.visible){const X=M(P,B,U,A);n.renderBufferDirect(L,null,te,X,P,ae)}}}else if(W.visible){const J=M(P,W,U,A);n.renderBufferDirect(L,null,te,J,P,null)}}const z=P.children;for(let te=0,W=z.length;te<W;te++)b(z[te],C,L,U,A)}}function rA(n,e,t){const i=t.isWebGL2;function r(){let G=!1;const Ae=new Et;let se=null;const Ce=new Et(0,0,0,0);return{setMask:function(Fe){se!==Fe&&!G&&(n.colorMask(Fe,Fe,Fe,Fe),se=Fe)},setLocked:function(Fe){G=Fe},setClear:function(Fe,bt,Wt,fn,si){si===!0&&(Fe*=fn,bt*=fn,Wt*=fn),Ae.set(Fe,bt,Wt,fn),Ce.equals(Ae)===!1&&(n.clearColor(Fe,bt,Wt,fn),Ce.copy(Ae))},reset:function(){G=!1,se=null,Ce.set(-1,0,0,0)}}}function s(){let G=!1,Ae=null,se=null,Ce=null;return{setTest:function(Fe){Fe?He(n.DEPTH_TEST):je(n.DEPTH_TEST)},setMask:function(Fe){Ae!==Fe&&!G&&(n.depthMask(Fe),Ae=Fe)},setFunc:function(Fe){if(se!==Fe){switch(Fe){case Ep:n.depthFunc(n.NEVER);break;case bp:n.depthFunc(n.ALWAYS);break;case Gu:n.depthFunc(n.LESS);break;case cl:n.depthFunc(n.LEQUAL);break;case ul:n.depthFunc(n.EQUAL);break;case Ap:n.depthFunc(n.GEQUAL);break;case Pp:n.depthFunc(n.GREATER);break;case Qu:n.depthFunc(n.NOTEQUAL);break;default:n.depthFunc(n.LEQUAL)}se=Fe}},setLocked:function(Fe){G=Fe},setClear:function(Fe){Ce!==Fe&&(n.clearDepth(Fe),Ce=Fe)},reset:function(){G=!1,Ae=null,se=null,Ce=null}}}function a(){let G=!1,Ae=null,se=null,Ce=null,Fe=null,bt=null,Wt=null,fn=null,si=null;return{setTest:function(qt){G||(qt?He(n.STENCIL_TEST):je(n.STENCIL_TEST))},setMask:function(qt){Ae!==qt&&!G&&(n.stencilMask(qt),Ae=qt)},setFunc:function(qt,ai,Un){(se!==qt||Ce!==ai||Fe!==Un)&&(n.stencilFunc(qt,ai,Un),se=qt,Ce=ai,Fe=Un)},setOp:function(qt,ai,Un){(bt!==qt||Wt!==ai||fn!==Un)&&(n.stencilOp(qt,ai,Un),bt=qt,Wt=ai,fn=Un)},setLocked:function(qt){G=qt},setClear:function(qt){si!==qt&&(n.clearStencil(qt),si=qt)},reset:function(){G=!1,Ae=null,se=null,Ce=null,Fe=null,bt=null,Wt=null,fn=null,si=null}}}const c=new r,u=new s,h=new a,f=new WeakMap,p=new WeakMap;let m={},g={},y=new WeakMap,T=[],S=null,x=!1,w=null,M=null,b=null,P=null,C=null,L=null,U=null,A=!1,R=null,z=null,te=null,W=null,J=null;const ne=n.getParameter(n.MAX_COMBINED_TEXTURE_IMAGE_UNITS);let ue=!1,ae=0;const B=n.getParameter(n.VERSION);B.indexOf("WebGL")!==-1?(ae=parseFloat(/^WebGL (\d)/.exec(B)[1]),ue=ae>=1):B.indexOf("OpenGL ES")!==-1&&(ae=parseFloat(/^OpenGL ES (\d)/.exec(B)[1]),ue=ae>=2);let X=null,Y={};const H=n.getParameter(n.SCISSOR_BOX),q=n.getParameter(n.VIEWPORT),ye=new Et().fromArray(H),ge=new Et().fromArray(q);function Pe(G,Ae,se,Ce){const Fe=new Uint8Array(4),bt=n.createTexture();n.bindTexture(G,bt),n.texParameteri(G,n.TEXTURE_MIN_FILTER,n.NEAREST),n.texParameteri(G,n.TEXTURE_MAG_FILTER,n.NEAREST);for(let Wt=0;Wt<se;Wt++)i&&(G===n.TEXTURE_3D||G===n.TEXTURE_2D_ARRAY)?n.texImage3D(Ae,0,n.RGBA,1,1,Ce,0,n.RGBA,n.UNSIGNED_BYTE,Fe):n.texImage2D(Ae+Wt,0,n.RGBA,1,1,0,n.RGBA,n.UNSIGNED_BYTE,Fe);return bt}const Ue={};Ue[n.TEXTURE_2D]=Pe(n.TEXTURE_2D,n.TEXTURE_2D,1),Ue[n.TEXTURE_CUBE_MAP]=Pe(n.TEXTURE_CUBE_MAP,n.TEXTURE_CUBE_MAP_POSITIVE_X,6),i&&(Ue[n.TEXTURE_2D_ARRAY]=Pe(n.TEXTURE_2D_ARRAY,n.TEXTURE_2D_ARRAY,1,1),Ue[n.TEXTURE_3D]=Pe(n.TEXTURE_3D,n.TEXTURE_3D,1,1)),c.setClear(0,0,0,1),u.setClear(1),h.setClear(0),He(n.DEPTH_TEST),u.setFunc(cl),ve(!1),Ze(Id),He(n.CULL_FACE),me(Jt);function He(G){m[G]!==!0&&(n.enable(G),m[G]=!0)}function je(G){m[G]!==!1&&(n.disable(G),m[G]=!1)}function Tt(G,Ae){return g[G]!==Ae?(n.bindFramebuffer(G,Ae),g[G]=Ae,i&&(G===n.DRAW_FRAMEBUFFER&&(g[n.FRAMEBUFFER]=Ae),G===n.FRAMEBUFFER&&(g[n.DRAW_FRAMEBUFFER]=Ae)),!0):!1}function Nt(G,Ae){let se=T,Ce=!1;if(G)if(se=y.get(Ae),se===void 0&&(se=[],y.set(Ae,se)),G.isWebGLMultipleRenderTargets){const Fe=G.texture;if(se.length!==Fe.length||se[0]!==n.COLOR_ATTACHMENT0){for(let bt=0,Wt=Fe.length;bt<Wt;bt++)se[bt]=n.COLOR_ATTACHMENT0+bt;se.length=Fe.length,Ce=!0}}else se[0]!==n.COLOR_ATTACHMENT0&&(se[0]=n.COLOR_ATTACHMENT0,Ce=!0);else se[0]!==n.BACK&&(se[0]=n.BACK,Ce=!0);Ce&&(t.isWebGL2?n.drawBuffers(se):e.get("WEBGL_draw_buffers").drawBuffersWEBGL(se))}function Ye(G){return S!==G?(n.useProgram(G),S=G,!0):!1}const k={[Ds]:n.FUNC_ADD,[Yx]:n.FUNC_SUBTRACT,[Zx]:n.FUNC_REVERSE_SUBTRACT};if(i)k[Od]=n.MIN,k[Bd]=n.MAX;else{const G=e.get("EXT_blend_minmax");G!==null&&(k[Od]=G.MIN_EXT,k[Bd]=G.MAX_EXT)}const xe={[qx]:n.ZERO,[jx]:n.ONE,[Kx]:n.SRC_COLOR,[Tp]:n.SRC_ALPHA,[ny]:n.SRC_ALPHA_SATURATE,[ey]:n.DST_COLOR,[Jx]:n.DST_ALPHA,[Qx]:n.ONE_MINUS_SRC_COLOR,[wp]:n.ONE_MINUS_SRC_ALPHA,[ty]:n.ONE_MINUS_DST_COLOR,[$x]:n.ONE_MINUS_DST_ALPHA};function me(G,Ae,se,Ce,Fe,bt,Wt,fn){if(G===Jt){x===!0&&(je(n.BLEND),x=!1);return}if(x===!1&&(He(n.BLEND),x=!0),G!==Xx){if(G!==w||fn!==A){if((M!==Ds||C!==Ds)&&(n.blendEquation(n.FUNC_ADD),M=Ds,C=Ds),fn)switch(G){case ks:n.blendFuncSeparate(n.ONE,n.ONE_MINUS_SRC_ALPHA,n.ONE,n.ONE_MINUS_SRC_ALPHA);break;case Ud:n.blendFunc(n.ONE,n.ONE);break;case Nd:n.blendFuncSeparate(n.ZERO,n.ONE_MINUS_SRC_COLOR,n.ZERO,n.ONE);break;case Fd:n.blendFuncSeparate(n.ZERO,n.SRC_COLOR,n.ZERO,n.SRC_ALPHA);break;default:console.error("THREE.WebGLState: Invalid blending: ",G);break}else switch(G){case ks:n.blendFuncSeparate(n.SRC_ALPHA,n.ONE_MINUS_SRC_ALPHA,n.ONE,n.ONE_MINUS_SRC_ALPHA);break;case Ud:n.blendFunc(n.SRC_ALPHA,n.ONE);break;case Nd:n.blendFuncSeparate(n.ZERO,n.ONE_MINUS_SRC_COLOR,n.ZERO,n.ONE);break;case Fd:n.blendFunc(n.ZERO,n.SRC_COLOR);break;default:console.error("THREE.WebGLState: Invalid blending: ",G);break}b=null,P=null,L=null,U=null,w=G,A=fn}return}Fe=Fe||Ae,bt=bt||se,Wt=Wt||Ce,(Ae!==M||Fe!==C)&&(n.blendEquationSeparate(k[Ae],k[Fe]),M=Ae,C=Fe),(se!==b||Ce!==P||bt!==L||Wt!==U)&&(n.blendFuncSeparate(xe[se],xe[Ce],xe[bt],xe[Wt]),b=se,P=Ce,L=bt,U=Wt),w=G,A=!1}function we(G,Ae){G.side===ni?je(n.CULL_FACE):He(n.CULL_FACE);let se=G.side===_n;Ae&&(se=!se),ve(se),G.blending===ks&&G.transparent===!1?me(Jt):me(G.blending,G.blendEquation,G.blendSrc,G.blendDst,G.blendEquationAlpha,G.blendSrcAlpha,G.blendDstAlpha,G.premultipliedAlpha),u.setFunc(G.depthFunc),u.setTest(G.depthTest),u.setMask(G.depthWrite),c.setMask(G.colorWrite);const Ce=G.stencilWrite;h.setTest(Ce),Ce&&(h.setMask(G.stencilWriteMask),h.setFunc(G.stencilFunc,G.stencilRef,G.stencilFuncMask),h.setOp(G.stencilFail,G.stencilZFail,G.stencilZPass)),ke(G.polygonOffset,G.polygonOffsetFactor,G.polygonOffsetUnits),G.alphaToCoverage===!0?He(n.SAMPLE_ALPHA_TO_COVERAGE):je(n.SAMPLE_ALPHA_TO_COVERAGE)}function ve(G){R!==G&&(G?n.frontFace(n.CW):n.frontFace(n.CCW),R=G)}function Ze(G){G!==Vx?(He(n.CULL_FACE),G!==z&&(G===Id?n.cullFace(n.BACK):G===Gx?n.cullFace(n.FRONT):n.cullFace(n.FRONT_AND_BACK))):je(n.CULL_FACE),z=G}function Be(G){G!==te&&(ue&&n.lineWidth(G),te=G)}function ke(G,Ae,se){G?(He(n.POLYGON_OFFSET_FILL),(W!==Ae||J!==se)&&(n.polygonOffset(Ae,se),W=Ae,J=se)):je(n.POLYGON_OFFSET_FILL)}function $e(G){G?He(n.SCISSOR_TEST):je(n.SCISSOR_TEST)}function yt(G){G===void 0&&(G=n.TEXTURE0+ne-1),X!==G&&(n.activeTexture(G),X=G)}function Gt(G,Ae,se){se===void 0&&(X===null?se=n.TEXTURE0+ne-1:se=X);let Ce=Y[se];Ce===void 0&&(Ce={type:void 0,texture:void 0},Y[se]=Ce),(Ce.type!==G||Ce.texture!==Ae)&&(X!==se&&(n.activeTexture(se),X=se),n.bindTexture(G,Ae||Ue[G]),Ce.type=G,Ce.texture=Ae)}function O(){const G=Y[X];G!==void 0&&G.type!==void 0&&(n.bindTexture(G.type,null),G.type=void 0,G.texture=void 0)}function D(){try{n.compressedTexImage2D.apply(n,arguments)}catch(G){console.error("THREE.WebGLState:",G)}}function ce(){try{n.compressedTexImage3D.apply(n,arguments)}catch(G){console.error("THREE.WebGLState:",G)}}function Te(){try{n.texSubImage2D.apply(n,arguments)}catch(G){console.error("THREE.WebGLState:",G)}}function Me(){try{n.texSubImage3D.apply(n,arguments)}catch(G){console.error("THREE.WebGLState:",G)}}function Le(){try{n.compressedTexSubImage2D.apply(n,arguments)}catch(G){console.error("THREE.WebGLState:",G)}}function We(){try{n.compressedTexSubImage3D.apply(n,arguments)}catch(G){console.error("THREE.WebGLState:",G)}}function Re(){try{n.texStorage2D.apply(n,arguments)}catch(G){console.error("THREE.WebGLState:",G)}}function fe(){try{n.texStorage3D.apply(n,arguments)}catch(G){console.error("THREE.WebGLState:",G)}}function V(){try{n.texImage2D.apply(n,arguments)}catch(G){console.error("THREE.WebGLState:",G)}}function he(){try{n.texImage3D.apply(n,arguments)}catch(G){console.error("THREE.WebGLState:",G)}}function Se(G){ye.equals(G)===!1&&(n.scissor(G.x,G.y,G.z,G.w),ye.copy(G))}function _e(G){ge.equals(G)===!1&&(n.viewport(G.x,G.y,G.z,G.w),ge.copy(G))}function De(G,Ae){let se=p.get(Ae);se===void 0&&(se=new WeakMap,p.set(Ae,se));let Ce=se.get(G);Ce===void 0&&(Ce=n.getUniformBlockIndex(Ae,G.name),se.set(G,Ce))}function nt(G,Ae){const Ce=p.get(Ae).get(G);f.get(Ae)!==Ce&&(n.uniformBlockBinding(Ae,Ce,G.__bindingPointIndex),f.set(Ae,Ce))}function At(){n.disable(n.BLEND),n.disable(n.CULL_FACE),n.disable(n.DEPTH_TEST),n.disable(n.POLYGON_OFFSET_FILL),n.disable(n.SCISSOR_TEST),n.disable(n.STENCIL_TEST),n.disable(n.SAMPLE_ALPHA_TO_COVERAGE),n.blendEquation(n.FUNC_ADD),n.blendFunc(n.ONE,n.ZERO),n.blendFuncSeparate(n.ONE,n.ZERO,n.ONE,n.ZERO),n.colorMask(!0,!0,!0,!0),n.clearColor(0,0,0,0),n.depthMask(!0),n.depthFunc(n.LESS),n.clearDepth(1),n.stencilMask(4294967295),n.stencilFunc(n.ALWAYS,0,4294967295),n.stencilOp(n.KEEP,n.KEEP,n.KEEP),n.clearStencil(0),n.cullFace(n.BACK),n.frontFace(n.CCW),n.polygonOffset(0,0),n.activeTexture(n.TEXTURE0),n.bindFramebuffer(n.FRAMEBUFFER,null),i===!0&&(n.bindFramebuffer(n.DRAW_FRAMEBUFFER,null),n.bindFramebuffer(n.READ_FRAMEBUFFER,null)),n.useProgram(null),n.lineWidth(1),n.scissor(0,0,n.canvas.width,n.canvas.height),n.viewport(0,0,n.canvas.width,n.canvas.height),m={},X=null,Y={},g={},y=new WeakMap,T=[],S=null,x=!1,w=null,M=null,b=null,P=null,C=null,L=null,U=null,A=!1,R=null,z=null,te=null,W=null,J=null,ye.set(0,0,n.canvas.width,n.canvas.height),ge.set(0,0,n.canvas.width,n.canvas.height),c.reset(),u.reset(),h.reset()}return{buffers:{color:c,depth:u,stencil:h},enable:He,disable:je,bindFramebuffer:Tt,drawBuffers:Nt,useProgram:Ye,setBlending:me,setMaterial:we,setFlipSided:ve,setCullFace:Ze,setLineWidth:Be,setPolygonOffset:ke,setScissorTest:$e,activeTexture:yt,bindTexture:Gt,unbindTexture:O,compressedTexImage2D:D,compressedTexImage3D:ce,texImage2D:V,texImage3D:he,updateUBOMapping:De,uniformBlockBinding:nt,texStorage2D:Re,texStorage3D:fe,texSubImage2D:Te,texSubImage3D:Me,compressedTexSubImage2D:Le,compressedTexSubImage3D:We,scissor:Se,viewport:_e,reset:At}}function sA(n,e,t,i,r,s,a){const c=r.isWebGL2,u=r.maxTextures,h=r.maxCubemapSize,f=r.maxTextureSize,p=r.maxSamples,m=e.has("WEBGL_multisampled_render_to_texture")?e.get("WEBGL_multisampled_render_to_texture"):null,g=typeof navigator>"u"?!1:/OculusBrowser/g.test(navigator.userAgent),y=new WeakMap;let T;const S=new WeakMap;let x=!1;try{x=typeof OffscreenCanvas<"u"&&new OffscreenCanvas(1,1).getContext("2d")!==null}catch{}function w(O,D){return x?new OffscreenCanvas(O,D):yl("canvas")}function M(O,D,ce,Te){let Me=1;if((O.width>Te||O.height>Te)&&(Me=Te/Math.max(O.width,O.height)),Me<1||D===!0)if(typeof HTMLImageElement<"u"&&O instanceof HTMLImageElement||typeof HTMLCanvasElement<"u"&&O instanceof HTMLCanvasElement||typeof ImageBitmap<"u"&&O instanceof ImageBitmap){const Le=D?Zu:Math.floor,We=Le(Me*O.width),Re=Le(Me*O.height);T===void 0&&(T=w(We,Re));const fe=ce?w(We,Re):T;return fe.width=We,fe.height=Re,fe.getContext("2d").drawImage(O,0,0,We,Re),console.warn("THREE.WebGLRenderer: Texture has been resized from ("+O.width+"x"+O.height+") to ("+We+"x"+Re+")."),fe}else return"data"in O&&console.warn("THREE.WebGLRenderer: Image in DataTexture is too big ("+O.width+"x"+O.height+")."),O;return O}function b(O){return lp(O.width)&&lp(O.height)}function P(O){return c?!1:O.wrapS!==Mn||O.wrapT!==Mn||O.minFilter!==ct&&O.minFilter!==Qe}function C(O,D){return O.generateMipmaps&&D&&O.minFilter!==ct&&O.minFilter!==Qe}function L(O){n.generateMipmap(O)}function U(O,D,ce,Te,Me=!1){if(c===!1)return D;if(O!==null){if(n[O]!==void 0)return n[O];console.warn("THREE.WebGLRenderer: Attempt to use non-existing WebGL internal format '"+O+"'")}let Le=D;return D===n.RED&&(ce===n.FLOAT&&(Le=n.R32F),ce===n.HALF_FLOAT&&(Le=n.R16F),ce===n.UNSIGNED_BYTE&&(Le=n.R8)),D===n.RG&&(ce===n.FLOAT&&(Le=n.RG32F),ce===n.HALF_FLOAT&&(Le=n.RG16F),ce===n.UNSIGNED_BYTE&&(Le=n.RG8)),D===n.RGBA&&(ce===n.FLOAT&&(Le=n.RGBA32F),ce===n.HALF_FLOAT&&(Le=n.RGBA16F),ce===n.UNSIGNED_BYTE&&(Le=Te===pt&&Me===!1?n.SRGB8_ALPHA8:n.RGBA8),ce===n.UNSIGNED_SHORT_4_4_4_4&&(Le=n.RGBA4),ce===n.UNSIGNED_SHORT_5_5_5_1&&(Le=n.RGB5_A1)),(Le===n.R16F||Le===n.R32F||Le===n.RG16F||Le===n.RG32F||Le===n.RGBA16F||Le===n.RGBA32F)&&e.get("EXT_color_buffer_float"),Le}function A(O,D,ce){return C(O,ce)===!0||O.isFramebufferTexture&&O.minFilter!==ct&&O.minFilter!==Qe?Math.log2(Math.max(D.width,D.height))+1:O.mipmaps!==void 0&&O.mipmaps.length>0?O.mipmaps.length:O.isCompressedTexture&&Array.isArray(O.image)?D.mipmaps.length:1}function R(O){return O===ct||O===Wu||O===tl?n.NEAREST:n.LINEAR}function z(O){const D=O.target;D.removeEventListener("dispose",z),W(D),D.isVideoTexture&&y.delete(D)}function te(O){const D=O.target;D.removeEventListener("dispose",te),ne(D)}function W(O){const D=i.get(O);if(D.__webglInit===void 0)return;const ce=O.source,Te=S.get(ce);if(Te){const Me=Te[D.__cacheKey];Me.usedTimes--,Me.usedTimes===0&&J(O),Object.keys(Te).length===0&&S.delete(ce)}i.remove(O)}function J(O){const D=i.get(O);n.deleteTexture(D.__webglTexture);const ce=O.source,Te=S.get(ce);delete Te[D.__cacheKey],a.memory.textures--}function ne(O){const D=O.texture,ce=i.get(O),Te=i.get(D);if(Te.__webglTexture!==void 0&&(n.deleteTexture(Te.__webglTexture),a.memory.textures--),O.depthTexture&&O.depthTexture.dispose(),O.isWebGLCubeRenderTarget)for(let Me=0;Me<6;Me++)n.deleteFramebuffer(ce.__webglFramebuffer[Me]),ce.__webglDepthbuffer&&n.deleteRenderbuffer(ce.__webglDepthbuffer[Me]);else{if(n.deleteFramebuffer(ce.__webglFramebuffer),ce.__webglDepthbuffer&&n.deleteRenderbuffer(ce.__webglDepthbuffer),ce.__webglMultisampledFramebuffer&&n.deleteFramebuffer(ce.__webglMultisampledFramebuffer),ce.__webglColorRenderbuffer)for(let Me=0;Me<ce.__webglColorRenderbuffer.length;Me++)ce.__webglColorRenderbuffer[Me]&&n.deleteRenderbuffer(ce.__webglColorRenderbuffer[Me]);ce.__webglDepthRenderbuffer&&n.deleteRenderbuffer(ce.__webglDepthRenderbuffer)}if(O.isWebGLMultipleRenderTargets)for(let Me=0,Le=D.length;Me<Le;Me++){const We=i.get(D[Me]);We.__webglTexture&&(n.deleteTexture(We.__webglTexture),a.memory.textures--),i.remove(D[Me])}i.remove(D),i.remove(O)}let ue=0;function ae(){ue=0}function B(){const O=ue;return O>=u&&console.warn("THREE.WebGLTextures: Trying to use "+O+" texture units while this GPU supports only "+u),ue+=1,O}function X(O){const D=[];return D.push(O.wrapS),D.push(O.wrapT),D.push(O.wrapR||0),D.push(O.magFilter),D.push(O.minFilter),D.push(O.anisotropy),D.push(O.internalFormat),D.push(O.format),D.push(O.type),D.push(O.generateMipmaps),D.push(O.premultiplyAlpha),D.push(O.flipY),D.push(O.unpackAlignment),D.push(O.colorSpace),D.join()}function Y(O,D){const ce=i.get(O);if(O.isVideoTexture&&yt(O),O.isRenderTargetTexture===!1&&O.version>0&&ce.__version!==O.version){const Te=O.image;if(Te===null)console.warn("THREE.WebGLRenderer: Texture marked for update but no image data found.");else if(Te.complete===!1)console.warn("THREE.WebGLRenderer: Texture marked for update but image is incomplete");else{Tt(ce,O,D);return}}t.bindTexture(n.TEXTURE_2D,ce.__webglTexture,n.TEXTURE0+D)}function H(O,D){const ce=i.get(O);if(O.version>0&&ce.__version!==O.version){Tt(ce,O,D);return}t.bindTexture(n.TEXTURE_2D_ARRAY,ce.__webglTexture,n.TEXTURE0+D)}function q(O,D){const ce=i.get(O);if(O.version>0&&ce.__version!==O.version){Tt(ce,O,D);return}t.bindTexture(n.TEXTURE_3D,ce.__webglTexture,n.TEXTURE0+D)}function ye(O,D){const ce=i.get(O);if(O.version>0&&ce.__version!==O.version){Nt(ce,O,D);return}t.bindTexture(n.TEXTURE_CUBE_MAP,ce.__webglTexture,n.TEXTURE0+D)}const ge={[vi]:n.REPEAT,[Mn]:n.CLAMP_TO_EDGE,[dl]:n.MIRRORED_REPEAT},Pe={[ct]:n.NEAREST,[Wu]:n.NEAREST_MIPMAP_NEAREST,[tl]:n.NEAREST_MIPMAP_LINEAR,[Qe]:n.LINEAR,[Rp]:n.LINEAR_MIPMAP_NEAREST,[es]:n.LINEAR_MIPMAP_LINEAR},Ue={[Sy]:n.NEVER,[Ay]:n.ALWAYS,[My]:n.LESS,[Ty]:n.LEQUAL,[_y]:n.EQUAL,[by]:n.GEQUAL,[wy]:n.GREATER,[Ey]:n.NOTEQUAL};function He(O,D,ce){if(ce?(n.texParameteri(O,n.TEXTURE_WRAP_S,ge[D.wrapS]),n.texParameteri(O,n.TEXTURE_WRAP_T,ge[D.wrapT]),(O===n.TEXTURE_3D||O===n.TEXTURE_2D_ARRAY)&&n.texParameteri(O,n.TEXTURE_WRAP_R,ge[D.wrapR]),n.texParameteri(O,n.TEXTURE_MAG_FILTER,Pe[D.magFilter]),n.texParameteri(O,n.TEXTURE_MIN_FILTER,Pe[D.minFilter])):(n.texParameteri(O,n.TEXTURE_WRAP_S,n.CLAMP_TO_EDGE),n.texParameteri(O,n.TEXTURE_WRAP_T,n.CLAMP_TO_EDGE),(O===n.TEXTURE_3D||O===n.TEXTURE_2D_ARRAY)&&n.texParameteri(O,n.TEXTURE_WRAP_R,n.CLAMP_TO_EDGE),(D.wrapS!==Mn||D.wrapT!==Mn)&&console.warn("THREE.WebGLRenderer: Texture is not power of two. Texture.wrapS and Texture.wrapT should be set to THREE.ClampToEdgeWrapping."),n.texParameteri(O,n.TEXTURE_MAG_FILTER,R(D.magFilter)),n.texParameteri(O,n.TEXTURE_MIN_FILTER,R(D.minFilter)),D.minFilter!==ct&&D.minFilter!==Qe&&console.warn("THREE.WebGLRenderer: Texture is not power of two. Texture.minFilter should be set to THREE.NearestFilter or THREE.LinearFilter.")),D.compareFunction&&(n.texParameteri(O,n.TEXTURE_COMPARE_MODE,n.COMPARE_REF_TO_TEXTURE),n.texParameteri(O,n.TEXTURE_COMPARE_FUNC,Ue[D.compareFunction])),e.has("EXT_texture_filter_anisotropic")===!0){const Te=e.get("EXT_texture_filter_anisotropic");if(D.magFilter===ct||D.minFilter!==tl&&D.minFilter!==es||D.type===tn&&e.has("OES_texture_float_linear")===!1||c===!1&&D.type===ii&&e.has("OES_texture_half_float_linear")===!1)return;(D.anisotropy>1||i.get(D).__currentAnisotropy)&&(n.texParameterf(O,Te.TEXTURE_MAX_ANISOTROPY_EXT,Math.min(D.anisotropy,r.getMaxAnisotropy())),i.get(D).__currentAnisotropy=D.anisotropy)}}function je(O,D){let ce=!1;O.__webglInit===void 0&&(O.__webglInit=!0,D.addEventListener("dispose",z));const Te=D.source;let Me=S.get(Te);Me===void 0&&(Me={},S.set(Te,Me));const Le=X(D);if(Le!==O.__cacheKey){Me[Le]===void 0&&(Me[Le]={texture:n.createTexture(),usedTimes:0},a.memory.textures++,ce=!0),Me[Le].usedTimes++;const We=Me[O.__cacheKey];We!==void 0&&(Me[O.__cacheKey].usedTimes--,We.usedTimes===0&&J(D)),O.__cacheKey=Le,O.__webglTexture=Me[Le].texture}return ce}function Tt(O,D,ce){let Te=n.TEXTURE_2D;(D.isDataArrayTexture||D.isCompressedArrayTexture)&&(Te=n.TEXTURE_2D_ARRAY),D.isData3DTexture&&(Te=n.TEXTURE_3D);const Me=je(O,D),Le=D.source;t.bindTexture(Te,O.__webglTexture,n.TEXTURE0+ce);const We=i.get(Le);if(Le.version!==We.__version||Me===!0){t.activeTexture(n.TEXTURE0+ce),n.pixelStorei(n.UNPACK_FLIP_Y_WEBGL,D.flipY),n.pixelStorei(n.UNPACK_PREMULTIPLY_ALPHA_WEBGL,D.premultiplyAlpha),n.pixelStorei(n.UNPACK_ALIGNMENT,D.unpackAlignment),n.pixelStorei(n.UNPACK_COLORSPACE_CONVERSION_WEBGL,n.NONE);const Re=P(D)&&b(D.image)===!1;let fe=M(D.image,Re,!1,f);fe=Gt(D,fe);const V=b(fe)||c,he=s.convert(D.format,D.colorSpace);let Se=s.convert(D.type),_e=U(D.internalFormat,he,Se,D.colorSpace);He(Te,D,V);let De;const nt=D.mipmaps,At=c&&D.isVideoTexture!==!0,G=We.__version===void 0||Me===!0,Ae=A(D,fe,V);if(D.isDepthTexture)_e=n.DEPTH_COMPONENT,c?D.type===tn?_e=n.DEPTH_COMPONENT32F:D.type===ir?_e=n.DEPTH_COMPONENT24:D.type===br?_e=n.DEPTH24_STENCIL8:_e=n.DEPTH_COMPONENT16:D.type===tn&&console.error("WebGLRenderer: Floating point depth texture requires WebGL2."),D.format===Qr&&_e===n.DEPTH_COMPONENT&&D.type!==$u&&D.type!==ir&&(console.warn("THREE.WebGLRenderer: Use UnsignedShortType or UnsignedIntType for DepthFormat DepthTexture."),D.type=ir,Se=s.convert(D.type)),D.format===ts&&_e===n.DEPTH_COMPONENT&&(_e=n.DEPTH_STENCIL,D.type!==br&&(console.warn("THREE.WebGLRenderer: Use UnsignedInt248Type for DepthStencilFormat DepthTexture."),D.type=br,Se=s.convert(D.type))),G&&(At?t.texStorage2D(n.TEXTURE_2D,1,_e,fe.width,fe.height):t.texImage2D(n.TEXTURE_2D,0,_e,fe.width,fe.height,0,he,Se,null));else if(D.isDataTexture)if(nt.length>0&&V){At&&G&&t.texStorage2D(n.TEXTURE_2D,Ae,_e,nt[0].width,nt[0].height);for(let se=0,Ce=nt.length;se<Ce;se++)De=nt[se],At?t.texSubImage2D(n.TEXTURE_2D,se,0,0,De.width,De.height,he,Se,De.data):t.texImage2D(n.TEXTURE_2D,se,_e,De.width,De.height,0,he,Se,De.data);D.generateMipmaps=!1}else At?(G&&t.texStorage2D(n.TEXTURE_2D,Ae,_e,fe.width,fe.height),t.texSubImage2D(n.TEXTURE_2D,0,0,0,fe.width,fe.height,he,Se,fe.data)):t.texImage2D(n.TEXTURE_2D,0,_e,fe.width,fe.height,0,he,Se,fe.data);else if(D.isCompressedTexture)if(D.isCompressedArrayTexture){At&&G&&t.texStorage3D(n.TEXTURE_2D_ARRAY,Ae,_e,nt[0].width,nt[0].height,fe.depth);for(let se=0,Ce=nt.length;se<Ce;se++)De=nt[se],D.format!==Qt?he!==null?At?t.compressedTexSubImage3D(n.TEXTURE_2D_ARRAY,se,0,0,0,De.width,De.height,fe.depth,he,De.data,0,0):t.compressedTexImage3D(n.TEXTURE_2D_ARRAY,se,_e,De.width,De.height,fe.depth,0,De.data,0,0):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()"):At?t.texSubImage3D(n.TEXTURE_2D_ARRAY,se,0,0,0,De.width,De.height,fe.depth,he,Se,De.data):t.texImage3D(n.TEXTURE_2D_ARRAY,se,_e,De.width,De.height,fe.depth,0,he,Se,De.data)}else{At&&G&&t.texStorage2D(n.TEXTURE_2D,Ae,_e,nt[0].width,nt[0].height);for(let se=0,Ce=nt.length;se<Ce;se++)De=nt[se],D.format!==Qt?he!==null?At?t.compressedTexSubImage2D(n.TEXTURE_2D,se,0,0,De.width,De.height,he,De.data):t.compressedTexImage2D(n.TEXTURE_2D,se,_e,De.width,De.height,0,De.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()"):At?t.texSubImage2D(n.TEXTURE_2D,se,0,0,De.width,De.height,he,Se,De.data):t.texImage2D(n.TEXTURE_2D,se,_e,De.width,De.height,0,he,Se,De.data)}else if(D.isDataArrayTexture)At?(G&&t.texStorage3D(n.TEXTURE_2D_ARRAY,Ae,_e,fe.width,fe.height,fe.depth),t.texSubImage3D(n.TEXTURE_2D_ARRAY,0,0,0,0,fe.width,fe.height,fe.depth,he,Se,fe.data)):t.texImage3D(n.TEXTURE_2D_ARRAY,0,_e,fe.width,fe.height,fe.depth,0,he,Se,fe.data);else if(D.isData3DTexture)At?(G&&t.texStorage3D(n.TEXTURE_3D,Ae,_e,fe.width,fe.height,fe.depth),t.texSubImage3D(n.TEXTURE_3D,0,0,0,0,fe.width,fe.height,fe.depth,he,Se,fe.data)):t.texImage3D(n.TEXTURE_3D,0,_e,fe.width,fe.height,fe.depth,0,he,Se,fe.data);else if(D.isFramebufferTexture){if(G)if(At)t.texStorage2D(n.TEXTURE_2D,Ae,_e,fe.width,fe.height);else{let se=fe.width,Ce=fe.height;for(let Fe=0;Fe<Ae;Fe++)t.texImage2D(n.TEXTURE_2D,Fe,_e,se,Ce,0,he,Se,null),se>>=1,Ce>>=1}}else if(nt.length>0&&V){At&&G&&t.texStorage2D(n.TEXTURE_2D,Ae,_e,nt[0].width,nt[0].height);for(let se=0,Ce=nt.length;se<Ce;se++)De=nt[se],At?t.texSubImage2D(n.TEXTURE_2D,se,0,0,he,Se,De):t.texImage2D(n.TEXTURE_2D,se,_e,he,Se,De);D.generateMipmaps=!1}else At?(G&&t.texStorage2D(n.TEXTURE_2D,Ae,_e,fe.width,fe.height),t.texSubImage2D(n.TEXTURE_2D,0,0,0,he,Se,fe)):t.texImage2D(n.TEXTURE_2D,0,_e,he,Se,fe);C(D,V)&&L(Te),We.__version=Le.version,D.onUpdate&&D.onUpdate(D)}O.__version=D.version}function Nt(O,D,ce){if(D.image.length!==6)return;const Te=je(O,D),Me=D.source;t.bindTexture(n.TEXTURE_CUBE_MAP,O.__webglTexture,n.TEXTURE0+ce);const Le=i.get(Me);if(Me.version!==Le.__version||Te===!0){t.activeTexture(n.TEXTURE0+ce),n.pixelStorei(n.UNPACK_FLIP_Y_WEBGL,D.flipY),n.pixelStorei(n.UNPACK_PREMULTIPLY_ALPHA_WEBGL,D.premultiplyAlpha),n.pixelStorei(n.UNPACK_ALIGNMENT,D.unpackAlignment),n.pixelStorei(n.UNPACK_COLORSPACE_CONVERSION_WEBGL,n.NONE);const We=D.isCompressedTexture||D.image[0].isCompressedTexture,Re=D.image[0]&&D.image[0].isDataTexture,fe=[];for(let se=0;se<6;se++)!We&&!Re?fe[se]=M(D.image[se],!1,!0,h):fe[se]=Re?D.image[se].image:D.image[se],fe[se]=Gt(D,fe[se]);const V=fe[0],he=b(V)||c,Se=s.convert(D.format,D.colorSpace),_e=s.convert(D.type),De=U(D.internalFormat,Se,_e,D.colorSpace),nt=c&&D.isVideoTexture!==!0,At=Le.__version===void 0||Te===!0;let G=A(D,V,he);He(n.TEXTURE_CUBE_MAP,D,he);let Ae;if(We){nt&&At&&t.texStorage2D(n.TEXTURE_CUBE_MAP,G,De,V.width,V.height);for(let se=0;se<6;se++){Ae=fe[se].mipmaps;for(let Ce=0;Ce<Ae.length;Ce++){const Fe=Ae[Ce];D.format!==Qt?Se!==null?nt?t.compressedTexSubImage2D(n.TEXTURE_CUBE_MAP_POSITIVE_X+se,Ce,0,0,Fe.width,Fe.height,Se,Fe.data):t.compressedTexImage2D(n.TEXTURE_CUBE_MAP_POSITIVE_X+se,Ce,De,Fe.width,Fe.height,0,Fe.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .setTextureCube()"):nt?t.texSubImage2D(n.TEXTURE_CUBE_MAP_POSITIVE_X+se,Ce,0,0,Fe.width,Fe.height,Se,_e,Fe.data):t.texImage2D(n.TEXTURE_CUBE_MAP_POSITIVE_X+se,Ce,De,Fe.width,Fe.height,0,Se,_e,Fe.data)}}}else{Ae=D.mipmaps,nt&&At&&(Ae.length>0&&G++,t.texStorage2D(n.TEXTURE_CUBE_MAP,G,De,fe[0].width,fe[0].height));for(let se=0;se<6;se++)if(Re){nt?t.texSubImage2D(n.TEXTURE_CUBE_MAP_POSITIVE_X+se,0,0,0,fe[se].width,fe[se].height,Se,_e,fe[se].data):t.texImage2D(n.TEXTURE_CUBE_MAP_POSITIVE_X+se,0,De,fe[se].width,fe[se].height,0,Se,_e,fe[se].data);for(let Ce=0;Ce<Ae.length;Ce++){const bt=Ae[Ce].image[se].image;nt?t.texSubImage2D(n.TEXTURE_CUBE_MAP_POSITIVE_X+se,Ce+1,0,0,bt.width,bt.height,Se,_e,bt.data):t.texImage2D(n.TEXTURE_CUBE_MAP_POSITIVE_X+se,Ce+1,De,bt.width,bt.height,0,Se,_e,bt.data)}}else{nt?t.texSubImage2D(n.TEXTURE_CUBE_MAP_POSITIVE_X+se,0,0,0,Se,_e,fe[se]):t.texImage2D(n.TEXTURE_CUBE_MAP_POSITIVE_X+se,0,De,Se,_e,fe[se]);for(let Ce=0;Ce<Ae.length;Ce++){const Fe=Ae[Ce];nt?t.texSubImage2D(n.TEXTURE_CUBE_MAP_POSITIVE_X+se,Ce+1,0,0,Se,_e,Fe.image[se]):t.texImage2D(n.TEXTURE_CUBE_MAP_POSITIVE_X+se,Ce+1,De,Se,_e,Fe.image[se])}}}C(D,he)&&L(n.TEXTURE_CUBE_MAP),Le.__version=Me.version,D.onUpdate&&D.onUpdate(D)}O.__version=D.version}function Ye(O,D,ce,Te,Me){const Le=s.convert(ce.format,ce.colorSpace),We=s.convert(ce.type),Re=U(ce.internalFormat,Le,We,ce.colorSpace);i.get(D).__hasExternalTextures||(Me===n.TEXTURE_3D||Me===n.TEXTURE_2D_ARRAY?t.texImage3D(Me,0,Re,D.width,D.height,D.depth,0,Le,We,null):t.texImage2D(Me,0,Re,D.width,D.height,0,Le,We,null)),t.bindFramebuffer(n.FRAMEBUFFER,O),$e(D)?m.framebufferTexture2DMultisampleEXT(n.FRAMEBUFFER,Te,Me,i.get(ce).__webglTexture,0,ke(D)):(Me===n.TEXTURE_2D||Me>=n.TEXTURE_CUBE_MAP_POSITIVE_X&&Me<=n.TEXTURE_CUBE_MAP_NEGATIVE_Z)&&n.framebufferTexture2D(n.FRAMEBUFFER,Te,Me,i.get(ce).__webglTexture,0),t.bindFramebuffer(n.FRAMEBUFFER,null)}function k(O,D,ce){if(n.bindRenderbuffer(n.RENDERBUFFER,O),D.depthBuffer&&!D.stencilBuffer){let Te=n.DEPTH_COMPONENT16;if(ce||$e(D)){const Me=D.depthTexture;Me&&Me.isDepthTexture&&(Me.type===tn?Te=n.DEPTH_COMPONENT32F:Me.type===ir&&(Te=n.DEPTH_COMPONENT24));const Le=ke(D);$e(D)?m.renderbufferStorageMultisampleEXT(n.RENDERBUFFER,Le,Te,D.width,D.height):n.renderbufferStorageMultisample(n.RENDERBUFFER,Le,Te,D.width,D.height)}else n.renderbufferStorage(n.RENDERBUFFER,Te,D.width,D.height);n.framebufferRenderbuffer(n.FRAMEBUFFER,n.DEPTH_ATTACHMENT,n.RENDERBUFFER,O)}else if(D.depthBuffer&&D.stencilBuffer){const Te=ke(D);ce&&$e(D)===!1?n.renderbufferStorageMultisample(n.RENDERBUFFER,Te,n.DEPTH24_STENCIL8,D.width,D.height):$e(D)?m.renderbufferStorageMultisampleEXT(n.RENDERBUFFER,Te,n.DEPTH24_STENCIL8,D.width,D.height):n.renderbufferStorage(n.RENDERBUFFER,n.DEPTH_STENCIL,D.width,D.height),n.framebufferRenderbuffer(n.FRAMEBUFFER,n.DEPTH_STENCIL_ATTACHMENT,n.RENDERBUFFER,O)}else{const Te=D.isWebGLMultipleRenderTargets===!0?D.texture:[D.texture];for(let Me=0;Me<Te.length;Me++){const Le=Te[Me],We=s.convert(Le.format,Le.colorSpace),Re=s.convert(Le.type),fe=U(Le.internalFormat,We,Re,Le.colorSpace),V=ke(D);ce&&$e(D)===!1?n.renderbufferStorageMultisample(n.RENDERBUFFER,V,fe,D.width,D.height):$e(D)?m.renderbufferStorageMultisampleEXT(n.RENDERBUFFER,V,fe,D.width,D.height):n.renderbufferStorage(n.RENDERBUFFER,fe,D.width,D.height)}}n.bindRenderbuffer(n.RENDERBUFFER,null)}function xe(O,D){if(D&&D.isWebGLCubeRenderTarget)throw new Error("Depth Texture with cube render targets is not supported");if(t.bindFramebuffer(n.FRAMEBUFFER,O),!(D.depthTexture&&D.depthTexture.isDepthTexture))throw new Error("renderTarget.depthTexture must be an instance of THREE.DepthTexture");(!i.get(D.depthTexture).__webglTexture||D.depthTexture.image.width!==D.width||D.depthTexture.image.height!==D.height)&&(D.depthTexture.image.width=D.width,D.depthTexture.image.height=D.height,D.depthTexture.needsUpdate=!0),Y(D.depthTexture,0);const Te=i.get(D.depthTexture).__webglTexture,Me=ke(D);if(D.depthTexture.format===Qr)$e(D)?m.framebufferTexture2DMultisampleEXT(n.FRAMEBUFFER,n.DEPTH_ATTACHMENT,n.TEXTURE_2D,Te,0,Me):n.framebufferTexture2D(n.FRAMEBUFFER,n.DEPTH_ATTACHMENT,n.TEXTURE_2D,Te,0);else if(D.depthTexture.format===ts)$e(D)?m.framebufferTexture2DMultisampleEXT(n.FRAMEBUFFER,n.DEPTH_STENCIL_ATTACHMENT,n.TEXTURE_2D,Te,0,Me):n.framebufferTexture2D(n.FRAMEBUFFER,n.DEPTH_STENCIL_ATTACHMENT,n.TEXTURE_2D,Te,0);else throw new Error("Unknown depthTexture format")}function me(O){const D=i.get(O),ce=O.isWebGLCubeRenderTarget===!0;if(O.depthTexture&&!D.__autoAllocateDepthBuffer){if(ce)throw new Error("target.depthTexture not supported in Cube render targets");xe(D.__webglFramebuffer,O)}else if(ce){D.__webglDepthbuffer=[];for(let Te=0;Te<6;Te++)t.bindFramebuffer(n.FRAMEBUFFER,D.__webglFramebuffer[Te]),D.__webglDepthbuffer[Te]=n.createRenderbuffer(),k(D.__webglDepthbuffer[Te],O,!1)}else t.bindFramebuffer(n.FRAMEBUFFER,D.__webglFramebuffer),D.__webglDepthbuffer=n.createRenderbuffer(),k(D.__webglDepthbuffer,O,!1);t.bindFramebuffer(n.FRAMEBUFFER,null)}function we(O,D,ce){const Te=i.get(O);D!==void 0&&Ye(Te.__webglFramebuffer,O,O.texture,n.COLOR_ATTACHMENT0,n.TEXTURE_2D),ce!==void 0&&me(O)}function ve(O){const D=O.texture,ce=i.get(O),Te=i.get(D);O.addEventListener("dispose",te),O.isWebGLMultipleRenderTargets!==!0&&(Te.__webglTexture===void 0&&(Te.__webglTexture=n.createTexture()),Te.__version=D.version,a.memory.textures++);const Me=O.isWebGLCubeRenderTarget===!0,Le=O.isWebGLMultipleRenderTargets===!0,We=b(O)||c;if(Me){ce.__webglFramebuffer=[];for(let Re=0;Re<6;Re++)ce.__webglFramebuffer[Re]=n.createFramebuffer()}else{if(ce.__webglFramebuffer=n.createFramebuffer(),Le)if(r.drawBuffers){const Re=O.texture;for(let fe=0,V=Re.length;fe<V;fe++){const he=i.get(Re[fe]);he.__webglTexture===void 0&&(he.__webglTexture=n.createTexture(),a.memory.textures++)}}else console.warn("THREE.WebGLRenderer: WebGLMultipleRenderTargets can only be used with WebGL2 or WEBGL_draw_buffers extension.");if(c&&O.samples>0&&$e(O)===!1){const Re=Le?D:[D];ce.__webglMultisampledFramebuffer=n.createFramebuffer(),ce.__webglColorRenderbuffer=[],t.bindFramebuffer(n.FRAMEBUFFER,ce.__webglMultisampledFramebuffer);for(let fe=0;fe<Re.length;fe++){const V=Re[fe];ce.__webglColorRenderbuffer[fe]=n.createRenderbuffer(),n.bindRenderbuffer(n.RENDERBUFFER,ce.__webglColorRenderbuffer[fe]);const he=s.convert(V.format,V.colorSpace),Se=s.convert(V.type),_e=U(V.internalFormat,he,Se,V.colorSpace,O.isXRRenderTarget===!0),De=ke(O);n.renderbufferStorageMultisample(n.RENDERBUFFER,De,_e,O.width,O.height),n.framebufferRenderbuffer(n.FRAMEBUFFER,n.COLOR_ATTACHMENT0+fe,n.RENDERBUFFER,ce.__webglColorRenderbuffer[fe])}n.bindRenderbuffer(n.RENDERBUFFER,null),O.depthBuffer&&(ce.__webglDepthRenderbuffer=n.createRenderbuffer(),k(ce.__webglDepthRenderbuffer,O,!0)),t.bindFramebuffer(n.FRAMEBUFFER,null)}}if(Me){t.bindTexture(n.TEXTURE_CUBE_MAP,Te.__webglTexture),He(n.TEXTURE_CUBE_MAP,D,We);for(let Re=0;Re<6;Re++)Ye(ce.__webglFramebuffer[Re],O,D,n.COLOR_ATTACHMENT0,n.TEXTURE_CUBE_MAP_POSITIVE_X+Re);C(D,We)&&L(n.TEXTURE_CUBE_MAP),t.unbindTexture()}else if(Le){const Re=O.texture;for(let fe=0,V=Re.length;fe<V;fe++){const he=Re[fe],Se=i.get(he);t.bindTexture(n.TEXTURE_2D,Se.__webglTexture),He(n.TEXTURE_2D,he,We),Ye(ce.__webglFramebuffer,O,he,n.COLOR_ATTACHMENT0+fe,n.TEXTURE_2D),C(he,We)&&L(n.TEXTURE_2D)}t.unbindTexture()}else{let Re=n.TEXTURE_2D;(O.isWebGL3DRenderTarget||O.isWebGLArrayRenderTarget)&&(c?Re=O.isWebGL3DRenderTarget?n.TEXTURE_3D:n.TEXTURE_2D_ARRAY:console.error("THREE.WebGLTextures: THREE.Data3DTexture and THREE.DataArrayTexture only supported with WebGL2.")),t.bindTexture(Re,Te.__webglTexture),He(Re,D,We),Ye(ce.__webglFramebuffer,O,D,n.COLOR_ATTACHMENT0,Re),C(D,We)&&L(Re),t.unbindTexture()}O.depthBuffer&&me(O)}function Ze(O){const D=b(O)||c,ce=O.isWebGLMultipleRenderTargets===!0?O.texture:[O.texture];for(let Te=0,Me=ce.length;Te<Me;Te++){const Le=ce[Te];if(C(Le,D)){const We=O.isWebGLCubeRenderTarget?n.TEXTURE_CUBE_MAP:n.TEXTURE_2D,Re=i.get(Le).__webglTexture;t.bindTexture(We,Re),L(We),t.unbindTexture()}}}function Be(O){if(c&&O.samples>0&&$e(O)===!1){const D=O.isWebGLMultipleRenderTargets?O.texture:[O.texture],ce=O.width,Te=O.height;let Me=n.COLOR_BUFFER_BIT;const Le=[],We=O.stencilBuffer?n.DEPTH_STENCIL_ATTACHMENT:n.DEPTH_ATTACHMENT,Re=i.get(O),fe=O.isWebGLMultipleRenderTargets===!0;if(fe)for(let V=0;V<D.length;V++)t.bindFramebuffer(n.FRAMEBUFFER,Re.__webglMultisampledFramebuffer),n.framebufferRenderbuffer(n.FRAMEBUFFER,n.COLOR_ATTACHMENT0+V,n.RENDERBUFFER,null),t.bindFramebuffer(n.FRAMEBUFFER,Re.__webglFramebuffer),n.framebufferTexture2D(n.DRAW_FRAMEBUFFER,n.COLOR_ATTACHMENT0+V,n.TEXTURE_2D,null,0);t.bindFramebuffer(n.READ_FRAMEBUFFER,Re.__webglMultisampledFramebuffer),t.bindFramebuffer(n.DRAW_FRAMEBUFFER,Re.__webglFramebuffer);for(let V=0;V<D.length;V++){Le.push(n.COLOR_ATTACHMENT0+V),O.depthBuffer&&Le.push(We);const he=Re.__ignoreDepthValues!==void 0?Re.__ignoreDepthValues:!1;if(he===!1&&(O.depthBuffer&&(Me|=n.DEPTH_BUFFER_BIT),O.stencilBuffer&&(Me|=n.STENCIL_BUFFER_BIT)),fe&&n.framebufferRenderbuffer(n.READ_FRAMEBUFFER,n.COLOR_ATTACHMENT0,n.RENDERBUFFER,Re.__webglColorRenderbuffer[V]),he===!0&&(n.invalidateFramebuffer(n.READ_FRAMEBUFFER,[We]),n.invalidateFramebuffer(n.DRAW_FRAMEBUFFER,[We])),fe){const Se=i.get(D[V]).__webglTexture;n.framebufferTexture2D(n.DRAW_FRAMEBUFFER,n.COLOR_ATTACHMENT0,n.TEXTURE_2D,Se,0)}n.blitFramebuffer(0,0,ce,Te,0,0,ce,Te,Me,n.NEAREST),g&&n.invalidateFramebuffer(n.READ_FRAMEBUFFER,Le)}if(t.bindFramebuffer(n.READ_FRAMEBUFFER,null),t.bindFramebuffer(n.DRAW_FRAMEBUFFER,null),fe)for(let V=0;V<D.length;V++){t.bindFramebuffer(n.FRAMEBUFFER,Re.__webglMultisampledFramebuffer),n.framebufferRenderbuffer(n.FRAMEBUFFER,n.COLOR_ATTACHMENT0+V,n.RENDERBUFFER,Re.__webglColorRenderbuffer[V]);const he=i.get(D[V]).__webglTexture;t.bindFramebuffer(n.FRAMEBUFFER,Re.__webglFramebuffer),n.framebufferTexture2D(n.DRAW_FRAMEBUFFER,n.COLOR_ATTACHMENT0+V,n.TEXTURE_2D,he,0)}t.bindFramebuffer(n.DRAW_FRAMEBUFFER,Re.__webglMultisampledFramebuffer)}}function ke(O){return Math.min(p,O.samples)}function $e(O){const D=i.get(O);return c&&O.samples>0&&e.has("WEBGL_multisampled_render_to_texture")===!0&&D.__useRenderToTexture!==!1}function yt(O){const D=a.render.frame;y.get(O)!==D&&(y.set(O,D),O.update())}function Gt(O,D){const ce=O.colorSpace,Te=O.format,Me=O.type;return O.isCompressedTexture===!0||O.format===Yu||ce!==Yi&&ce!==Ar&&(ce===pt?c===!1?e.has("EXT_sRGB")===!0&&Te===Qt?(O.format=Yu,O.minFilter=Qe,O.generateMipmaps=!1):D=Hp.sRGBToLinear(D):(Te!==Qt||Me!==Vt)&&console.warn("THREE.WebGLTextures: sRGB encoded textures have to use RGBAFormat and UnsignedByteType."):console.error("THREE.WebGLTextures: Unsupported texture color space:",ce)),D}this.allocateTextureUnit=B,this.resetTextureUnits=ae,this.setTexture2D=Y,this.setTexture2DArray=H,this.setTexture3D=q,this.setTextureCube=ye,this.rebindTextures=we,this.setupRenderTarget=ve,this.updateRenderTargetMipmap=Ze,this.updateMultisampleRenderTarget=Be,this.setupDepthRenderbuffer=me,this.setupFrameBufferTexture=Ye,this.useMultisampledRTT=$e}function By(n,e,t){const i=t.isWebGL2;function r(s,a=Ar){let c;if(s===Vt)return n.UNSIGNED_BYTE;if(s===Lp)return n.UNSIGNED_SHORT_4_4_4_4;if(s===Ip)return n.UNSIGNED_SHORT_5_5_5_1;if(s===cy)return n.BYTE;if(s===uy)return n.SHORT;if(s===$u)return n.UNSIGNED_SHORT;if(s===Dp)return n.INT;if(s===ir)return n.UNSIGNED_INT;if(s===tn)return n.FLOAT;if(s===ii)return i?n.HALF_FLOAT:(c=e.get("OES_texture_half_float"),c!==null?c.HALF_FLOAT_OES:null);if(s===hy)return n.ALPHA;if(s===Qt)return n.RGBA;if(s===eh)return n.LUMINANCE;if(s===fy)return n.LUMINANCE_ALPHA;if(s===Qr)return n.DEPTH_COMPONENT;if(s===ts)return n.DEPTH_STENCIL;if(s===Yu)return c=e.get("EXT_sRGB"),c!==null?c.SRGB_ALPHA_EXT:null;if(s===th)return n.RED;if(s===Up)return n.RED_INTEGER;if(s===Np)return n.RG;if(s===Fp)return n.RG_INTEGER;if(s===Op)return n.RGBA_INTEGER;if(s===Iu||s===Uu||s===Nu||s===Fu)if(a===pt)if(c=e.get("WEBGL_compressed_texture_s3tc_srgb"),c!==null){if(s===Iu)return c.COMPRESSED_SRGB_S3TC_DXT1_EXT;if(s===Uu)return c.COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT;if(s===Nu)return c.COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT;if(s===Fu)return c.COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT}else return null;else if(c=e.get("WEBGL_compressed_texture_s3tc"),c!==null){if(s===Iu)return c.COMPRESSED_RGB_S3TC_DXT1_EXT;if(s===Uu)return c.COMPRESSED_RGBA_S3TC_DXT1_EXT;if(s===Nu)return c.COMPRESSED_RGBA_S3TC_DXT3_EXT;if(s===Fu)return c.COMPRESSED_RGBA_S3TC_DXT5_EXT}else return null;if(s===zd||s===kd||s===Hd||s===Vd)if(c=e.get("WEBGL_compressed_texture_pvrtc"),c!==null){if(s===zd)return c.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;if(s===kd)return c.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;if(s===Hd)return c.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;if(s===Vd)return c.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG}else return null;if(s===dy)return c=e.get("WEBGL_compressed_texture_etc1"),c!==null?c.COMPRESSED_RGB_ETC1_WEBGL:null;if(s===Gd||s===Wd)if(c=e.get("WEBGL_compressed_texture_etc"),c!==null){if(s===Gd)return a===pt?c.COMPRESSED_SRGB8_ETC2:c.COMPRESSED_RGB8_ETC2;if(s===Wd)return a===pt?c.COMPRESSED_SRGB8_ALPHA8_ETC2_EAC:c.COMPRESSED_RGBA8_ETC2_EAC}else return null;if(s===Xd||s===Yd||s===Zd||s===qd||s===jd||s===Kd||s===Qd||s===Jd||s===$d||s===ep||s===tp||s===np||s===ip||s===rp)if(c=e.get("WEBGL_compressed_texture_astc"),c!==null){if(s===Xd)return a===pt?c.COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR:c.COMPRESSED_RGBA_ASTC_4x4_KHR;if(s===Yd)return a===pt?c.COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR:c.COMPRESSED_RGBA_ASTC_5x4_KHR;if(s===Zd)return a===pt?c.COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR:c.COMPRESSED_RGBA_ASTC_5x5_KHR;if(s===qd)return a===pt?c.COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR:c.COMPRESSED_RGBA_ASTC_6x5_KHR;if(s===jd)return a===pt?c.COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR:c.COMPRESSED_RGBA_ASTC_6x6_KHR;if(s===Kd)return a===pt?c.COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR:c.COMPRESSED_RGBA_ASTC_8x5_KHR;if(s===Qd)return a===pt?c.COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR:c.COMPRESSED_RGBA_ASTC_8x6_KHR;if(s===Jd)return a===pt?c.COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR:c.COMPRESSED_RGBA_ASTC_8x8_KHR;if(s===$d)return a===pt?c.COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR:c.COMPRESSED_RGBA_ASTC_10x5_KHR;if(s===ep)return a===pt?c.COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR:c.COMPRESSED_RGBA_ASTC_10x6_KHR;if(s===tp)return a===pt?c.COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR:c.COMPRESSED_RGBA_ASTC_10x8_KHR;if(s===np)return a===pt?c.COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR:c.COMPRESSED_RGBA_ASTC_10x10_KHR;if(s===ip)return a===pt?c.COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR:c.COMPRESSED_RGBA_ASTC_12x10_KHR;if(s===rp)return a===pt?c.COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR:c.COMPRESSED_RGBA_ASTC_12x12_KHR}else return null;if(s===Ou)if(c=e.get("EXT_texture_compression_bptc"),c!==null){if(s===Ou)return a===pt?c.COMPRESSED_SRGB_ALPHA_BPTC_UNORM_EXT:c.COMPRESSED_RGBA_BPTC_UNORM_EXT}else return null;if(s===py||s===sp||s===ap||s===op)if(c=e.get("EXT_texture_compression_rgtc"),c!==null){if(s===Ou)return c.COMPRESSED_RED_RGTC1_EXT;if(s===sp)return c.COMPRESSED_SIGNED_RED_RGTC1_EXT;if(s===ap)return c.COMPRESSED_RED_GREEN_RGTC2_EXT;if(s===op)return c.COMPRESSED_SIGNED_RED_GREEN_RGTC2_EXT}else return null;return s===br?i?n.UNSIGNED_INT_24_8:(c=e.get("WEBGL_depth_texture"),c!==null?c.UNSIGNED_INT_24_8_WEBGL:null):n[s]!==void 0?n[s]:null}return{convert:r}}class zy extends Yt{constructor(e=[]){super(),this.isArrayCamera=!0,this.cameras=e}}class Wa extends Ut{constructor(){super(),this.isGroup=!0,this.type="Group"}}const aA={type:"move"};class ad{constructor(){this._targetRay=null,this._grip=null,this._hand=null}getHandSpace(){return this._hand===null&&(this._hand=new Wa,this._hand.matrixAutoUpdate=!1,this._hand.visible=!1,this._hand.joints={},this._hand.inputState={pinching:!1}),this._hand}getTargetRaySpace(){return this._targetRay===null&&(this._targetRay=new Wa,this._targetRay.matrixAutoUpdate=!1,this._targetRay.visible=!1,this._targetRay.hasLinearVelocity=!1,this._targetRay.linearVelocity=new I,this._targetRay.hasAngularVelocity=!1,this._targetRay.angularVelocity=new I),this._targetRay}getGripSpace(){return this._grip===null&&(this._grip=new Wa,this._grip.matrixAutoUpdate=!1,this._grip.visible=!1,this._grip.hasLinearVelocity=!1,this._grip.linearVelocity=new I,this._grip.hasAngularVelocity=!1,this._grip.angularVelocity=new I),this._grip}dispatchEvent(e){return this._targetRay!==null&&this._targetRay.dispatchEvent(e),this._grip!==null&&this._grip.dispatchEvent(e),this._hand!==null&&this._hand.dispatchEvent(e),this}connect(e){if(e&&e.hand){const t=this._hand;if(t)for(const i of e.hand.values())this._getHandJoint(t,i)}return this.dispatchEvent({type:"connected",data:e}),this}disconnect(e){return this.dispatchEvent({type:"disconnected",data:e}),this._targetRay!==null&&(this._targetRay.visible=!1),this._grip!==null&&(this._grip.visible=!1),this._hand!==null&&(this._hand.visible=!1),this}update(e,t,i){let r=null,s=null,a=null;const c=this._targetRay,u=this._grip,h=this._hand;if(e&&t.session.visibilityState!=="visible-blurred"){if(h&&e.hand){a=!0;for(const T of e.hand.values()){const S=t.getJointPose(T,i),x=this._getHandJoint(h,T);S!==null&&(x.matrix.fromArray(S.transform.matrix),x.matrix.decompose(x.position,x.rotation,x.scale),x.matrixWorldNeedsUpdate=!0,x.jointRadius=S.radius),x.visible=S!==null}const f=h.joints["index-finger-tip"],p=h.joints["thumb-tip"],m=f.position.distanceTo(p.position),g=.02,y=.005;h.inputState.pinching&&m>g+y?(h.inputState.pinching=!1,this.dispatchEvent({type:"pinchend",handedness:e.handedness,target:this})):!h.inputState.pinching&&m<=g-y&&(h.inputState.pinching=!0,this.dispatchEvent({type:"pinchstart",handedness:e.handedness,target:this}))}else u!==null&&e.gripSpace&&(s=t.getPose(e.gripSpace,i),s!==null&&(u.matrix.fromArray(s.transform.matrix),u.matrix.decompose(u.position,u.rotation,u.scale),u.matrixWorldNeedsUpdate=!0,s.linearVelocity?(u.hasLinearVelocity=!0,u.linearVelocity.copy(s.linearVelocity)):u.hasLinearVelocity=!1,s.angularVelocity?(u.hasAngularVelocity=!0,u.angularVelocity.copy(s.angularVelocity)):u.hasAngularVelocity=!1));c!==null&&(r=t.getPose(e.targetRaySpace,i),r===null&&s!==null&&(r=s),r!==null&&(c.matrix.fromArray(r.transform.matrix),c.matrix.decompose(c.position,c.rotation,c.scale),c.matrixWorldNeedsUpdate=!0,r.linearVelocity?(c.hasLinearVelocity=!0,c.linearVelocity.copy(r.linearVelocity)):c.hasLinearVelocity=!1,r.angularVelocity?(c.hasAngularVelocity=!0,c.angularVelocity.copy(r.angularVelocity)):c.hasAngularVelocity=!1,this.dispatchEvent(aA)))}return c!==null&&(c.visible=r!==null),u!==null&&(u.visible=s!==null),h!==null&&(h.visible=a!==null),this}_getHandJoint(e,t){if(e.joints[t.jointName]===void 0){const i=new Wa;i.matrixAutoUpdate=!1,i.visible=!1,e.joints[t.jointName]=i,e.add(i)}return e.joints[t.jointName]}}class lh extends Zt{constructor(e,t,i,r,s,a,c,u,h,f){if(f=f!==void 0?f:Qr,f!==Qr&&f!==ts)throw new Error("DepthTexture format must be either THREE.DepthFormat or THREE.DepthStencilFormat");i===void 0&&f===Qr&&(i=ir),i===void 0&&f===ts&&(i=br),super(null,r,s,a,c,u,f,i,h),this.isDepthTexture=!0,this.image={width:e,height:t},this.magFilter=c!==void 0?c:ct,this.minFilter=u!==void 0?u:ct,this.flipY=!1,this.generateMipmaps=!1,this.compareFunction=null}copy(e){return super.copy(e),this.compareFunction=e.compareFunction,this}toJSON(e){const t=super.toJSON(e);return this.compareFunction!==null&&(t.compareFunction=this.compareFunction),t}}class oA extends xi{constructor(e,t){super();const i=this;let r=null,s=1,a=null,c="local-floor",u=1,h=null,f=null,p=null,m=null,g=null,y=null;const T=t.getContextAttributes();let S=null,x=null;const w=[],M=[],b=new Yt;b.layers.enable(1),b.viewport=new Et;const P=new Yt;P.layers.enable(2),P.viewport=new Et;const C=[b,P],L=new zy;L.layers.enable(1),L.layers.enable(2);let U=null,A=null;this.cameraAutoUpdate=!0,this.enabled=!1,this.isPresenting=!1,this.getController=function(H){let q=w[H];return q===void 0&&(q=new ad,w[H]=q),q.getTargetRaySpace()},this.getControllerGrip=function(H){let q=w[H];return q===void 0&&(q=new ad,w[H]=q),q.getGripSpace()},this.getHand=function(H){let q=w[H];return q===void 0&&(q=new ad,w[H]=q),q.getHandSpace()};function R(H){const q=M.indexOf(H.inputSource);if(q===-1)return;const ye=w[q];ye!==void 0&&(ye.update(H.inputSource,H.frame,h||a),ye.dispatchEvent({type:H.type,data:H.inputSource}))}function z(){r.removeEventListener("select",R),r.removeEventListener("selectstart",R),r.removeEventListener("selectend",R),r.removeEventListener("squeeze",R),r.removeEventListener("squeezestart",R),r.removeEventListener("squeezeend",R),r.removeEventListener("end",z),r.removeEventListener("inputsourceschange",te);for(let H=0;H<w.length;H++){const q=M[H];q!==null&&(M[H]=null,w[H].disconnect(q))}U=null,A=null,e.setRenderTarget(S),g=null,m=null,p=null,r=null,x=null,Y.stop(),i.isPresenting=!1,i.dispatchEvent({type:"sessionend"})}this.setFramebufferScaleFactor=function(H){s=H,i.isPresenting===!0&&console.warn("THREE.WebXRManager: Cannot change framebuffer scale while presenting.")},this.setReferenceSpaceType=function(H){c=H,i.isPresenting===!0&&console.warn("THREE.WebXRManager: Cannot change reference space type while presenting.")},this.getReferenceSpace=function(){return h||a},this.setReferenceSpace=function(H){h=H},this.getBaseLayer=function(){return m!==null?m:g},this.getBinding=function(){return p},this.getFrame=function(){return y},this.getSession=function(){return r},this.setSession=async function(H){if(r=H,r!==null){if(S=e.getRenderTarget(),r.addEventListener("select",R),r.addEventListener("selectstart",R),r.addEventListener("selectend",R),r.addEventListener("squeeze",R),r.addEventListener("squeezestart",R),r.addEventListener("squeezeend",R),r.addEventListener("end",z),r.addEventListener("inputsourceschange",te),T.xrCompatible!==!0&&await t.makeXRCompatible(),r.renderState.layers===void 0||e.capabilities.isWebGL2===!1){const q={antialias:r.renderState.layers===void 0?T.antialias:!0,alpha:!0,depth:T.depth,stencil:T.stencil,framebufferScaleFactor:s};g=new XRWebGLLayer(r,t,q),r.updateRenderState({baseLayer:g}),x=new wt(g.framebufferWidth,g.framebufferHeight,{format:Qt,type:Vt,colorSpace:e.outputColorSpace,stencilBuffer:T.stencil})}else{let q=null,ye=null,ge=null;T.depth&&(ge=T.stencil?t.DEPTH24_STENCIL8:t.DEPTH_COMPONENT24,q=T.stencil?ts:Qr,ye=T.stencil?br:ir);const Pe={colorFormat:t.RGBA8,depthFormat:ge,scaleFactor:s};p=new XRWebGLBinding(r,t),m=p.createProjectionLayer(Pe),r.updateRenderState({layers:[m]}),x=new wt(m.textureWidth,m.textureHeight,{format:Qt,type:Vt,depthTexture:new lh(m.textureWidth,m.textureHeight,ye,void 0,void 0,void 0,void 0,void 0,void 0,q),stencilBuffer:T.stencil,colorSpace:e.outputColorSpace,samples:T.antialias?4:0});const Ue=e.properties.get(x);Ue.__ignoreDepthValues=m.ignoreDepthValues}x.isXRRenderTarget=!0,this.setFoveation(u),h=null,a=await r.requestReferenceSpace(c),Y.setContext(r),Y.start(),i.isPresenting=!0,i.dispatchEvent({type:"sessionstart"})}},this.getEnvironmentBlendMode=function(){if(r!==null)return r.environmentBlendMode};function te(H){for(let q=0;q<H.removed.length;q++){const ye=H.removed[q],ge=M.indexOf(ye);ge>=0&&(M[ge]=null,w[ge].disconnect(ye))}for(let q=0;q<H.added.length;q++){const ye=H.added[q];let ge=M.indexOf(ye);if(ge===-1){for(let Ue=0;Ue<w.length;Ue++)if(Ue>=M.length){M.push(ye),ge=Ue;break}else if(M[Ue]===null){M[Ue]=ye,ge=Ue;break}if(ge===-1)break}const Pe=w[ge];Pe&&Pe.connect(ye)}}const W=new I,J=new I;function ne(H,q,ye){W.setFromMatrixPosition(q.matrixWorld),J.setFromMatrixPosition(ye.matrixWorld);const ge=W.distanceTo(J),Pe=q.projectionMatrix.elements,Ue=ye.projectionMatrix.elements,He=Pe[14]/(Pe[10]-1),je=Pe[14]/(Pe[10]+1),Tt=(Pe[9]+1)/Pe[5],Nt=(Pe[9]-1)/Pe[5],Ye=(Pe[8]-1)/Pe[0],k=(Ue[8]+1)/Ue[0],xe=He*Ye,me=He*k,we=ge/(-Ye+k),ve=we*-Ye;q.matrixWorld.decompose(H.position,H.quaternion,H.scale),H.translateX(ve),H.translateZ(we),H.matrixWorld.compose(H.position,H.quaternion,H.scale),H.matrixWorldInverse.copy(H.matrixWorld).invert();const Ze=He+we,Be=je+we,ke=xe-ve,$e=me+(ge-ve),yt=Tt*je/Be*Ze,Gt=Nt*je/Be*Ze;H.projectionMatrix.makePerspective(ke,$e,yt,Gt,Ze,Be),H.projectionMatrixInverse.copy(H.projectionMatrix).invert()}function ue(H,q){q===null?H.matrixWorld.copy(H.matrix):H.matrixWorld.multiplyMatrices(q.matrixWorld,H.matrix),H.matrixWorldInverse.copy(H.matrixWorld).invert()}this.updateCamera=function(H){if(r===null)return;L.near=P.near=b.near=H.near,L.far=P.far=b.far=H.far,(U!==L.near||A!==L.far)&&(r.updateRenderState({depthNear:L.near,depthFar:L.far}),U=L.near,A=L.far);const q=H.parent,ye=L.cameras;ue(L,q);for(let ge=0;ge<ye.length;ge++)ue(ye[ge],q);ye.length===2?ne(L,b,P):L.projectionMatrix.copy(b.projectionMatrix),ae(H,L,q)};function ae(H,q,ye){ye===null?H.matrix.copy(q.matrixWorld):(H.matrix.copy(ye.matrixWorld),H.matrix.invert(),H.matrix.multiply(q.matrixWorld)),H.matrix.decompose(H.position,H.quaternion,H.scale),H.updateMatrixWorld(!0);const ge=H.children;for(let Pe=0,Ue=ge.length;Pe<Ue;Pe++)ge[Pe].updateMatrixWorld(!0);H.projectionMatrix.copy(q.projectionMatrix),H.projectionMatrixInverse.copy(q.projectionMatrixInverse),H.isPerspectiveCamera&&(H.fov=Qa*2*Math.atan(1/H.projectionMatrix.elements[5]),H.zoom=1)}this.getCamera=function(){return L},this.getFoveation=function(){if(!(m===null&&g===null))return u},this.setFoveation=function(H){u=H,m!==null&&(m.fixedFoveation=H),g!==null&&g.fixedFoveation!==void 0&&(g.fixedFoveation=H)};let B=null;function X(H,q){if(f=q.getViewerPose(h||a),y=q,f!==null){const ye=f.views;g!==null&&(e.setRenderTargetFramebuffer(x,g.framebuffer),e.setRenderTarget(x));let ge=!1;ye.length!==L.cameras.length&&(L.cameras.length=0,ge=!0);for(let Pe=0;Pe<ye.length;Pe++){const Ue=ye[Pe];let He=null;if(g!==null)He=g.getViewport(Ue);else{const Tt=p.getViewSubImage(m,Ue);He=Tt.viewport,Pe===0&&(e.setRenderTargetTextures(x,Tt.colorTexture,m.ignoreDepthValues?void 0:Tt.depthStencilTexture),e.setRenderTarget(x))}let je=C[Pe];je===void 0&&(je=new Yt,je.layers.enable(Pe),je.viewport=new Et,C[Pe]=je),je.matrix.fromArray(Ue.transform.matrix),je.matrix.decompose(je.position,je.quaternion,je.scale),je.projectionMatrix.fromArray(Ue.projectionMatrix),je.projectionMatrixInverse.copy(je.projectionMatrix).invert(),je.viewport.set(He.x,He.y,He.width,He.height),Pe===0&&(L.matrix.copy(je.matrix),L.matrix.decompose(L.position,L.quaternion,L.scale)),ge===!0&&L.cameras.push(je)}}for(let ye=0;ye<w.length;ye++){const ge=M[ye],Pe=w[ye];ge!==null&&Pe!==void 0&&Pe.update(ge,q,h||a)}B&&B(H,q),q.detectedPlanes&&i.dispatchEvent({type:"planesdetected",data:q}),y=null}const Y=new Iy;Y.setAnimationLoop(X),this.setAnimationLoop=function(H){B=H},this.dispose=function(){}}}function lA(n,e){function t(S,x){S.matrixAutoUpdate===!0&&S.updateMatrix(),x.value.copy(S.matrix)}function i(S,x){x.color.getRGB(S.fogColor.value,Dy(n)),x.isFog?(S.fogNear.value=x.near,S.fogFar.value=x.far):x.isFogExp2&&(S.fogDensity.value=x.density)}function r(S,x,w,M,b){x.isMeshBasicMaterial||x.isMeshLambertMaterial?s(S,x):x.isMeshToonMaterial?(s(S,x),p(S,x)):x.isMeshPhongMaterial?(s(S,x),f(S,x)):x.isMeshStandardMaterial?(s(S,x),m(S,x),x.isMeshPhysicalMaterial&&g(S,x,b)):x.isMeshMatcapMaterial?(s(S,x),y(S,x)):x.isMeshDepthMaterial?s(S,x):x.isMeshDistanceMaterial?(s(S,x),T(S,x)):x.isMeshNormalMaterial?s(S,x):x.isLineBasicMaterial?(a(S,x),x.isLineDashedMaterial&&c(S,x)):x.isPointsMaterial?u(S,x,w,M):x.isSpriteMaterial?h(S,x):x.isShadowMaterial?(S.color.value.copy(x.color),S.opacity.value=x.opacity):x.isShaderMaterial&&(x.uniformsNeedUpdate=!1)}function s(S,x){S.opacity.value=x.opacity,x.color&&S.diffuse.value.copy(x.color),x.emissive&&S.emissive.value.copy(x.emissive).multiplyScalar(x.emissiveIntensity),x.map&&(S.map.value=x.map,t(x.map,S.mapTransform)),x.alphaMap&&(S.alphaMap.value=x.alphaMap,t(x.alphaMap,S.alphaMapTransform)),x.bumpMap&&(S.bumpMap.value=x.bumpMap,t(x.bumpMap,S.bumpMapTransform),S.bumpScale.value=x.bumpScale,x.side===_n&&(S.bumpScale.value*=-1)),x.normalMap&&(S.normalMap.value=x.normalMap,t(x.normalMap,S.normalMapTransform),S.normalScale.value.copy(x.normalScale),x.side===_n&&S.normalScale.value.negate()),x.displacementMap&&(S.displacementMap.value=x.displacementMap,t(x.displacementMap,S.displacementMapTransform),S.displacementScale.value=x.displacementScale,S.displacementBias.value=x.displacementBias),x.emissiveMap&&(S.emissiveMap.value=x.emissiveMap,t(x.emissiveMap,S.emissiveMapTransform)),x.specularMap&&(S.specularMap.value=x.specularMap,t(x.specularMap,S.specularMapTransform)),x.alphaTest>0&&(S.alphaTest.value=x.alphaTest);const w=e.get(x).envMap;if(w&&(S.envMap.value=w,S.flipEnvMap.value=w.isCubeTexture&&w.isRenderTargetTexture===!1?-1:1,S.reflectivity.value=x.reflectivity,S.ior.value=x.ior,S.refractionRatio.value=x.refractionRatio),x.lightMap){S.lightMap.value=x.lightMap;const M=n.useLegacyLights===!0?Math.PI:1;S.lightMapIntensity.value=x.lightMapIntensity*M,t(x.lightMap,S.lightMapTransform)}x.aoMap&&(S.aoMap.value=x.aoMap,S.aoMapIntensity.value=x.aoMapIntensity,t(x.aoMap,S.aoMapTransform))}function a(S,x){S.diffuse.value.copy(x.color),S.opacity.value=x.opacity,x.map&&(S.map.value=x.map,t(x.map,S.mapTransform))}function c(S,x){S.dashSize.value=x.dashSize,S.totalSize.value=x.dashSize+x.gapSize,S.scale.value=x.scale}function u(S,x,w,M){S.diffuse.value.copy(x.color),S.opacity.value=x.opacity,S.size.value=x.size*w,S.scale.value=M*.5,x.map&&(S.map.value=x.map,t(x.map,S.uvTransform)),x.alphaMap&&(S.alphaMap.value=x.alphaMap,t(x.alphaMap,S.alphaMapTransform)),x.alphaTest>0&&(S.alphaTest.value=x.alphaTest)}function h(S,x){S.diffuse.value.copy(x.color),S.opacity.value=x.opacity,S.rotation.value=x.rotation,x.map&&(S.map.value=x.map,t(x.map,S.mapTransform)),x.alphaMap&&(S.alphaMap.value=x.alphaMap,t(x.alphaMap,S.alphaMapTransform)),x.alphaTest>0&&(S.alphaTest.value=x.alphaTest)}function f(S,x){S.specular.value.copy(x.specular),S.shininess.value=Math.max(x.shininess,1e-4)}function p(S,x){x.gradientMap&&(S.gradientMap.value=x.gradientMap)}function m(S,x){S.metalness.value=x.metalness,x.metalnessMap&&(S.metalnessMap.value=x.metalnessMap,t(x.metalnessMap,S.metalnessMapTransform)),S.roughness.value=x.roughness,x.roughnessMap&&(S.roughnessMap.value=x.roughnessMap,t(x.roughnessMap,S.roughnessMapTransform)),e.get(x).envMap&&(S.envMapIntensity.value=x.envMapIntensity)}function g(S,x,w){S.ior.value=x.ior,x.sheen>0&&(S.sheenColor.value.copy(x.sheenColor).multiplyScalar(x.sheen),S.sheenRoughness.value=x.sheenRoughness,x.sheenColorMap&&(S.sheenColorMap.value=x.sheenColorMap,t(x.sheenColorMap,S.sheenColorMapTransform)),x.sheenRoughnessMap&&(S.sheenRoughnessMap.value=x.sheenRoughnessMap,t(x.sheenRoughnessMap,S.sheenRoughnessMapTransform))),x.clearcoat>0&&(S.clearcoat.value=x.clearcoat,S.clearcoatRoughness.value=x.clearcoatRoughness,x.clearcoatMap&&(S.clearcoatMap.value=x.clearcoatMap,t(x.clearcoatMap,S.clearcoatMapTransform)),x.clearcoatRoughnessMap&&(S.clearcoatRoughnessMap.value=x.clearcoatRoughnessMap,t(x.clearcoatRoughnessMap,S.clearcoatRoughnessMapTransform)),x.clearcoatNormalMap&&(S.clearcoatNormalMap.value=x.clearcoatNormalMap,t(x.clearcoatNormalMap,S.clearcoatNormalMapTransform),S.clearcoatNormalScale.value.copy(x.clearcoatNormalScale),x.side===_n&&S.clearcoatNormalScale.value.negate())),x.iridescence>0&&(S.iridescence.value=x.iridescence,S.iridescenceIOR.value=x.iridescenceIOR,S.iridescenceThicknessMinimum.value=x.iridescenceThicknessRange[0],S.iridescenceThicknessMaximum.value=x.iridescenceThicknessRange[1],x.iridescenceMap&&(S.iridescenceMap.value=x.iridescenceMap,t(x.iridescenceMap,S.iridescenceMapTransform)),x.iridescenceThicknessMap&&(S.iridescenceThicknessMap.value=x.iridescenceThicknessMap,t(x.iridescenceThicknessMap,S.iridescenceThicknessMapTransform))),x.transmission>0&&(S.transmission.value=x.transmission,S.transmissionSamplerMap.value=w.texture,S.transmissionSamplerSize.value.set(w.width,w.height),x.transmissionMap&&(S.transmissionMap.value=x.transmissionMap,t(x.transmissionMap,S.transmissionMapTransform)),S.thickness.value=x.thickness,x.thicknessMap&&(S.thicknessMap.value=x.thicknessMap,t(x.thicknessMap,S.thicknessMapTransform)),S.attenuationDistance.value=x.attenuationDistance,S.attenuationColor.value.copy(x.attenuationColor)),x.anisotropy>0&&(S.anisotropyVector.value.set(x.anisotropy*Math.cos(x.anisotropyRotation),x.anisotropy*Math.sin(x.anisotropyRotation)),x.anisotropyMap&&(S.anisotropyMap.value=x.anisotropyMap,t(x.anisotropyMap,S.anisotropyMapTransform))),S.specularIntensity.value=x.specularIntensity,S.specularColor.value.copy(x.specularColor),x.specularColorMap&&(S.specularColorMap.value=x.specularColorMap,t(x.specularColorMap,S.specularColorMapTransform)),x.specularIntensityMap&&(S.specularIntensityMap.value=x.specularIntensityMap,t(x.specularIntensityMap,S.specularIntensityMapTransform))}function y(S,x){x.matcap&&(S.matcap.value=x.matcap)}function T(S,x){const w=e.get(x).light;S.referencePosition.value.setFromMatrixPosition(w.matrixWorld),S.nearDistance.value=w.shadow.camera.near,S.farDistance.value=w.shadow.camera.far}return{refreshFogUniforms:i,refreshMaterialUniforms:r}}function cA(n,e,t,i){let r={},s={},a=[];const c=t.isWebGL2?n.getParameter(n.MAX_UNIFORM_BUFFER_BINDINGS):0;function u(w,M){const b=M.program;i.uniformBlockBinding(w,b)}function h(w,M){let b=r[w.id];b===void 0&&(y(w),b=f(w),r[w.id]=b,w.addEventListener("dispose",S));const P=M.program;i.updateUBOMapping(w,P);const C=e.render.frame;s[w.id]!==C&&(m(w),s[w.id]=C)}function f(w){const M=p();w.__bindingPointIndex=M;const b=n.createBuffer(),P=w.__size,C=w.usage;return n.bindBuffer(n.UNIFORM_BUFFER,b),n.bufferData(n.UNIFORM_BUFFER,P,C),n.bindBuffer(n.UNIFORM_BUFFER,null),n.bindBufferBase(n.UNIFORM_BUFFER,M,b),b}function p(){for(let w=0;w<c;w++)if(a.indexOf(w)===-1)return a.push(w),w;return console.error("THREE.WebGLRenderer: Maximum number of simultaneously usable uniforms groups reached."),0}function m(w){const M=r[w.id],b=w.uniforms,P=w.__cache;n.bindBuffer(n.UNIFORM_BUFFER,M);for(let C=0,L=b.length;C<L;C++){const U=b[C];if(g(U,C,P)===!0){const A=U.__offset,R=Array.isArray(U.value)?U.value:[U.value];let z=0;for(let te=0;te<R.length;te++){const W=R[te],J=T(W);typeof W=="number"?(U.__data[0]=W,n.bufferSubData(n.UNIFORM_BUFFER,A+z,U.__data)):W.isMatrix3?(U.__data[0]=W.elements[0],U.__data[1]=W.elements[1],U.__data[2]=W.elements[2],U.__data[3]=W.elements[0],U.__data[4]=W.elements[3],U.__data[5]=W.elements[4],U.__data[6]=W.elements[5],U.__data[7]=W.elements[0],U.__data[8]=W.elements[6],U.__data[9]=W.elements[7],U.__data[10]=W.elements[8],U.__data[11]=W.elements[0]):(W.toArray(U.__data,z),z+=J.storage/Float32Array.BYTES_PER_ELEMENT)}n.bufferSubData(n.UNIFORM_BUFFER,A,U.__data)}}n.bindBuffer(n.UNIFORM_BUFFER,null)}function g(w,M,b){const P=w.value;if(b[M]===void 0){if(typeof P=="number")b[M]=P;else{const C=Array.isArray(P)?P:[P],L=[];for(let U=0;U<C.length;U++)L.push(C[U].clone());b[M]=L}return!0}else if(typeof P=="number"){if(b[M]!==P)return b[M]=P,!0}else{const C=Array.isArray(b[M])?b[M]:[b[M]],L=Array.isArray(P)?P:[P];for(let U=0;U<C.length;U++){const A=C[U];if(A.equals(L[U])===!1)return A.copy(L[U]),!0}}return!1}function y(w){const M=w.uniforms;let b=0;const P=16;let C=0;for(let L=0,U=M.length;L<U;L++){const A=M[L],R={boundary:0,storage:0},z=Array.isArray(A.value)?A.value:[A.value];for(let te=0,W=z.length;te<W;te++){const J=z[te],ne=T(J);R.boundary+=ne.boundary,R.storage+=ne.storage}if(A.__data=new Float32Array(R.storage/Float32Array.BYTES_PER_ELEMENT),A.__offset=b,L>0){C=b%P;const te=P-C;C!==0&&te-R.boundary<0&&(b+=P-C,A.__offset=b)}b+=R.storage}return C=b%P,C>0&&(b+=P-C),w.__size=b,w.__cache={},this}function T(w){const M={boundary:0,storage:0};return typeof w=="number"?(M.boundary=4,M.storage=4):w.isVector2?(M.boundary=8,M.storage=8):w.isVector3||w.isColor?(M.boundary=16,M.storage=12):w.isVector4?(M.boundary=16,M.storage=16):w.isMatrix3?(M.boundary=48,M.storage=48):w.isMatrix4?(M.boundary=64,M.storage=64):w.isTexture?console.warn("THREE.WebGLRenderer: Texture samplers can not be part of an uniforms group."):console.warn("THREE.WebGLRenderer: Unsupported uniform value type.",w),M}function S(w){const M=w.target;M.removeEventListener("dispose",S);const b=a.indexOf(M.__bindingPointIndex);a.splice(b,1),n.deleteBuffer(r[M.id]),delete r[M.id],delete s[M.id]}function x(){for(const w in r)n.deleteBuffer(r[w]);a=[],r={},s={}}return{bind:u,update:h,dispose:x}}function uA(){const n=yl("canvas");return n.style.display="block",n}class qp{constructor(e={}){const{canvas:t=uA(),context:i=null,depth:r=!0,stencil:s=!0,alpha:a=!1,antialias:c=!1,premultipliedAlpha:u=!0,preserveDrawingBuffer:h=!1,powerPreference:f="default",failIfMajorPerformanceCaveat:p=!1}=e;this.isWebGLRenderer=!0;let m;i!==null?m=i.getContextAttributes().alpha:m=a;const g=new Uint32Array(4),y=new Int32Array(4);let T=null,S=null;const x=[],w=[];this.domElement=t,this.debug={checkShaderErrors:!0,onShaderError:null},this.autoClear=!0,this.autoClearColor=!0,this.autoClearDepth=!0,this.autoClearStencil=!0,this.sortObjects=!0,this.clippingPlanes=[],this.localClippingEnabled=!1,this.outputColorSpace=pt,this.useLegacyLights=!0,this.toneMapping=Wi,this.toneMappingExposure=1;const M=this;let b=!1,P=0,C=0,L=null,U=-1,A=null;const R=new Et,z=new Et;let te=null;const W=new be(0);let J=0,ne=t.width,ue=t.height,ae=1,B=null,X=null;const Y=new Et(0,0,ne,ue),H=new Et(0,0,ne,ue);let q=!1;const ye=new sh;let ge=!1,Pe=!1,Ue=null;const He=new ze,je=new K,Tt=new I,Nt={background:null,fog:null,environment:null,overrideMaterial:null,isScene:!0};function Ye(){return L===null?ae:1}let k=i;function xe(N,re){for(let de=0;de<N.length;de++){const $=N[de],pe=t.getContext($,re);if(pe!==null)return pe}return null}try{const N={alpha:!0,depth:r,stencil:s,antialias:c,premultipliedAlpha:u,preserveDrawingBuffer:h,powerPreference:f,failIfMajorPerformanceCaveat:p};if("setAttribute"in t&&t.setAttribute("data-engine",`three.js r${is}`),t.addEventListener("webglcontextlost",Ae,!1),t.addEventListener("webglcontextrestored",se,!1),t.addEventListener("webglcontextcreationerror",Ce,!1),k===null){const re=["webgl2","webgl","experimental-webgl"];if(M.isWebGL1Renderer===!0&&re.shift(),k=xe(re,N),k===null)throw xe(re)?new Error("Error creating WebGL context with your selected attributes."):new Error("Error creating WebGL context.")}typeof WebGLRenderingContext<"u"&&k instanceof WebGLRenderingContext&&console.warn("THREE.WebGLRenderer: WebGL 1 support was deprecated in r153 and will be removed in r163."),k.getShaderPrecisionFormat===void 0&&(k.getShaderPrecisionFormat=function(){return{rangeMin:1,rangeMax:1,precision:1}})}catch(N){throw console.error("THREE.WebGLRenderer: "+N.message),N}let me,we,ve,Ze,Be,ke,$e,yt,Gt,O,D,ce,Te,Me,Le,We,Re,fe,V,he,Se,_e,De,nt;function At(){me=new EE(k),we=new yE(k,me,e),me.init(we),_e=new By(k,me,we),ve=new rA(k,me,we),Ze=new PE(k),Be=new Yb,ke=new sA(k,me,ve,Be,we,_e,Ze),$e=new ME(M),yt=new wE(M),Gt=new B1(k,we),De=new vE(k,me,Gt,we),O=new bE(k,Gt,Ze,De),D=new LE(k,O,Gt,Ze),V=new DE(k,we,ke),We=new SE(Be),ce=new Xb(M,$e,yt,me,we,De,We),Te=new lA(M,Be),Me=new qb,Le=new eA(me,we),fe=new gE(M,$e,yt,ve,D,m,u),Re=new iA(M,D,we),nt=new cA(k,Ze,we,ve),he=new xE(k,me,Ze,we),Se=new AE(k,me,Ze,we),Ze.programs=ce.programs,M.capabilities=we,M.extensions=me,M.properties=Be,M.renderLists=Me,M.shadowMap=Re,M.state=ve,M.info=Ze}At();const G=new oA(M,k);this.xr=G,this.getContext=function(){return k},this.getContextAttributes=function(){return k.getContextAttributes()},this.forceContextLoss=function(){const N=me.get("WEBGL_lose_context");N&&N.loseContext()},this.forceContextRestore=function(){const N=me.get("WEBGL_lose_context");N&&N.restoreContext()},this.getPixelRatio=function(){return ae},this.setPixelRatio=function(N){N!==void 0&&(ae=N,this.setSize(ne,ue,!1))},this.getSize=function(N){return N.set(ne,ue)},this.setSize=function(N,re,de=!0){if(G.isPresenting){console.warn("THREE.WebGLRenderer: Can't change size while VR device is presenting.");return}ne=N,ue=re,t.width=Math.floor(N*ae),t.height=Math.floor(re*ae),de===!0&&(t.style.width=N+"px",t.style.height=re+"px"),this.setViewport(0,0,N,re)},this.getDrawingBufferSize=function(N){return N.set(ne*ae,ue*ae).floor()},this.setDrawingBufferSize=function(N,re,de){ne=N,ue=re,ae=de,t.width=Math.floor(N*de),t.height=Math.floor(re*de),this.setViewport(0,0,N,re)},this.getCurrentViewport=function(N){return N.copy(R)},this.getViewport=function(N){return N.copy(Y)},this.setViewport=function(N,re,de,$){N.isVector4?Y.set(N.x,N.y,N.z,N.w):Y.set(N,re,de,$),ve.viewport(R.copy(Y).multiplyScalar(ae).floor())},this.getScissor=function(N){return N.copy(H)},this.setScissor=function(N,re,de,$){N.isVector4?H.set(N.x,N.y,N.z,N.w):H.set(N,re,de,$),ve.scissor(z.copy(H).multiplyScalar(ae).floor())},this.getScissorTest=function(){return q},this.setScissorTest=function(N){ve.setScissorTest(q=N)},this.setOpaqueSort=function(N){B=N},this.setTransparentSort=function(N){X=N},this.getClearColor=function(N){return N.copy(fe.getClearColor())},this.setClearColor=function(){fe.setClearColor.apply(fe,arguments)},this.getClearAlpha=function(){return fe.getClearAlpha()},this.setClearAlpha=function(){fe.setClearAlpha.apply(fe,arguments)},this.clear=function(N=!0,re=!0,de=!0){let $=0;if(N){let pe=!1;if(L!==null){const Ve=L.texture.format;pe=Ve===Op||Ve===Fp||Ve===Up}if(pe){const Ve=L.texture.type,et=Ve===Vt||Ve===ir||Ve===$u||Ve===br||Ve===Lp||Ve===Ip,it=fe.getClearColor(),rt=fe.getClearAlpha(),St=it.r,st=it.g,at=it.b;et?(g[0]=St,g[1]=st,g[2]=at,g[3]=rt,k.clearBufferuiv(k.COLOR,0,g)):(y[0]=St,y[1]=st,y[2]=at,y[3]=rt,k.clearBufferiv(k.COLOR,0,y))}else $|=k.COLOR_BUFFER_BIT}re&&($|=k.DEPTH_BUFFER_BIT),de&&($|=k.STENCIL_BUFFER_BIT),k.clear($)},this.clearColor=function(){this.clear(!0,!1,!1)},this.clearDepth=function(){this.clear(!1,!0,!1)},this.clearStencil=function(){this.clear(!1,!1,!0)},this.dispose=function(){t.removeEventListener("webglcontextlost",Ae,!1),t.removeEventListener("webglcontextrestored",se,!1),t.removeEventListener("webglcontextcreationerror",Ce,!1),Me.dispose(),Le.dispose(),Be.dispose(),$e.dispose(),yt.dispose(),D.dispose(),De.dispose(),nt.dispose(),ce.dispose(),G.dispose(),G.removeEventListener("sessionstart",qt),G.removeEventListener("sessionend",ai),Ue&&(Ue.dispose(),Ue=null),Un.stop()};function Ae(N){N.preventDefault(),console.log("THREE.WebGLRenderer: Context Lost."),b=!0}function se(){console.log("THREE.WebGLRenderer: Context Restored."),b=!1;const N=Ze.autoReset,re=Re.enabled,de=Re.autoUpdate,$=Re.needsUpdate,pe=Re.type;At(),Ze.autoReset=N,Re.enabled=re,Re.autoUpdate=de,Re.needsUpdate=$,Re.type=pe}function Ce(N){console.error("THREE.WebGLRenderer: A WebGL context could not be created. Reason: ",N.statusMessage)}function Fe(N){const re=N.target;re.removeEventListener("dispose",Fe),bt(re)}function bt(N){Wt(N),Be.remove(N)}function Wt(N){const re=Be.get(N).programs;re!==void 0&&(re.forEach(function(de){ce.releaseProgram(de)}),N.isShaderMaterial&&ce.releaseShaderCache(N))}this.renderBufferDirect=function(N,re,de,$,pe,Ve){re===null&&(re=Nt);const et=pe.isMesh&&pe.matrixWorld.determinant()<0,it=Lh(N,re,de,$,pe);ve.setMaterial($,et);let rt=de.index,St=1;$.wireframe===!0&&(rt=O.getWireframeAttribute(de),St=2);const st=de.drawRange,at=de.attributes.position;let Xt=st.start*St,jt=(st.start+st.count)*St;Ve!==null&&(Xt=Math.max(Xt,Ve.start*St),jt=Math.min(jt,(Ve.start+Ve.count)*St)),rt!==null?(Xt=Math.max(Xt,0),jt=Math.min(jt,rt.count)):at!=null&&(Xt=Math.max(Xt,0),jt=Math.min(jt,at.count));const oi=jt-Xt;if(oi<0||oi===1/0)return;De.setup(pe,$,it,de,rt);let li,kt=he;if(rt!==null&&(li=Gt.get(rt),kt=Se,kt.setIndex(li)),pe.isMesh)$.wireframe===!0?(ve.setLineWidth($.wireframeLinewidth*Ye()),kt.setMode(k.LINES)):kt.setMode(k.TRIANGLES);else if(pe.isLine){let ut=$.linewidth;ut===void 0&&(ut=1),ve.setLineWidth(ut*Ye()),pe.isLineSegments?kt.setMode(k.LINES):pe.isLineLoop?kt.setMode(k.LINE_LOOP):kt.setMode(k.LINE_STRIP)}else pe.isPoints?kt.setMode(k.POINTS):pe.isSprite&&kt.setMode(k.TRIANGLES);if(pe.isInstancedMesh)kt.renderInstances(Xt,oi,pe.count);else if(de.isInstancedBufferGeometry){const ut=de._maxInstanceCount!==void 0?de._maxInstanceCount:1/0,zt=Math.min(de.instanceCount,ut);kt.renderInstances(Xt,oi,zt)}else kt.render(Xt,oi)},this.compile=function(N,re){function de($,pe,Ve){$.transparent===!0&&$.side===ni&&$.forceSinglePass===!1?($.side=_n,$.needsUpdate=!0,ji($,pe,Ve),$.side=or,$.needsUpdate=!0,ji($,pe,Ve),$.side=ni):ji($,pe,Ve)}S=Le.get(N),S.init(),w.push(S),N.traverseVisible(function($){$.isLight&&$.layers.test(re.layers)&&(S.pushLight($),$.castShadow&&S.pushShadow($))}),S.setupLights(M.useLegacyLights),N.traverse(function($){const pe=$.material;if(pe)if(Array.isArray(pe))for(let Ve=0;Ve<pe.length;Ve++){const et=pe[Ve];de(et,N,$)}else de(pe,N,$)}),w.pop(),S=null};let fn=null;function si(N){fn&&fn(N)}function qt(){Un.stop()}function ai(){Un.start()}const Un=new Iy;Un.setAnimationLoop(si),typeof self<"u"&&Un.setContext(self),this.setAnimationLoop=function(N){fn=N,G.setAnimationLoop(N),N===null?Un.stop():Un.start()},G.addEventListener("sessionstart",qt),G.addEventListener("sessionend",ai),this.render=function(N,re){if(re!==void 0&&re.isCamera!==!0){console.error("THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.");return}if(b===!0)return;N.matrixWorldAutoUpdate===!0&&N.updateMatrixWorld(),re.parent===null&&re.matrixWorldAutoUpdate===!0&&re.updateMatrixWorld(),G.enabled===!0&&G.isPresenting===!0&&(G.cameraAutoUpdate===!0&&G.updateCamera(re),re=G.getCamera()),N.isScene===!0&&N.onBeforeRender(M,N,re,L),S=Le.get(N,w.length),S.init(),w.push(S),He.multiplyMatrices(re.projectionMatrix,re.matrixWorldInverse),ye.setFromProjectionMatrix(He),Pe=this.localClippingEnabled,ge=We.init(this.clippingPlanes,Pe),T=Me.get(N,x.length),T.init(),x.push(T),Hl(N,re,0,M.sortObjects),T.finish(),M.sortObjects===!0&&T.sort(B,X),this.info.render.frame++,ge===!0&&We.beginShadows();const de=S.state.shadowsArray;if(Re.render(de,N,re),ge===!0&&We.endShadows(),this.info.autoReset===!0&&this.info.reset(),fe.render(T,N),S.setupLights(M.useLegacyLights),re.isArrayCamera){const $=re.cameras;for(let pe=0,Ve=$.length;pe<Ve;pe++){const et=$[pe];Vl(T,N,et,et.viewport)}}else Vl(T,N,re);L!==null&&(ke.updateMultisampleRenderTarget(L),ke.updateRenderTargetMipmap(L)),N.isScene===!0&&N.onAfterRender(M,N,re),De.resetDefaultState(),U=-1,A=null,w.pop(),w.length>0?S=w[w.length-1]:S=null,x.pop(),x.length>0?T=x[x.length-1]:T=null};function Hl(N,re,de,$){if(N.visible===!1)return;if(N.layers.test(re.layers)){if(N.isGroup)de=N.renderOrder;else if(N.isLOD)N.autoUpdate===!0&&N.update(re);else if(N.isLight)S.pushLight(N),N.castShadow&&S.pushShadow(N);else if(N.isSprite){if(!N.frustumCulled||ye.intersectsSprite(N)){$&&Tt.setFromMatrixPosition(N.matrixWorld).applyMatrix4(He);const et=D.update(N),it=N.material;it.visible&&T.push(N,et,it,de,Tt.z,null)}}else if((N.isMesh||N.isLine||N.isPoints)&&(!N.frustumCulled||ye.intersectsObject(N))){const et=D.update(N),it=N.material;if($&&(N.boundingSphere!==void 0?(N.boundingSphere===null&&N.computeBoundingSphere(),Tt.copy(N.boundingSphere.center)):(et.boundingSphere===null&&et.computeBoundingSphere(),Tt.copy(et.boundingSphere.center)),Tt.applyMatrix4(N.matrixWorld).applyMatrix4(He)),Array.isArray(it)){const rt=et.groups;for(let St=0,st=rt.length;St<st;St++){const at=rt[St],Xt=it[at.materialIndex];Xt&&Xt.visible&&T.push(N,et,Xt,de,Tt.z,at)}}else it.visible&&T.push(N,et,it,de,Tt.z,null)}}const Ve=N.children;for(let et=0,it=Ve.length;et<it;et++)Hl(Ve[et],re,de,$)}function Vl(N,re,de,$){const pe=N.opaque,Ve=N.transmissive,et=N.transparent;S.setupLightsView(de),ge===!0&&We.setGlobalState(M.clippingPlanes,de),Ve.length>0&&Gl(pe,Ve,re,de),$&&ve.viewport(R.copy($)),pe.length>0&&Lr(pe,re,de),Ve.length>0&&Lr(Ve,re,de),et.length>0&&Lr(et,re,de),ve.buffers.depth.setTest(!0),ve.buffers.depth.setMask(!0),ve.buffers.color.setMask(!0),ve.setPolygonOffset(!1)}function Gl(N,re,de,$){const pe=we.isWebGL2;Ue===null&&(Ue=new wt(1,1,{generateMipmaps:!0,type:me.has("EXT_color_buffer_half_float")?ii:Vt,minFilter:es,samples:pe?4:0})),M.getDrawingBufferSize(je),pe?Ue.setSize(je.x,je.y):Ue.setSize(Zu(je.x),Zu(je.y));const Ve=M.getRenderTarget();M.setRenderTarget(Ue),M.getClearColor(W),J=M.getClearAlpha(),J<1&&M.setClearColor(16777215,.5),M.clear();const et=M.toneMapping;M.toneMapping=Wi,Lr(N,de,$),ke.updateMultisampleRenderTarget(Ue),ke.updateRenderTargetMipmap(Ue);let it=!1;for(let rt=0,St=re.length;rt<St;rt++){const st=re[rt],at=st.object,Xt=st.geometry,jt=st.material,oi=st.group;if(jt.side===ni&&at.layers.test($.layers)){const li=jt.side;jt.side=_n,jt.needsUpdate=!0,Wl(at,de,$,Xt,jt,oi),jt.side=li,jt.needsUpdate=!0,it=!0}}it===!0&&(ke.updateMultisampleRenderTarget(Ue),ke.updateRenderTargetMipmap(Ue)),M.setRenderTarget(Ve),M.setClearColor(W,J),M.toneMapping=et}function Lr(N,re,de){const $=re.isScene===!0?re.overrideMaterial:null;for(let pe=0,Ve=N.length;pe<Ve;pe++){const et=N[pe],it=et.object,rt=et.geometry,St=$===null?et.material:$,st=et.group;it.layers.test(de.layers)&&Wl(it,re,de,rt,St,st)}}function Wl(N,re,de,$,pe,Ve){N.onBeforeRender(M,re,de,$,pe,Ve),N.modelViewMatrix.multiplyMatrices(de.matrixWorldInverse,N.matrixWorld),N.normalMatrix.getNormalMatrix(N.modelViewMatrix),pe.onBeforeRender(M,re,de,$,N,Ve),pe.transparent===!0&&pe.side===ni&&pe.forceSinglePass===!1?(pe.side=_n,pe.needsUpdate=!0,M.renderBufferDirect(de,re,$,pe,N,Ve),pe.side=or,pe.needsUpdate=!0,M.renderBufferDirect(de,re,$,pe,N,Ve),pe.side=ni):M.renderBufferDirect(de,re,$,pe,N,Ve),N.onAfterRender(M,re,de,$,pe,Ve)}function ji(N,re,de){re.isScene!==!0&&(re=Nt);const $=Be.get(N),pe=S.state.lights,Ve=S.state.shadowsArray,et=pe.state.version,it=ce.getParameters(N,pe.state,Ve,re,de),rt=ce.getProgramCacheKey(it);let St=$.programs;$.environment=N.isMeshStandardMaterial?re.environment:null,$.fog=re.fog,$.envMap=(N.isMeshStandardMaterial?yt:$e).get(N.envMap||$.environment),St===void 0&&(N.addEventListener("dispose",Fe),St=new Map,$.programs=St);let st=St.get(rt);if(st!==void 0){if($.currentProgram===st&&$.lightsStateVersion===et)return Xl(N,it),st}else it.uniforms=ce.getUniforms(N),N.onBuild(de,it,M),N.onBeforeCompile(it,M),st=ce.acquireProgram(it,rt),St.set(rt,st),$.uniforms=it.uniforms;const at=$.uniforms;(!N.isShaderMaterial&&!N.isRawShaderMaterial||N.clipping===!0)&&(at.clippingPlanes=We.uniform),Xl(N,it),$.needsLights=Uh(N),$.lightsStateVersion=et,$.needsLights&&(at.ambientLightColor.value=pe.state.ambient,at.lightProbe.value=pe.state.probe,at.directionalLights.value=pe.state.directional,at.directionalLightShadows.value=pe.state.directionalShadow,at.spotLights.value=pe.state.spot,at.spotLightShadows.value=pe.state.spotShadow,at.rectAreaLights.value=pe.state.rectArea,at.ltc_1.value=pe.state.rectAreaLTC1,at.ltc_2.value=pe.state.rectAreaLTC2,at.pointLights.value=pe.state.point,at.pointLightShadows.value=pe.state.pointShadow,at.hemisphereLights.value=pe.state.hemi,at.directionalShadowMap.value=pe.state.directionalShadowMap,at.directionalShadowMatrix.value=pe.state.directionalShadowMatrix,at.spotShadowMap.value=pe.state.spotShadowMap,at.spotLightMatrix.value=pe.state.spotLightMatrix,at.spotLightMap.value=pe.state.spotLightMap,at.pointShadowMap.value=pe.state.pointShadowMap,at.pointShadowMatrix.value=pe.state.pointShadowMatrix);const Xt=st.getUniforms(),jt=ku.seqWithValue(Xt.seq,at);return $.currentProgram=st,$.uniformsList=jt,st}function Xl(N,re){const de=Be.get(N);de.outputColorSpace=re.outputColorSpace,de.instancing=re.instancing,de.skinning=re.skinning,de.morphTargets=re.morphTargets,de.morphNormals=re.morphNormals,de.morphColors=re.morphColors,de.morphTargetsCount=re.morphTargetsCount,de.numClippingPlanes=re.numClippingPlanes,de.numIntersection=re.numClipIntersection,de.vertexAlphas=re.vertexAlphas,de.vertexTangents=re.vertexTangents,de.toneMapping=re.toneMapping}function Lh(N,re,de,$,pe){re.isScene!==!0&&(re=Nt),ke.resetTextureUnits();const Ve=re.fog,et=$.isMeshStandardMaterial?re.environment:null,it=L===null?M.outputColorSpace:L.isXRRenderTarget===!0?L.texture.colorSpace:Yi,rt=($.isMeshStandardMaterial?yt:$e).get($.envMap||et),St=$.vertexColors===!0&&!!de.attributes.color&&de.attributes.color.itemSize===4,st=!!de.attributes.tangent&&(!!$.normalMap||$.anisotropy>0),at=!!de.morphAttributes.position,Xt=!!de.morphAttributes.normal,jt=!!de.morphAttributes.color,oi=$.toneMapped?M.toneMapping:Wi,li=de.morphAttributes.position||de.morphAttributes.normal||de.morphAttributes.color,kt=li!==void 0?li.length:0,ut=Be.get($),zt=S.state.lights;if(ge===!0&&(Pe===!0||N!==A)){const On=N===A&&$.id===U;We.setState($,N,On)}let lt=!1;$.version===ut.__version?(ut.needsLights&&ut.lightsStateVersion!==zt.state.version||ut.outputColorSpace!==it||pe.isInstancedMesh&&ut.instancing===!1||!pe.isInstancedMesh&&ut.instancing===!0||pe.isSkinnedMesh&&ut.skinning===!1||!pe.isSkinnedMesh&&ut.skinning===!0||ut.envMap!==rt||$.fog===!0&&ut.fog!==Ve||ut.numClippingPlanes!==void 0&&(ut.numClippingPlanes!==We.numPlanes||ut.numIntersection!==We.numIntersection)||ut.vertexAlphas!==St||ut.vertexTangents!==st||ut.morphTargets!==at||ut.morphNormals!==Xt||ut.morphColors!==jt||ut.toneMapping!==oi||we.isWebGL2===!0&&ut.morphTargetsCount!==kt)&&(lt=!0):(lt=!0,ut.__version=$.version);let Fn=ut.currentProgram;lt===!0&&(Fn=ji($,re,pe));let yn=!1,dn=!1,Ii=!1;const rn=Fn.getUniforms(),sn=ut.uniforms;if(ve.useProgram(Fn.program)&&(yn=!0,dn=!0,Ii=!0),$.id!==U&&(U=$.id,dn=!0),yn||A!==N){if(rn.setValue(k,"projectionMatrix",N.projectionMatrix),we.logarithmicDepthBuffer&&rn.setValue(k,"logDepthBufFC",2/(Math.log(N.far+1)/Math.LN2)),A!==N&&(A=N,dn=!0,Ii=!0),$.isShaderMaterial||$.isMeshPhongMaterial||$.isMeshToonMaterial||$.isMeshStandardMaterial||$.envMap){const On=rn.map.cameraPosition;On!==void 0&&On.setValue(k,Tt.setFromMatrixPosition(N.matrixWorld))}($.isMeshPhongMaterial||$.isMeshToonMaterial||$.isMeshLambertMaterial||$.isMeshBasicMaterial||$.isMeshStandardMaterial||$.isShaderMaterial)&&rn.setValue(k,"isOrthographic",N.isOrthographicCamera===!0),($.isMeshPhongMaterial||$.isMeshToonMaterial||$.isMeshLambertMaterial||$.isMeshBasicMaterial||$.isMeshStandardMaterial||$.isShaderMaterial||$.isShadowMaterial||pe.isSkinnedMesh)&&rn.setValue(k,"viewMatrix",N.matrixWorldInverse)}if(pe.isSkinnedMesh){rn.setOptional(k,pe,"bindMatrix"),rn.setOptional(k,pe,"bindMatrixInverse");const On=pe.skeleton;On&&(we.floatVertexTextures?(On.boneTexture===null&&On.computeBoneTexture(),rn.setValue(k,"boneTexture",On.boneTexture,ke),rn.setValue(k,"boneTextureSize",On.boneTextureSize)):console.warn("THREE.WebGLRenderer: SkinnedMesh can only be used with WebGL 2. With WebGL 1 OES_texture_float and vertex textures support is required."))}const Ir=de.morphAttributes;if((Ir.position!==void 0||Ir.normal!==void 0||Ir.color!==void 0&&we.isWebGL2===!0)&&V.update(pe,de,Fn),(dn||ut.receiveShadow!==pe.receiveShadow)&&(ut.receiveShadow=pe.receiveShadow,rn.setValue(k,"receiveShadow",pe.receiveShadow)),$.isMeshGouraudMaterial&&$.envMap!==null&&(sn.envMap.value=rt,sn.flipEnvMap.value=rt.isCubeTexture&&rt.isRenderTargetTexture===!1?-1:1),dn&&(rn.setValue(k,"toneMappingExposure",M.toneMappingExposure),ut.needsLights&&Ih(sn,Ii),Ve&&$.fog===!0&&Te.refreshFogUniforms(sn,Ve),Te.refreshMaterialUniforms(sn,$,ae,ue,Ue),ku.upload(k,ut.uniformsList,sn,ke)),$.isShaderMaterial&&$.uniformsNeedUpdate===!0&&(ku.upload(k,ut.uniformsList,sn,ke),$.uniformsNeedUpdate=!1),$.isSpriteMaterial&&rn.setValue(k,"center",pe.center),rn.setValue(k,"modelViewMatrix",pe.modelViewMatrix),rn.setValue(k,"normalMatrix",pe.normalMatrix),rn.setValue(k,"modelMatrix",pe.matrixWorld),$.isShaderMaterial||$.isRawShaderMaterial){const On=$.uniformsGroups;for(let ea=0,ta=On.length;ea<ta;ea++)if(we.isWebGL2){const fo=On[ea];nt.update(fo,Fn),nt.bind(fo,Fn)}else console.warn("THREE.WebGLRenderer: Uniform Buffer Objects can only be used with WebGL 2.")}return Fn}function Ih(N,re){N.ambientLightColor.needsUpdate=re,N.lightProbe.needsUpdate=re,N.directionalLights.needsUpdate=re,N.directionalLightShadows.needsUpdate=re,N.pointLights.needsUpdate=re,N.pointLightShadows.needsUpdate=re,N.spotLights.needsUpdate=re,N.spotLightShadows.needsUpdate=re,N.rectAreaLights.needsUpdate=re,N.hemisphereLights.needsUpdate=re}function Uh(N){return N.isMeshLambertMaterial||N.isMeshToonMaterial||N.isMeshPhongMaterial||N.isMeshStandardMaterial||N.isShadowMaterial||N.isShaderMaterial&&N.lights===!0}this.getActiveCubeFace=function(){return P},this.getActiveMipmapLevel=function(){return C},this.getRenderTarget=function(){return L},this.setRenderTargetTextures=function(N,re,de){Be.get(N.texture).__webglTexture=re,Be.get(N.depthTexture).__webglTexture=de;const $=Be.get(N);$.__hasExternalTextures=!0,$.__hasExternalTextures&&($.__autoAllocateDepthBuffer=de===void 0,$.__autoAllocateDepthBuffer||me.has("WEBGL_multisampled_render_to_texture")===!0&&(console.warn("THREE.WebGLRenderer: Render-to-texture extension was disabled because an external texture was provided"),$.__useRenderToTexture=!1))},this.setRenderTargetFramebuffer=function(N,re){const de=Be.get(N);de.__webglFramebuffer=re,de.__useDefaultFramebuffer=re===void 0},this.setRenderTarget=function(N,re=0,de=0){L=N,P=re,C=de;let $=!0,pe=null,Ve=!1,et=!1;if(N){const rt=Be.get(N);rt.__useDefaultFramebuffer!==void 0?(ve.bindFramebuffer(k.FRAMEBUFFER,null),$=!1):rt.__webglFramebuffer===void 0?ke.setupRenderTarget(N):rt.__hasExternalTextures&&ke.rebindTextures(N,Be.get(N.texture).__webglTexture,Be.get(N.depthTexture).__webglTexture);const St=N.texture;(St.isData3DTexture||St.isDataArrayTexture||St.isCompressedArrayTexture)&&(et=!0);const st=Be.get(N).__webglFramebuffer;N.isWebGLCubeRenderTarget?(pe=st[re],Ve=!0):we.isWebGL2&&N.samples>0&&ke.useMultisampledRTT(N)===!1?pe=Be.get(N).__webglMultisampledFramebuffer:pe=st,R.copy(N.viewport),z.copy(N.scissor),te=N.scissorTest}else R.copy(Y).multiplyScalar(ae).floor(),z.copy(H).multiplyScalar(ae).floor(),te=q;if(ve.bindFramebuffer(k.FRAMEBUFFER,pe)&&we.drawBuffers&&$&&ve.drawBuffers(N,pe),ve.viewport(R),ve.scissor(z),ve.setScissorTest(te),Ve){const rt=Be.get(N.texture);k.framebufferTexture2D(k.FRAMEBUFFER,k.COLOR_ATTACHMENT0,k.TEXTURE_CUBE_MAP_POSITIVE_X+re,rt.__webglTexture,de)}else if(et){const rt=Be.get(N.texture),St=re||0;k.framebufferTextureLayer(k.FRAMEBUFFER,k.COLOR_ATTACHMENT0,rt.__webglTexture,de||0,St)}U=-1},this.readRenderTargetPixels=function(N,re,de,$,pe,Ve,et){if(!(N&&N.isWebGLRenderTarget)){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.");return}let it=Be.get(N).__webglFramebuffer;if(N.isWebGLCubeRenderTarget&&et!==void 0&&(it=it[et]),it){ve.bindFramebuffer(k.FRAMEBUFFER,it);try{const rt=N.texture,St=rt.format,st=rt.type;if(St!==Qt&&_e.convert(St)!==k.getParameter(k.IMPLEMENTATION_COLOR_READ_FORMAT)){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in RGBA or implementation defined format.");return}const at=st===ii&&(me.has("EXT_color_buffer_half_float")||we.isWebGL2&&me.has("EXT_color_buffer_float"));if(st!==Vt&&_e.convert(st)!==k.getParameter(k.IMPLEMENTATION_COLOR_READ_TYPE)&&!(st===tn&&(we.isWebGL2||me.has("OES_texture_float")||me.has("WEBGL_color_buffer_float")))&&!at){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in UnsignedByteType or implementation defined type.");return}re>=0&&re<=N.width-$&&de>=0&&de<=N.height-pe&&k.readPixels(re,de,$,pe,_e.convert(St),_e.convert(st),Ve)}finally{const rt=L!==null?Be.get(L).__webglFramebuffer:null;ve.bindFramebuffer(k.FRAMEBUFFER,rt)}}},this.copyFramebufferToTexture=function(N,re,de=0){const $=Math.pow(2,-de),pe=Math.floor(re.image.width*$),Ve=Math.floor(re.image.height*$);ke.setTexture2D(re,0),k.copyTexSubImage2D(k.TEXTURE_2D,de,0,0,N.x,N.y,pe,Ve),ve.unbindTexture()},this.copyTextureToTexture=function(N,re,de,$=0){const pe=re.image.width,Ve=re.image.height,et=_e.convert(de.format),it=_e.convert(de.type);ke.setTexture2D(de,0),k.pixelStorei(k.UNPACK_FLIP_Y_WEBGL,de.flipY),k.pixelStorei(k.UNPACK_PREMULTIPLY_ALPHA_WEBGL,de.premultiplyAlpha),k.pixelStorei(k.UNPACK_ALIGNMENT,de.unpackAlignment),re.isDataTexture?k.texSubImage2D(k.TEXTURE_2D,$,N.x,N.y,pe,Ve,et,it,re.image.data):re.isCompressedTexture?k.compressedTexSubImage2D(k.TEXTURE_2D,$,N.x,N.y,re.mipmaps[0].width,re.mipmaps[0].height,et,re.mipmaps[0].data):k.texSubImage2D(k.TEXTURE_2D,$,N.x,N.y,et,it,re.image),$===0&&de.generateMipmaps&&k.generateMipmap(k.TEXTURE_2D),ve.unbindTexture()},this.copyTextureToTexture3D=function(N,re,de,$,pe=0){if(M.isWebGL1Renderer){console.warn("THREE.WebGLRenderer.copyTextureToTexture3D: can only be used with WebGL2.");return}const Ve=N.max.x-N.min.x+1,et=N.max.y-N.min.y+1,it=N.max.z-N.min.z+1,rt=_e.convert($.format),St=_e.convert($.type);let st;if($.isData3DTexture)ke.setTexture3D($,0),st=k.TEXTURE_3D;else if($.isDataArrayTexture)ke.setTexture2DArray($,0),st=k.TEXTURE_2D_ARRAY;else{console.warn("THREE.WebGLRenderer.copyTextureToTexture3D: only supports THREE.DataTexture3D and THREE.DataTexture2DArray.");return}k.pixelStorei(k.UNPACK_FLIP_Y_WEBGL,$.flipY),k.pixelStorei(k.UNPACK_PREMULTIPLY_ALPHA_WEBGL,$.premultiplyAlpha),k.pixelStorei(k.UNPACK_ALIGNMENT,$.unpackAlignment);const at=k.getParameter(k.UNPACK_ROW_LENGTH),Xt=k.getParameter(k.UNPACK_IMAGE_HEIGHT),jt=k.getParameter(k.UNPACK_SKIP_PIXELS),oi=k.getParameter(k.UNPACK_SKIP_ROWS),li=k.getParameter(k.UNPACK_SKIP_IMAGES),kt=de.isCompressedTexture?de.mipmaps[0]:de.image;k.pixelStorei(k.UNPACK_ROW_LENGTH,kt.width),k.pixelStorei(k.UNPACK_IMAGE_HEIGHT,kt.height),k.pixelStorei(k.UNPACK_SKIP_PIXELS,N.min.x),k.pixelStorei(k.UNPACK_SKIP_ROWS,N.min.y),k.pixelStorei(k.UNPACK_SKIP_IMAGES,N.min.z),de.isDataTexture||de.isData3DTexture?k.texSubImage3D(st,pe,re.x,re.y,re.z,Ve,et,it,rt,St,kt.data):de.isCompressedArrayTexture?(console.warn("THREE.WebGLRenderer.copyTextureToTexture3D: untested support for compressed srcTexture."),k.compressedTexSubImage3D(st,pe,re.x,re.y,re.z,Ve,et,it,rt,kt.data)):k.texSubImage3D(st,pe,re.x,re.y,re.z,Ve,et,it,rt,St,kt),k.pixelStorei(k.UNPACK_ROW_LENGTH,at),k.pixelStorei(k.UNPACK_IMAGE_HEIGHT,Xt),k.pixelStorei(k.UNPACK_SKIP_PIXELS,jt),k.pixelStorei(k.UNPACK_SKIP_ROWS,oi),k.pixelStorei(k.UNPACK_SKIP_IMAGES,li),pe===0&&$.generateMipmaps&&k.generateMipmap(st),ve.unbindTexture()},this.initTexture=function(N){N.isCubeTexture?ke.setTextureCube(N,0):N.isData3DTexture?ke.setTexture3D(N,0):N.isDataArrayTexture||N.isCompressedArrayTexture?ke.setTexture2DArray(N,0):ke.setTexture2D(N,0),ve.unbindTexture()},this.resetState=function(){P=0,C=0,L=null,ve.reset(),De.reset()},typeof __THREE_DEVTOOLS__<"u"&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}get coordinateSystem(){return rr}get physicallyCorrectLights(){return console.warn("THREE.WebGLRenderer: the property .physicallyCorrectLights has been removed. Set renderer.useLegacyLights instead."),!this.useLegacyLights}set physicallyCorrectLights(e){console.warn("THREE.WebGLRenderer: the property .physicallyCorrectLights has been removed. Set renderer.useLegacyLights instead."),this.useLegacyLights=!e}get outputEncoding(){return console.warn("THREE.WebGLRenderer: Property .outputEncoding has been removed. Use .outputColorSpace instead."),this.outputColorSpace===pt?Di:Dl}set outputEncoding(e){console.warn("THREE.WebGLRenderer: Property .outputEncoding has been removed. Use .outputColorSpace instead."),this.outputColorSpace=e===Di?pt:Yi}}class ky extends qp{}ky.prototype.isWebGL1Renderer=!0;class ch{constructor(e,t=25e-5){this.isFogExp2=!0,this.name="",this.color=new be(e),this.density=t}clone(){return new ch(this.color,this.density)}toJSON(){return{type:"FogExp2",color:this.color.getHex(),density:this.density}}}class uh{constructor(e,t=1,i=1e3){this.isFog=!0,this.name="",this.color=new be(e),this.near=t,this.far=i}clone(){return new uh(this.color,this.near,this.far)}toJSON(){return{type:"Fog",color:this.color.getHex(),near:this.near,far:this.far}}}let Xs=class extends Ut{constructor(){super(),this.isScene=!0,this.type="Scene",this.background=null,this.environment=null,this.fog=null,this.backgroundBlurriness=0,this.backgroundIntensity=1,this.overrideMaterial=null,typeof __THREE_DEVTOOLS__<"u"&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}copy(e,t){return super.copy(e,t),e.background!==null&&(this.background=e.background.clone()),e.environment!==null&&(this.environment=e.environment.clone()),e.fog!==null&&(this.fog=e.fog.clone()),this.backgroundBlurriness=e.backgroundBlurriness,this.backgroundIntensity=e.backgroundIntensity,e.overrideMaterial!==null&&(this.overrideMaterial=e.overrideMaterial.clone()),this.matrixAutoUpdate=e.matrixAutoUpdate,this}toJSON(e){const t=super.toJSON(e);return this.fog!==null&&(t.object.fog=this.fog.toJSON()),this.backgroundBlurriness>0&&(t.object.backgroundBlurriness=this.backgroundBlurriness),this.backgroundIntensity!==1&&(t.object.backgroundIntensity=this.backgroundIntensity),t}};class hh{constructor(e,t){this.isInterleavedBuffer=!0,this.array=e,this.stride=t,this.count=e!==void 0?e.length/t:0,this.usage=vl,this.updateRange={offset:0,count:-1},this.version=0,this.uuid=gi()}onUploadCallback(){}set needsUpdate(e){e===!0&&this.version++}setUsage(e){return this.usage=e,this}copy(e){return this.array=new e.array.constructor(e.array),this.count=e.count,this.stride=e.stride,this.usage=e.usage,this}copyAt(e,t,i){e*=this.stride,i*=t.stride;for(let r=0,s=this.stride;r<s;r++)this.array[e+r]=t.array[i+r];return this}set(e,t=0){return this.array.set(e,t),this}clone(e){e.arrayBuffers===void 0&&(e.arrayBuffers={}),this.array.buffer._uuid===void 0&&(this.array.buffer._uuid=gi()),e.arrayBuffers[this.array.buffer._uuid]===void 0&&(e.arrayBuffers[this.array.buffer._uuid]=this.array.slice(0).buffer);const t=new this.array.constructor(e.arrayBuffers[this.array.buffer._uuid]),i=new this.constructor(t,this.stride);return i.setUsage(this.usage),i}onUpload(e){return this.onUploadCallback=e,this}toJSON(e){return e.arrayBuffers===void 0&&(e.arrayBuffers={}),this.array.buffer._uuid===void 0&&(this.array.buffer._uuid=gi()),e.arrayBuffers[this.array.buffer._uuid]===void 0&&(e.arrayBuffers[this.array.buffer._uuid]=Array.from(new Uint32Array(this.array.buffer))),{uuid:this.uuid,buffer:this.array.buffer._uuid,type:this.array.constructor.name,stride:this.stride}}}const Yn=new I;class Ys{constructor(e,t,i,r=!1){this.isInterleavedBufferAttribute=!0,this.name="",this.data=e,this.itemSize=t,this.offset=i,this.normalized=r}get count(){return this.data.count}get array(){return this.data.array}set needsUpdate(e){this.data.needsUpdate=e}applyMatrix4(e){for(let t=0,i=this.data.count;t<i;t++)Yn.fromBufferAttribute(this,t),Yn.applyMatrix4(e),this.setXYZ(t,Yn.x,Yn.y,Yn.z);return this}applyNormalMatrix(e){for(let t=0,i=this.count;t<i;t++)Yn.fromBufferAttribute(this,t),Yn.applyNormalMatrix(e),this.setXYZ(t,Yn.x,Yn.y,Yn.z);return this}transformDirection(e){for(let t=0,i=this.count;t<i;t++)Yn.fromBufferAttribute(this,t),Yn.transformDirection(e),this.setXYZ(t,Yn.x,Yn.y,Yn.z);return this}setX(e,t){return this.normalized&&(t=xt(t,this.array)),this.data.array[e*this.data.stride+this.offset]=t,this}setY(e,t){return this.normalized&&(t=xt(t,this.array)),this.data.array[e*this.data.stride+this.offset+1]=t,this}setZ(e,t){return this.normalized&&(t=xt(t,this.array)),this.data.array[e*this.data.stride+this.offset+2]=t,this}setW(e,t){return this.normalized&&(t=xt(t,this.array)),this.data.array[e*this.data.stride+this.offset+3]=t,this}getX(e){let t=this.data.array[e*this.data.stride+this.offset];return this.normalized&&(t=mi(t,this.array)),t}getY(e){let t=this.data.array[e*this.data.stride+this.offset+1];return this.normalized&&(t=mi(t,this.array)),t}getZ(e){let t=this.data.array[e*this.data.stride+this.offset+2];return this.normalized&&(t=mi(t,this.array)),t}getW(e){let t=this.data.array[e*this.data.stride+this.offset+3];return this.normalized&&(t=mi(t,this.array)),t}setXY(e,t,i){return e=e*this.data.stride+this.offset,this.normalized&&(t=xt(t,this.array),i=xt(i,this.array)),this.data.array[e+0]=t,this.data.array[e+1]=i,this}setXYZ(e,t,i,r){return e=e*this.data.stride+this.offset,this.normalized&&(t=xt(t,this.array),i=xt(i,this.array),r=xt(r,this.array)),this.data.array[e+0]=t,this.data.array[e+1]=i,this.data.array[e+2]=r,this}setXYZW(e,t,i,r,s){return e=e*this.data.stride+this.offset,this.normalized&&(t=xt(t,this.array),i=xt(i,this.array),r=xt(r,this.array),s=xt(s,this.array)),this.data.array[e+0]=t,this.data.array[e+1]=i,this.data.array[e+2]=r,this.data.array[e+3]=s,this}clone(e){if(e===void 0){console.log("THREE.InterleavedBufferAttribute.clone(): Cloning an interleaved buffer attribute will de-interleave buffer data.");const t=[];for(let i=0;i<this.count;i++){const r=i*this.data.stride+this.offset;for(let s=0;s<this.itemSize;s++)t.push(this.data.array[r+s])}return new Ct(new this.array.constructor(t),this.itemSize,this.normalized)}else return e.interleavedBuffers===void 0&&(e.interleavedBuffers={}),e.interleavedBuffers[this.data.uuid]===void 0&&(e.interleavedBuffers[this.data.uuid]=this.data.clone(e)),new Ys(e.interleavedBuffers[this.data.uuid],this.itemSize,this.offset,this.normalized)}toJSON(e){if(e===void 0){console.log("THREE.InterleavedBufferAttribute.toJSON(): Serializing an interleaved buffer attribute will de-interleave buffer data.");const t=[];for(let i=0;i<this.count;i++){const r=i*this.data.stride+this.offset;for(let s=0;s<this.itemSize;s++)t.push(this.data.array[r+s])}return{itemSize:this.itemSize,type:this.array.constructor.name,array:t,normalized:this.normalized}}else return e.interleavedBuffers===void 0&&(e.interleavedBuffers={}),e.interleavedBuffers[this.data.uuid]===void 0&&(e.interleavedBuffers[this.data.uuid]=this.data.toJSON(e)),{isInterleavedBufferAttribute:!0,itemSize:this.itemSize,data:this.data.uuid,offset:this.offset,normalized:this.normalized}}}class jp extends Pn{constructor(e){super(),this.isSpriteMaterial=!0,this.type="SpriteMaterial",this.color=new be(16777215),this.map=null,this.alphaMap=null,this.rotation=0,this.sizeAttenuation=!0,this.transparent=!0,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.alphaMap=e.alphaMap,this.rotation=e.rotation,this.sizeAttenuation=e.sizeAttenuation,this.fog=e.fog,this}}let Ra;const Oo=new I,Da=new I,La=new I,Ia=new K,Bo=new K,Hy=new ze,ru=new I,zo=new I,su=new I,Vv=new K,od=new K,Gv=new K;class Vy extends Ut{constructor(e){if(super(),this.isSprite=!0,this.type="Sprite",Ra===void 0){Ra=new mt;const t=new Float32Array([-.5,-.5,0,0,0,.5,-.5,0,1,0,.5,.5,0,1,1,-.5,.5,0,0,1]),i=new hh(t,5);Ra.setIndex([0,1,2,0,2,3]),Ra.setAttribute("position",new Ys(i,3,0,!1)),Ra.setAttribute("uv",new Ys(i,2,3,!1))}this.geometry=Ra,this.material=e!==void 0?e:new jp,this.center=new K(.5,.5)}raycast(e,t){e.camera===null&&console.error('THREE.Sprite: "Raycaster.camera" needs to be set in order to raycast against sprites.'),Da.setFromMatrixScale(this.matrixWorld),Hy.copy(e.camera.matrixWorld),this.modelViewMatrix.multiplyMatrices(e.camera.matrixWorldInverse,this.matrixWorld),La.setFromMatrixPosition(this.modelViewMatrix),e.camera.isPerspectiveCamera&&this.material.sizeAttenuation===!1&&Da.multiplyScalar(-La.z);const i=this.material.rotation;let r,s;i!==0&&(s=Math.cos(i),r=Math.sin(i));const a=this.center;au(ru.set(-.5,-.5,0),La,a,Da,r,s),au(zo.set(.5,-.5,0),La,a,Da,r,s),au(su.set(.5,.5,0),La,a,Da,r,s),Vv.set(0,0),od.set(1,0),Gv.set(1,1);let c=e.ray.intersectTriangle(ru,zo,su,!1,Oo);if(c===null&&(au(zo.set(-.5,.5,0),La,a,Da,r,s),od.set(0,1),c=e.ray.intersectTriangle(ru,su,zo,!1,Oo),c===null))return;const u=e.ray.origin.distanceTo(Oo);u<e.near||u>e.far||t.push({distance:u,point:Oo.clone(),uv:ti.getInterpolation(Oo,ru,zo,su,Vv,od,Gv,new K),face:null,object:this})}copy(e,t){return super.copy(e,t),e.center!==void 0&&this.center.copy(e.center),this.material=e.material,this}}function au(n,e,t,i,r,s){Ia.subVectors(n,t).addScalar(.5).multiply(i),r!==void 0?(Bo.x=s*Ia.x-r*Ia.y,Bo.y=r*Ia.x+s*Ia.y):Bo.copy(Ia),n.copy(e),n.x+=Bo.x,n.y+=Bo.y,n.applyMatrix4(Hy)}const ou=new I,Wv=new I;class Gy extends Ut{constructor(){super(),this._currentLevel=0,this.type="LOD",Object.defineProperties(this,{levels:{enumerable:!0,value:[]},isLOD:{value:!0}}),this.autoUpdate=!0}copy(e){super.copy(e,!1);const t=e.levels;for(let i=0,r=t.length;i<r;i++){const s=t[i];this.addLevel(s.object.clone(),s.distance,s.hysteresis)}return this.autoUpdate=e.autoUpdate,this}addLevel(e,t=0,i=0){t=Math.abs(t);const r=this.levels;let s;for(s=0;s<r.length&&!(t<r[s].distance);s++);return r.splice(s,0,{distance:t,hysteresis:i,object:e}),this.add(e),this}getCurrentLevel(){return this._currentLevel}getObjectForDistance(e){const t=this.levels;if(t.length>0){let i,r;for(i=1,r=t.length;i<r;i++){let s=t[i].distance;if(t[i].object.visible&&(s-=s*t[i].hysteresis),e<s)break}return t[i-1].object}return null}raycast(e,t){if(this.levels.length>0){ou.setFromMatrixPosition(this.matrixWorld);const r=e.ray.origin.distanceTo(ou);this.getObjectForDistance(r).raycast(e,t)}}update(e){const t=this.levels;if(t.length>1){ou.setFromMatrixPosition(e.matrixWorld),Wv.setFromMatrixPosition(this.matrixWorld);const i=ou.distanceTo(Wv)/e.zoom;t[0].object.visible=!0;let r,s;for(r=1,s=t.length;r<s;r++){let a=t[r].distance;if(t[r].object.visible&&(a-=a*t[r].hysteresis),i>=a)t[r-1].object.visible=!1,t[r].object.visible=!0;else break}for(this._currentLevel=r-1;r<s;r++)t[r].object.visible=!1}}toJSON(e){const t=super.toJSON(e);this.autoUpdate===!1&&(t.object.autoUpdate=!1),t.object.levels=[];const i=this.levels;for(let r=0,s=i.length;r<s;r++){const a=i[r];t.object.levels.push({object:a.object.uuid,distance:a.distance,hysteresis:a.hysteresis})}return t}}const Xv=new I,Yv=new Et,Zv=new Et,hA=new I,qv=new ze,Ua=new I,ld=new Li,jv=new ze,cd=new io;class Wy extends Tn{constructor(e,t){super(e,t),this.isSkinnedMesh=!0,this.type="SkinnedMesh",this.bindMode="attached",this.bindMatrix=new ze,this.bindMatrixInverse=new ze,this.boundingBox=null,this.boundingSphere=null}computeBoundingBox(){const e=this.geometry;this.boundingBox===null&&(this.boundingBox=new cr),this.boundingBox.makeEmpty();const t=e.getAttribute("position");for(let i=0;i<t.count;i++)Ua.fromBufferAttribute(t,i),this.applyBoneTransform(i,Ua),this.boundingBox.expandByPoint(Ua)}computeBoundingSphere(){const e=this.geometry;this.boundingSphere===null&&(this.boundingSphere=new Li),this.boundingSphere.makeEmpty();const t=e.getAttribute("position");for(let i=0;i<t.count;i++)Ua.fromBufferAttribute(t,i),this.applyBoneTransform(i,Ua),this.boundingSphere.expandByPoint(Ua)}copy(e,t){return super.copy(e,t),this.bindMode=e.bindMode,this.bindMatrix.copy(e.bindMatrix),this.bindMatrixInverse.copy(e.bindMatrixInverse),this.skeleton=e.skeleton,e.boundingBox!==null&&(this.boundingBox=e.boundingBox.clone()),e.boundingSphere!==null&&(this.boundingSphere=e.boundingSphere.clone()),this}raycast(e,t){const i=this.material,r=this.matrixWorld;i!==void 0&&(this.boundingSphere===null&&this.computeBoundingSphere(),ld.copy(this.boundingSphere),ld.applyMatrix4(r),e.ray.intersectsSphere(ld)!==!1&&(jv.copy(r).invert(),cd.copy(e.ray).applyMatrix4(jv),!(this.boundingBox!==null&&cd.intersectsBox(this.boundingBox)===!1)&&this._computeIntersections(e,t,cd)))}getVertexPosition(e,t){return super.getVertexPosition(e,t),this.applyBoneTransform(e,t),t}bind(e,t){this.skeleton=e,t===void 0&&(this.updateMatrixWorld(!0),this.skeleton.calculateInverses(),t=this.matrixWorld),this.bindMatrix.copy(t),this.bindMatrixInverse.copy(t).invert()}pose(){this.skeleton.pose()}normalizeSkinWeights(){const e=new Et,t=this.geometry.attributes.skinWeight;for(let i=0,r=t.count;i<r;i++){e.fromBufferAttribute(t,i);const s=1/e.manhattanLength();s!==1/0?e.multiplyScalar(s):e.set(1,0,0,0),t.setXYZW(i,e.x,e.y,e.z,e.w)}}updateMatrixWorld(e){super.updateMatrixWorld(e),this.bindMode==="attached"?this.bindMatrixInverse.copy(this.matrixWorld).invert():this.bindMode==="detached"?this.bindMatrixInverse.copy(this.bindMatrix).invert():console.warn("THREE.SkinnedMesh: Unrecognized bindMode: "+this.bindMode)}applyBoneTransform(e,t){const i=this.skeleton,r=this.geometry;Yv.fromBufferAttribute(r.attributes.skinIndex,e),Zv.fromBufferAttribute(r.attributes.skinWeight,e),Xv.copy(t).applyMatrix4(this.bindMatrix),t.set(0,0,0);for(let s=0;s<4;s++){const a=Zv.getComponent(s);if(a!==0){const c=Yv.getComponent(s);qv.multiplyMatrices(i.bones[c].matrixWorld,i.boneInverses[c]),t.addScaledVector(hA.copy(Xv).applyMatrix4(qv),a)}}return t.applyMatrix4(this.bindMatrixInverse)}boneTransform(e,t){return console.warn("THREE.SkinnedMesh: .boneTransform() was renamed to .applyBoneTransform() in r151."),this.applyBoneTransform(e,t)}}class Kp extends Ut{constructor(){super(),this.isBone=!0,this.type="Bone"}}class sr extends Zt{constructor(e=null,t=1,i=1,r,s,a,c,u,h=ct,f=ct,p,m){super(null,a,c,u,h,f,r,s,p,m),this.isDataTexture=!0,this.image={data:e,width:t,height:i},this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1}}const Kv=new ze,fA=new ze;class fh{constructor(e=[],t=[]){this.uuid=gi(),this.bones=e.slice(0),this.boneInverses=t,this.boneMatrices=null,this.boneTexture=null,this.boneTextureSize=0,this.init()}init(){const e=this.bones,t=this.boneInverses;if(this.boneMatrices=new Float32Array(e.length*16),t.length===0)this.calculateInverses();else if(e.length!==t.length){console.warn("THREE.Skeleton: Number of inverse bone matrices does not match amount of bones."),this.boneInverses=[];for(let i=0,r=this.bones.length;i<r;i++)this.boneInverses.push(new ze)}}calculateInverses(){this.boneInverses.length=0;for(let e=0,t=this.bones.length;e<t;e++){const i=new ze;this.bones[e]&&i.copy(this.bones[e].matrixWorld).invert(),this.boneInverses.push(i)}}pose(){for(let e=0,t=this.bones.length;e<t;e++){const i=this.bones[e];i&&i.matrixWorld.copy(this.boneInverses[e]).invert()}for(let e=0,t=this.bones.length;e<t;e++){const i=this.bones[e];i&&(i.parent&&i.parent.isBone?(i.matrix.copy(i.parent.matrixWorld).invert(),i.matrix.multiply(i.matrixWorld)):i.matrix.copy(i.matrixWorld),i.matrix.decompose(i.position,i.quaternion,i.scale))}}update(){const e=this.bones,t=this.boneInverses,i=this.boneMatrices,r=this.boneTexture;for(let s=0,a=e.length;s<a;s++){const c=e[s]?e[s].matrixWorld:fA;Kv.multiplyMatrices(c,t[s]),Kv.toArray(i,s*16)}r!==null&&(r.needsUpdate=!0)}clone(){return new fh(this.bones,this.boneInverses)}computeBoneTexture(){let e=Math.sqrt(this.bones.length*4);e=Py(e),e=Math.max(e,4);const t=new Float32Array(e*e*4);t.set(this.boneMatrices);const i=new sr(t,e,e,Qt,tn);return i.needsUpdate=!0,this.boneMatrices=t,this.boneTexture=i,this.boneTextureSize=e,this}getBoneByName(e){for(let t=0,i=this.bones.length;t<i;t++){const r=this.bones[t];if(r.name===e)return r}}dispose(){this.boneTexture!==null&&(this.boneTexture.dispose(),this.boneTexture=null)}fromJSON(e,t){this.uuid=e.uuid;for(let i=0,r=e.bones.length;i<r;i++){const s=e.bones[i];let a=t[s];a===void 0&&(console.warn("THREE.Skeleton: No bone found with UUID:",s),a=new Kp),this.bones.push(a),this.boneInverses.push(new ze().fromArray(e.boneInverses[i]))}return this.init(),this}toJSON(){const e={metadata:{version:4.6,type:"Skeleton",generator:"Skeleton.toJSON"},bones:[],boneInverses:[]};e.uuid=this.uuid;const t=this.bones,i=this.boneInverses;for(let r=0,s=t.length;r<s;r++){const a=t[r];e.bones.push(a.uuid);const c=i[r];e.boneInverses.push(c.toArray())}return e}}class $a extends Ct{constructor(e,t,i,r=1){super(e,t,i),this.isInstancedBufferAttribute=!0,this.meshPerAttribute=r}copy(e){return super.copy(e),this.meshPerAttribute=e.meshPerAttribute,this}toJSON(){const e=super.toJSON();return e.meshPerAttribute=this.meshPerAttribute,e.isInstancedBufferAttribute=!0,e}}const Na=new ze,Qv=new ze,lu=[],Jv=new cr,dA=new ze,ko=new Tn,Ho=new Li;class Xy extends Tn{constructor(e,t,i){super(e,t),this.isInstancedMesh=!0,this.instanceMatrix=new $a(new Float32Array(i*16),16),this.instanceColor=null,this.count=i,this.boundingBox=null,this.boundingSphere=null;for(let r=0;r<i;r++)this.setMatrixAt(r,dA)}computeBoundingBox(){const e=this.geometry,t=this.count;this.boundingBox===null&&(this.boundingBox=new cr),e.boundingBox===null&&e.computeBoundingBox(),this.boundingBox.makeEmpty();for(let i=0;i<t;i++)this.getMatrixAt(i,Na),Jv.copy(e.boundingBox).applyMatrix4(Na),this.boundingBox.union(Jv)}computeBoundingSphere(){const e=this.geometry,t=this.count;this.boundingSphere===null&&(this.boundingSphere=new Li),e.boundingSphere===null&&e.computeBoundingSphere(),this.boundingSphere.makeEmpty();for(let i=0;i<t;i++)this.getMatrixAt(i,Na),Ho.copy(e.boundingSphere).applyMatrix4(Na),this.boundingSphere.union(Ho)}copy(e,t){return super.copy(e,t),this.instanceMatrix.copy(e.instanceMatrix),e.instanceColor!==null&&(this.instanceColor=e.instanceColor.clone()),this.count=e.count,e.boundingBox!==null&&(this.boundingBox=e.boundingBox.clone()),e.boundingSphere!==null&&(this.boundingSphere=e.boundingSphere.clone()),this}getColorAt(e,t){t.fromArray(this.instanceColor.array,e*3)}getMatrixAt(e,t){t.fromArray(this.instanceMatrix.array,e*16)}raycast(e,t){const i=this.matrixWorld,r=this.count;if(ko.geometry=this.geometry,ko.material=this.material,ko.material!==void 0&&(this.boundingSphere===null&&this.computeBoundingSphere(),Ho.copy(this.boundingSphere),Ho.applyMatrix4(i),e.ray.intersectsSphere(Ho)!==!1))for(let s=0;s<r;s++){this.getMatrixAt(s,Na),Qv.multiplyMatrices(i,Na),ko.matrixWorld=Qv,ko.raycast(e,lu);for(let a=0,c=lu.length;a<c;a++){const u=lu[a];u.instanceId=s,u.object=this,t.push(u)}lu.length=0}}setColorAt(e,t){this.instanceColor===null&&(this.instanceColor=new $a(new Float32Array(this.instanceMatrix.count*3),3)),t.toArray(this.instanceColor.array,e*3)}setMatrixAt(e,t){t.toArray(this.instanceMatrix.array,e*16)}updateMorphTargets(){}dispose(){this.dispatchEvent({type:"dispose"})}}class jn extends Pn{constructor(e){super(),this.isLineBasicMaterial=!0,this.type="LineBasicMaterial",this.color=new be(16777215),this.map=null,this.linewidth=1,this.linecap="round",this.linejoin="round",this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.linewidth=e.linewidth,this.linecap=e.linecap,this.linejoin=e.linejoin,this.fog=e.fog,this}}const $v=new I,e0=new I,t0=new ze,ud=new io,cu=new Li;class ns extends Ut{constructor(e=new mt,t=new jn){super(),this.isLine=!0,this.type="Line",this.geometry=e,this.material=t,this.updateMorphTargets()}copy(e,t){return super.copy(e,t),this.material=e.material,this.geometry=e.geometry,this}computeLineDistances(){const e=this.geometry;if(e.index===null){const t=e.attributes.position,i=[0];for(let r=1,s=t.count;r<s;r++)$v.fromBufferAttribute(t,r-1),e0.fromBufferAttribute(t,r),i[r]=i[r-1],i[r]+=$v.distanceTo(e0);e.setAttribute("lineDistance",new Xe(i,1))}else console.warn("THREE.Line.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.");return this}raycast(e,t){const i=this.geometry,r=this.matrixWorld,s=e.params.Line.threshold,a=i.drawRange;if(i.boundingSphere===null&&i.computeBoundingSphere(),cu.copy(i.boundingSphere),cu.applyMatrix4(r),cu.radius+=s,e.ray.intersectsSphere(cu)===!1)return;t0.copy(r).invert(),ud.copy(e.ray).applyMatrix4(t0);const c=s/((this.scale.x+this.scale.y+this.scale.z)/3),u=c*c,h=new I,f=new I,p=new I,m=new I,g=this.isLineSegments?2:1,y=i.index,S=i.attributes.position;if(y!==null){const x=Math.max(0,a.start),w=Math.min(y.count,a.start+a.count);for(let M=x,b=w-1;M<b;M+=g){const P=y.getX(M),C=y.getX(M+1);if(h.fromBufferAttribute(S,P),f.fromBufferAttribute(S,C),ud.distanceSqToSegment(h,f,m,p)>u)continue;m.applyMatrix4(this.matrixWorld);const U=e.ray.origin.distanceTo(m);U<e.near||U>e.far||t.push({distance:U,point:p.clone().applyMatrix4(this.matrixWorld),index:M,face:null,faceIndex:null,object:this})}}else{const x=Math.max(0,a.start),w=Math.min(S.count,a.start+a.count);for(let M=x,b=w-1;M<b;M+=g){if(h.fromBufferAttribute(S,M),f.fromBufferAttribute(S,M+1),ud.distanceSqToSegment(h,f,m,p)>u)continue;m.applyMatrix4(this.matrixWorld);const C=e.ray.origin.distanceTo(m);C<e.near||C>e.far||t.push({distance:C,point:p.clone().applyMatrix4(this.matrixWorld),index:M,face:null,faceIndex:null,object:this})}}}updateMorphTargets(){const t=this.geometry.morphAttributes,i=Object.keys(t);if(i.length>0){const r=t[i[0]];if(r!==void 0){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let s=0,a=r.length;s<a;s++){const c=r[s].name||String(s);this.morphTargetInfluences.push(0),this.morphTargetDictionary[c]=s}}}}}const n0=new I,i0=new I;class ur extends ns{constructor(e,t){super(e,t),this.isLineSegments=!0,this.type="LineSegments"}computeLineDistances(){const e=this.geometry;if(e.index===null){const t=e.attributes.position,i=[];for(let r=0,s=t.count;r<s;r+=2)n0.fromBufferAttribute(t,r),i0.fromBufferAttribute(t,r+1),i[r]=r===0?0:i[r-1],i[r+1]=i[r]+n0.distanceTo(i0);e.setAttribute("lineDistance",new Xe(i,1))}else console.warn("THREE.LineSegments.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.");return this}}class Yy extends ns{constructor(e,t){super(e,t),this.isLineLoop=!0,this.type="LineLoop"}}class Qp extends Pn{constructor(e){super(),this.isPointsMaterial=!0,this.type="PointsMaterial",this.color=new be(16777215),this.map=null,this.alphaMap=null,this.size=1,this.sizeAttenuation=!0,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.alphaMap=e.alphaMap,this.size=e.size,this.sizeAttenuation=e.sizeAttenuation,this.fog=e.fog,this}}const r0=new ze,up=new io,uu=new Li,hu=new I;class Zy extends Ut{constructor(e=new mt,t=new Qp){super(),this.isPoints=!0,this.type="Points",this.geometry=e,this.material=t,this.updateMorphTargets()}copy(e,t){return super.copy(e,t),this.material=e.material,this.geometry=e.geometry,this}raycast(e,t){const i=this.geometry,r=this.matrixWorld,s=e.params.Points.threshold,a=i.drawRange;if(i.boundingSphere===null&&i.computeBoundingSphere(),uu.copy(i.boundingSphere),uu.applyMatrix4(r),uu.radius+=s,e.ray.intersectsSphere(uu)===!1)return;r0.copy(r).invert(),up.copy(e.ray).applyMatrix4(r0);const c=s/((this.scale.x+this.scale.y+this.scale.z)/3),u=c*c,h=i.index,p=i.attributes.position;if(h!==null){const m=Math.max(0,a.start),g=Math.min(h.count,a.start+a.count);for(let y=m,T=g;y<T;y++){const S=h.getX(y);hu.fromBufferAttribute(p,S),s0(hu,S,u,r,e,t,this)}}else{const m=Math.max(0,a.start),g=Math.min(p.count,a.start+a.count);for(let y=m,T=g;y<T;y++)hu.fromBufferAttribute(p,y),s0(hu,y,u,r,e,t,this)}}updateMorphTargets(){const t=this.geometry.morphAttributes,i=Object.keys(t);if(i.length>0){const r=t[i[0]];if(r!==void 0){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let s=0,a=r.length;s<a;s++){const c=r[s].name||String(s);this.morphTargetInfluences.push(0),this.morphTargetDictionary[c]=s}}}}}function s0(n,e,t,i,r,s,a){const c=up.distanceSqToPoint(n);if(c<t){const u=new I;up.closestPointToPoint(n,u),u.applyMatrix4(i);const h=r.ray.origin.distanceTo(u);if(h<r.near||h>r.far)return;s.push({distance:h,distanceToRay:Math.sqrt(c),point:u,index:e,face:null,object:a})}}class qy extends Zt{constructor(e,t,i,r,s,a,c,u,h){super(e,t,i,r,s,a,c,u,h),this.isVideoTexture=!0,this.minFilter=a!==void 0?a:Qe,this.magFilter=s!==void 0?s:Qe,this.generateMipmaps=!1;const f=this;function p(){f.needsUpdate=!0,e.requestVideoFrameCallback(p)}"requestVideoFrameCallback"in e&&e.requestVideoFrameCallback(p)}clone(){return new this.constructor(this.image).copy(this)}update(){const e=this.image;"requestVideoFrameCallback"in e===!1&&e.readyState>=e.HAVE_CURRENT_DATA&&(this.needsUpdate=!0)}}class hp extends Zt{constructor(e,t){super({width:e,height:t}),this.isFramebufferTexture=!0,this.magFilter=ct,this.minFilter=ct,this.generateMipmaps=!1,this.needsUpdate=!0}}class Jp extends Zt{constructor(e,t,i,r,s,a,c,u,h,f,p,m){super(null,a,c,u,h,f,r,s,p,m),this.isCompressedTexture=!0,this.image={width:t,height:i},this.mipmaps=e,this.flipY=!1,this.generateMipmaps=!1}}class pA extends Jp{constructor(e,t,i,r,s,a){super(e,t,i,s,a),this.isCompressedArrayTexture=!0,this.image.depth=r,this.wrapR=Mn}}class jy extends Zt{constructor(e,t,i,r,s,a,c,u,h){super(e,t,i,r,s,a,c,u,h),this.isCanvasTexture=!0,this.needsUpdate=!0}}class Zi{constructor(){this.type="Curve",this.arcLengthDivisions=200}getPoint(){return console.warn("THREE.Curve: .getPoint() not implemented."),null}getPointAt(e,t){const i=this.getUtoTmapping(e);return this.getPoint(i,t)}getPoints(e=5){const t=[];for(let i=0;i<=e;i++)t.push(this.getPoint(i/e));return t}getSpacedPoints(e=5){const t=[];for(let i=0;i<=e;i++)t.push(this.getPointAt(i/e));return t}getLength(){const e=this.getLengths();return e[e.length-1]}getLengths(e=this.arcLengthDivisions){if(this.cacheArcLengths&&this.cacheArcLengths.length===e+1&&!this.needsUpdate)return this.cacheArcLengths;this.needsUpdate=!1;const t=[];let i,r=this.getPoint(0),s=0;t.push(0);for(let a=1;a<=e;a++)i=this.getPoint(a/e),s+=i.distanceTo(r),t.push(s),r=i;return this.cacheArcLengths=t,t}updateArcLengths(){this.needsUpdate=!0,this.getLengths()}getUtoTmapping(e,t){const i=this.getLengths();let r=0;const s=i.length;let a;t?a=t:a=e*i[s-1];let c=0,u=s-1,h;for(;c<=u;)if(r=Math.floor(c+(u-c)/2),h=i[r]-a,h<0)c=r+1;else if(h>0)u=r-1;else{u=r;break}if(r=u,i[r]===a)return r/(s-1);const f=i[r],m=i[r+1]-f,g=(a-f)/m;return(r+g)/(s-1)}getTangent(e,t){let r=e-1e-4,s=e+1e-4;r<0&&(r=0),s>1&&(s=1);const a=this.getPoint(r),c=this.getPoint(s),u=t||(a.isVector2?new K:new I);return u.copy(c).sub(a).normalize(),u}getTangentAt(e,t){const i=this.getUtoTmapping(e);return this.getTangent(i,t)}computeFrenetFrames(e,t){const i=new I,r=[],s=[],a=[],c=new I,u=new ze;for(let g=0;g<=e;g++){const y=g/e;r[g]=this.getTangentAt(y,new I)}s[0]=new I,a[0]=new I;let h=Number.MAX_VALUE;const f=Math.abs(r[0].x),p=Math.abs(r[0].y),m=Math.abs(r[0].z);f<=h&&(h=f,i.set(1,0,0)),p<=h&&(h=p,i.set(0,1,0)),m<=h&&i.set(0,0,1),c.crossVectors(r[0],i).normalize(),s[0].crossVectors(r[0],c),a[0].crossVectors(r[0],s[0]);for(let g=1;g<=e;g++){if(s[g]=s[g-1].clone(),a[g]=a[g-1].clone(),c.crossVectors(r[g-1],r[g]),c.length()>Number.EPSILON){c.normalize();const y=Math.acos(ln(r[g-1].dot(r[g]),-1,1));s[g].applyMatrix4(u.makeRotationAxis(c,y))}a[g].crossVectors(r[g],s[g])}if(t===!0){let g=Math.acos(ln(s[0].dot(s[e]),-1,1));g/=e,r[0].dot(c.crossVectors(s[0],s[e]))>0&&(g=-g);for(let y=1;y<=e;y++)s[y].applyMatrix4(u.makeRotationAxis(r[y],g*y)),a[y].crossVectors(r[y],s[y])}return{tangents:r,normals:s,binormals:a}}clone(){return new this.constructor().copy(this)}copy(e){return this.arcLengthDivisions=e.arcLengthDivisions,this}toJSON(){const e={metadata:{version:4.6,type:"Curve",generator:"Curve.toJSON"}};return e.arcLengthDivisions=this.arcLengthDivisions,e.type=this.type,e}fromJSON(e){return this.arcLengthDivisions=e.arcLengthDivisions,this}}class dh extends Zi{constructor(e=0,t=0,i=1,r=1,s=0,a=Math.PI*2,c=!1,u=0){super(),this.isEllipseCurve=!0,this.type="EllipseCurve",this.aX=e,this.aY=t,this.xRadius=i,this.yRadius=r,this.aStartAngle=s,this.aEndAngle=a,this.aClockwise=c,this.aRotation=u}getPoint(e,t){const i=t||new K,r=Math.PI*2;let s=this.aEndAngle-this.aStartAngle;const a=Math.abs(s)<Number.EPSILON;for(;s<0;)s+=r;for(;s>r;)s-=r;s<Number.EPSILON&&(a?s=0:s=r),this.aClockwise===!0&&!a&&(s===r?s=-r:s=s-r);const c=this.aStartAngle+e*s;let u=this.aX+this.xRadius*Math.cos(c),h=this.aY+this.yRadius*Math.sin(c);if(this.aRotation!==0){const f=Math.cos(this.aRotation),p=Math.sin(this.aRotation),m=u-this.aX,g=h-this.aY;u=m*f-g*p+this.aX,h=m*p+g*f+this.aY}return i.set(u,h)}copy(e){return super.copy(e),this.aX=e.aX,this.aY=e.aY,this.xRadius=e.xRadius,this.yRadius=e.yRadius,this.aStartAngle=e.aStartAngle,this.aEndAngle=e.aEndAngle,this.aClockwise=e.aClockwise,this.aRotation=e.aRotation,this}toJSON(){const e=super.toJSON();return e.aX=this.aX,e.aY=this.aY,e.xRadius=this.xRadius,e.yRadius=this.yRadius,e.aStartAngle=this.aStartAngle,e.aEndAngle=this.aEndAngle,e.aClockwise=this.aClockwise,e.aRotation=this.aRotation,e}fromJSON(e){return super.fromJSON(e),this.aX=e.aX,this.aY=e.aY,this.xRadius=e.xRadius,this.yRadius=e.yRadius,this.aStartAngle=e.aStartAngle,this.aEndAngle=e.aEndAngle,this.aClockwise=e.aClockwise,this.aRotation=e.aRotation,this}}class Ky extends dh{constructor(e,t,i,r,s,a){super(e,t,i,i,r,s,a),this.isArcCurve=!0,this.type="ArcCurve"}}function $p(){let n=0,e=0,t=0,i=0;function r(s,a,c,u){n=s,e=c,t=-3*s+3*a-2*c-u,i=2*s-2*a+c+u}return{initCatmullRom:function(s,a,c,u,h){r(a,c,h*(c-s),h*(u-a))},initNonuniformCatmullRom:function(s,a,c,u,h,f,p){let m=(a-s)/h-(c-s)/(h+f)+(c-a)/f,g=(c-a)/f-(u-a)/(f+p)+(u-c)/p;m*=f,g*=f,r(a,c,m,g)},calc:function(s){const a=s*s,c=a*s;return n+e*s+t*a+i*c}}}const fu=new I,hd=new $p,fd=new $p,dd=new $p;class Qy extends Zi{constructor(e=[],t=!1,i="centripetal",r=.5){super(),this.isCatmullRomCurve3=!0,this.type="CatmullRomCurve3",this.points=e,this.closed=t,this.curveType=i,this.tension=r}getPoint(e,t=new I){const i=t,r=this.points,s=r.length,a=(s-(this.closed?0:1))*e;let c=Math.floor(a),u=a-c;this.closed?c+=c>0?0:(Math.floor(Math.abs(c)/s)+1)*s:u===0&&c===s-1&&(c=s-2,u=1);let h,f;this.closed||c>0?h=r[(c-1)%s]:(fu.subVectors(r[0],r[1]).add(r[0]),h=fu);const p=r[c%s],m=r[(c+1)%s];if(this.closed||c+2<s?f=r[(c+2)%s]:(fu.subVectors(r[s-1],r[s-2]).add(r[s-1]),f=fu),this.curveType==="centripetal"||this.curveType==="chordal"){const g=this.curveType==="chordal"?.5:.25;let y=Math.pow(h.distanceToSquared(p),g),T=Math.pow(p.distanceToSquared(m),g),S=Math.pow(m.distanceToSquared(f),g);T<1e-4&&(T=1),y<1e-4&&(y=T),S<1e-4&&(S=T),hd.initNonuniformCatmullRom(h.x,p.x,m.x,f.x,y,T,S),fd.initNonuniformCatmullRom(h.y,p.y,m.y,f.y,y,T,S),dd.initNonuniformCatmullRom(h.z,p.z,m.z,f.z,y,T,S)}else this.curveType==="catmullrom"&&(hd.initCatmullRom(h.x,p.x,m.x,f.x,this.tension),fd.initCatmullRom(h.y,p.y,m.y,f.y,this.tension),dd.initCatmullRom(h.z,p.z,m.z,f.z,this.tension));return i.set(hd.calc(u),fd.calc(u),dd.calc(u)),i}copy(e){super.copy(e),this.points=[];for(let t=0,i=e.points.length;t<i;t++){const r=e.points[t];this.points.push(r.clone())}return this.closed=e.closed,this.curveType=e.curveType,this.tension=e.tension,this}toJSON(){const e=super.toJSON();e.points=[];for(let t=0,i=this.points.length;t<i;t++){const r=this.points[t];e.points.push(r.toArray())}return e.closed=this.closed,e.curveType=this.curveType,e.tension=this.tension,e}fromJSON(e){super.fromJSON(e),this.points=[];for(let t=0,i=e.points.length;t<i;t++){const r=e.points[t];this.points.push(new I().fromArray(r))}return this.closed=e.closed,this.curveType=e.curveType,this.tension=e.tension,this}}function a0(n,e,t,i,r){const s=(i-e)*.5,a=(r-t)*.5,c=n*n,u=n*c;return(2*t-2*i+s+a)*u+(-3*t+3*i-2*s-a)*c+s*n+t}function mA(n,e){const t=1-n;return t*t*e}function gA(n,e){return 2*(1-n)*n*e}function vA(n,e){return n*n*e}function rl(n,e,t,i){return mA(n,e)+gA(n,t)+vA(n,i)}function xA(n,e){const t=1-n;return t*t*t*e}function yA(n,e){const t=1-n;return 3*t*t*n*e}function SA(n,e){return 3*(1-n)*n*n*e}function MA(n,e){return n*n*n*e}function sl(n,e,t,i,r){return xA(n,e)+yA(n,t)+SA(n,i)+MA(n,r)}class em extends Zi{constructor(e=new K,t=new K,i=new K,r=new K){super(),this.isCubicBezierCurve=!0,this.type="CubicBezierCurve",this.v0=e,this.v1=t,this.v2=i,this.v3=r}getPoint(e,t=new K){const i=t,r=this.v0,s=this.v1,a=this.v2,c=this.v3;return i.set(sl(e,r.x,s.x,a.x,c.x),sl(e,r.y,s.y,a.y,c.y)),i}copy(e){return super.copy(e),this.v0.copy(e.v0),this.v1.copy(e.v1),this.v2.copy(e.v2),this.v3.copy(e.v3),this}toJSON(){const e=super.toJSON();return e.v0=this.v0.toArray(),e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e.v3=this.v3.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v0.fromArray(e.v0),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this.v3.fromArray(e.v3),this}}class Jy extends Zi{constructor(e=new I,t=new I,i=new I,r=new I){super(),this.isCubicBezierCurve3=!0,this.type="CubicBezierCurve3",this.v0=e,this.v1=t,this.v2=i,this.v3=r}getPoint(e,t=new I){const i=t,r=this.v0,s=this.v1,a=this.v2,c=this.v3;return i.set(sl(e,r.x,s.x,a.x,c.x),sl(e,r.y,s.y,a.y,c.y),sl(e,r.z,s.z,a.z,c.z)),i}copy(e){return super.copy(e),this.v0.copy(e.v0),this.v1.copy(e.v1),this.v2.copy(e.v2),this.v3.copy(e.v3),this}toJSON(){const e=super.toJSON();return e.v0=this.v0.toArray(),e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e.v3=this.v3.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v0.fromArray(e.v0),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this.v3.fromArray(e.v3),this}}class ph extends Zi{constructor(e=new K,t=new K){super(),this.isLineCurve=!0,this.type="LineCurve",this.v1=e,this.v2=t}getPoint(e,t=new K){const i=t;return e===1?i.copy(this.v2):(i.copy(this.v2).sub(this.v1),i.multiplyScalar(e).add(this.v1)),i}getPointAt(e,t){return this.getPoint(e,t)}getTangent(e,t=new K){return t.subVectors(this.v2,this.v1).normalize()}getTangentAt(e,t){return this.getTangent(e,t)}copy(e){return super.copy(e),this.v1.copy(e.v1),this.v2.copy(e.v2),this}toJSON(){const e=super.toJSON();return e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this}}class $y extends Zi{constructor(e=new I,t=new I){super(),this.isLineCurve3=!0,this.type="LineCurve3",this.v1=e,this.v2=t}getPoint(e,t=new I){const i=t;return e===1?i.copy(this.v2):(i.copy(this.v2).sub(this.v1),i.multiplyScalar(e).add(this.v1)),i}getPointAt(e,t){return this.getPoint(e,t)}getTangent(e,t=new I){return t.subVectors(this.v2,this.v1).normalize()}getTangentAt(e,t){return this.getTangent(e,t)}copy(e){return super.copy(e),this.v1.copy(e.v1),this.v2.copy(e.v2),this}toJSON(){const e=super.toJSON();return e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this}}class tm extends Zi{constructor(e=new K,t=new K,i=new K){super(),this.isQuadraticBezierCurve=!0,this.type="QuadraticBezierCurve",this.v0=e,this.v1=t,this.v2=i}getPoint(e,t=new K){const i=t,r=this.v0,s=this.v1,a=this.v2;return i.set(rl(e,r.x,s.x,a.x),rl(e,r.y,s.y,a.y)),i}copy(e){return super.copy(e),this.v0.copy(e.v0),this.v1.copy(e.v1),this.v2.copy(e.v2),this}toJSON(){const e=super.toJSON();return e.v0=this.v0.toArray(),e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v0.fromArray(e.v0),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this}}class nm extends Zi{constructor(e=new I,t=new I,i=new I){super(),this.isQuadraticBezierCurve3=!0,this.type="QuadraticBezierCurve3",this.v0=e,this.v1=t,this.v2=i}getPoint(e,t=new I){const i=t,r=this.v0,s=this.v1,a=this.v2;return i.set(rl(e,r.x,s.x,a.x),rl(e,r.y,s.y,a.y),rl(e,r.z,s.z,a.z)),i}copy(e){return super.copy(e),this.v0.copy(e.v0),this.v1.copy(e.v1),this.v2.copy(e.v2),this}toJSON(){const e=super.toJSON();return e.v0=this.v0.toArray(),e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v0.fromArray(e.v0),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this}}class im extends Zi{constructor(e=[]){super(),this.isSplineCurve=!0,this.type="SplineCurve",this.points=e}getPoint(e,t=new K){const i=t,r=this.points,s=(r.length-1)*e,a=Math.floor(s),c=s-a,u=r[a===0?a:a-1],h=r[a],f=r[a>r.length-2?r.length-1:a+1],p=r[a>r.length-3?r.length-1:a+2];return i.set(a0(c,u.x,h.x,f.x,p.x),a0(c,u.y,h.y,f.y,p.y)),i}copy(e){super.copy(e),this.points=[];for(let t=0,i=e.points.length;t<i;t++){const r=e.points[t];this.points.push(r.clone())}return this}toJSON(){const e=super.toJSON();e.points=[];for(let t=0,i=this.points.length;t<i;t++){const r=this.points[t];e.points.push(r.toArray())}return e}fromJSON(e){super.fromJSON(e),this.points=[];for(let t=0,i=e.points.length;t<i;t++){const r=e.points[t];this.points.push(new K().fromArray(r))}return this}}var rm=Object.freeze({__proto__:null,ArcCurve:Ky,CatmullRomCurve3:Qy,CubicBezierCurve:em,CubicBezierCurve3:Jy,EllipseCurve:dh,LineCurve:ph,LineCurve3:$y,QuadraticBezierCurve:tm,QuadraticBezierCurve3:nm,SplineCurve:im});class eS extends Zi{constructor(){super(),this.type="CurvePath",this.curves=[],this.autoClose=!1}add(e){this.curves.push(e)}closePath(){const e=this.curves[0].getPoint(0),t=this.curves[this.curves.length-1].getPoint(1);e.equals(t)||this.curves.push(new ph(t,e))}getPoint(e,t){const i=e*this.getLength(),r=this.getCurveLengths();let s=0;for(;s<r.length;){if(r[s]>=i){const a=r[s]-i,c=this.curves[s],u=c.getLength(),h=u===0?0:1-a/u;return c.getPointAt(h,t)}s++}return null}getLength(){const e=this.getCurveLengths();return e[e.length-1]}updateArcLengths(){this.needsUpdate=!0,this.cacheLengths=null,this.getCurveLengths()}getCurveLengths(){if(this.cacheLengths&&this.cacheLengths.length===this.curves.length)return this.cacheLengths;const e=[];let t=0;for(let i=0,r=this.curves.length;i<r;i++)t+=this.curves[i].getLength(),e.push(t);return this.cacheLengths=e,e}getSpacedPoints(e=40){const t=[];for(let i=0;i<=e;i++)t.push(this.getPoint(i/e));return this.autoClose&&t.push(t[0]),t}getPoints(e=12){const t=[];let i;for(let r=0,s=this.curves;r<s.length;r++){const a=s[r],c=a.isEllipseCurve?e*2:a.isLineCurve||a.isLineCurve3?1:a.isSplineCurve?e*a.points.length:e,u=a.getPoints(c);for(let h=0;h<u.length;h++){const f=u[h];i&&i.equals(f)||(t.push(f),i=f)}}return this.autoClose&&t.length>1&&!t[t.length-1].equals(t[0])&&t.push(t[0]),t}copy(e){super.copy(e),this.curves=[];for(let t=0,i=e.curves.length;t<i;t++){const r=e.curves[t];this.curves.push(r.clone())}return this.autoClose=e.autoClose,this}toJSON(){const e=super.toJSON();e.autoClose=this.autoClose,e.curves=[];for(let t=0,i=this.curves.length;t<i;t++){const r=this.curves[t];e.curves.push(r.toJSON())}return e}fromJSON(e){super.fromJSON(e),this.autoClose=e.autoClose,this.curves=[];for(let t=0,i=e.curves.length;t<i;t++){const r=e.curves[t];this.curves.push(new rm[r.type]().fromJSON(r))}return this}}class Sl extends eS{constructor(e){super(),this.type="Path",this.currentPoint=new K,e&&this.setFromPoints(e)}setFromPoints(e){this.moveTo(e[0].x,e[0].y);for(let t=1,i=e.length;t<i;t++)this.lineTo(e[t].x,e[t].y);return this}moveTo(e,t){return this.currentPoint.set(e,t),this}lineTo(e,t){const i=new ph(this.currentPoint.clone(),new K(e,t));return this.curves.push(i),this.currentPoint.set(e,t),this}quadraticCurveTo(e,t,i,r){const s=new tm(this.currentPoint.clone(),new K(e,t),new K(i,r));return this.curves.push(s),this.currentPoint.set(i,r),this}bezierCurveTo(e,t,i,r,s,a){const c=new em(this.currentPoint.clone(),new K(e,t),new K(i,r),new K(s,a));return this.curves.push(c),this.currentPoint.set(s,a),this}splineThru(e){const t=[this.currentPoint.clone()].concat(e),i=new im(t);return this.curves.push(i),this.currentPoint.copy(e[e.length-1]),this}arc(e,t,i,r,s,a){const c=this.currentPoint.x,u=this.currentPoint.y;return this.absarc(e+c,t+u,i,r,s,a),this}absarc(e,t,i,r,s,a){return this.absellipse(e,t,i,i,r,s,a),this}ellipse(e,t,i,r,s,a,c,u){const h=this.currentPoint.x,f=this.currentPoint.y;return this.absellipse(e+h,t+f,i,r,s,a,c,u),this}absellipse(e,t,i,r,s,a,c,u){const h=new dh(e,t,i,r,s,a,c,u);if(this.curves.length>0){const p=h.getPoint(0);p.equals(this.currentPoint)||this.lineTo(p.x,p.y)}this.curves.push(h);const f=h.getPoint(1);return this.currentPoint.copy(f),this}copy(e){return super.copy(e),this.currentPoint.copy(e.currentPoint),this}toJSON(){const e=super.toJSON();return e.currentPoint=this.currentPoint.toArray(),e}fromJSON(e){return super.fromJSON(e),this.currentPoint.fromArray(e.currentPoint),this}}class Ul extends mt{constructor(e=[new K(0,-.5),new K(.5,0),new K(0,.5)],t=12,i=0,r=Math.PI*2){super(),this.type="LatheGeometry",this.parameters={points:e,segments:t,phiStart:i,phiLength:r},t=Math.floor(t),r=ln(r,0,Math.PI*2);const s=[],a=[],c=[],u=[],h=[],f=1/t,p=new I,m=new K,g=new I,y=new I,T=new I;let S=0,x=0;for(let w=0;w<=e.length-1;w++)switch(w){case 0:S=e[w+1].x-e[w].x,x=e[w+1].y-e[w].y,g.x=x*1,g.y=-S,g.z=x*0,T.copy(g),g.normalize(),u.push(g.x,g.y,g.z);break;case e.length-1:u.push(T.x,T.y,T.z);break;default:S=e[w+1].x-e[w].x,x=e[w+1].y-e[w].y,g.x=x*1,g.y=-S,g.z=x*0,y.copy(g),g.x+=T.x,g.y+=T.y,g.z+=T.z,g.normalize(),u.push(g.x,g.y,g.z),T.copy(y)}for(let w=0;w<=t;w++){const M=i+w*f*r,b=Math.sin(M),P=Math.cos(M);for(let C=0;C<=e.length-1;C++){p.x=e[C].x*b,p.y=e[C].y,p.z=e[C].x*P,a.push(p.x,p.y,p.z),m.x=w/t,m.y=C/(e.length-1),c.push(m.x,m.y);const L=u[3*C+0]*b,U=u[3*C+1],A=u[3*C+0]*P;h.push(L,U,A)}}for(let w=0;w<t;w++)for(let M=0;M<e.length-1;M++){const b=M+w*e.length,P=b,C=b+e.length,L=b+e.length+1,U=b+1;s.push(P,C,U),s.push(L,U,C)}this.setIndex(s),this.setAttribute("position",new Xe(a,3)),this.setAttribute("uv",new Xe(c,2)),this.setAttribute("normal",new Xe(h,3))}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new Ul(e.points,e.segments,e.phiStart,e.phiLength)}}class mh extends Ul{constructor(e=1,t=1,i=4,r=8){const s=new Sl;s.absarc(0,-t/2,e,Math.PI*1.5,0),s.absarc(0,t/2,e,0,Math.PI*.5),super(s.getPoints(i),r),this.type="CapsuleGeometry",this.parameters={radius:e,height:t,capSegments:i,radialSegments:r}}static fromJSON(e){return new mh(e.radius,e.length,e.capSegments,e.radialSegments)}}class gh extends mt{constructor(e=1,t=32,i=0,r=Math.PI*2){super(),this.type="CircleGeometry",this.parameters={radius:e,segments:t,thetaStart:i,thetaLength:r},t=Math.max(3,t);const s=[],a=[],c=[],u=[],h=new I,f=new K;a.push(0,0,0),c.push(0,0,1),u.push(.5,.5);for(let p=0,m=3;p<=t;p++,m+=3){const g=i+p/t*r;h.x=e*Math.cos(g),h.y=e*Math.sin(g),a.push(h.x,h.y,h.z),c.push(0,0,1),f.x=(a[m]/e+1)/2,f.y=(a[m+1]/e+1)/2,u.push(f.x,f.y)}for(let p=1;p<=t;p++)s.push(p,p+1,0);this.setIndex(s),this.setAttribute("position",new Xe(a,3)),this.setAttribute("normal",new Xe(c,3)),this.setAttribute("uv",new Xe(u,2))}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new gh(e.radius,e.segments,e.thetaStart,e.thetaLength)}}class oo extends mt{constructor(e=1,t=1,i=1,r=32,s=1,a=!1,c=0,u=Math.PI*2){super(),this.type="CylinderGeometry",this.parameters={radiusTop:e,radiusBottom:t,height:i,radialSegments:r,heightSegments:s,openEnded:a,thetaStart:c,thetaLength:u};const h=this;r=Math.floor(r),s=Math.floor(s);const f=[],p=[],m=[],g=[];let y=0;const T=[],S=i/2;let x=0;w(),a===!1&&(e>0&&M(!0),t>0&&M(!1)),this.setIndex(f),this.setAttribute("position",new Xe(p,3)),this.setAttribute("normal",new Xe(m,3)),this.setAttribute("uv",new Xe(g,2));function w(){const b=new I,P=new I;let C=0;const L=(t-e)/i;for(let U=0;U<=s;U++){const A=[],R=U/s,z=R*(t-e)+e;for(let te=0;te<=r;te++){const W=te/r,J=W*u+c,ne=Math.sin(J),ue=Math.cos(J);P.x=z*ne,P.y=-R*i+S,P.z=z*ue,p.push(P.x,P.y,P.z),b.set(ne,L,ue).normalize(),m.push(b.x,b.y,b.z),g.push(W,1-R),A.push(y++)}T.push(A)}for(let U=0;U<r;U++)for(let A=0;A<s;A++){const R=T[A][U],z=T[A+1][U],te=T[A+1][U+1],W=T[A][U+1];f.push(R,z,W),f.push(z,te,W),C+=6}h.addGroup(x,C,0),x+=C}function M(b){const P=y,C=new K,L=new I;let U=0;const A=b===!0?e:t,R=b===!0?1:-1;for(let te=1;te<=r;te++)p.push(0,S*R,0),m.push(0,R,0),g.push(.5,.5),y++;const z=y;for(let te=0;te<=r;te++){const J=te/r*u+c,ne=Math.cos(J),ue=Math.sin(J);L.x=A*ue,L.y=S*R,L.z=A*ne,p.push(L.x,L.y,L.z),m.push(0,R,0),C.x=ne*.5+.5,C.y=ue*.5*R+.5,g.push(C.x,C.y),y++}for(let te=0;te<r;te++){const W=P+te,J=z+te;b===!0?f.push(J,J+1,W):f.push(J+1,J,W),U+=3}h.addGroup(x,U,b===!0?1:2),x+=U}}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new oo(e.radiusTop,e.radiusBottom,e.height,e.radialSegments,e.heightSegments,e.openEnded,e.thetaStart,e.thetaLength)}}class vh extends oo{constructor(e=1,t=1,i=32,r=1,s=!1,a=0,c=Math.PI*2){super(0,e,t,i,r,s,a,c),this.type="ConeGeometry",this.parameters={radius:e,height:t,radialSegments:i,heightSegments:r,openEnded:s,thetaStart:a,thetaLength:c}}static fromJSON(e){return new vh(e.radius,e.height,e.radialSegments,e.heightSegments,e.openEnded,e.thetaStart,e.thetaLength)}}class ss extends mt{constructor(e=[],t=[],i=1,r=0){super(),this.type="PolyhedronGeometry",this.parameters={vertices:e,indices:t,radius:i,detail:r};const s=[],a=[];c(r),h(i),f(),this.setAttribute("position",new Xe(s,3)),this.setAttribute("normal",new Xe(s.slice(),3)),this.setAttribute("uv",new Xe(a,2)),r===0?this.computeVertexNormals():this.normalizeNormals();function c(w){const M=new I,b=new I,P=new I;for(let C=0;C<t.length;C+=3)g(t[C+0],M),g(t[C+1],b),g(t[C+2],P),u(M,b,P,w)}function u(w,M,b,P){const C=P+1,L=[];for(let U=0;U<=C;U++){L[U]=[];const A=w.clone().lerp(b,U/C),R=M.clone().lerp(b,U/C),z=C-U;for(let te=0;te<=z;te++)te===0&&U===C?L[U][te]=A:L[U][te]=A.clone().lerp(R,te/z)}for(let U=0;U<C;U++)for(let A=0;A<2*(C-U)-1;A++){const R=Math.floor(A/2);A%2===0?(m(L[U][R+1]),m(L[U+1][R]),m(L[U][R])):(m(L[U][R+1]),m(L[U+1][R+1]),m(L[U+1][R]))}}function h(w){const M=new I;for(let b=0;b<s.length;b+=3)M.x=s[b+0],M.y=s[b+1],M.z=s[b+2],M.normalize().multiplyScalar(w),s[b+0]=M.x,s[b+1]=M.y,s[b+2]=M.z}function f(){const w=new I;for(let M=0;M<s.length;M+=3){w.x=s[M+0],w.y=s[M+1],w.z=s[M+2];const b=S(w)/2/Math.PI+.5,P=x(w)/Math.PI+.5;a.push(b,1-P)}y(),p()}function p(){for(let w=0;w<a.length;w+=6){const M=a[w+0],b=a[w+2],P=a[w+4],C=Math.max(M,b,P),L=Math.min(M,b,P);C>.9&&L<.1&&(M<.2&&(a[w+0]+=1),b<.2&&(a[w+2]+=1),P<.2&&(a[w+4]+=1))}}function m(w){s.push(w.x,w.y,w.z)}function g(w,M){const b=w*3;M.x=e[b+0],M.y=e[b+1],M.z=e[b+2]}function y(){const w=new I,M=new I,b=new I,P=new I,C=new K,L=new K,U=new K;for(let A=0,R=0;A<s.length;A+=9,R+=6){w.set(s[A+0],s[A+1],s[A+2]),M.set(s[A+3],s[A+4],s[A+5]),b.set(s[A+6],s[A+7],s[A+8]),C.set(a[R+0],a[R+1]),L.set(a[R+2],a[R+3]),U.set(a[R+4],a[R+5]),P.copy(w).add(M).add(b).divideScalar(3);const z=S(P);T(C,R+0,w,z),T(L,R+2,M,z),T(U,R+4,b,z)}}function T(w,M,b,P){P<0&&w.x===1&&(a[M]=w.x-1),b.x===0&&b.z===0&&(a[M]=P/2/Math.PI+.5)}function S(w){return Math.atan2(w.z,-w.x)}function x(w){return Math.atan2(-w.y,Math.sqrt(w.x*w.x+w.z*w.z))}}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new ss(e.vertices,e.indices,e.radius,e.details)}}class xh extends ss{constructor(e=1,t=0){const i=(1+Math.sqrt(5))/2,r=1/i,s=[-1,-1,-1,-1,-1,1,-1,1,-1,-1,1,1,1,-1,-1,1,-1,1,1,1,-1,1,1,1,0,-r,-i,0,-r,i,0,r,-i,0,r,i,-r,-i,0,-r,i,0,r,-i,0,r,i,0,-i,0,-r,i,0,-r,-i,0,r,i,0,r],a=[3,11,7,3,7,15,3,15,13,7,19,17,7,17,6,7,6,15,17,4,8,17,8,10,17,10,6,8,0,16,8,16,2,8,2,10,0,12,1,0,1,18,0,18,16,6,10,2,6,2,13,6,13,15,2,16,18,2,18,3,2,3,13,18,1,9,18,9,11,18,11,3,4,14,12,4,12,0,4,0,8,11,9,5,11,5,19,11,19,7,19,5,14,19,14,4,19,4,17,1,12,14,1,14,5,1,5,9];super(s,a,e,t),this.type="DodecahedronGeometry",this.parameters={radius:e,detail:t}}static fromJSON(e){return new xh(e.radius,e.detail)}}const du=new I,pu=new I,pd=new I,mu=new ti;class tS extends mt{constructor(e=null,t=1){if(super(),this.type="EdgesGeometry",this.parameters={geometry:e,thresholdAngle:t},e!==null){const r=Math.pow(10,4),s=Math.cos(Hs*t),a=e.getIndex(),c=e.getAttribute("position"),u=a?a.count:c.count,h=[0,0,0],f=["a","b","c"],p=new Array(3),m={},g=[];for(let y=0;y<u;y+=3){a?(h[0]=a.getX(y),h[1]=a.getX(y+1),h[2]=a.getX(y+2)):(h[0]=y,h[1]=y+1,h[2]=y+2);const{a:T,b:S,c:x}=mu;if(T.fromBufferAttribute(c,h[0]),S.fromBufferAttribute(c,h[1]),x.fromBufferAttribute(c,h[2]),mu.getNormal(pd),p[0]=`${Math.round(T.x*r)},${Math.round(T.y*r)},${Math.round(T.z*r)}`,p[1]=`${Math.round(S.x*r)},${Math.round(S.y*r)},${Math.round(S.z*r)}`,p[2]=`${Math.round(x.x*r)},${Math.round(x.y*r)},${Math.round(x.z*r)}`,!(p[0]===p[1]||p[1]===p[2]||p[2]===p[0]))for(let w=0;w<3;w++){const M=(w+1)%3,b=p[w],P=p[M],C=mu[f[w]],L=mu[f[M]],U=`${b}_${P}`,A=`${P}_${b}`;A in m&&m[A]?(pd.dot(m[A].normal)<=s&&(g.push(C.x,C.y,C.z),g.push(L.x,L.y,L.z)),m[A]=null):U in m||(m[U]={index0:h[w],index1:h[M],normal:pd.clone()})}}for(const y in m)if(m[y]){const{index0:T,index1:S}=m[y];du.fromBufferAttribute(c,T),pu.fromBufferAttribute(c,S),g.push(du.x,du.y,du.z),g.push(pu.x,pu.y,pu.z)}this.setAttribute("position",new Xe(g,3))}}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}}class Ws extends Sl{constructor(e){super(e),this.uuid=gi(),this.type="Shape",this.holes=[]}getPointsHoles(e){const t=[];for(let i=0,r=this.holes.length;i<r;i++)t[i]=this.holes[i].getPoints(e);return t}extractPoints(e){return{shape:this.getPoints(e),holes:this.getPointsHoles(e)}}copy(e){super.copy(e),this.holes=[];for(let t=0,i=e.holes.length;t<i;t++){const r=e.holes[t];this.holes.push(r.clone())}return this}toJSON(){const e=super.toJSON();e.uuid=this.uuid,e.holes=[];for(let t=0,i=this.holes.length;t<i;t++){const r=this.holes[t];e.holes.push(r.toJSON())}return e}fromJSON(e){super.fromJSON(e),this.uuid=e.uuid,this.holes=[];for(let t=0,i=e.holes.length;t<i;t++){const r=e.holes[t];this.holes.push(new Sl().fromJSON(r))}return this}}const _A={triangulate:function(n,e,t=2){const i=e&&e.length,r=i?e[0]*t:n.length;let s=nS(n,0,r,t,!0);const a=[];if(!s||s.next===s.prev)return a;let c,u,h,f,p,m,g;if(i&&(s=AA(n,e,s,t)),n.length>80*t){c=h=n[0],u=f=n[1];for(let y=t;y<r;y+=t)p=n[y],m=n[y+1],p<c&&(c=p),m<u&&(u=m),p>h&&(h=p),m>f&&(f=m);g=Math.max(h-c,f-u),g=g!==0?32767/g:0}return Ml(s,a,t,c,u,g,0),a}};function nS(n,e,t,i,r){let s,a;if(r===BA(n,e,t,i)>0)for(s=e;s<t;s+=i)a=o0(s,n[s],n[s+1],a);else for(s=t-i;s>=e;s-=i)a=o0(s,n[s],n[s+1],a);return a&&yh(a,a.next)&&(Tl(a),a=a.next),a}function Zs(n,e){if(!n)return n;e||(e=n);let t=n,i;do if(i=!1,!t.steiner&&(yh(t,t.next)||nn(t.prev,t,t.next)===0)){if(Tl(t),t=e=t.prev,t===t.next)break;i=!0}else t=t.next;while(i||t!==e);return e}function Ml(n,e,t,i,r,s,a){if(!n)return;!a&&s&&LA(n,i,r,s);let c=n,u,h;for(;n.prev!==n.next;){if(u=n.prev,h=n.next,s?wA(n,i,r,s):TA(n)){e.push(u.i/t|0),e.push(n.i/t|0),e.push(h.i/t|0),Tl(n),n=h.next,c=h.next;continue}if(n=h,n===c){a?a===1?(n=EA(Zs(n),e,t),Ml(n,e,t,i,r,s,2)):a===2&&bA(n,e,t,i,r,s):Ml(Zs(n),e,t,i,r,s,1);break}}}function TA(n){const e=n.prev,t=n,i=n.next;if(nn(e,t,i)>=0)return!1;const r=e.x,s=t.x,a=i.x,c=e.y,u=t.y,h=i.y,f=r<s?r<a?r:a:s<a?s:a,p=c<u?c<h?c:h:u<h?u:h,m=r>s?r>a?r:a:s>a?s:a,g=c>u?c>h?c:h:u>h?u:h;let y=i.next;for(;y!==e;){if(y.x>=f&&y.x<=m&&y.y>=p&&y.y<=g&&Xa(r,c,s,u,a,h,y.x,y.y)&&nn(y.prev,y,y.next)>=0)return!1;y=y.next}return!0}function wA(n,e,t,i){const r=n.prev,s=n,a=n.next;if(nn(r,s,a)>=0)return!1;const c=r.x,u=s.x,h=a.x,f=r.y,p=s.y,m=a.y,g=c<u?c<h?c:h:u<h?u:h,y=f<p?f<m?f:m:p<m?p:m,T=c>u?c>h?c:h:u>h?u:h,S=f>p?f>m?f:m:p>m?p:m,x=fp(g,y,e,t,i),w=fp(T,S,e,t,i);let M=n.prevZ,b=n.nextZ;for(;M&&M.z>=x&&b&&b.z<=w;){if(M.x>=g&&M.x<=T&&M.y>=y&&M.y<=S&&M!==r&&M!==a&&Xa(c,f,u,p,h,m,M.x,M.y)&&nn(M.prev,M,M.next)>=0||(M=M.prevZ,b.x>=g&&b.x<=T&&b.y>=y&&b.y<=S&&b!==r&&b!==a&&Xa(c,f,u,p,h,m,b.x,b.y)&&nn(b.prev,b,b.next)>=0))return!1;b=b.nextZ}for(;M&&M.z>=x;){if(M.x>=g&&M.x<=T&&M.y>=y&&M.y<=S&&M!==r&&M!==a&&Xa(c,f,u,p,h,m,M.x,M.y)&&nn(M.prev,M,M.next)>=0)return!1;M=M.prevZ}for(;b&&b.z<=w;){if(b.x>=g&&b.x<=T&&b.y>=y&&b.y<=S&&b!==r&&b!==a&&Xa(c,f,u,p,h,m,b.x,b.y)&&nn(b.prev,b,b.next)>=0)return!1;b=b.nextZ}return!0}function EA(n,e,t){let i=n;do{const r=i.prev,s=i.next.next;!yh(r,s)&&iS(r,i,i.next,s)&&_l(r,s)&&_l(s,r)&&(e.push(r.i/t|0),e.push(i.i/t|0),e.push(s.i/t|0),Tl(i),Tl(i.next),i=n=s),i=i.next}while(i!==n);return Zs(i)}function bA(n,e,t,i,r,s){let a=n;do{let c=a.next.next;for(;c!==a.prev;){if(a.i!==c.i&&NA(a,c)){let u=rS(a,c);a=Zs(a,a.next),u=Zs(u,u.next),Ml(a,e,t,i,r,s,0),Ml(u,e,t,i,r,s,0);return}c=c.next}a=a.next}while(a!==n)}function AA(n,e,t,i){const r=[];let s,a,c,u,h;for(s=0,a=e.length;s<a;s++)c=e[s]*i,u=s<a-1?e[s+1]*i:n.length,h=nS(n,c,u,i,!1),h===h.next&&(h.steiner=!0),r.push(UA(h));for(r.sort(PA),s=0;s<r.length;s++)t=CA(r[s],t);return t}function PA(n,e){return n.x-e.x}function CA(n,e){const t=RA(n,e);if(!t)return e;const i=rS(t,n);return Zs(i,i.next),Zs(t,t.next)}function RA(n,e){let t=e,i=-1/0,r;const s=n.x,a=n.y;do{if(a<=t.y&&a>=t.next.y&&t.next.y!==t.y){const m=t.x+(a-t.y)*(t.next.x-t.x)/(t.next.y-t.y);if(m<=s&&m>i&&(i=m,r=t.x<t.next.x?t:t.next,m===s))return r}t=t.next}while(t!==e);if(!r)return null;const c=r,u=r.x,h=r.y;let f=1/0,p;t=r;do s>=t.x&&t.x>=u&&s!==t.x&&Xa(a<h?s:i,a,u,h,a<h?i:s,a,t.x,t.y)&&(p=Math.abs(a-t.y)/(s-t.x),_l(t,n)&&(p<f||p===f&&(t.x>r.x||t.x===r.x&&DA(r,t)))&&(r=t,f=p)),t=t.next;while(t!==c);return r}function DA(n,e){return nn(n.prev,n,e.prev)<0&&nn(e.next,n,n.next)<0}function LA(n,e,t,i){let r=n;do r.z===0&&(r.z=fp(r.x,r.y,e,t,i)),r.prevZ=r.prev,r.nextZ=r.next,r=r.next;while(r!==n);r.prevZ.nextZ=null,r.prevZ=null,IA(r)}function IA(n){let e,t,i,r,s,a,c,u,h=1;do{for(t=n,n=null,s=null,a=0;t;){for(a++,i=t,c=0,e=0;e<h&&(c++,i=i.nextZ,!!i);e++);for(u=h;c>0||u>0&&i;)c!==0&&(u===0||!i||t.z<=i.z)?(r=t,t=t.nextZ,c--):(r=i,i=i.nextZ,u--),s?s.nextZ=r:n=r,r.prevZ=s,s=r;t=i}s.nextZ=null,h*=2}while(a>1);return n}function fp(n,e,t,i,r){return n=(n-t)*r|0,e=(e-i)*r|0,n=(n|n<<8)&16711935,n=(n|n<<4)&252645135,n=(n|n<<2)&858993459,n=(n|n<<1)&1431655765,e=(e|e<<8)&16711935,e=(e|e<<4)&252645135,e=(e|e<<2)&858993459,e=(e|e<<1)&1431655765,n|e<<1}function UA(n){let e=n,t=n;do(e.x<t.x||e.x===t.x&&e.y<t.y)&&(t=e),e=e.next;while(e!==n);return t}function Xa(n,e,t,i,r,s,a,c){return(r-a)*(e-c)>=(n-a)*(s-c)&&(n-a)*(i-c)>=(t-a)*(e-c)&&(t-a)*(s-c)>=(r-a)*(i-c)}function NA(n,e){return n.next.i!==e.i&&n.prev.i!==e.i&&!FA(n,e)&&(_l(n,e)&&_l(e,n)&&OA(n,e)&&(nn(n.prev,n,e.prev)||nn(n,e.prev,e))||yh(n,e)&&nn(n.prev,n,n.next)>0&&nn(e.prev,e,e.next)>0)}function nn(n,e,t){return(e.y-n.y)*(t.x-e.x)-(e.x-n.x)*(t.y-e.y)}function yh(n,e){return n.x===e.x&&n.y===e.y}function iS(n,e,t,i){const r=vu(nn(n,e,t)),s=vu(nn(n,e,i)),a=vu(nn(t,i,n)),c=vu(nn(t,i,e));return!!(r!==s&&a!==c||r===0&&gu(n,t,e)||s===0&&gu(n,i,e)||a===0&&gu(t,n,i)||c===0&&gu(t,e,i))}function gu(n,e,t){return e.x<=Math.max(n.x,t.x)&&e.x>=Math.min(n.x,t.x)&&e.y<=Math.max(n.y,t.y)&&e.y>=Math.min(n.y,t.y)}function vu(n){return n>0?1:n<0?-1:0}function FA(n,e){let t=n;do{if(t.i!==n.i&&t.next.i!==n.i&&t.i!==e.i&&t.next.i!==e.i&&iS(t,t.next,n,e))return!0;t=t.next}while(t!==n);return!1}function _l(n,e){return nn(n.prev,n,n.next)<0?nn(n,e,n.next)>=0&&nn(n,n.prev,e)>=0:nn(n,e,n.prev)<0||nn(n,n.next,e)<0}function OA(n,e){let t=n,i=!1;const r=(n.x+e.x)/2,s=(n.y+e.y)/2;do t.y>s!=t.next.y>s&&t.next.y!==t.y&&r<(t.next.x-t.x)*(s-t.y)/(t.next.y-t.y)+t.x&&(i=!i),t=t.next;while(t!==n);return i}function rS(n,e){const t=new dp(n.i,n.x,n.y),i=new dp(e.i,e.x,e.y),r=n.next,s=e.prev;return n.next=e,e.prev=n,t.next=r,r.prev=t,i.next=t,t.prev=i,s.next=i,i.prev=s,i}function o0(n,e,t,i){const r=new dp(n,e,t);return i?(r.next=i.next,r.prev=i,i.next.prev=r,i.next=r):(r.prev=r,r.next=r),r}function Tl(n){n.next.prev=n.prev,n.prev.next=n.next,n.prevZ&&(n.prevZ.nextZ=n.nextZ),n.nextZ&&(n.nextZ.prevZ=n.prevZ)}function dp(n,e,t){this.i=n,this.x=e,this.y=t,this.prev=null,this.next=null,this.z=0,this.prevZ=null,this.nextZ=null,this.steiner=!1}function BA(n,e,t,i){let r=0;for(let s=e,a=t-i;s<t;s+=i)r+=(n[a]-n[s])*(n[s+1]+n[a+1]),a=s;return r}class ar{static area(e){const t=e.length;let i=0;for(let r=t-1,s=0;s<t;r=s++)i+=e[r].x*e[s].y-e[s].x*e[r].y;return i*.5}static isClockWise(e){return ar.area(e)<0}static triangulateShape(e,t){const i=[],r=[],s=[];l0(e),c0(i,e);let a=e.length;t.forEach(l0);for(let u=0;u<t.length;u++)r.push(a),a+=t[u].length,c0(i,t[u]);const c=_A.triangulate(i,r);for(let u=0;u<c.length;u+=3)s.push(c.slice(u,u+3));return s}}function l0(n){const e=n.length;e>2&&n[e-1].equals(n[0])&&n.pop()}function c0(n,e){for(let t=0;t<e.length;t++)n.push(e[t].x),n.push(e[t].y)}class Sh extends mt{constructor(e=new Ws([new K(.5,.5),new K(-.5,.5),new K(-.5,-.5),new K(.5,-.5)]),t={}){super(),this.type="ExtrudeGeometry",this.parameters={shapes:e,options:t},e=Array.isArray(e)?e:[e];const i=this,r=[],s=[];for(let c=0,u=e.length;c<u;c++){const h=e[c];a(h)}this.setAttribute("position",new Xe(r,3)),this.setAttribute("uv",new Xe(s,2)),this.computeVertexNormals();function a(c){const u=[],h=t.curveSegments!==void 0?t.curveSegments:12,f=t.steps!==void 0?t.steps:1,p=t.depth!==void 0?t.depth:1;let m=t.bevelEnabled!==void 0?t.bevelEnabled:!0,g=t.bevelThickness!==void 0?t.bevelThickness:.2,y=t.bevelSize!==void 0?t.bevelSize:g-.1,T=t.bevelOffset!==void 0?t.bevelOffset:0,S=t.bevelSegments!==void 0?t.bevelSegments:3;const x=t.extrudePath,w=t.UVGenerator!==void 0?t.UVGenerator:zA;let M,b=!1,P,C,L,U;x&&(M=x.getSpacedPoints(f),b=!0,m=!1,P=x.computeFrenetFrames(f,!1),C=new I,L=new I,U=new I),m||(S=0,g=0,y=0,T=0);const A=c.extractPoints(h);let R=A.shape;const z=A.holes;if(!ar.isClockWise(R)){R=R.reverse();for(let k=0,xe=z.length;k<xe;k++){const me=z[k];ar.isClockWise(me)&&(z[k]=me.reverse())}}const W=ar.triangulateShape(R,z),J=R;for(let k=0,xe=z.length;k<xe;k++){const me=z[k];R=R.concat(me)}function ne(k,xe,me){return xe||console.error("THREE.ExtrudeGeometry: vec does not exist"),k.clone().addScaledVector(xe,me)}const ue=R.length,ae=W.length;function B(k,xe,me){let we,ve,Ze;const Be=k.x-xe.x,ke=k.y-xe.y,$e=me.x-k.x,yt=me.y-k.y,Gt=Be*Be+ke*ke,O=Be*yt-ke*$e;if(Math.abs(O)>Number.EPSILON){const D=Math.sqrt(Gt),ce=Math.sqrt($e*$e+yt*yt),Te=xe.x-ke/D,Me=xe.y+Be/D,Le=me.x-yt/ce,We=me.y+$e/ce,Re=((Le-Te)*yt-(We-Me)*$e)/(Be*yt-ke*$e);we=Te+Be*Re-k.x,ve=Me+ke*Re-k.y;const fe=we*we+ve*ve;if(fe<=2)return new K(we,ve);Ze=Math.sqrt(fe/2)}else{let D=!1;Be>Number.EPSILON?$e>Number.EPSILON&&(D=!0):Be<-Number.EPSILON?$e<-Number.EPSILON&&(D=!0):Math.sign(ke)===Math.sign(yt)&&(D=!0),D?(we=-ke,ve=Be,Ze=Math.sqrt(Gt)):(we=Be,ve=ke,Ze=Math.sqrt(Gt/2))}return new K(we/Ze,ve/Ze)}const X=[];for(let k=0,xe=J.length,me=xe-1,we=k+1;k<xe;k++,me++,we++)me===xe&&(me=0),we===xe&&(we=0),X[k]=B(J[k],J[me],J[we]);const Y=[];let H,q=X.concat();for(let k=0,xe=z.length;k<xe;k++){const me=z[k];H=[];for(let we=0,ve=me.length,Ze=ve-1,Be=we+1;we<ve;we++,Ze++,Be++)Ze===ve&&(Ze=0),Be===ve&&(Be=0),H[we]=B(me[we],me[Ze],me[Be]);Y.push(H),q=q.concat(H)}for(let k=0;k<S;k++){const xe=k/S,me=g*Math.cos(xe*Math.PI/2),we=y*Math.sin(xe*Math.PI/2)+T;for(let ve=0,Ze=J.length;ve<Ze;ve++){const Be=ne(J[ve],X[ve],we);He(Be.x,Be.y,-me)}for(let ve=0,Ze=z.length;ve<Ze;ve++){const Be=z[ve];H=Y[ve];for(let ke=0,$e=Be.length;ke<$e;ke++){const yt=ne(Be[ke],H[ke],we);He(yt.x,yt.y,-me)}}}const ye=y+T;for(let k=0;k<ue;k++){const xe=m?ne(R[k],q[k],ye):R[k];b?(L.copy(P.normals[0]).multiplyScalar(xe.x),C.copy(P.binormals[0]).multiplyScalar(xe.y),U.copy(M[0]).add(L).add(C),He(U.x,U.y,U.z)):He(xe.x,xe.y,0)}for(let k=1;k<=f;k++)for(let xe=0;xe<ue;xe++){const me=m?ne(R[xe],q[xe],ye):R[xe];b?(L.copy(P.normals[k]).multiplyScalar(me.x),C.copy(P.binormals[k]).multiplyScalar(me.y),U.copy(M[k]).add(L).add(C),He(U.x,U.y,U.z)):He(me.x,me.y,p/f*k)}for(let k=S-1;k>=0;k--){const xe=k/S,me=g*Math.cos(xe*Math.PI/2),we=y*Math.sin(xe*Math.PI/2)+T;for(let ve=0,Ze=J.length;ve<Ze;ve++){const Be=ne(J[ve],X[ve],we);He(Be.x,Be.y,p+me)}for(let ve=0,Ze=z.length;ve<Ze;ve++){const Be=z[ve];H=Y[ve];for(let ke=0,$e=Be.length;ke<$e;ke++){const yt=ne(Be[ke],H[ke],we);b?He(yt.x,yt.y+M[f-1].y,M[f-1].x+me):He(yt.x,yt.y,p+me)}}}ge(),Pe();function ge(){const k=r.length/3;if(m){let xe=0,me=ue*xe;for(let we=0;we<ae;we++){const ve=W[we];je(ve[2]+me,ve[1]+me,ve[0]+me)}xe=f+S*2,me=ue*xe;for(let we=0;we<ae;we++){const ve=W[we];je(ve[0]+me,ve[1]+me,ve[2]+me)}}else{for(let xe=0;xe<ae;xe++){const me=W[xe];je(me[2],me[1],me[0])}for(let xe=0;xe<ae;xe++){const me=W[xe];je(me[0]+ue*f,me[1]+ue*f,me[2]+ue*f)}}i.addGroup(k,r.length/3-k,0)}function Pe(){const k=r.length/3;let xe=0;Ue(J,xe),xe+=J.length;for(let me=0,we=z.length;me<we;me++){const ve=z[me];Ue(ve,xe),xe+=ve.length}i.addGroup(k,r.length/3-k,1)}function Ue(k,xe){let me=k.length;for(;--me>=0;){const we=me;let ve=me-1;ve<0&&(ve=k.length-1);for(let Ze=0,Be=f+S*2;Ze<Be;Ze++){const ke=ue*Ze,$e=ue*(Ze+1),yt=xe+we+ke,Gt=xe+ve+ke,O=xe+ve+$e,D=xe+we+$e;Tt(yt,Gt,O,D)}}}function He(k,xe,me){u.push(k),u.push(xe),u.push(me)}function je(k,xe,me){Nt(k),Nt(xe),Nt(me);const we=r.length/3,ve=w.generateTopUV(i,r,we-3,we-2,we-1);Ye(ve[0]),Ye(ve[1]),Ye(ve[2])}function Tt(k,xe,me,we){Nt(k),Nt(xe),Nt(we),Nt(xe),Nt(me),Nt(we);const ve=r.length/3,Ze=w.generateSideWallUV(i,r,ve-6,ve-3,ve-2,ve-1);Ye(Ze[0]),Ye(Ze[1]),Ye(Ze[3]),Ye(Ze[1]),Ye(Ze[2]),Ye(Ze[3])}function Nt(k){r.push(u[k*3+0]),r.push(u[k*3+1]),r.push(u[k*3+2])}function Ye(k){s.push(k.x),s.push(k.y)}}}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}toJSON(){const e=super.toJSON(),t=this.parameters.shapes,i=this.parameters.options;return kA(t,i,e)}static fromJSON(e,t){const i=[];for(let s=0,a=e.shapes.length;s<a;s++){const c=t[e.shapes[s]];i.push(c)}const r=e.options.extrudePath;return r!==void 0&&(e.options.extrudePath=new rm[r.type]().fromJSON(r)),new Sh(i,e.options)}}const zA={generateTopUV:function(n,e,t,i,r){const s=e[t*3],a=e[t*3+1],c=e[i*3],u=e[i*3+1],h=e[r*3],f=e[r*3+1];return[new K(s,a),new K(c,u),new K(h,f)]},generateSideWallUV:function(n,e,t,i,r,s){const a=e[t*3],c=e[t*3+1],u=e[t*3+2],h=e[i*3],f=e[i*3+1],p=e[i*3+2],m=e[r*3],g=e[r*3+1],y=e[r*3+2],T=e[s*3],S=e[s*3+1],x=e[s*3+2];return Math.abs(c-f)<Math.abs(a-h)?[new K(a,1-u),new K(h,1-p),new K(m,1-y),new K(T,1-x)]:[new K(c,1-u),new K(f,1-p),new K(g,1-y),new K(S,1-x)]}};function kA(n,e,t){if(t.shapes=[],Array.isArray(n))for(let i=0,r=n.length;i<r;i++){const s=n[i];t.shapes.push(s.uuid)}else t.shapes.push(n.uuid);return t.options=Object.assign({},e),e.extrudePath!==void 0&&(t.options.extrudePath=e.extrudePath.toJSON()),t}class Mh extends ss{constructor(e=1,t=0){const i=(1+Math.sqrt(5))/2,r=[-1,i,0,1,i,0,-1,-i,0,1,-i,0,0,-1,i,0,1,i,0,-1,-i,0,1,-i,i,0,-1,i,0,1,-i,0,-1,-i,0,1],s=[0,11,5,0,5,1,0,1,7,0,7,10,0,10,11,1,5,9,5,11,4,11,10,2,10,7,6,7,1,8,3,9,4,3,4,2,3,2,6,3,6,8,3,8,9,4,9,5,2,4,11,6,2,10,8,6,7,9,8,1];super(r,s,e,t),this.type="IcosahedronGeometry",this.parameters={radius:e,detail:t}}static fromJSON(e){return new Mh(e.radius,e.detail)}}class Nl extends ss{constructor(e=1,t=0){const i=[1,0,0,-1,0,0,0,1,0,0,-1,0,0,0,1,0,0,-1],r=[0,2,4,0,4,3,0,3,5,0,5,2,1,2,5,1,5,3,1,3,4,1,4,2];super(i,r,e,t),this.type="OctahedronGeometry",this.parameters={radius:e,detail:t}}static fromJSON(e){return new Nl(e.radius,e.detail)}}class _h extends mt{constructor(e=.5,t=1,i=32,r=1,s=0,a=Math.PI*2){super(),this.type="RingGeometry",this.parameters={innerRadius:e,outerRadius:t,thetaSegments:i,phiSegments:r,thetaStart:s,thetaLength:a},i=Math.max(3,i),r=Math.max(1,r);const c=[],u=[],h=[],f=[];let p=e;const m=(t-e)/r,g=new I,y=new K;for(let T=0;T<=r;T++){for(let S=0;S<=i;S++){const x=s+S/i*a;g.x=p*Math.cos(x),g.y=p*Math.sin(x),u.push(g.x,g.y,g.z),h.push(0,0,1),y.x=(g.x/t+1)/2,y.y=(g.y/t+1)/2,f.push(y.x,y.y)}p+=m}for(let T=0;T<r;T++){const S=T*(i+1);for(let x=0;x<i;x++){const w=x+S,M=w,b=w+i+1,P=w+i+2,C=w+1;c.push(M,b,C),c.push(b,P,C)}}this.setIndex(c),this.setAttribute("position",new Xe(u,3)),this.setAttribute("normal",new Xe(h,3)),this.setAttribute("uv",new Xe(f,2))}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new _h(e.innerRadius,e.outerRadius,e.thetaSegments,e.phiSegments,e.thetaStart,e.thetaLength)}}class Th extends mt{constructor(e=new Ws([new K(0,.5),new K(-.5,-.5),new K(.5,-.5)]),t=12){super(),this.type="ShapeGeometry",this.parameters={shapes:e,curveSegments:t};const i=[],r=[],s=[],a=[];let c=0,u=0;if(Array.isArray(e)===!1)h(e);else for(let f=0;f<e.length;f++)h(e[f]),this.addGroup(c,u,f),c+=u,u=0;this.setIndex(i),this.setAttribute("position",new Xe(r,3)),this.setAttribute("normal",new Xe(s,3)),this.setAttribute("uv",new Xe(a,2));function h(f){const p=r.length/3,m=f.extractPoints(t);let g=m.shape;const y=m.holes;ar.isClockWise(g)===!1&&(g=g.reverse());for(let S=0,x=y.length;S<x;S++){const w=y[S];ar.isClockWise(w)===!0&&(y[S]=w.reverse())}const T=ar.triangulateShape(g,y);for(let S=0,x=y.length;S<x;S++){const w=y[S];g=g.concat(w)}for(let S=0,x=g.length;S<x;S++){const w=g[S];r.push(w.x,w.y,0),s.push(0,0,1),a.push(w.x,w.y)}for(let S=0,x=T.length;S<x;S++){const w=T[S],M=w[0]+p,b=w[1]+p,P=w[2]+p;i.push(M,b,P),u+=3}}}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}toJSON(){const e=super.toJSON(),t=this.parameters.shapes;return HA(t,e)}static fromJSON(e,t){const i=[];for(let r=0,s=e.shapes.length;r<s;r++){const a=t[e.shapes[r]];i.push(a)}return new Th(i,e.curveSegments)}}function HA(n,e){if(e.shapes=[],Array.isArray(n))for(let t=0,i=n.length;t<i;t++){const r=n[t];e.shapes.push(r.uuid)}else e.shapes.push(n.uuid);return e}class Fl extends mt{constructor(e=1,t=32,i=16,r=0,s=Math.PI*2,a=0,c=Math.PI){super(),this.type="SphereGeometry",this.parameters={radius:e,widthSegments:t,heightSegments:i,phiStart:r,phiLength:s,thetaStart:a,thetaLength:c},t=Math.max(3,Math.floor(t)),i=Math.max(2,Math.floor(i));const u=Math.min(a+c,Math.PI);let h=0;const f=[],p=new I,m=new I,g=[],y=[],T=[],S=[];for(let x=0;x<=i;x++){const w=[],M=x/i;let b=0;x===0&&a===0?b=.5/t:x===i&&u===Math.PI&&(b=-.5/t);for(let P=0;P<=t;P++){const C=P/t;p.x=-e*Math.cos(r+C*s)*Math.sin(a+M*c),p.y=e*Math.cos(a+M*c),p.z=e*Math.sin(r+C*s)*Math.sin(a+M*c),y.push(p.x,p.y,p.z),m.copy(p).normalize(),T.push(m.x,m.y,m.z),S.push(C+b,1-M),w.push(h++)}f.push(w)}for(let x=0;x<i;x++)for(let w=0;w<t;w++){const M=f[x][w+1],b=f[x][w],P=f[x+1][w],C=f[x+1][w+1];(x!==0||a>0)&&g.push(M,b,C),(x!==i-1||u<Math.PI)&&g.push(b,P,C)}this.setIndex(g),this.setAttribute("position",new Xe(y,3)),this.setAttribute("normal",new Xe(T,3)),this.setAttribute("uv",new Xe(S,2))}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new Fl(e.radius,e.widthSegments,e.heightSegments,e.phiStart,e.phiLength,e.thetaStart,e.thetaLength)}}class wh extends ss{constructor(e=1,t=0){const i=[1,1,1,-1,-1,1,-1,1,-1,1,-1,-1],r=[2,1,0,0,3,2,1,3,0,2,3,1];super(i,r,e,t),this.type="TetrahedronGeometry",this.parameters={radius:e,detail:t}}static fromJSON(e){return new wh(e.radius,e.detail)}}class Eh extends mt{constructor(e=1,t=.4,i=12,r=48,s=Math.PI*2){super(),this.type="TorusGeometry",this.parameters={radius:e,tube:t,radialSegments:i,tubularSegments:r,arc:s},i=Math.floor(i),r=Math.floor(r);const a=[],c=[],u=[],h=[],f=new I,p=new I,m=new I;for(let g=0;g<=i;g++)for(let y=0;y<=r;y++){const T=y/r*s,S=g/i*Math.PI*2;p.x=(e+t*Math.cos(S))*Math.cos(T),p.y=(e+t*Math.cos(S))*Math.sin(T),p.z=t*Math.sin(S),c.push(p.x,p.y,p.z),f.x=e*Math.cos(T),f.y=e*Math.sin(T),m.subVectors(p,f).normalize(),u.push(m.x,m.y,m.z),h.push(y/r),h.push(g/i)}for(let g=1;g<=i;g++)for(let y=1;y<=r;y++){const T=(r+1)*g+y-1,S=(r+1)*(g-1)+y-1,x=(r+1)*(g-1)+y,w=(r+1)*g+y;a.push(T,S,w),a.push(S,x,w)}this.setIndex(a),this.setAttribute("position",new Xe(c,3)),this.setAttribute("normal",new Xe(u,3)),this.setAttribute("uv",new Xe(h,2))}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new Eh(e.radius,e.tube,e.radialSegments,e.tubularSegments,e.arc)}}class bh extends mt{constructor(e=1,t=.4,i=64,r=8,s=2,a=3){super(),this.type="TorusKnotGeometry",this.parameters={radius:e,tube:t,tubularSegments:i,radialSegments:r,p:s,q:a},i=Math.floor(i),r=Math.floor(r);const c=[],u=[],h=[],f=[],p=new I,m=new I,g=new I,y=new I,T=new I,S=new I,x=new I;for(let M=0;M<=i;++M){const b=M/i*s*Math.PI*2;w(b,s,a,e,g),w(b+.01,s,a,e,y),S.subVectors(y,g),x.addVectors(y,g),T.crossVectors(S,x),x.crossVectors(T,S),T.normalize(),x.normalize();for(let P=0;P<=r;++P){const C=P/r*Math.PI*2,L=-t*Math.cos(C),U=t*Math.sin(C);p.x=g.x+(L*x.x+U*T.x),p.y=g.y+(L*x.y+U*T.y),p.z=g.z+(L*x.z+U*T.z),u.push(p.x,p.y,p.z),m.subVectors(p,g).normalize(),h.push(m.x,m.y,m.z),f.push(M/i),f.push(P/r)}}for(let M=1;M<=i;M++)for(let b=1;b<=r;b++){const P=(r+1)*(M-1)+(b-1),C=(r+1)*M+(b-1),L=(r+1)*M+b,U=(r+1)*(M-1)+b;c.push(P,C,U),c.push(C,L,U)}this.setIndex(c),this.setAttribute("position",new Xe(u,3)),this.setAttribute("normal",new Xe(h,3)),this.setAttribute("uv",new Xe(f,2));function w(M,b,P,C,L){const U=Math.cos(M),A=Math.sin(M),R=P/b*M,z=Math.cos(R);L.x=C*(2+z)*.5*U,L.y=C*(2+z)*A*.5,L.z=C*Math.sin(R)*.5}}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new bh(e.radius,e.tube,e.tubularSegments,e.radialSegments,e.p,e.q)}}class Ah extends mt{constructor(e=new nm(new I(-1,-1,0),new I(-1,1,0),new I(1,1,0)),t=64,i=1,r=8,s=!1){super(),this.type="TubeGeometry",this.parameters={path:e,tubularSegments:t,radius:i,radialSegments:r,closed:s};const a=e.computeFrenetFrames(t,s);this.tangents=a.tangents,this.normals=a.normals,this.binormals=a.binormals;const c=new I,u=new I,h=new K;let f=new I;const p=[],m=[],g=[],y=[];T(),this.setIndex(y),this.setAttribute("position",new Xe(p,3)),this.setAttribute("normal",new Xe(m,3)),this.setAttribute("uv",new Xe(g,2));function T(){for(let M=0;M<t;M++)S(M);S(s===!1?t:0),w(),x()}function S(M){f=e.getPointAt(M/t,f);const b=a.normals[M],P=a.binormals[M];for(let C=0;C<=r;C++){const L=C/r*Math.PI*2,U=Math.sin(L),A=-Math.cos(L);u.x=A*b.x+U*P.x,u.y=A*b.y+U*P.y,u.z=A*b.z+U*P.z,u.normalize(),m.push(u.x,u.y,u.z),c.x=f.x+i*u.x,c.y=f.y+i*u.y,c.z=f.z+i*u.z,p.push(c.x,c.y,c.z)}}function x(){for(let M=1;M<=t;M++)for(let b=1;b<=r;b++){const P=(r+1)*(M-1)+(b-1),C=(r+1)*M+(b-1),L=(r+1)*M+b,U=(r+1)*(M-1)+b;y.push(P,C,U),y.push(C,L,U)}}function w(){for(let M=0;M<=t;M++)for(let b=0;b<=r;b++)h.x=M/t,h.y=b/r,g.push(h.x,h.y)}}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}toJSON(){const e=super.toJSON();return e.path=this.parameters.path.toJSON(),e}static fromJSON(e){return new Ah(new rm[e.path.type]().fromJSON(e.path),e.tubularSegments,e.radius,e.radialSegments,e.closed)}}class sS extends mt{constructor(e=null){if(super(),this.type="WireframeGeometry",this.parameters={geometry:e},e!==null){const t=[],i=new Set,r=new I,s=new I;if(e.index!==null){const a=e.attributes.position,c=e.index;let u=e.groups;u.length===0&&(u=[{start:0,count:c.count,materialIndex:0}]);for(let h=0,f=u.length;h<f;++h){const p=u[h],m=p.start,g=p.count;for(let y=m,T=m+g;y<T;y+=3)for(let S=0;S<3;S++){const x=c.getX(y+S),w=c.getX(y+(S+1)%3);r.fromBufferAttribute(a,x),s.fromBufferAttribute(a,w),u0(r,s,i)===!0&&(t.push(r.x,r.y,r.z),t.push(s.x,s.y,s.z))}}}else{const a=e.attributes.position;for(let c=0,u=a.count/3;c<u;c++)for(let h=0;h<3;h++){const f=3*c+h,p=3*c+(h+1)%3;r.fromBufferAttribute(a,f),s.fromBufferAttribute(a,p),u0(r,s,i)===!0&&(t.push(r.x,r.y,r.z),t.push(s.x,s.y,s.z))}}this.setAttribute("position",new Xe(t,3))}}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}}function u0(n,e,t){const i=`${n.x},${n.y},${n.z}-${e.x},${e.y},${e.z}`,r=`${e.x},${e.y},${e.z}-${n.x},${n.y},${n.z}`;return t.has(i)===!0||t.has(r)===!0?!1:(t.add(i),t.add(r),!0)}var h0=Object.freeze({__proto__:null,BoxGeometry:js,CapsuleGeometry:mh,CircleGeometry:gh,ConeGeometry:vh,CylinderGeometry:oo,DodecahedronGeometry:xh,EdgesGeometry:tS,ExtrudeGeometry:Sh,IcosahedronGeometry:Mh,LatheGeometry:Ul,OctahedronGeometry:Nl,PlaneGeometry:Il,PolyhedronGeometry:ss,RingGeometry:_h,ShapeGeometry:Th,SphereGeometry:Fl,TetrahedronGeometry:wh,TorusGeometry:Eh,TorusKnotGeometry:bh,TubeGeometry:Ah,WireframeGeometry:sS});class aS extends Pn{constructor(e){super(),this.isShadowMaterial=!0,this.type="ShadowMaterial",this.color=new be(0),this.transparent=!0,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.fog=e.fog,this}}class oS extends _t{constructor(e){super(e),this.isRawShaderMaterial=!0,this.type="RawShaderMaterial"}}class sm extends Pn{constructor(e){super(),this.isMeshStandardMaterial=!0,this.defines={STANDARD:""},this.type="MeshStandardMaterial",this.color=new be(16777215),this.roughness=1,this.metalness=0,this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new be(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=Dr,this.normalScale=new K(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.roughnessMap=null,this.metalnessMap=null,this.alphaMap=null,this.envMap=null,this.envMapIntensity=1,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.flatShading=!1,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.defines={STANDARD:""},this.color.copy(e.color),this.roughness=e.roughness,this.metalness=e.metalness,this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.roughnessMap=e.roughnessMap,this.metalnessMap=e.metalnessMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.envMapIntensity=e.envMapIntensity,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.flatShading=e.flatShading,this.fog=e.fog,this}}class lS extends sm{constructor(e){super(),this.isMeshPhysicalMaterial=!0,this.defines={STANDARD:"",PHYSICAL:""},this.type="MeshPhysicalMaterial",this.anisotropyRotation=0,this.anisotropyMap=null,this.clearcoatMap=null,this.clearcoatRoughness=0,this.clearcoatRoughnessMap=null,this.clearcoatNormalScale=new K(1,1),this.clearcoatNormalMap=null,this.ior=1.5,Object.defineProperty(this,"reflectivity",{get:function(){return ln(2.5*(this.ior-1)/(this.ior+1),0,1)},set:function(t){this.ior=(1+.4*t)/(1-.4*t)}}),this.iridescenceMap=null,this.iridescenceIOR=1.3,this.iridescenceThicknessRange=[100,400],this.iridescenceThicknessMap=null,this.sheenColor=new be(0),this.sheenColorMap=null,this.sheenRoughness=1,this.sheenRoughnessMap=null,this.transmissionMap=null,this.thickness=0,this.thicknessMap=null,this.attenuationDistance=1/0,this.attenuationColor=new be(1,1,1),this.specularIntensity=1,this.specularIntensityMap=null,this.specularColor=new be(1,1,1),this.specularColorMap=null,this._anisotropy=0,this._clearcoat=0,this._iridescence=0,this._sheen=0,this._transmission=0,this.setValues(e)}get anisotropy(){return this._anisotropy}set anisotropy(e){this._anisotropy>0!=e>0&&this.version++,this._anisotropy=e}get clearcoat(){return this._clearcoat}set clearcoat(e){this._clearcoat>0!=e>0&&this.version++,this._clearcoat=e}get iridescence(){return this._iridescence}set iridescence(e){this._iridescence>0!=e>0&&this.version++,this._iridescence=e}get sheen(){return this._sheen}set sheen(e){this._sheen>0!=e>0&&this.version++,this._sheen=e}get transmission(){return this._transmission}set transmission(e){this._transmission>0!=e>0&&this.version++,this._transmission=e}copy(e){return super.copy(e),this.defines={STANDARD:"",PHYSICAL:""},this.anisotropy=e.anisotropy,this.anisotropyRotation=e.anisotropyRotation,this.anisotropyMap=e.anisotropyMap,this.clearcoat=e.clearcoat,this.clearcoatMap=e.clearcoatMap,this.clearcoatRoughness=e.clearcoatRoughness,this.clearcoatRoughnessMap=e.clearcoatRoughnessMap,this.clearcoatNormalMap=e.clearcoatNormalMap,this.clearcoatNormalScale.copy(e.clearcoatNormalScale),this.ior=e.ior,this.iridescence=e.iridescence,this.iridescenceMap=e.iridescenceMap,this.iridescenceIOR=e.iridescenceIOR,this.iridescenceThicknessRange=[...e.iridescenceThicknessRange],this.iridescenceThicknessMap=e.iridescenceThicknessMap,this.sheen=e.sheen,this.sheenColor.copy(e.sheenColor),this.sheenColorMap=e.sheenColorMap,this.sheenRoughness=e.sheenRoughness,this.sheenRoughnessMap=e.sheenRoughnessMap,this.transmission=e.transmission,this.transmissionMap=e.transmissionMap,this.thickness=e.thickness,this.thicknessMap=e.thicknessMap,this.attenuationDistance=e.attenuationDistance,this.attenuationColor.copy(e.attenuationColor),this.specularIntensity=e.specularIntensity,this.specularIntensityMap=e.specularIntensityMap,this.specularColor.copy(e.specularColor),this.specularColorMap=e.specularColorMap,this}}class cS extends Pn{constructor(e){super(),this.isMeshPhongMaterial=!0,this.type="MeshPhongMaterial",this.color=new be(16777215),this.specular=new be(1118481),this.shininess=30,this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new be(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=Dr,this.normalScale=new K(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=Rl,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.flatShading=!1,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.specular.copy(e.specular),this.shininess=e.shininess,this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.specularMap=e.specularMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.combine=e.combine,this.reflectivity=e.reflectivity,this.refractionRatio=e.refractionRatio,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.flatShading=e.flatShading,this.fog=e.fog,this}}class uS extends Pn{constructor(e){super(),this.isMeshToonMaterial=!0,this.defines={TOON:""},this.type="MeshToonMaterial",this.color=new be(16777215),this.map=null,this.gradientMap=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new be(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=Dr,this.normalScale=new K(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.alphaMap=null,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.gradientMap=e.gradientMap,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.alphaMap=e.alphaMap,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.fog=e.fog,this}}class am extends Pn{constructor(e){super(),this.isMeshNormalMaterial=!0,this.type="MeshNormalMaterial",this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=Dr,this.normalScale=new K(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.wireframe=!1,this.wireframeLinewidth=1,this.flatShading=!1,this.setValues(e)}copy(e){return super.copy(e),this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.flatShading=e.flatShading,this}}class hS extends Pn{constructor(e){super(),this.isMeshLambertMaterial=!0,this.type="MeshLambertMaterial",this.color=new be(16777215),this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new be(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=Dr,this.normalScale=new K(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=Rl,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.flatShading=!1,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.specularMap=e.specularMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.combine=e.combine,this.reflectivity=e.reflectivity,this.refractionRatio=e.refractionRatio,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.flatShading=e.flatShading,this.fog=e.fog,this}}class fS extends Pn{constructor(e){super(),this.isMeshMatcapMaterial=!0,this.defines={MATCAP:""},this.type="MeshMatcapMaterial",this.color=new be(16777215),this.matcap=null,this.map=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=Dr,this.normalScale=new K(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.alphaMap=null,this.flatShading=!1,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.defines={MATCAP:""},this.color.copy(e.color),this.matcap=e.matcap,this.map=e.map,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.alphaMap=e.alphaMap,this.flatShading=e.flatShading,this.fog=e.fog,this}}class dS extends jn{constructor(e){super(),this.isLineDashedMaterial=!0,this.type="LineDashedMaterial",this.scale=1,this.dashSize=3,this.gapSize=1,this.setValues(e)}copy(e){return super.copy(e),this.scale=e.scale,this.dashSize=e.dashSize,this.gapSize=e.gapSize,this}}function Ri(n,e,t){return om(n)?new n.constructor(n.subarray(e,t!==void 0?t:n.length)):n.slice(e,t)}function Os(n,e,t){return!n||!t&&n.constructor===e?n:typeof e.BYTES_PER_ELEMENT=="number"?new e(n):Array.prototype.slice.call(n)}function om(n){return ArrayBuffer.isView(n)&&!(n instanceof DataView)}function pS(n){function e(r,s){return n[r]-n[s]}const t=n.length,i=new Array(t);for(let r=0;r!==t;++r)i[r]=r;return i.sort(e),i}function pp(n,e,t){const i=n.length,r=new n.constructor(i);for(let s=0,a=0;a!==i;++s){const c=t[s]*e;for(let u=0;u!==e;++u)r[a++]=n[c+u]}return r}function lm(n,e,t,i){let r=1,s=n[0];for(;s!==void 0&&s[i]===void 0;)s=n[r++];if(s===void 0)return;let a=s[i];if(a!==void 0)if(Array.isArray(a))do a=s[i],a!==void 0&&(e.push(s.time),t.push.apply(t,a)),s=n[r++];while(s!==void 0);else if(a.toArray!==void 0)do a=s[i],a!==void 0&&(e.push(s.time),a.toArray(t,t.length)),s=n[r++];while(s!==void 0);else do a=s[i],a!==void 0&&(e.push(s.time),t.push(a)),s=n[r++];while(s!==void 0)}function VA(n,e,t,i,r=30){const s=n.clone();s.name=e;const a=[];for(let u=0;u<s.tracks.length;++u){const h=s.tracks[u],f=h.getValueSize(),p=[],m=[];for(let g=0;g<h.times.length;++g){const y=h.times[g]*r;if(!(y<t||y>=i)){p.push(h.times[g]);for(let T=0;T<f;++T)m.push(h.values[g*f+T])}}p.length!==0&&(h.times=Os(p,h.times.constructor),h.values=Os(m,h.values.constructor),a.push(h))}s.tracks=a;let c=1/0;for(let u=0;u<s.tracks.length;++u)c>s.tracks[u].times[0]&&(c=s.tracks[u].times[0]);for(let u=0;u<s.tracks.length;++u)s.tracks[u].shift(-1*c);return s.resetDuration(),s}function GA(n,e=0,t=n,i=30){i<=0&&(i=30);const r=t.tracks.length,s=e/i;for(let a=0;a<r;++a){const c=t.tracks[a],u=c.ValueTypeName;if(u==="bool"||u==="string")continue;const h=n.tracks.find(function(x){return x.name===c.name&&x.ValueTypeName===u});if(h===void 0)continue;let f=0;const p=c.getValueSize();c.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline&&(f=p/3);let m=0;const g=h.getValueSize();h.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline&&(m=g/3);const y=c.times.length-1;let T;if(s<=c.times[0]){const x=f,w=p-f;T=Ri(c.values,x,w)}else if(s>=c.times[y]){const x=y*p+f,w=x+p-f;T=Ri(c.values,x,w)}else{const x=c.createInterpolant(),w=f,M=p-f;x.evaluate(s),T=Ri(x.resultBuffer,w,M)}u==="quaternion"&&new hn().fromArray(T).normalize().conjugate().toArray(T);const S=h.times.length;for(let x=0;x<S;++x){const w=x*g+m;if(u==="quaternion")hn.multiplyQuaternionsFlat(h.values,w,T,0,h.values,w);else{const M=g-m*2;for(let b=0;b<M;++b)h.values[w+b]-=T[b]}}}return n.blendMode=Bp,n}const WA={arraySlice:Ri,convertArray:Os,isTypedArray:om,getKeyframeOrder:pS,sortedArray:pp,flattenJSON:lm,subclip:VA,makeClipAdditive:GA};class Ol{constructor(e,t,i,r){this.parameterPositions=e,this._cachedIndex=0,this.resultBuffer=r!==void 0?r:new t.constructor(i),this.sampleValues=t,this.valueSize=i,this.settings=null,this.DefaultSettings_={}}evaluate(e){const t=this.parameterPositions;let i=this._cachedIndex,r=t[i],s=t[i-1];e:{t:{let a;n:{i:if(!(e<r)){for(let c=i+2;;){if(r===void 0){if(e<s)break i;return i=t.length,this._cachedIndex=i,this.copySampleValue_(i-1)}if(i===c)break;if(s=r,r=t[++i],e<r)break t}a=t.length;break n}if(!(e>=s)){const c=t[1];e<c&&(i=2,s=c);for(let u=i-2;;){if(s===void 0)return this._cachedIndex=0,this.copySampleValue_(0);if(i===u)break;if(r=s,s=t[--i-1],e>=s)break t}a=i,i=0;break n}break e}for(;i<a;){const c=i+a>>>1;e<t[c]?a=c:i=c+1}if(r=t[i],s=t[i-1],s===void 0)return this._cachedIndex=0,this.copySampleValue_(0);if(r===void 0)return i=t.length,this._cachedIndex=i,this.copySampleValue_(i-1)}this._cachedIndex=i,this.intervalChanged_(i,s,r)}return this.interpolate_(i,s,e,r)}getSettings_(){return this.settings||this.DefaultSettings_}copySampleValue_(e){const t=this.resultBuffer,i=this.sampleValues,r=this.valueSize,s=e*r;for(let a=0;a!==r;++a)t[a]=i[s+a];return t}interpolate_(){throw new Error("call to abstract method")}intervalChanged_(){}}class mS extends Ol{constructor(e,t,i,r){super(e,t,i,r),this._weightPrev=-0,this._offsetPrev=-0,this._weightNext=-0,this._offsetNext=-0,this.DefaultSettings_={endingStart:Us,endingEnd:Us}}intervalChanged_(e,t,i){const r=this.parameterPositions;let s=e-2,a=e+1,c=r[s],u=r[a];if(c===void 0)switch(this.getSettings_().endingStart){case Ns:s=e,c=2*t-i;break;case gl:s=r.length-2,c=t+r[s]-r[s+1];break;default:s=e,c=i}if(u===void 0)switch(this.getSettings_().endingEnd){case Ns:a=e,u=2*i-t;break;case gl:a=1,u=i+r[1]-r[0];break;default:a=e-1,u=t}const h=(i-t)*.5,f=this.valueSize;this._weightPrev=h/(t-c),this._weightNext=h/(u-i),this._offsetPrev=s*f,this._offsetNext=a*f}interpolate_(e,t,i,r){const s=this.resultBuffer,a=this.sampleValues,c=this.valueSize,u=e*c,h=u-c,f=this._offsetPrev,p=this._offsetNext,m=this._weightPrev,g=this._weightNext,y=(i-t)/(r-t),T=y*y,S=T*y,x=-m*S+2*m*T-m*y,w=(1+m)*S+(-1.5-2*m)*T+(-.5+m)*y+1,M=(-1-g)*S+(1.5+g)*T+.5*y,b=g*S-g*T;for(let P=0;P!==c;++P)s[P]=x*a[f+P]+w*a[h+P]+M*a[u+P]+b*a[p+P];return s}}class cm extends Ol{constructor(e,t,i,r){super(e,t,i,r)}interpolate_(e,t,i,r){const s=this.resultBuffer,a=this.sampleValues,c=this.valueSize,u=e*c,h=u-c,f=(i-t)/(r-t),p=1-f;for(let m=0;m!==c;++m)s[m]=a[h+m]*p+a[u+m]*f;return s}}class gS extends Ol{constructor(e,t,i,r){super(e,t,i,r)}interpolate_(e){return this.copySampleValue_(e-1)}}class qi{constructor(e,t,i,r){if(e===void 0)throw new Error("THREE.KeyframeTrack: track name is undefined");if(t===void 0||t.length===0)throw new Error("THREE.KeyframeTrack: no keyframes in track named "+e);this.name=e,this.times=Os(t,this.TimeBufferType),this.values=Os(i,this.ValueBufferType),this.setInterpolation(r||this.DefaultInterpolation)}static toJSON(e){const t=e.constructor;let i;if(t.toJSON!==this.toJSON)i=t.toJSON(e);else{i={name:e.name,times:Os(e.times,Array),values:Os(e.values,Array)};const r=e.getInterpolation();r!==e.DefaultInterpolation&&(i.interpolation=r)}return i.type=e.ValueTypeName,i}InterpolantFactoryMethodDiscrete(e){return new gS(this.times,this.values,this.getValueSize(),e)}InterpolantFactoryMethodLinear(e){return new cm(this.times,this.values,this.getValueSize(),e)}InterpolantFactoryMethodSmooth(e){return new mS(this.times,this.values,this.getValueSize(),e)}setInterpolation(e){let t;switch(e){case pl:t=this.InterpolantFactoryMethodDiscrete;break;case ml:t=this.InterpolantFactoryMethodLinear;break;case Bu:t=this.InterpolantFactoryMethodSmooth;break}if(t===void 0){const i="unsupported interpolation for "+this.ValueTypeName+" keyframe track named "+this.name;if(this.createInterpolant===void 0)if(e!==this.DefaultInterpolation)this.setInterpolation(this.DefaultInterpolation);else throw new Error(i);return console.warn("THREE.KeyframeTrack:",i),this}return this.createInterpolant=t,this}getInterpolation(){switch(this.createInterpolant){case this.InterpolantFactoryMethodDiscrete:return pl;case this.InterpolantFactoryMethodLinear:return ml;case this.InterpolantFactoryMethodSmooth:return Bu}}getValueSize(){return this.values.length/this.times.length}shift(e){if(e!==0){const t=this.times;for(let i=0,r=t.length;i!==r;++i)t[i]+=e}return this}scale(e){if(e!==1){const t=this.times;for(let i=0,r=t.length;i!==r;++i)t[i]*=e}return this}trim(e,t){const i=this.times,r=i.length;let s=0,a=r-1;for(;s!==r&&i[s]<e;)++s;for(;a!==-1&&i[a]>t;)--a;if(++a,s!==0||a!==r){s>=a&&(a=Math.max(a,1),s=a-1);const c=this.getValueSize();this.times=Ri(i,s,a),this.values=Ri(this.values,s*c,a*c)}return this}validate(){let e=!0;const t=this.getValueSize();t-Math.floor(t)!==0&&(console.error("THREE.KeyframeTrack: Invalid value size in track.",this),e=!1);const i=this.times,r=this.values,s=i.length;s===0&&(console.error("THREE.KeyframeTrack: Track is empty.",this),e=!1);let a=null;for(let c=0;c!==s;c++){const u=i[c];if(typeof u=="number"&&isNaN(u)){console.error("THREE.KeyframeTrack: Time is not a valid number.",this,c,u),e=!1;break}if(a!==null&&a>u){console.error("THREE.KeyframeTrack: Out of order keys.",this,c,u,a),e=!1;break}a=u}if(r!==void 0&&om(r))for(let c=0,u=r.length;c!==u;++c){const h=r[c];if(isNaN(h)){console.error("THREE.KeyframeTrack: Value is not a valid number.",this,c,h),e=!1;break}}return e}optimize(){const e=Ri(this.times),t=Ri(this.values),i=this.getValueSize(),r=this.getInterpolation()===Bu,s=e.length-1;let a=1;for(let c=1;c<s;++c){let u=!1;const h=e[c],f=e[c+1];if(h!==f&&(c!==1||h!==e[0]))if(r)u=!0;else{const p=c*i,m=p-i,g=p+i;for(let y=0;y!==i;++y){const T=t[p+y];if(T!==t[m+y]||T!==t[g+y]){u=!0;break}}}if(u){if(c!==a){e[a]=e[c];const p=c*i,m=a*i;for(let g=0;g!==i;++g)t[m+g]=t[p+g]}++a}}if(s>0){e[a]=e[s];for(let c=s*i,u=a*i,h=0;h!==i;++h)t[u+h]=t[c+h];++a}return a!==e.length?(this.times=Ri(e,0,a),this.values=Ri(t,0,a*i)):(this.times=e,this.values=t),this}clone(){const e=Ri(this.times,0),t=Ri(this.values,0),i=this.constructor,r=new i(this.name,e,t);return r.createInterpolant=this.createInterpolant,r}}qi.prototype.TimeBufferType=Float32Array;qi.prototype.ValueBufferType=Float32Array;qi.prototype.DefaultInterpolation=ml;class Ks extends qi{}Ks.prototype.ValueTypeName="bool";Ks.prototype.ValueBufferType=Array;Ks.prototype.DefaultInterpolation=pl;Ks.prototype.InterpolantFactoryMethodLinear=void 0;Ks.prototype.InterpolantFactoryMethodSmooth=void 0;class um extends qi{}um.prototype.ValueTypeName="color";class wl extends qi{}wl.prototype.ValueTypeName="number";class vS extends Ol{constructor(e,t,i,r){super(e,t,i,r)}interpolate_(e,t,i,r){const s=this.resultBuffer,a=this.sampleValues,c=this.valueSize,u=(i-t)/(r-t);let h=e*c;for(let f=h+c;h!==f;h+=4)hn.slerpFlat(s,0,a,h-c,a,h,u);return s}}class lo extends qi{InterpolantFactoryMethodLinear(e){return new vS(this.times,this.values,this.getValueSize(),e)}}lo.prototype.ValueTypeName="quaternion";lo.prototype.DefaultInterpolation=ml;lo.prototype.InterpolantFactoryMethodSmooth=void 0;class Qs extends qi{}Qs.prototype.ValueTypeName="string";Qs.prototype.ValueBufferType=Array;Qs.prototype.DefaultInterpolation=pl;Qs.prototype.InterpolantFactoryMethodLinear=void 0;Qs.prototype.InterpolantFactoryMethodSmooth=void 0;class El extends qi{}El.prototype.ValueTypeName="vector";class bl{constructor(e,t=-1,i,r=nh){this.name=e,this.tracks=i,this.duration=t,this.blendMode=r,this.uuid=gi(),this.duration<0&&this.resetDuration()}static parse(e){const t=[],i=e.tracks,r=1/(e.fps||1);for(let a=0,c=i.length;a!==c;++a)t.push(YA(i[a]).scale(r));const s=new this(e.name,e.duration,t,e.blendMode);return s.uuid=e.uuid,s}static toJSON(e){const t=[],i=e.tracks,r={name:e.name,duration:e.duration,tracks:t,uuid:e.uuid,blendMode:e.blendMode};for(let s=0,a=i.length;s!==a;++s)t.push(qi.toJSON(i[s]));return r}static CreateFromMorphTargetSequence(e,t,i,r){const s=t.length,a=[];for(let c=0;c<s;c++){let u=[],h=[];u.push((c+s-1)%s,c,(c+1)%s),h.push(0,1,0);const f=pS(u);u=pp(u,1,f),h=pp(h,1,f),!r&&u[0]===0&&(u.push(s),h.push(h[0])),a.push(new wl(".morphTargetInfluences["+t[c].name+"]",u,h).scale(1/i))}return new this(e,-1,a)}static findByName(e,t){let i=e;if(!Array.isArray(e)){const r=e;i=r.geometry&&r.geometry.animations||r.animations}for(let r=0;r<i.length;r++)if(i[r].name===t)return i[r];return null}static CreateClipsFromMorphTargetSequences(e,t,i){const r={},s=/^([\w-]*?)([\d]+)$/;for(let c=0,u=e.length;c<u;c++){const h=e[c],f=h.name.match(s);if(f&&f.length>1){const p=f[1];let m=r[p];m||(r[p]=m=[]),m.push(h)}}const a=[];for(const c in r)a.push(this.CreateFromMorphTargetSequence(c,r[c],t,i));return a}static parseAnimation(e,t){if(!e)return console.error("THREE.AnimationClip: No animation in JSONLoader data."),null;const i=function(p,m,g,y,T){if(g.length!==0){const S=[],x=[];lm(g,S,x,y),S.length!==0&&T.push(new p(m,S,x))}},r=[],s=e.name||"default",a=e.fps||30,c=e.blendMode;let u=e.length||-1;const h=e.hierarchy||[];for(let p=0;p<h.length;p++){const m=h[p].keys;if(!(!m||m.length===0))if(m[0].morphTargets){const g={};let y;for(y=0;y<m.length;y++)if(m[y].morphTargets)for(let T=0;T<m[y].morphTargets.length;T++)g[m[y].morphTargets[T]]=-1;for(const T in g){const S=[],x=[];for(let w=0;w!==m[y].morphTargets.length;++w){const M=m[y];S.push(M.time),x.push(M.morphTarget===T?1:0)}r.push(new wl(".morphTargetInfluence["+T+"]",S,x))}u=g.length*a}else{const g=".bones["+t[p].name+"]";i(El,g+".position",m,"pos",r),i(lo,g+".quaternion",m,"rot",r),i(El,g+".scale",m,"scl",r)}}return r.length===0?null:new this(s,u,r,c)}resetDuration(){const e=this.tracks;let t=0;for(let i=0,r=e.length;i!==r;++i){const s=this.tracks[i];t=Math.max(t,s.times[s.times.length-1])}return this.duration=t,this}trim(){for(let e=0;e<this.tracks.length;e++)this.tracks[e].trim(0,this.duration);return this}validate(){let e=!0;for(let t=0;t<this.tracks.length;t++)e=e&&this.tracks[t].validate();return e}optimize(){for(let e=0;e<this.tracks.length;e++)this.tracks[e].optimize();return this}clone(){const e=[];for(let t=0;t<this.tracks.length;t++)e.push(this.tracks[t].clone());return new this.constructor(this.name,this.duration,e,this.blendMode)}toJSON(){return this.constructor.toJSON(this)}}function XA(n){switch(n.toLowerCase()){case"scalar":case"double":case"float":case"number":case"integer":return wl;case"vector":case"vector2":case"vector3":case"vector4":return El;case"color":return um;case"quaternion":return lo;case"bool":case"boolean":return Ks;case"string":return Qs}throw new Error("THREE.KeyframeTrack: Unsupported typeName: "+n)}function YA(n){if(n.type===void 0)throw new Error("THREE.KeyframeTrack: track type undefined, can not parse");const e=XA(n.type);if(n.times===void 0){const t=[],i=[];lm(n.keys,t,i,"value"),n.times=t,n.values=i}return e.parse!==void 0?e.parse(n):new e(n.name,n.times,n.values,n.interpolation)}const qs={enabled:!1,files:{},add:function(n,e){this.enabled!==!1&&(this.files[n]=e)},get:function(n){if(this.enabled!==!1)return this.files[n]},remove:function(n){delete this.files[n]},clear:function(){this.files={}}};class hm{constructor(e,t,i){const r=this;let s=!1,a=0,c=0,u;const h=[];this.onStart=void 0,this.onLoad=e,this.onProgress=t,this.onError=i,this.itemStart=function(f){c++,s===!1&&r.onStart!==void 0&&r.onStart(f,a,c),s=!0},this.itemEnd=function(f){a++,r.onProgress!==void 0&&r.onProgress(f,a,c),a===c&&(s=!1,r.onLoad!==void 0&&r.onLoad())},this.itemError=function(f){r.onError!==void 0&&r.onError(f)},this.resolveURL=function(f){return u?u(f):f},this.setURLModifier=function(f){return u=f,this},this.addHandler=function(f,p){return h.push(f,p),this},this.removeHandler=function(f){const p=h.indexOf(f);return p!==-1&&h.splice(p,2),this},this.getHandler=function(f){for(let p=0,m=h.length;p<m;p+=2){const g=h[p],y=h[p+1];if(g.global&&(g.lastIndex=0),g.test(f))return y}return null}}}const xS=new hm;class ri{constructor(e){this.manager=e!==void 0?e:xS,this.crossOrigin="anonymous",this.withCredentials=!1,this.path="",this.resourcePath="",this.requestHeader={}}load(){}loadAsync(e,t){const i=this;return new Promise(function(r,s){i.load(e,r,t,s)})}parse(){}setCrossOrigin(e){return this.crossOrigin=e,this}setWithCredentials(e){return this.withCredentials=e,this}setPath(e){return this.path=e,this}setResourcePath(e){return this.resourcePath=e,this}setRequestHeader(e){return this.requestHeader=e,this}}ri.DEFAULT_MATERIAL_NAME="__DEFAULT";const Tr={};class ZA extends Error{constructor(e,t){super(e),this.response=t}}class Cr extends ri{constructor(e){super(e)}load(e,t,i,r){e===void 0&&(e=""),this.path!==void 0&&(e=this.path+e),e=this.manager.resolveURL(e);const s=qs.get(e);if(s!==void 0)return this.manager.itemStart(e),setTimeout(()=>{t&&t(s),this.manager.itemEnd(e)},0),s;if(Tr[e]!==void 0){Tr[e].push({onLoad:t,onProgress:i,onError:r});return}Tr[e]=[],Tr[e].push({onLoad:t,onProgress:i,onError:r});const a=new Request(e,{headers:new Headers(this.requestHeader),credentials:this.withCredentials?"include":"same-origin"}),c=this.mimeType,u=this.responseType;fetch(a).then(h=>{if(h.status===200||h.status===0){if(h.status===0&&console.warn("THREE.FileLoader: HTTP Status 0 received."),typeof ReadableStream>"u"||h.body===void 0||h.body.getReader===void 0)return h;const f=Tr[e],p=h.body.getReader(),m=h.headers.get("Content-Length")||h.headers.get("X-File-Size"),g=m?parseInt(m):0,y=g!==0;let T=0;const S=new ReadableStream({start(x){w();function w(){p.read().then(({done:M,value:b})=>{if(M)x.close();else{T+=b.byteLength;const P=new ProgressEvent("progress",{lengthComputable:y,loaded:T,total:g});for(let C=0,L=f.length;C<L;C++){const U=f[C];U.onProgress&&U.onProgress(P)}x.enqueue(b),w()}})}}});return new Response(S)}else throw new ZA(`fetch for "${h.url}" responded with ${h.status}: ${h.statusText}`,h)}).then(h=>{switch(u){case"arraybuffer":return h.arrayBuffer();case"blob":return h.blob();case"document":return h.text().then(f=>new DOMParser().parseFromString(f,c));case"json":return h.json();default:if(c===void 0)return h.text();{const p=/charset="?([^;"\s]*)"?/i.exec(c),m=p&&p[1]?p[1].toLowerCase():void 0,g=new TextDecoder(m);return h.arrayBuffer().then(y=>g.decode(y))}}}).then(h=>{qs.add(e,h);const f=Tr[e];delete Tr[e];for(let p=0,m=f.length;p<m;p++){const g=f[p];g.onLoad&&g.onLoad(h)}}).catch(h=>{const f=Tr[e];if(f===void 0)throw this.manager.itemError(e),h;delete Tr[e];for(let p=0,m=f.length;p<m;p++){const g=f[p];g.onError&&g.onError(h)}this.manager.itemError(e)}).finally(()=>{this.manager.itemEnd(e)}),this.manager.itemStart(e)}setResponseType(e){return this.responseType=e,this}setMimeType(e){return this.mimeType=e,this}}class qA extends ri{constructor(e){super(e)}load(e,t,i,r){const s=this,a=new Cr(this.manager);a.setPath(this.path),a.setRequestHeader(this.requestHeader),a.setWithCredentials(this.withCredentials),a.load(e,function(c){try{t(s.parse(JSON.parse(c)))}catch(u){r?r(u):console.error(u),s.manager.itemError(e)}},i,r)}parse(e){const t=[];for(let i=0;i<e.length;i++){const r=bl.parse(e[i]);t.push(r)}return t}}class jA extends ri{constructor(e){super(e)}load(e,t,i,r){const s=this,a=[],c=new Jp,u=new Cr(this.manager);u.setPath(this.path),u.setResponseType("arraybuffer"),u.setRequestHeader(this.requestHeader),u.setWithCredentials(s.withCredentials);let h=0;function f(p){u.load(e[p],function(m){const g=s.parse(m,!0);a[p]={width:g.width,height:g.height,format:g.format,mipmaps:g.mipmaps},h+=1,h===6&&(g.mipmapCount===1&&(c.minFilter=Qe),c.image=a,c.format=g.format,c.needsUpdate=!0,t&&t(c))},i,r)}if(Array.isArray(e))for(let p=0,m=e.length;p<m;++p)f(p);else u.load(e,function(p){const m=s.parse(p,!0);if(m.isCubemap){const g=m.mipmaps.length/m.mipmapCount;for(let y=0;y<g;y++){a[y]={mipmaps:[]};for(let T=0;T<m.mipmapCount;T++)a[y].mipmaps.push(m.mipmaps[y*m.mipmapCount+T]),a[y].format=m.format,a[y].width=m.width,a[y].height=m.height}c.image=a}else c.image.width=m.width,c.image.height=m.height,c.mipmaps=m.mipmaps;m.mipmapCount===1&&(c.minFilter=Qe),c.format=m.format,c.needsUpdate=!0,t&&t(c)},i,r);return c}}class Al extends ri{constructor(e){super(e)}load(e,t,i,r){this.path!==void 0&&(e=this.path+e),e=this.manager.resolveURL(e);const s=this,a=qs.get(e);if(a!==void 0)return s.manager.itemStart(e),setTimeout(function(){t&&t(a),s.manager.itemEnd(e)},0),a;const c=yl("img");function u(){f(),qs.add(e,this),t&&t(this),s.manager.itemEnd(e)}function h(p){f(),r&&r(p),s.manager.itemError(e),s.manager.itemEnd(e)}function f(){c.removeEventListener("load",u,!1),c.removeEventListener("error",h,!1)}return c.addEventListener("load",u,!1),c.addEventListener("error",h,!1),e.slice(0,5)!=="data:"&&this.crossOrigin!==void 0&&(c.crossOrigin=this.crossOrigin),s.manager.itemStart(e),c.src=e,c}}class KA extends ri{constructor(e){super(e)}load(e,t,i,r){const s=new Ll;s.colorSpace=pt;const a=new Al(this.manager);a.setCrossOrigin(this.crossOrigin),a.setPath(this.path);let c=0;function u(h){a.load(e[h],function(f){s.images[h]=f,c++,c===6&&(s.needsUpdate=!0,t&&t(s))},void 0,r)}for(let h=0;h<e.length;++h)u(h);return s}}class QA extends ri{constructor(e){super(e)}load(e,t,i,r){const s=this,a=new sr,c=new Cr(this.manager);return c.setResponseType("arraybuffer"),c.setRequestHeader(this.requestHeader),c.setPath(this.path),c.setWithCredentials(s.withCredentials),c.load(e,function(u){const h=s.parse(u);h&&(h.image!==void 0?a.image=h.image:h.data!==void 0&&(a.image.width=h.width,a.image.height=h.height,a.image.data=h.data),a.wrapS=h.wrapS!==void 0?h.wrapS:Mn,a.wrapT=h.wrapT!==void 0?h.wrapT:Mn,a.magFilter=h.magFilter!==void 0?h.magFilter:Qe,a.minFilter=h.minFilter!==void 0?h.minFilter:Qe,a.anisotropy=h.anisotropy!==void 0?h.anisotropy:1,h.colorSpace!==void 0?a.colorSpace=h.colorSpace:h.encoding!==void 0&&(a.encoding=h.encoding),h.flipY!==void 0&&(a.flipY=h.flipY),h.format!==void 0&&(a.format=h.format),h.type!==void 0&&(a.type=h.type),h.mipmaps!==void 0&&(a.mipmaps=h.mipmaps,a.minFilter=es),h.mipmapCount===1&&(a.minFilter=Qe),h.generateMipmaps!==void 0&&(a.generateMipmaps=h.generateMipmaps),a.needsUpdate=!0,t&&t(a,h))},i,r),a}}class yS extends ri{constructor(e){super(e)}load(e,t,i,r){const s=new Zt,a=new Al(this.manager);return a.setCrossOrigin(this.crossOrigin),a.setPath(this.path),a.load(e,function(c){s.image=c,s.needsUpdate=!0,t!==void 0&&t(s)},i,r),s}}class as extends Ut{constructor(e,t=1){super(),this.isLight=!0,this.type="Light",this.color=new be(e),this.intensity=t}dispose(){}copy(e,t){return super.copy(e,t),this.color.copy(e.color),this.intensity=e.intensity,this}toJSON(e){const t=super.toJSON(e);return t.object.color=this.color.getHex(),t.object.intensity=this.intensity,this.groundColor!==void 0&&(t.object.groundColor=this.groundColor.getHex()),this.distance!==void 0&&(t.object.distance=this.distance),this.angle!==void 0&&(t.object.angle=this.angle),this.decay!==void 0&&(t.object.decay=this.decay),this.penumbra!==void 0&&(t.object.penumbra=this.penumbra),this.shadow!==void 0&&(t.object.shadow=this.shadow.toJSON()),t}}class SS extends as{constructor(e,t,i){super(e,i),this.isHemisphereLight=!0,this.type="HemisphereLight",this.position.copy(Ut.DEFAULT_UP),this.updateMatrix(),this.groundColor=new be(t)}copy(e,t){return super.copy(e,t),this.groundColor.copy(e.groundColor),this}}const md=new ze,f0=new I,d0=new I;class fm{constructor(e){this.camera=e,this.bias=0,this.normalBias=0,this.radius=1,this.blurSamples=8,this.mapSize=new K(512,512),this.map=null,this.mapPass=null,this.matrix=new ze,this.autoUpdate=!0,this.needsUpdate=!1,this._frustum=new sh,this._frameExtents=new K(1,1),this._viewportCount=1,this._viewports=[new Et(0,0,1,1)]}getViewportCount(){return this._viewportCount}getFrustum(){return this._frustum}updateMatrices(e){const t=this.camera,i=this.matrix;f0.setFromMatrixPosition(e.matrixWorld),t.position.copy(f0),d0.setFromMatrixPosition(e.target.matrixWorld),t.lookAt(d0),t.updateMatrixWorld(),md.multiplyMatrices(t.projectionMatrix,t.matrixWorldInverse),this._frustum.setFromProjectionMatrix(md),i.set(.5,0,0,.5,0,.5,0,.5,0,0,.5,.5,0,0,0,1),i.multiply(md)}getViewport(e){return this._viewports[e]}getFrameExtents(){return this._frameExtents}dispose(){this.map&&this.map.dispose(),this.mapPass&&this.mapPass.dispose()}copy(e){return this.camera=e.camera.clone(),this.bias=e.bias,this.radius=e.radius,this.mapSize.copy(e.mapSize),this}clone(){return new this.constructor().copy(this)}toJSON(){const e={};return this.bias!==0&&(e.bias=this.bias),this.normalBias!==0&&(e.normalBias=this.normalBias),this.radius!==1&&(e.radius=this.radius),(this.mapSize.x!==512||this.mapSize.y!==512)&&(e.mapSize=this.mapSize.toArray()),e.camera=this.camera.toJSON(!1).object,delete e.camera.matrix,e}}class JA extends fm{constructor(){super(new Yt(50,1,.5,500)),this.isSpotLightShadow=!0,this.focus=1}updateMatrices(e){const t=this.camera,i=Qa*2*e.angle*this.focus,r=this.mapSize.width/this.mapSize.height,s=e.distance||t.far;(i!==t.fov||r!==t.aspect||s!==t.far)&&(t.fov=i,t.aspect=r,t.far=s,t.updateProjectionMatrix()),super.updateMatrices(e)}copy(e){return super.copy(e),this.focus=e.focus,this}}class MS extends as{constructor(e,t,i=0,r=Math.PI/3,s=0,a=2){super(e,t),this.isSpotLight=!0,this.type="SpotLight",this.position.copy(Ut.DEFAULT_UP),this.updateMatrix(),this.target=new Ut,this.distance=i,this.angle=r,this.penumbra=s,this.decay=a,this.map=null,this.shadow=new JA}get power(){return this.intensity*Math.PI}set power(e){this.intensity=e/Math.PI}dispose(){this.shadow.dispose()}copy(e,t){return super.copy(e,t),this.distance=e.distance,this.angle=e.angle,this.penumbra=e.penumbra,this.decay=e.decay,this.target=e.target.clone(),this.shadow=e.shadow.clone(),this}}const p0=new ze,Vo=new I,gd=new I;class $A extends fm{constructor(){super(new Yt(90,1,.5,500)),this.isPointLightShadow=!0,this._frameExtents=new K(4,2),this._viewportCount=6,this._viewports=[new Et(2,1,1,1),new Et(0,1,1,1),new Et(3,1,1,1),new Et(1,1,1,1),new Et(3,0,1,1),new Et(1,0,1,1)],this._cubeDirections=[new I(1,0,0),new I(-1,0,0),new I(0,0,1),new I(0,0,-1),new I(0,1,0),new I(0,-1,0)],this._cubeUps=[new I(0,1,0),new I(0,1,0),new I(0,1,0),new I(0,1,0),new I(0,0,1),new I(0,0,-1)]}updateMatrices(e,t=0){const i=this.camera,r=this.matrix,s=e.distance||i.far;s!==i.far&&(i.far=s,i.updateProjectionMatrix()),Vo.setFromMatrixPosition(e.matrixWorld),i.position.copy(Vo),gd.copy(i.position),gd.add(this._cubeDirections[t]),i.up.copy(this._cubeUps[t]),i.lookAt(gd),i.updateMatrixWorld(),r.makeTranslation(-Vo.x,-Vo.y,-Vo.z),p0.multiplyMatrices(i.projectionMatrix,i.matrixWorldInverse),this._frustum.setFromProjectionMatrix(p0)}}class _S extends as{constructor(e,t,i=0,r=2){super(e,t),this.isPointLight=!0,this.type="PointLight",this.distance=i,this.decay=r,this.shadow=new $A}get power(){return this.intensity*4*Math.PI}set power(e){this.intensity=e/(4*Math.PI)}dispose(){this.shadow.dispose()}copy(e,t){return super.copy(e,t),this.distance=e.distance,this.decay=e.decay,this.shadow=e.shadow.clone(),this}}class eP extends fm{constructor(){super(new Pr(-5,5,5,-5,.5,500)),this.isDirectionalLightShadow=!0}}class TS extends as{constructor(e,t){super(e,t),this.isDirectionalLight=!0,this.type="DirectionalLight",this.position.copy(Ut.DEFAULT_UP),this.updateMatrix(),this.target=new Ut,this.shadow=new eP}dispose(){this.shadow.dispose()}copy(e){return super.copy(e),this.target=e.target.clone(),this.shadow=e.shadow.clone(),this}}class wS extends as{constructor(e,t){super(e,t),this.isAmbientLight=!0,this.type="AmbientLight"}}class ES extends as{constructor(e,t,i=10,r=10){super(e,t),this.isRectAreaLight=!0,this.type="RectAreaLight",this.width=i,this.height=r}get power(){return this.intensity*this.width*this.height*Math.PI}set power(e){this.intensity=e/(this.width*this.height*Math.PI)}copy(e){return super.copy(e),this.width=e.width,this.height=e.height,this}toJSON(e){const t=super.toJSON(e);return t.object.width=this.width,t.object.height=this.height,t}}class bS{constructor(){this.isSphericalHarmonics3=!0,this.coefficients=[];for(let e=0;e<9;e++)this.coefficients.push(new I)}set(e){for(let t=0;t<9;t++)this.coefficients[t].copy(e[t]);return this}zero(){for(let e=0;e<9;e++)this.coefficients[e].set(0,0,0);return this}getAt(e,t){const i=e.x,r=e.y,s=e.z,a=this.coefficients;return t.copy(a[0]).multiplyScalar(.282095),t.addScaledVector(a[1],.488603*r),t.addScaledVector(a[2],.488603*s),t.addScaledVector(a[3],.488603*i),t.addScaledVector(a[4],1.092548*(i*r)),t.addScaledVector(a[5],1.092548*(r*s)),t.addScaledVector(a[6],.315392*(3*s*s-1)),t.addScaledVector(a[7],1.092548*(i*s)),t.addScaledVector(a[8],.546274*(i*i-r*r)),t}getIrradianceAt(e,t){const i=e.x,r=e.y,s=e.z,a=this.coefficients;return t.copy(a[0]).multiplyScalar(.886227),t.addScaledVector(a[1],2*.511664*r),t.addScaledVector(a[2],2*.511664*s),t.addScaledVector(a[3],2*.511664*i),t.addScaledVector(a[4],2*.429043*i*r),t.addScaledVector(a[5],2*.429043*r*s),t.addScaledVector(a[6],.743125*s*s-.247708),t.addScaledVector(a[7],2*.429043*i*s),t.addScaledVector(a[8],.429043*(i*i-r*r)),t}add(e){for(let t=0;t<9;t++)this.coefficients[t].add(e.coefficients[t]);return this}addScaledSH(e,t){for(let i=0;i<9;i++)this.coefficients[i].addScaledVector(e.coefficients[i],t);return this}scale(e){for(let t=0;t<9;t++)this.coefficients[t].multiplyScalar(e);return this}lerp(e,t){for(let i=0;i<9;i++)this.coefficients[i].lerp(e.coefficients[i],t);return this}equals(e){for(let t=0;t<9;t++)if(!this.coefficients[t].equals(e.coefficients[t]))return!1;return!0}copy(e){return this.set(e.coefficients)}clone(){return new this.constructor().copy(this)}fromArray(e,t=0){const i=this.coefficients;for(let r=0;r<9;r++)i[r].fromArray(e,t+r*3);return this}toArray(e=[],t=0){const i=this.coefficients;for(let r=0;r<9;r++)i[r].toArray(e,t+r*3);return e}static getBasisAt(e,t){const i=e.x,r=e.y,s=e.z;t[0]=.282095,t[1]=.488603*r,t[2]=.488603*s,t[3]=.488603*i,t[4]=1.092548*i*r,t[5]=1.092548*r*s,t[6]=.315392*(3*s*s-1),t[7]=1.092548*i*s,t[8]=.546274*(i*i-r*r)}}class Ph extends as{constructor(e=new bS,t=1){super(void 0,t),this.isLightProbe=!0,this.sh=e}copy(e){return super.copy(e),this.sh.copy(e.sh),this}fromJSON(e){return this.intensity=e.intensity,this.sh.fromArray(e.sh),this}toJSON(e){const t=super.toJSON(e);return t.object.sh=this.sh.toArray(),t}}class Ch extends ri{constructor(e){super(e),this.textures={}}load(e,t,i,r){const s=this,a=new Cr(s.manager);a.setPath(s.path),a.setRequestHeader(s.requestHeader),a.setWithCredentials(s.withCredentials),a.load(e,function(c){try{t(s.parse(JSON.parse(c)))}catch(u){r?r(u):console.error(u),s.manager.itemError(e)}},i,r)}parse(e){const t=this.textures;function i(s){return t[s]===void 0&&console.warn("THREE.MaterialLoader: Undefined texture",s),t[s]}const r=Ch.createMaterialFromType(e.type);if(e.uuid!==void 0&&(r.uuid=e.uuid),e.name!==void 0&&(r.name=e.name),e.color!==void 0&&r.color!==void 0&&r.color.setHex(e.color),e.roughness!==void 0&&(r.roughness=e.roughness),e.metalness!==void 0&&(r.metalness=e.metalness),e.sheen!==void 0&&(r.sheen=e.sheen),e.sheenColor!==void 0&&(r.sheenColor=new be().setHex(e.sheenColor)),e.sheenRoughness!==void 0&&(r.sheenRoughness=e.sheenRoughness),e.emissive!==void 0&&r.emissive!==void 0&&r.emissive.setHex(e.emissive),e.specular!==void 0&&r.specular!==void 0&&r.specular.setHex(e.specular),e.specularIntensity!==void 0&&(r.specularIntensity=e.specularIntensity),e.specularColor!==void 0&&r.specularColor!==void 0&&r.specularColor.setHex(e.specularColor),e.shininess!==void 0&&(r.shininess=e.shininess),e.clearcoat!==void 0&&(r.clearcoat=e.clearcoat),e.clearcoatRoughness!==void 0&&(r.clearcoatRoughness=e.clearcoatRoughness),e.iridescence!==void 0&&(r.iridescence=e.iridescence),e.iridescenceIOR!==void 0&&(r.iridescenceIOR=e.iridescenceIOR),e.iridescenceThicknessRange!==void 0&&(r.iridescenceThicknessRange=e.iridescenceThicknessRange),e.transmission!==void 0&&(r.transmission=e.transmission),e.thickness!==void 0&&(r.thickness=e.thickness),e.attenuationDistance!==void 0&&(r.attenuationDistance=e.attenuationDistance),e.attenuationColor!==void 0&&r.attenuationColor!==void 0&&r.attenuationColor.setHex(e.attenuationColor),e.anisotropy!==void 0&&(r.anisotropy=e.anisotropy),e.anisotropyRotation!==void 0&&(r.anisotropyRotation=e.anisotropyRotation),e.fog!==void 0&&(r.fog=e.fog),e.flatShading!==void 0&&(r.flatShading=e.flatShading),e.blending!==void 0&&(r.blending=e.blending),e.combine!==void 0&&(r.combine=e.combine),e.side!==void 0&&(r.side=e.side),e.shadowSide!==void 0&&(r.shadowSide=e.shadowSide),e.opacity!==void 0&&(r.opacity=e.opacity),e.transparent!==void 0&&(r.transparent=e.transparent),e.alphaTest!==void 0&&(r.alphaTest=e.alphaTest),e.alphaHash!==void 0&&(r.alphaHash=e.alphaHash),e.depthTest!==void 0&&(r.depthTest=e.depthTest),e.depthWrite!==void 0&&(r.depthWrite=e.depthWrite),e.colorWrite!==void 0&&(r.colorWrite=e.colorWrite),e.stencilWrite!==void 0&&(r.stencilWrite=e.stencilWrite),e.stencilWriteMask!==void 0&&(r.stencilWriteMask=e.stencilWriteMask),e.stencilFunc!==void 0&&(r.stencilFunc=e.stencilFunc),e.stencilRef!==void 0&&(r.stencilRef=e.stencilRef),e.stencilFuncMask!==void 0&&(r.stencilFuncMask=e.stencilFuncMask),e.stencilFail!==void 0&&(r.stencilFail=e.stencilFail),e.stencilZFail!==void 0&&(r.stencilZFail=e.stencilZFail),e.stencilZPass!==void 0&&(r.stencilZPass=e.stencilZPass),e.wireframe!==void 0&&(r.wireframe=e.wireframe),e.wireframeLinewidth!==void 0&&(r.wireframeLinewidth=e.wireframeLinewidth),e.wireframeLinecap!==void 0&&(r.wireframeLinecap=e.wireframeLinecap),e.wireframeLinejoin!==void 0&&(r.wireframeLinejoin=e.wireframeLinejoin),e.rotation!==void 0&&(r.rotation=e.rotation),e.linewidth!==1&&(r.linewidth=e.linewidth),e.dashSize!==void 0&&(r.dashSize=e.dashSize),e.gapSize!==void 0&&(r.gapSize=e.gapSize),e.scale!==void 0&&(r.scale=e.scale),e.polygonOffset!==void 0&&(r.polygonOffset=e.polygonOffset),e.polygonOffsetFactor!==void 0&&(r.polygonOffsetFactor=e.polygonOffsetFactor),e.polygonOffsetUnits!==void 0&&(r.polygonOffsetUnits=e.polygonOffsetUnits),e.dithering!==void 0&&(r.dithering=e.dithering),e.alphaToCoverage!==void 0&&(r.alphaToCoverage=e.alphaToCoverage),e.premultipliedAlpha!==void 0&&(r.premultipliedAlpha=e.premultipliedAlpha),e.forceSinglePass!==void 0&&(r.forceSinglePass=e.forceSinglePass),e.visible!==void 0&&(r.visible=e.visible),e.toneMapped!==void 0&&(r.toneMapped=e.toneMapped),e.userData!==void 0&&(r.userData=e.userData),e.vertexColors!==void 0&&(typeof e.vertexColors=="number"?r.vertexColors=e.vertexColors>0:r.vertexColors=e.vertexColors),e.uniforms!==void 0)for(const s in e.uniforms){const a=e.uniforms[s];switch(r.uniforms[s]={},a.type){case"t":r.uniforms[s].value=i(a.value);break;case"c":r.uniforms[s].value=new be().setHex(a.value);break;case"v2":r.uniforms[s].value=new K().fromArray(a.value);break;case"v3":r.uniforms[s].value=new I().fromArray(a.value);break;case"v4":r.uniforms[s].value=new Et().fromArray(a.value);break;case"m3":r.uniforms[s].value=new gt().fromArray(a.value);break;case"m4":r.uniforms[s].value=new ze().fromArray(a.value);break;default:r.uniforms[s].value=a.value}}if(e.defines!==void 0&&(r.defines=e.defines),e.vertexShader!==void 0&&(r.vertexShader=e.vertexShader),e.fragmentShader!==void 0&&(r.fragmentShader=e.fragmentShader),e.glslVersion!==void 0&&(r.glslVersion=e.glslVersion),e.extensions!==void 0)for(const s in e.extensions)r.extensions[s]=e.extensions[s];if(e.lights!==void 0&&(r.lights=e.lights),e.clipping!==void 0&&(r.clipping=e.clipping),e.size!==void 0&&(r.size=e.size),e.sizeAttenuation!==void 0&&(r.sizeAttenuation=e.sizeAttenuation),e.map!==void 0&&(r.map=i(e.map)),e.matcap!==void 0&&(r.matcap=i(e.matcap)),e.alphaMap!==void 0&&(r.alphaMap=i(e.alphaMap)),e.bumpMap!==void 0&&(r.bumpMap=i(e.bumpMap)),e.bumpScale!==void 0&&(r.bumpScale=e.bumpScale),e.normalMap!==void 0&&(r.normalMap=i(e.normalMap)),e.normalMapType!==void 0&&(r.normalMapType=e.normalMapType),e.normalScale!==void 0){let s=e.normalScale;Array.isArray(s)===!1&&(s=[s,s]),r.normalScale=new K().fromArray(s)}return e.displacementMap!==void 0&&(r.displacementMap=i(e.displacementMap)),e.displacementScale!==void 0&&(r.displacementScale=e.displacementScale),e.displacementBias!==void 0&&(r.displacementBias=e.displacementBias),e.roughnessMap!==void 0&&(r.roughnessMap=i(e.roughnessMap)),e.metalnessMap!==void 0&&(r.metalnessMap=i(e.metalnessMap)),e.emissiveMap!==void 0&&(r.emissiveMap=i(e.emissiveMap)),e.emissiveIntensity!==void 0&&(r.emissiveIntensity=e.emissiveIntensity),e.specularMap!==void 0&&(r.specularMap=i(e.specularMap)),e.specularIntensityMap!==void 0&&(r.specularIntensityMap=i(e.specularIntensityMap)),e.specularColorMap!==void 0&&(r.specularColorMap=i(e.specularColorMap)),e.envMap!==void 0&&(r.envMap=i(e.envMap)),e.envMapIntensity!==void 0&&(r.envMapIntensity=e.envMapIntensity),e.reflectivity!==void 0&&(r.reflectivity=e.reflectivity),e.refractionRatio!==void 0&&(r.refractionRatio=e.refractionRatio),e.lightMap!==void 0&&(r.lightMap=i(e.lightMap)),e.lightMapIntensity!==void 0&&(r.lightMapIntensity=e.lightMapIntensity),e.aoMap!==void 0&&(r.aoMap=i(e.aoMap)),e.aoMapIntensity!==void 0&&(r.aoMapIntensity=e.aoMapIntensity),e.gradientMap!==void 0&&(r.gradientMap=i(e.gradientMap)),e.clearcoatMap!==void 0&&(r.clearcoatMap=i(e.clearcoatMap)),e.clearcoatRoughnessMap!==void 0&&(r.clearcoatRoughnessMap=i(e.clearcoatRoughnessMap)),e.clearcoatNormalMap!==void 0&&(r.clearcoatNormalMap=i(e.clearcoatNormalMap)),e.clearcoatNormalScale!==void 0&&(r.clearcoatNormalScale=new K().fromArray(e.clearcoatNormalScale)),e.iridescenceMap!==void 0&&(r.iridescenceMap=i(e.iridescenceMap)),e.iridescenceThicknessMap!==void 0&&(r.iridescenceThicknessMap=i(e.iridescenceThicknessMap)),e.transmissionMap!==void 0&&(r.transmissionMap=i(e.transmissionMap)),e.thicknessMap!==void 0&&(r.thicknessMap=i(e.thicknessMap)),e.anisotropyMap!==void 0&&(r.anisotropyMap=i(e.anisotropyMap)),e.sheenColorMap!==void 0&&(r.sheenColorMap=i(e.sheenColorMap)),e.sheenRoughnessMap!==void 0&&(r.sheenRoughnessMap=i(e.sheenRoughnessMap)),r}setTextures(e){return this.textures=e,this}static createMaterialFromType(e){const t={ShadowMaterial:aS,SpriteMaterial:jp,RawShaderMaterial:oS,ShaderMaterial:_t,PointsMaterial:Qp,MeshPhysicalMaterial:lS,MeshStandardMaterial:sm,MeshPhongMaterial:cS,MeshToonMaterial:uS,MeshNormalMaterial:am,MeshLambertMaterial:hS,MeshDepthMaterial:oh,MeshDistanceMaterial:Zp,MeshBasicMaterial:rs,MeshMatcapMaterial:fS,LineDashedMaterial:dS,LineBasicMaterial:jn,Material:Pn};return new t[e]}}class mp{static decodeText(e){if(typeof TextDecoder<"u")return new TextDecoder().decode(e);let t="";for(let i=0,r=e.length;i<r;i++)t+=String.fromCharCode(e[i]);try{return decodeURIComponent(escape(t))}catch{return t}}static extractUrlBase(e){const t=e.lastIndexOf("/");return t===-1?"./":e.slice(0,t+1)}static resolveURL(e,t){return typeof e!="string"||e===""?"":(/^https?:\/\//i.test(t)&&/^\//.test(e)&&(t=t.replace(/(^https?:\/\/[^\/]+).*/i,"$1")),/^(https?:)?\/\//i.test(e)||/^data:.*,.*$/i.test(e)||/^blob:.*$/i.test(e)?e:t+e)}}class AS extends mt{constructor(){super(),this.isInstancedBufferGeometry=!0,this.type="InstancedBufferGeometry",this.instanceCount=1/0}copy(e){return super.copy(e),this.instanceCount=e.instanceCount,this}toJSON(){const e=super.toJSON();return e.instanceCount=this.instanceCount,e.isInstancedBufferGeometry=!0,e}}class PS extends ri{constructor(e){super(e)}load(e,t,i,r){const s=this,a=new Cr(s.manager);a.setPath(s.path),a.setRequestHeader(s.requestHeader),a.setWithCredentials(s.withCredentials),a.load(e,function(c){try{t(s.parse(JSON.parse(c)))}catch(u){r?r(u):console.error(u),s.manager.itemError(e)}},i,r)}parse(e){const t={},i={};function r(g,y){if(t[y]!==void 0)return t[y];const S=g.interleavedBuffers[y],x=s(g,S.buffer),w=Va(S.type,x),M=new hh(w,S.stride);return M.uuid=S.uuid,t[y]=M,M}function s(g,y){if(i[y]!==void 0)return i[y];const S=g.arrayBuffers[y],x=new Uint32Array(S).buffer;return i[y]=x,x}const a=e.isInstancedBufferGeometry?new AS:new mt,c=e.data.index;if(c!==void 0){const g=Va(c.type,c.array);a.setIndex(new Ct(g,1))}const u=e.data.attributes;for(const g in u){const y=u[g];let T;if(y.isInterleavedBufferAttribute){const S=r(e.data,y.data);T=new Ys(S,y.itemSize,y.offset,y.normalized)}else{const S=Va(y.type,y.array),x=y.isInstancedBufferAttribute?$a:Ct;T=new x(S,y.itemSize,y.normalized)}y.name!==void 0&&(T.name=y.name),y.usage!==void 0&&T.setUsage(y.usage),y.updateRange!==void 0&&(T.updateRange.offset=y.updateRange.offset,T.updateRange.count=y.updateRange.count),a.setAttribute(g,T)}const h=e.data.morphAttributes;if(h)for(const g in h){const y=h[g],T=[];for(let S=0,x=y.length;S<x;S++){const w=y[S];let M;if(w.isInterleavedBufferAttribute){const b=r(e.data,w.data);M=new Ys(b,w.itemSize,w.offset,w.normalized)}else{const b=Va(w.type,w.array);M=new Ct(b,w.itemSize,w.normalized)}w.name!==void 0&&(M.name=w.name),T.push(M)}a.morphAttributes[g]=T}e.data.morphTargetsRelative&&(a.morphTargetsRelative=!0);const p=e.data.groups||e.data.drawcalls||e.data.offsets;if(p!==void 0)for(let g=0,y=p.length;g!==y;++g){const T=p[g];a.addGroup(T.start,T.count,T.materialIndex)}const m=e.data.boundingSphere;if(m!==void 0){const g=new I;m.center!==void 0&&g.fromArray(m.center),a.boundingSphere=new Li(g,m.radius)}return e.name&&(a.name=e.name),e.userData&&(a.userData=e.userData),a}}class tP extends ri{constructor(e){super(e)}load(e,t,i,r){const s=this,a=this.path===""?mp.extractUrlBase(e):this.path;this.resourcePath=this.resourcePath||a;const c=new Cr(this.manager);c.setPath(this.path),c.setRequestHeader(this.requestHeader),c.setWithCredentials(this.withCredentials),c.load(e,function(u){let h=null;try{h=JSON.parse(u)}catch(p){r!==void 0&&r(p),console.error("THREE:ObjectLoader: Can't parse "+e+".",p.message);return}const f=h.metadata;if(f===void 0||f.type===void 0||f.type.toLowerCase()==="geometry"){r!==void 0&&r(new Error("THREE.ObjectLoader: Can't load "+e)),console.error("THREE.ObjectLoader: Can't load "+e);return}s.parse(h,t)},i,r)}async loadAsync(e,t){const i=this,r=this.path===""?mp.extractUrlBase(e):this.path;this.resourcePath=this.resourcePath||r;const s=new Cr(this.manager);s.setPath(this.path),s.setRequestHeader(this.requestHeader),s.setWithCredentials(this.withCredentials);const a=await s.loadAsync(e,t),c=JSON.parse(a),u=c.metadata;if(u===void 0||u.type===void 0||u.type.toLowerCase()==="geometry")throw new Error("THREE.ObjectLoader: Can't load "+e);return await i.parseAsync(c)}parse(e,t){const i=this.parseAnimations(e.animations),r=this.parseShapes(e.shapes),s=this.parseGeometries(e.geometries,r),a=this.parseImages(e.images,function(){t!==void 0&&t(h)}),c=this.parseTextures(e.textures,a),u=this.parseMaterials(e.materials,c),h=this.parseObject(e.object,s,u,c,i),f=this.parseSkeletons(e.skeletons,h);if(this.bindSkeletons(h,f),t!==void 0){let p=!1;for(const m in a)if(a[m].data instanceof HTMLImageElement){p=!0;break}p===!1&&t(h)}return h}async parseAsync(e){const t=this.parseAnimations(e.animations),i=this.parseShapes(e.shapes),r=this.parseGeometries(e.geometries,i),s=await this.parseImagesAsync(e.images),a=this.parseTextures(e.textures,s),c=this.parseMaterials(e.materials,a),u=this.parseObject(e.object,r,c,a,t),h=this.parseSkeletons(e.skeletons,u);return this.bindSkeletons(u,h),u}parseShapes(e){const t={};if(e!==void 0)for(let i=0,r=e.length;i<r;i++){const s=new Ws().fromJSON(e[i]);t[s.uuid]=s}return t}parseSkeletons(e,t){const i={},r={};if(t.traverse(function(s){s.isBone&&(r[s.uuid]=s)}),e!==void 0)for(let s=0,a=e.length;s<a;s++){const c=new fh().fromJSON(e[s],r);i[c.uuid]=c}return i}parseGeometries(e,t){const i={};if(e!==void 0){const r=new PS;for(let s=0,a=e.length;s<a;s++){let c;const u=e[s];switch(u.type){case"BufferGeometry":case"InstancedBufferGeometry":c=r.parse(u);break;default:u.type in h0?c=h0[u.type].fromJSON(u,t):console.warn(`THREE.ObjectLoader: Unsupported geometry type "${u.type}"`)}c.uuid=u.uuid,u.name!==void 0&&(c.name=u.name),u.userData!==void 0&&(c.userData=u.userData),i[u.uuid]=c}}return i}parseMaterials(e,t){const i={},r={};if(e!==void 0){const s=new Ch;s.setTextures(t);for(let a=0,c=e.length;a<c;a++){const u=e[a];i[u.uuid]===void 0&&(i[u.uuid]=s.parse(u)),r[u.uuid]=i[u.uuid]}}return r}parseAnimations(e){const t={};if(e!==void 0)for(let i=0;i<e.length;i++){const r=e[i],s=bl.parse(r);t[s.uuid]=s}return t}parseImages(e,t){const i=this,r={};let s;function a(u){return i.manager.itemStart(u),s.load(u,function(){i.manager.itemEnd(u)},void 0,function(){i.manager.itemError(u),i.manager.itemEnd(u)})}function c(u){if(typeof u=="string"){const h=u,f=/^(\/\/)|([a-z]+:(\/\/)?)/i.test(h)?h:i.resourcePath+h;return a(f)}else return u.data?{data:Va(u.type,u.data),width:u.width,height:u.height}:null}if(e!==void 0&&e.length>0){const u=new hm(t);s=new Al(u),s.setCrossOrigin(this.crossOrigin);for(let h=0,f=e.length;h<f;h++){const p=e[h],m=p.url;if(Array.isArray(m)){const g=[];for(let y=0,T=m.length;y<T;y++){const S=m[y],x=c(S);x!==null&&(x instanceof HTMLImageElement?g.push(x):g.push(new sr(x.data,x.width,x.height)))}r[p.uuid]=new Fs(g)}else{const g=c(p.url);r[p.uuid]=new Fs(g)}}}return r}async parseImagesAsync(e){const t=this,i={};let r;async function s(a){if(typeof a=="string"){const c=a,u=/^(\/\/)|([a-z]+:(\/\/)?)/i.test(c)?c:t.resourcePath+c;return await r.loadAsync(u)}else return a.data?{data:Va(a.type,a.data),width:a.width,height:a.height}:null}if(e!==void 0&&e.length>0){r=new Al(this.manager),r.setCrossOrigin(this.crossOrigin);for(let a=0,c=e.length;a<c;a++){const u=e[a],h=u.url;if(Array.isArray(h)){const f=[];for(let p=0,m=h.length;p<m;p++){const g=h[p],y=await s(g);y!==null&&(y instanceof HTMLImageElement?f.push(y):f.push(new sr(y.data,y.width,y.height)))}i[u.uuid]=new Fs(f)}else{const f=await s(u.url);i[u.uuid]=new Fs(f)}}}return i}parseTextures(e,t){function i(s,a){return typeof s=="number"?s:(console.warn("THREE.ObjectLoader.parseTexture: Constant should be in numeric form.",s),a[s])}const r={};if(e!==void 0)for(let s=0,a=e.length;s<a;s++){const c=e[s];c.image===void 0&&console.warn('THREE.ObjectLoader: No "image" specified for',c.uuid),t[c.image]===void 0&&console.warn("THREE.ObjectLoader: Undefined image",c.image);const u=t[c.image],h=u.data;let f;Array.isArray(h)?(f=new Ll,h.length===6&&(f.needsUpdate=!0)):(h&&h.data?f=new sr:f=new Zt,h&&(f.needsUpdate=!0)),f.source=u,f.uuid=c.uuid,c.name!==void 0&&(f.name=c.name),c.mapping!==void 0&&(f.mapping=i(c.mapping,nP)),c.channel!==void 0&&(f.channel=c.channel),c.offset!==void 0&&f.offset.fromArray(c.offset),c.repeat!==void 0&&f.repeat.fromArray(c.repeat),c.center!==void 0&&f.center.fromArray(c.center),c.rotation!==void 0&&(f.rotation=c.rotation),c.wrap!==void 0&&(f.wrapS=i(c.wrap[0],m0),f.wrapT=i(c.wrap[1],m0)),c.format!==void 0&&(f.format=c.format),c.internalFormat!==void 0&&(f.internalFormat=c.internalFormat),c.type!==void 0&&(f.type=c.type),c.colorSpace!==void 0&&(f.colorSpace=c.colorSpace),c.encoding!==void 0&&(f.encoding=c.encoding),c.minFilter!==void 0&&(f.minFilter=i(c.minFilter,g0)),c.magFilter!==void 0&&(f.magFilter=i(c.magFilter,g0)),c.anisotropy!==void 0&&(f.anisotropy=c.anisotropy),c.flipY!==void 0&&(f.flipY=c.flipY),c.generateMipmaps!==void 0&&(f.generateMipmaps=c.generateMipmaps),c.premultiplyAlpha!==void 0&&(f.premultiplyAlpha=c.premultiplyAlpha),c.unpackAlignment!==void 0&&(f.unpackAlignment=c.unpackAlignment),c.compareFunction!==void 0&&(f.compareFunction=c.compareFunction),c.userData!==void 0&&(f.userData=c.userData),r[c.uuid]=f}return r}parseObject(e,t,i,r,s){let a;function c(m){return t[m]===void 0&&console.warn("THREE.ObjectLoader: Undefined geometry",m),t[m]}function u(m){if(m!==void 0){if(Array.isArray(m)){const g=[];for(let y=0,T=m.length;y<T;y++){const S=m[y];i[S]===void 0&&console.warn("THREE.ObjectLoader: Undefined material",S),g.push(i[S])}return g}return i[m]===void 0&&console.warn("THREE.ObjectLoader: Undefined material",m),i[m]}}function h(m){return r[m]===void 0&&console.warn("THREE.ObjectLoader: Undefined texture",m),r[m]}let f,p;switch(e.type){case"Scene":a=new Xs,e.background!==void 0&&(Number.isInteger(e.background)?a.background=new be(e.background):a.background=h(e.background)),e.environment!==void 0&&(a.environment=h(e.environment)),e.fog!==void 0&&(e.fog.type==="Fog"?a.fog=new uh(e.fog.color,e.fog.near,e.fog.far):e.fog.type==="FogExp2"&&(a.fog=new ch(e.fog.color,e.fog.density))),e.backgroundBlurriness!==void 0&&(a.backgroundBlurriness=e.backgroundBlurriness),e.backgroundIntensity!==void 0&&(a.backgroundIntensity=e.backgroundIntensity);break;case"PerspectiveCamera":a=new Yt(e.fov,e.aspect,e.near,e.far),e.focus!==void 0&&(a.focus=e.focus),e.zoom!==void 0&&(a.zoom=e.zoom),e.filmGauge!==void 0&&(a.filmGauge=e.filmGauge),e.filmOffset!==void 0&&(a.filmOffset=e.filmOffset),e.view!==void 0&&(a.view=Object.assign({},e.view));break;case"OrthographicCamera":a=new Pr(e.left,e.right,e.top,e.bottom,e.near,e.far),e.zoom!==void 0&&(a.zoom=e.zoom),e.view!==void 0&&(a.view=Object.assign({},e.view));break;case"AmbientLight":a=new wS(e.color,e.intensity);break;case"DirectionalLight":a=new TS(e.color,e.intensity);break;case"PointLight":a=new _S(e.color,e.intensity,e.distance,e.decay);break;case"RectAreaLight":a=new ES(e.color,e.intensity,e.width,e.height);break;case"SpotLight":a=new MS(e.color,e.intensity,e.distance,e.angle,e.penumbra,e.decay);break;case"HemisphereLight":a=new SS(e.color,e.groundColor,e.intensity);break;case"LightProbe":a=new Ph().fromJSON(e);break;case"SkinnedMesh":f=c(e.geometry),p=u(e.material),a=new Wy(f,p),e.bindMode!==void 0&&(a.bindMode=e.bindMode),e.bindMatrix!==void 0&&a.bindMatrix.fromArray(e.bindMatrix),e.skeleton!==void 0&&(a.skeleton=e.skeleton);break;case"Mesh":f=c(e.geometry),p=u(e.material),a=new Tn(f,p);break;case"InstancedMesh":f=c(e.geometry),p=u(e.material);const m=e.count,g=e.instanceMatrix,y=e.instanceColor;a=new Xy(f,p,m),a.instanceMatrix=new $a(new Float32Array(g.array),16),y!==void 0&&(a.instanceColor=new $a(new Float32Array(y.array),y.itemSize));break;case"LOD":a=new Gy;break;case"Line":a=new ns(c(e.geometry),u(e.material));break;case"LineLoop":a=new Yy(c(e.geometry),u(e.material));break;case"LineSegments":a=new ur(c(e.geometry),u(e.material));break;case"PointCloud":case"Points":a=new Zy(c(e.geometry),u(e.material));break;case"Sprite":a=new Vy(u(e.material));break;case"Group":a=new Wa;break;case"Bone":a=new Kp;break;default:a=new Ut}if(a.uuid=e.uuid,e.name!==void 0&&(a.name=e.name),e.matrix!==void 0?(a.matrix.fromArray(e.matrix),e.matrixAutoUpdate!==void 0&&(a.matrixAutoUpdate=e.matrixAutoUpdate),a.matrixAutoUpdate&&a.matrix.decompose(a.position,a.quaternion,a.scale)):(e.position!==void 0&&a.position.fromArray(e.position),e.rotation!==void 0&&a.rotation.fromArray(e.rotation),e.quaternion!==void 0&&a.quaternion.fromArray(e.quaternion),e.scale!==void 0&&a.scale.fromArray(e.scale)),e.up!==void 0&&a.up.fromArray(e.up),e.castShadow!==void 0&&(a.castShadow=e.castShadow),e.receiveShadow!==void 0&&(a.receiveShadow=e.receiveShadow),e.shadow&&(e.shadow.bias!==void 0&&(a.shadow.bias=e.shadow.bias),e.shadow.normalBias!==void 0&&(a.shadow.normalBias=e.shadow.normalBias),e.shadow.radius!==void 0&&(a.shadow.radius=e.shadow.radius),e.shadow.mapSize!==void 0&&a.shadow.mapSize.fromArray(e.shadow.mapSize),e.shadow.camera!==void 0&&(a.shadow.camera=this.parseObject(e.shadow.camera))),e.visible!==void 0&&(a.visible=e.visible),e.frustumCulled!==void 0&&(a.frustumCulled=e.frustumCulled),e.renderOrder!==void 0&&(a.renderOrder=e.renderOrder),e.userData!==void 0&&(a.userData=e.userData),e.layers!==void 0&&(a.layers.mask=e.layers),e.children!==void 0){const m=e.children;for(let g=0;g<m.length;g++)a.add(this.parseObject(m[g],t,i,r,s))}if(e.animations!==void 0){const m=e.animations;for(let g=0;g<m.length;g++){const y=m[g];a.animations.push(s[y])}}if(e.type==="LOD"){e.autoUpdate!==void 0&&(a.autoUpdate=e.autoUpdate);const m=e.levels;for(let g=0;g<m.length;g++){const y=m[g],T=a.getObjectByProperty("uuid",y.object);T!==void 0&&a.addLevel(T,y.distance,y.hysteresis)}}return a}bindSkeletons(e,t){Object.keys(t).length!==0&&e.traverse(function(i){if(i.isSkinnedMesh===!0&&i.skeleton!==void 0){const r=t[i.skeleton];r===void 0?console.warn("THREE.ObjectLoader: No skeleton found with UUID:",i.skeleton):i.bind(r,i.bindMatrix)}})}}const nP={UVMapping:Ju,CubeReflectionMapping:Jr,CubeRefractionMapping:$r,EquirectangularReflectionMapping:hl,EquirectangularRefractionMapping:fl,CubeUVReflectionMapping:no},m0={RepeatWrapping:vi,ClampToEdgeWrapping:Mn,MirroredRepeatWrapping:dl},g0={NearestFilter:ct,NearestMipmapNearestFilter:Wu,NearestMipmapLinearFilter:tl,LinearFilter:Qe,LinearMipmapNearestFilter:Rp,LinearMipmapLinearFilter:es};class iP extends ri{constructor(e){super(e),this.isImageBitmapLoader=!0,typeof createImageBitmap>"u"&&console.warn("THREE.ImageBitmapLoader: createImageBitmap() not supported."),typeof fetch>"u"&&console.warn("THREE.ImageBitmapLoader: fetch() not supported."),this.options={premultiplyAlpha:"none"}}setOptions(e){return this.options=e,this}load(e,t,i,r){e===void 0&&(e=""),this.path!==void 0&&(e=this.path+e),e=this.manager.resolveURL(e);const s=this,a=qs.get(e);if(a!==void 0)return s.manager.itemStart(e),setTimeout(function(){t&&t(a),s.manager.itemEnd(e)},0),a;const c={};c.credentials=this.crossOrigin==="anonymous"?"same-origin":"include",c.headers=this.requestHeader,fetch(e,c).then(function(u){return u.blob()}).then(function(u){return createImageBitmap(u,Object.assign(s.options,{colorSpaceConversion:"none"}))}).then(function(u){qs.add(e,u),t&&t(u),s.manager.itemEnd(e)}).catch(function(u){r&&r(u),s.manager.itemError(e),s.manager.itemEnd(e)}),s.manager.itemStart(e)}}let xu;class dm{static getContext(){return xu===void 0&&(xu=new(window.AudioContext||window.webkitAudioContext)),xu}static setContext(e){xu=e}}class rP extends ri{constructor(e){super(e)}load(e,t,i,r){const s=this,a=new Cr(this.manager);a.setResponseType("arraybuffer"),a.setPath(this.path),a.setRequestHeader(this.requestHeader),a.setWithCredentials(this.withCredentials),a.load(e,function(u){try{const h=u.slice(0);dm.getContext().decodeAudioData(h,function(p){t(p)},c)}catch(h){c(h)}},i,r);function c(u){r?r(u):console.error(u),s.manager.itemError(e)}}}class sP extends Ph{constructor(e,t,i=1){super(void 0,i),this.isHemisphereLightProbe=!0;const r=new be().set(e),s=new be().set(t),a=new I(r.r,r.g,r.b),c=new I(s.r,s.g,s.b),u=Math.sqrt(Math.PI),h=u*Math.sqrt(.75);this.sh.coefficients[0].copy(a).add(c).multiplyScalar(u),this.sh.coefficients[1].copy(a).sub(c).multiplyScalar(h)}}class aP extends Ph{constructor(e,t=1){super(void 0,t),this.isAmbientLightProbe=!0;const i=new be().set(e);this.sh.coefficients[0].set(i.r,i.g,i.b).multiplyScalar(2*Math.sqrt(Math.PI))}}const v0=new ze,x0=new ze,Ms=new ze;class oP{constructor(){this.type="StereoCamera",this.aspect=1,this.eyeSep=.064,this.cameraL=new Yt,this.cameraL.layers.enable(1),this.cameraL.matrixAutoUpdate=!1,this.cameraR=new Yt,this.cameraR.layers.enable(2),this.cameraR.matrixAutoUpdate=!1,this._cache={focus:null,fov:null,aspect:null,near:null,far:null,zoom:null,eyeSep:null}}update(e){const t=this._cache;if(t.focus!==e.focus||t.fov!==e.fov||t.aspect!==e.aspect*this.aspect||t.near!==e.near||t.far!==e.far||t.zoom!==e.zoom||t.eyeSep!==this.eyeSep){t.focus=e.focus,t.fov=e.fov,t.aspect=e.aspect*this.aspect,t.near=e.near,t.far=e.far,t.zoom=e.zoom,t.eyeSep=this.eyeSep,Ms.copy(e.projectionMatrix);const r=t.eyeSep/2,s=r*t.near/t.focus,a=t.near*Math.tan(Hs*t.fov*.5)/t.zoom;let c,u;x0.elements[12]=-r,v0.elements[12]=r,c=-a*t.aspect+s,u=a*t.aspect+s,Ms.elements[0]=2*t.near/(u-c),Ms.elements[8]=(u+c)/(u-c),this.cameraL.projectionMatrix.copy(Ms),c=-a*t.aspect-s,u=a*t.aspect-s,Ms.elements[0]=2*t.near/(u-c),Ms.elements[8]=(u+c)/(u-c),this.cameraR.projectionMatrix.copy(Ms)}this.cameraL.matrixWorld.copy(e.matrixWorld).multiply(x0),this.cameraR.matrixWorld.copy(e.matrixWorld).multiply(v0)}}class pm{constructor(e=!0){this.autoStart=e,this.startTime=0,this.oldTime=0,this.elapsedTime=0,this.running=!1}start(){this.startTime=y0(),this.oldTime=this.startTime,this.elapsedTime=0,this.running=!0}stop(){this.getElapsedTime(),this.running=!1,this.autoStart=!1}getElapsedTime(){return this.getDelta(),this.elapsedTime}getDelta(){let e=0;if(this.autoStart&&!this.running)return this.start(),0;if(this.running){const t=y0();e=(t-this.oldTime)/1e3,this.oldTime=t,this.elapsedTime+=e}return e}}function y0(){return(typeof performance>"u"?Date:performance).now()}const _s=new I,S0=new hn,lP=new I,Ts=new I;class cP extends Ut{constructor(){super(),this.type="AudioListener",this.context=dm.getContext(),this.gain=this.context.createGain(),this.gain.connect(this.context.destination),this.filter=null,this.timeDelta=0,this._clock=new pm}getInput(){return this.gain}removeFilter(){return this.filter!==null&&(this.gain.disconnect(this.filter),this.filter.disconnect(this.context.destination),this.gain.connect(this.context.destination),this.filter=null),this}getFilter(){return this.filter}setFilter(e){return this.filter!==null?(this.gain.disconnect(this.filter),this.filter.disconnect(this.context.destination)):this.gain.disconnect(this.context.destination),this.filter=e,this.gain.connect(this.filter),this.filter.connect(this.context.destination),this}getMasterVolume(){return this.gain.gain.value}setMasterVolume(e){return this.gain.gain.setTargetAtTime(e,this.context.currentTime,.01),this}updateMatrixWorld(e){super.updateMatrixWorld(e);const t=this.context.listener,i=this.up;if(this.timeDelta=this._clock.getDelta(),this.matrixWorld.decompose(_s,S0,lP),Ts.set(0,0,-1).applyQuaternion(S0),t.positionX){const r=this.context.currentTime+this.timeDelta;t.positionX.linearRampToValueAtTime(_s.x,r),t.positionY.linearRampToValueAtTime(_s.y,r),t.positionZ.linearRampToValueAtTime(_s.z,r),t.forwardX.linearRampToValueAtTime(Ts.x,r),t.forwardY.linearRampToValueAtTime(Ts.y,r),t.forwardZ.linearRampToValueAtTime(Ts.z,r),t.upX.linearRampToValueAtTime(i.x,r),t.upY.linearRampToValueAtTime(i.y,r),t.upZ.linearRampToValueAtTime(i.z,r)}else t.setPosition(_s.x,_s.y,_s.z),t.setOrientation(Ts.x,Ts.y,Ts.z,i.x,i.y,i.z)}}class CS extends Ut{constructor(e){super(),this.type="Audio",this.listener=e,this.context=e.context,this.gain=this.context.createGain(),this.gain.connect(e.getInput()),this.autoplay=!1,this.buffer=null,this.detune=0,this.loop=!1,this.loopStart=0,this.loopEnd=0,this.offset=0,this.duration=void 0,this.playbackRate=1,this.isPlaying=!1,this.hasPlaybackControl=!0,this.source=null,this.sourceType="empty",this._startedAt=0,this._progress=0,this._connected=!1,this.filters=[]}getOutput(){return this.gain}setNodeSource(e){return this.hasPlaybackControl=!1,this.sourceType="audioNode",this.source=e,this.connect(),this}setMediaElementSource(e){return this.hasPlaybackControl=!1,this.sourceType="mediaNode",this.source=this.context.createMediaElementSource(e),this.connect(),this}setMediaStreamSource(e){return this.hasPlaybackControl=!1,this.sourceType="mediaStreamNode",this.source=this.context.createMediaStreamSource(e),this.connect(),this}setBuffer(e){return this.buffer=e,this.sourceType="buffer",this.autoplay&&this.play(),this}play(e=0){if(this.isPlaying===!0){console.warn("THREE.Audio: Audio is already playing.");return}if(this.hasPlaybackControl===!1){console.warn("THREE.Audio: this Audio has no playback control.");return}this._startedAt=this.context.currentTime+e;const t=this.context.createBufferSource();return t.buffer=this.buffer,t.loop=this.loop,t.loopStart=this.loopStart,t.loopEnd=this.loopEnd,t.onended=this.onEnded.bind(this),t.start(this._startedAt,this._progress+this.offset,this.duration),this.isPlaying=!0,this.source=t,this.setDetune(this.detune),this.setPlaybackRate(this.playbackRate),this.connect()}pause(){if(this.hasPlaybackControl===!1){console.warn("THREE.Audio: this Audio has no playback control.");return}return this.isPlaying===!0&&(this._progress+=Math.max(this.context.currentTime-this._startedAt,0)*this.playbackRate,this.loop===!0&&(this._progress=this._progress%(this.duration||this.buffer.duration)),this.source.stop(),this.source.onended=null,this.isPlaying=!1),this}stop(){if(this.hasPlaybackControl===!1){console.warn("THREE.Audio: this Audio has no playback control.");return}return this._progress=0,this.source!==null&&(this.source.stop(),this.source.onended=null),this.isPlaying=!1,this}connect(){if(this.filters.length>0){this.source.connect(this.filters[0]);for(let e=1,t=this.filters.length;e<t;e++)this.filters[e-1].connect(this.filters[e]);this.filters[this.filters.length-1].connect(this.getOutput())}else this.source.connect(this.getOutput());return this._connected=!0,this}disconnect(){if(this.filters.length>0){this.source.disconnect(this.filters[0]);for(let e=1,t=this.filters.length;e<t;e++)this.filters[e-1].disconnect(this.filters[e]);this.filters[this.filters.length-1].disconnect(this.getOutput())}else this.source.disconnect(this.getOutput());return this._connected=!1,this}getFilters(){return this.filters}setFilters(e){return e||(e=[]),this._connected===!0?(this.disconnect(),this.filters=e.slice(),this.connect()):this.filters=e.slice(),this}setDetune(e){if(this.detune=e,this.source.detune!==void 0)return this.isPlaying===!0&&this.source.detune.setTargetAtTime(this.detune,this.context.currentTime,.01),this}getDetune(){return this.detune}getFilter(){return this.getFilters()[0]}setFilter(e){return this.setFilters(e?[e]:[])}setPlaybackRate(e){if(this.hasPlaybackControl===!1){console.warn("THREE.Audio: this Audio has no playback control.");return}return this.playbackRate=e,this.isPlaying===!0&&this.source.playbackRate.setTargetAtTime(this.playbackRate,this.context.currentTime,.01),this}getPlaybackRate(){return this.playbackRate}onEnded(){this.isPlaying=!1}getLoop(){return this.hasPlaybackControl===!1?(console.warn("THREE.Audio: this Audio has no playback control."),!1):this.loop}setLoop(e){if(this.hasPlaybackControl===!1){console.warn("THREE.Audio: this Audio has no playback control.");return}return this.loop=e,this.isPlaying===!0&&(this.source.loop=this.loop),this}setLoopStart(e){return this.loopStart=e,this}setLoopEnd(e){return this.loopEnd=e,this}getVolume(){return this.gain.gain.value}setVolume(e){return this.gain.gain.setTargetAtTime(e,this.context.currentTime,.01),this}}const ws=new I,M0=new hn,uP=new I,Es=new I;class hP extends CS{constructor(e){super(e),this.panner=this.context.createPanner(),this.panner.panningModel="HRTF",this.panner.connect(this.gain)}connect(){super.connect(),this.panner.connect(this.gain)}disconnect(){super.disconnect(),this.panner.disconnect(this.gain)}getOutput(){return this.panner}getRefDistance(){return this.panner.refDistance}setRefDistance(e){return this.panner.refDistance=e,this}getRolloffFactor(){return this.panner.rolloffFactor}setRolloffFactor(e){return this.panner.rolloffFactor=e,this}getDistanceModel(){return this.panner.distanceModel}setDistanceModel(e){return this.panner.distanceModel=e,this}getMaxDistance(){return this.panner.maxDistance}setMaxDistance(e){return this.panner.maxDistance=e,this}setDirectionalCone(e,t,i){return this.panner.coneInnerAngle=e,this.panner.coneOuterAngle=t,this.panner.coneOuterGain=i,this}updateMatrixWorld(e){if(super.updateMatrixWorld(e),this.hasPlaybackControl===!0&&this.isPlaying===!1)return;this.matrixWorld.decompose(ws,M0,uP),Es.set(0,0,1).applyQuaternion(M0);const t=this.panner;if(t.positionX){const i=this.context.currentTime+this.listener.timeDelta;t.positionX.linearRampToValueAtTime(ws.x,i),t.positionY.linearRampToValueAtTime(ws.y,i),t.positionZ.linearRampToValueAtTime(ws.z,i),t.orientationX.linearRampToValueAtTime(Es.x,i),t.orientationY.linearRampToValueAtTime(Es.y,i),t.orientationZ.linearRampToValueAtTime(Es.z,i)}else t.setPosition(ws.x,ws.y,ws.z),t.setOrientation(Es.x,Es.y,Es.z)}}class fP{constructor(e,t=2048){this.analyser=e.context.createAnalyser(),this.analyser.fftSize=t,this.data=new Uint8Array(this.analyser.frequencyBinCount),e.getOutput().connect(this.analyser)}getFrequencyData(){return this.analyser.getByteFrequencyData(this.data),this.data}getAverageFrequency(){let e=0;const t=this.getFrequencyData();for(let i=0;i<t.length;i++)e+=t[i];return e/t.length}}class RS{constructor(e,t,i){this.binding=e,this.valueSize=i;let r,s,a;switch(t){case"quaternion":r=this._slerp,s=this._slerpAdditive,a=this._setAdditiveIdentityQuaternion,this.buffer=new Float64Array(i*6),this._workIndex=5;break;case"string":case"bool":r=this._select,s=this._select,a=this._setAdditiveIdentityOther,this.buffer=new Array(i*5);break;default:r=this._lerp,s=this._lerpAdditive,a=this._setAdditiveIdentityNumeric,this.buffer=new Float64Array(i*5)}this._mixBufferRegion=r,this._mixBufferRegionAdditive=s,this._setIdentity=a,this._origIndex=3,this._addIndex=4,this.cumulativeWeight=0,this.cumulativeWeightAdditive=0,this.useCount=0,this.referenceCount=0}accumulate(e,t){const i=this.buffer,r=this.valueSize,s=e*r+r;let a=this.cumulativeWeight;if(a===0){for(let c=0;c!==r;++c)i[s+c]=i[c];a=t}else{a+=t;const c=t/a;this._mixBufferRegion(i,s,0,c,r)}this.cumulativeWeight=a}accumulateAdditive(e){const t=this.buffer,i=this.valueSize,r=i*this._addIndex;this.cumulativeWeightAdditive===0&&this._setIdentity(),this._mixBufferRegionAdditive(t,r,0,e,i),this.cumulativeWeightAdditive+=e}apply(e){const t=this.valueSize,i=this.buffer,r=e*t+t,s=this.cumulativeWeight,a=this.cumulativeWeightAdditive,c=this.binding;if(this.cumulativeWeight=0,this.cumulativeWeightAdditive=0,s<1){const u=t*this._origIndex;this._mixBufferRegion(i,r,u,1-s,t)}a>0&&this._mixBufferRegionAdditive(i,r,this._addIndex*t,1,t);for(let u=t,h=t+t;u!==h;++u)if(i[u]!==i[u+t]){c.setValue(i,r);break}}saveOriginalState(){const e=this.binding,t=this.buffer,i=this.valueSize,r=i*this._origIndex;e.getValue(t,r);for(let s=i,a=r;s!==a;++s)t[s]=t[r+s%i];this._setIdentity(),this.cumulativeWeight=0,this.cumulativeWeightAdditive=0}restoreOriginalState(){const e=this.valueSize*3;this.binding.setValue(this.buffer,e)}_setAdditiveIdentityNumeric(){const e=this._addIndex*this.valueSize,t=e+this.valueSize;for(let i=e;i<t;i++)this.buffer[i]=0}_setAdditiveIdentityQuaternion(){this._setAdditiveIdentityNumeric(),this.buffer[this._addIndex*this.valueSize+3]=1}_setAdditiveIdentityOther(){const e=this._origIndex*this.valueSize,t=this._addIndex*this.valueSize;for(let i=0;i<this.valueSize;i++)this.buffer[t+i]=this.buffer[e+i]}_select(e,t,i,r,s){if(r>=.5)for(let a=0;a!==s;++a)e[t+a]=e[i+a]}_slerp(e,t,i,r){hn.slerpFlat(e,t,e,t,e,i,r)}_slerpAdditive(e,t,i,r,s){const a=this._workIndex*s;hn.multiplyQuaternionsFlat(e,a,e,t,e,i),hn.slerpFlat(e,t,e,t,e,a,r)}_lerp(e,t,i,r,s){const a=1-r;for(let c=0;c!==s;++c){const u=t+c;e[u]=e[u]*a+e[i+c]*r}}_lerpAdditive(e,t,i,r,s){for(let a=0;a!==s;++a){const c=t+a;e[c]=e[c]+e[i+a]*r}}}const mm="\\[\\]\\.:\\/",dP=new RegExp("["+mm+"]","g"),gm="[^"+mm+"]",pP="[^"+mm.replace("\\.","")+"]",mP=/((?:WC+[\/:])*)/.source.replace("WC",gm),gP=/(WCOD+)?/.source.replace("WCOD",pP),vP=/(?:\.(WC+)(?:\[(.+)\])?)?/.source.replace("WC",gm),xP=/\.(WC+)(?:\[(.+)\])?/.source.replace("WC",gm),yP=new RegExp("^"+mP+gP+vP+xP+"$"),SP=["material","materials","bones","map"];class MP{constructor(e,t,i){const r=i||Pt.parseTrackName(t);this._targetGroup=e,this._bindings=e.subscribe_(t,r)}getValue(e,t){this.bind();const i=this._targetGroup.nCachedObjects_,r=this._bindings[i];r!==void 0&&r.getValue(e,t)}setValue(e,t){const i=this._bindings;for(let r=this._targetGroup.nCachedObjects_,s=i.length;r!==s;++r)i[r].setValue(e,t)}bind(){const e=this._bindings;for(let t=this._targetGroup.nCachedObjects_,i=e.length;t!==i;++t)e[t].bind()}unbind(){const e=this._bindings;for(let t=this._targetGroup.nCachedObjects_,i=e.length;t!==i;++t)e[t].unbind()}}class Pt{constructor(e,t,i){this.path=t,this.parsedPath=i||Pt.parseTrackName(t),this.node=Pt.findNode(e,this.parsedPath.nodeName),this.rootNode=e,this.getValue=this._getValue_unbound,this.setValue=this._setValue_unbound}static create(e,t,i){return e&&e.isAnimationObjectGroup?new Pt.Composite(e,t,i):new Pt(e,t,i)}static sanitizeNodeName(e){return e.replace(/\s/g,"_").replace(dP,"")}static parseTrackName(e){const t=yP.exec(e);if(t===null)throw new Error("PropertyBinding: Cannot parse trackName: "+e);const i={nodeName:t[2],objectName:t[3],objectIndex:t[4],propertyName:t[5],propertyIndex:t[6]},r=i.nodeName&&i.nodeName.lastIndexOf(".");if(r!==void 0&&r!==-1){const s=i.nodeName.substring(r+1);SP.indexOf(s)!==-1&&(i.nodeName=i.nodeName.substring(0,r),i.objectName=s)}if(i.propertyName===null||i.propertyName.length===0)throw new Error("PropertyBinding: can not parse propertyName from trackName: "+e);return i}static findNode(e,t){if(t===void 0||t===""||t==="."||t===-1||t===e.name||t===e.uuid)return e;if(e.skeleton){const i=e.skeleton.getBoneByName(t);if(i!==void 0)return i}if(e.children){const i=function(s){for(let a=0;a<s.length;a++){const c=s[a];if(c.name===t||c.uuid===t)return c;const u=i(c.children);if(u)return u}return null},r=i(e.children);if(r)return r}return null}_getValue_unavailable(){}_setValue_unavailable(){}_getValue_direct(e,t){e[t]=this.targetObject[this.propertyName]}_getValue_array(e,t){const i=this.resolvedProperty;for(let r=0,s=i.length;r!==s;++r)e[t++]=i[r]}_getValue_arrayElement(e,t){e[t]=this.resolvedProperty[this.propertyIndex]}_getValue_toArray(e,t){this.resolvedProperty.toArray(e,t)}_setValue_direct(e,t){this.targetObject[this.propertyName]=e[t]}_setValue_direct_setNeedsUpdate(e,t){this.targetObject[this.propertyName]=e[t],this.targetObject.needsUpdate=!0}_setValue_direct_setMatrixWorldNeedsUpdate(e,t){this.targetObject[this.propertyName]=e[t],this.targetObject.matrixWorldNeedsUpdate=!0}_setValue_array(e,t){const i=this.resolvedProperty;for(let r=0,s=i.length;r!==s;++r)i[r]=e[t++]}_setValue_array_setNeedsUpdate(e,t){const i=this.resolvedProperty;for(let r=0,s=i.length;r!==s;++r)i[r]=e[t++];this.targetObject.needsUpdate=!0}_setValue_array_setMatrixWorldNeedsUpdate(e,t){const i=this.resolvedProperty;for(let r=0,s=i.length;r!==s;++r)i[r]=e[t++];this.targetObject.matrixWorldNeedsUpdate=!0}_setValue_arrayElement(e,t){this.resolvedProperty[this.propertyIndex]=e[t]}_setValue_arrayElement_setNeedsUpdate(e,t){this.resolvedProperty[this.propertyIndex]=e[t],this.targetObject.needsUpdate=!0}_setValue_arrayElement_setMatrixWorldNeedsUpdate(e,t){this.resolvedProperty[this.propertyIndex]=e[t],this.targetObject.matrixWorldNeedsUpdate=!0}_setValue_fromArray(e,t){this.resolvedProperty.fromArray(e,t)}_setValue_fromArray_setNeedsUpdate(e,t){this.resolvedProperty.fromArray(e,t),this.targetObject.needsUpdate=!0}_setValue_fromArray_setMatrixWorldNeedsUpdate(e,t){this.resolvedProperty.fromArray(e,t),this.targetObject.matrixWorldNeedsUpdate=!0}_getValue_unbound(e,t){this.bind(),this.getValue(e,t)}_setValue_unbound(e,t){this.bind(),this.setValue(e,t)}bind(){let e=this.node;const t=this.parsedPath,i=t.objectName,r=t.propertyName;let s=t.propertyIndex;if(e||(e=Pt.findNode(this.rootNode,t.nodeName),this.node=e),this.getValue=this._getValue_unavailable,this.setValue=this._setValue_unavailable,!e){console.error("THREE.PropertyBinding: Trying to update node for track: "+this.path+" but it wasn't found.");return}if(i){let h=t.objectIndex;switch(i){case"materials":if(!e.material){console.error("THREE.PropertyBinding: Can not bind to material as node does not have a material.",this);return}if(!e.material.materials){console.error("THREE.PropertyBinding: Can not bind to material.materials as node.material does not have a materials array.",this);return}e=e.material.materials;break;case"bones":if(!e.skeleton){console.error("THREE.PropertyBinding: Can not bind to bones as node does not have a skeleton.",this);return}e=e.skeleton.bones;for(let f=0;f<e.length;f++)if(e[f].name===h){h=f;break}break;case"map":if("map"in e){e=e.map;break}if(!e.material){console.error("THREE.PropertyBinding: Can not bind to material as node does not have a material.",this);return}if(!e.material.map){console.error("THREE.PropertyBinding: Can not bind to material.map as node.material does not have a map.",this);return}e=e.material.map;break;default:if(e[i]===void 0){console.error("THREE.PropertyBinding: Can not bind to objectName of node undefined.",this);return}e=e[i]}if(h!==void 0){if(e[h]===void 0){console.error("THREE.PropertyBinding: Trying to bind to objectIndex of objectName, but is undefined.",this,e);return}e=e[h]}}const a=e[r];if(a===void 0){const h=t.nodeName;console.error("THREE.PropertyBinding: Trying to update property for track: "+h+"."+r+" but it wasn't found.",e);return}let c=this.Versioning.None;this.targetObject=e,e.needsUpdate!==void 0?c=this.Versioning.NeedsUpdate:e.matrixWorldNeedsUpdate!==void 0&&(c=this.Versioning.MatrixWorldNeedsUpdate);let u=this.BindingType.Direct;if(s!==void 0){if(r==="morphTargetInfluences"){if(!e.geometry){console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.",this);return}if(!e.geometry.morphAttributes){console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.morphAttributes.",this);return}e.morphTargetDictionary[s]!==void 0&&(s=e.morphTargetDictionary[s])}u=this.BindingType.ArrayElement,this.resolvedProperty=a,this.propertyIndex=s}else a.fromArray!==void 0&&a.toArray!==void 0?(u=this.BindingType.HasFromToArray,this.resolvedProperty=a):Array.isArray(a)?(u=this.BindingType.EntireArray,this.resolvedProperty=a):this.propertyName=r;this.getValue=this.GetterByBindingType[u],this.setValue=this.SetterByBindingTypeAndVersioning[u][c]}unbind(){this.node=null,this.getValue=this._getValue_unbound,this.setValue=this._setValue_unbound}}Pt.Composite=MP;Pt.prototype.BindingType={Direct:0,EntireArray:1,ArrayElement:2,HasFromToArray:3};Pt.prototype.Versioning={None:0,NeedsUpdate:1,MatrixWorldNeedsUpdate:2};Pt.prototype.GetterByBindingType=[Pt.prototype._getValue_direct,Pt.prototype._getValue_array,Pt.prototype._getValue_arrayElement,Pt.prototype._getValue_toArray];Pt.prototype.SetterByBindingTypeAndVersioning=[[Pt.prototype._setValue_direct,Pt.prototype._setValue_direct_setNeedsUpdate,Pt.prototype._setValue_direct_setMatrixWorldNeedsUpdate],[Pt.prototype._setValue_array,Pt.prototype._setValue_array_setNeedsUpdate,Pt.prototype._setValue_array_setMatrixWorldNeedsUpdate],[Pt.prototype._setValue_arrayElement,Pt.prototype._setValue_arrayElement_setNeedsUpdate,Pt.prototype._setValue_arrayElement_setMatrixWorldNeedsUpdate],[Pt.prototype._setValue_fromArray,Pt.prototype._setValue_fromArray_setNeedsUpdate,Pt.prototype._setValue_fromArray_setMatrixWorldNeedsUpdate]];class _P{constructor(){this.isAnimationObjectGroup=!0,this.uuid=gi(),this._objects=Array.prototype.slice.call(arguments),this.nCachedObjects_=0;const e={};this._indicesByUUID=e;for(let i=0,r=arguments.length;i!==r;++i)e[arguments[i].uuid]=i;this._paths=[],this._parsedPaths=[],this._bindings=[],this._bindingsIndicesByPath={};const t=this;this.stats={objects:{get total(){return t._objects.length},get inUse(){return this.total-t.nCachedObjects_}},get bindingsPerObject(){return t._bindings.length}}}add(){const e=this._objects,t=this._indicesByUUID,i=this._paths,r=this._parsedPaths,s=this._bindings,a=s.length;let c,u=e.length,h=this.nCachedObjects_;for(let f=0,p=arguments.length;f!==p;++f){const m=arguments[f],g=m.uuid;let y=t[g];if(y===void 0){y=u++,t[g]=y,e.push(m);for(let T=0,S=a;T!==S;++T)s[T].push(new Pt(m,i[T],r[T]))}else if(y<h){c=e[y];const T=--h,S=e[T];t[S.uuid]=y,e[y]=S,t[g]=T,e[T]=m;for(let x=0,w=a;x!==w;++x){const M=s[x],b=M[T];let P=M[y];M[y]=b,P===void 0&&(P=new Pt(m,i[x],r[x])),M[T]=P}}else e[y]!==c&&console.error("THREE.AnimationObjectGroup: Different objects with the same UUID detected. Clean the caches or recreate your infrastructure when reloading scenes.")}this.nCachedObjects_=h}remove(){const e=this._objects,t=this._indicesByUUID,i=this._bindings,r=i.length;let s=this.nCachedObjects_;for(let a=0,c=arguments.length;a!==c;++a){const u=arguments[a],h=u.uuid,f=t[h];if(f!==void 0&&f>=s){const p=s++,m=e[p];t[m.uuid]=f,e[f]=m,t[h]=p,e[p]=u;for(let g=0,y=r;g!==y;++g){const T=i[g],S=T[p],x=T[f];T[f]=S,T[p]=x}}}this.nCachedObjects_=s}uncache(){const e=this._objects,t=this._indicesByUUID,i=this._bindings,r=i.length;let s=this.nCachedObjects_,a=e.length;for(let c=0,u=arguments.length;c!==u;++c){const h=arguments[c],f=h.uuid,p=t[f];if(p!==void 0)if(delete t[f],p<s){const m=--s,g=e[m],y=--a,T=e[y];t[g.uuid]=p,e[p]=g,t[T.uuid]=m,e[m]=T,e.pop();for(let S=0,x=r;S!==x;++S){const w=i[S],M=w[m],b=w[y];w[p]=M,w[m]=b,w.pop()}}else{const m=--a,g=e[m];m>0&&(t[g.uuid]=p),e[p]=g,e.pop();for(let y=0,T=r;y!==T;++y){const S=i[y];S[p]=S[m],S.pop()}}}this.nCachedObjects_=s}subscribe_(e,t){const i=this._bindingsIndicesByPath;let r=i[e];const s=this._bindings;if(r!==void 0)return s[r];const a=this._paths,c=this._parsedPaths,u=this._objects,h=u.length,f=this.nCachedObjects_,p=new Array(h);r=s.length,i[e]=r,a.push(e),c.push(t),s.push(p);for(let m=f,g=u.length;m!==g;++m){const y=u[m];p[m]=new Pt(y,e,t)}return p}unsubscribe_(e){const t=this._bindingsIndicesByPath,i=t[e];if(i!==void 0){const r=this._paths,s=this._parsedPaths,a=this._bindings,c=a.length-1,u=a[c],h=e[c];t[h]=i,a[i]=u,a.pop(),s[i]=s[c],s.pop(),r[i]=r[c],r.pop()}}}class DS{constructor(e,t,i=null,r=t.blendMode){this._mixer=e,this._clip=t,this._localRoot=i,this.blendMode=r;const s=t.tracks,a=s.length,c=new Array(a),u={endingStart:Us,endingEnd:Us};for(let h=0;h!==a;++h){const f=s[h].createInterpolant(null);c[h]=f,f.settings=u}this._interpolantSettings=u,this._interpolants=c,this._propertyBindings=new Array(a),this._cacheIndex=null,this._byClipCacheIndex=null,this._timeScaleInterpolant=null,this._weightInterpolant=null,this.loop=gy,this._loopCount=-1,this._startTime=null,this.time=0,this.timeScale=1,this._effectiveTimeScale=1,this.weight=1,this._effectiveWeight=1,this.repetitions=1/0,this.paused=!1,this.enabled=!0,this.clampWhenFinished=!1,this.zeroSlopeAtStart=!0,this.zeroSlopeAtEnd=!0}play(){return this._mixer._activateAction(this),this}stop(){return this._mixer._deactivateAction(this),this.reset()}reset(){return this.paused=!1,this.enabled=!0,this.time=0,this._loopCount=-1,this._startTime=null,this.stopFading().stopWarping()}isRunning(){return this.enabled&&!this.paused&&this.timeScale!==0&&this._startTime===null&&this._mixer._isActiveAction(this)}isScheduled(){return this._mixer._isActiveAction(this)}startAt(e){return this._startTime=e,this}setLoop(e,t){return this.loop=e,this.repetitions=t,this}setEffectiveWeight(e){return this.weight=e,this._effectiveWeight=this.enabled?e:0,this.stopFading()}getEffectiveWeight(){return this._effectiveWeight}fadeIn(e){return this._scheduleFading(e,0,1)}fadeOut(e){return this._scheduleFading(e,1,0)}crossFadeFrom(e,t,i){if(e.fadeOut(t),this.fadeIn(t),i){const r=this._clip.duration,s=e._clip.duration,a=s/r,c=r/s;e.warp(1,a,t),this.warp(c,1,t)}return this}crossFadeTo(e,t,i){return e.crossFadeFrom(this,t,i)}stopFading(){const e=this._weightInterpolant;return e!==null&&(this._weightInterpolant=null,this._mixer._takeBackControlInterpolant(e)),this}setEffectiveTimeScale(e){return this.timeScale=e,this._effectiveTimeScale=this.paused?0:e,this.stopWarping()}getEffectiveTimeScale(){return this._effectiveTimeScale}setDuration(e){return this.timeScale=this._clip.duration/e,this.stopWarping()}syncWith(e){return this.time=e.time,this.timeScale=e.timeScale,this.stopWarping()}halt(e){return this.warp(this._effectiveTimeScale,0,e)}warp(e,t,i){const r=this._mixer,s=r.time,a=this.timeScale;let c=this._timeScaleInterpolant;c===null&&(c=r._lendControlInterpolant(),this._timeScaleInterpolant=c);const u=c.parameterPositions,h=c.sampleValues;return u[0]=s,u[1]=s+i,h[0]=e/a,h[1]=t/a,this}stopWarping(){const e=this._timeScaleInterpolant;return e!==null&&(this._timeScaleInterpolant=null,this._mixer._takeBackControlInterpolant(e)),this}getMixer(){return this._mixer}getClip(){return this._clip}getRoot(){return this._localRoot||this._mixer._root}_update(e,t,i,r){if(!this.enabled){this._updateWeight(e);return}const s=this._startTime;if(s!==null){const u=(e-s)*i;u<0||i===0?t=0:(this._startTime=null,t=i*u)}t*=this._updateTimeScale(e);const a=this._updateTime(t),c=this._updateWeight(e);if(c>0){const u=this._interpolants,h=this._propertyBindings;switch(this.blendMode){case Bp:for(let f=0,p=u.length;f!==p;++f)u[f].evaluate(a),h[f].accumulateAdditive(c);break;case nh:default:for(let f=0,p=u.length;f!==p;++f)u[f].evaluate(a),h[f].accumulate(r,c)}}}_updateWeight(e){let t=0;if(this.enabled){t=this.weight;const i=this._weightInterpolant;if(i!==null){const r=i.evaluate(e)[0];t*=r,e>i.parameterPositions[1]&&(this.stopFading(),r===0&&(this.enabled=!1))}}return this._effectiveWeight=t,t}_updateTimeScale(e){let t=0;if(!this.paused){t=this.timeScale;const i=this._timeScaleInterpolant;if(i!==null){const r=i.evaluate(e)[0];t*=r,e>i.parameterPositions[1]&&(this.stopWarping(),t===0?this.paused=!0:this.timeScale=t)}}return this._effectiveTimeScale=t,t}_updateTime(e){const t=this._clip.duration,i=this.loop;let r=this.time+e,s=this._loopCount;const a=i===vy;if(e===0)return s===-1?r:a&&(s&1)===1?t-r:r;if(i===my){s===-1&&(this._loopCount=0,this._setEndings(!0,!0,!1));e:{if(r>=t)r=t;else if(r<0)r=0;else{this.time=r;break e}this.clampWhenFinished?this.paused=!0:this.enabled=!1,this.time=r,this._mixer.dispatchEvent({type:"finished",action:this,direction:e<0?-1:1})}}else{if(s===-1&&(e>=0?(s=0,this._setEndings(!0,this.repetitions===0,a)):this._setEndings(this.repetitions===0,!0,a)),r>=t||r<0){const c=Math.floor(r/t);r-=t*c,s+=Math.abs(c);const u=this.repetitions-s;if(u<=0)this.clampWhenFinished?this.paused=!0:this.enabled=!1,r=e>0?t:0,this.time=r,this._mixer.dispatchEvent({type:"finished",action:this,direction:e>0?1:-1});else{if(u===1){const h=e<0;this._setEndings(h,!h,a)}else this._setEndings(!1,!1,a);this._loopCount=s,this.time=r,this._mixer.dispatchEvent({type:"loop",action:this,loopDelta:c})}}else this.time=r;if(a&&(s&1)===1)return t-r}return r}_setEndings(e,t,i){const r=this._interpolantSettings;i?(r.endingStart=Ns,r.endingEnd=Ns):(e?r.endingStart=this.zeroSlopeAtStart?Ns:Us:r.endingStart=gl,t?r.endingEnd=this.zeroSlopeAtEnd?Ns:Us:r.endingEnd=gl)}_scheduleFading(e,t,i){const r=this._mixer,s=r.time;let a=this._weightInterpolant;a===null&&(a=r._lendControlInterpolant(),this._weightInterpolant=a);const c=a.parameterPositions,u=a.sampleValues;return c[0]=s,u[0]=t,c[1]=s+e,u[1]=i,this}}const TP=new Float32Array(1);class wP extends xi{constructor(e){super(),this._root=e,this._initMemoryManager(),this._accuIndex=0,this.time=0,this.timeScale=1}_bindAction(e,t){const i=e._localRoot||this._root,r=e._clip.tracks,s=r.length,a=e._propertyBindings,c=e._interpolants,u=i.uuid,h=this._bindingsByRootAndName;let f=h[u];f===void 0&&(f={},h[u]=f);for(let p=0;p!==s;++p){const m=r[p],g=m.name;let y=f[g];if(y!==void 0)++y.referenceCount,a[p]=y;else{if(y=a[p],y!==void 0){y._cacheIndex===null&&(++y.referenceCount,this._addInactiveBinding(y,u,g));continue}const T=t&&t._propertyBindings[p].binding.parsedPath;y=new RS(Pt.create(i,g,T),m.ValueTypeName,m.getValueSize()),++y.referenceCount,this._addInactiveBinding(y,u,g),a[p]=y}c[p].resultBuffer=y.buffer}}_activateAction(e){if(!this._isActiveAction(e)){if(e._cacheIndex===null){const i=(e._localRoot||this._root).uuid,r=e._clip.uuid,s=this._actionsByClip[r];this._bindAction(e,s&&s.knownActions[0]),this._addInactiveAction(e,r,i)}const t=e._propertyBindings;for(let i=0,r=t.length;i!==r;++i){const s=t[i];s.useCount++===0&&(this._lendBinding(s),s.saveOriginalState())}this._lendAction(e)}}_deactivateAction(e){if(this._isActiveAction(e)){const t=e._propertyBindings;for(let i=0,r=t.length;i!==r;++i){const s=t[i];--s.useCount===0&&(s.restoreOriginalState(),this._takeBackBinding(s))}this._takeBackAction(e)}}_initMemoryManager(){this._actions=[],this._nActiveActions=0,this._actionsByClip={},this._bindings=[],this._nActiveBindings=0,this._bindingsByRootAndName={},this._controlInterpolants=[],this._nActiveControlInterpolants=0;const e=this;this.stats={actions:{get total(){return e._actions.length},get inUse(){return e._nActiveActions}},bindings:{get total(){return e._bindings.length},get inUse(){return e._nActiveBindings}},controlInterpolants:{get total(){return e._controlInterpolants.length},get inUse(){return e._nActiveControlInterpolants}}}}_isActiveAction(e){const t=e._cacheIndex;return t!==null&&t<this._nActiveActions}_addInactiveAction(e,t,i){const r=this._actions,s=this._actionsByClip;let a=s[t];if(a===void 0)a={knownActions:[e],actionByRoot:{}},e._byClipCacheIndex=0,s[t]=a;else{const c=a.knownActions;e._byClipCacheIndex=c.length,c.push(e)}e._cacheIndex=r.length,r.push(e),a.actionByRoot[i]=e}_removeInactiveAction(e){const t=this._actions,i=t[t.length-1],r=e._cacheIndex;i._cacheIndex=r,t[r]=i,t.pop(),e._cacheIndex=null;const s=e._clip.uuid,a=this._actionsByClip,c=a[s],u=c.knownActions,h=u[u.length-1],f=e._byClipCacheIndex;h._byClipCacheIndex=f,u[f]=h,u.pop(),e._byClipCacheIndex=null;const p=c.actionByRoot,m=(e._localRoot||this._root).uuid;delete p[m],u.length===0&&delete a[s],this._removeInactiveBindingsForAction(e)}_removeInactiveBindingsForAction(e){const t=e._propertyBindings;for(let i=0,r=t.length;i!==r;++i){const s=t[i];--s.referenceCount===0&&this._removeInactiveBinding(s)}}_lendAction(e){const t=this._actions,i=e._cacheIndex,r=this._nActiveActions++,s=t[r];e._cacheIndex=r,t[r]=e,s._cacheIndex=i,t[i]=s}_takeBackAction(e){const t=this._actions,i=e._cacheIndex,r=--this._nActiveActions,s=t[r];e._cacheIndex=r,t[r]=e,s._cacheIndex=i,t[i]=s}_addInactiveBinding(e,t,i){const r=this._bindingsByRootAndName,s=this._bindings;let a=r[t];a===void 0&&(a={},r[t]=a),a[i]=e,e._cacheIndex=s.length,s.push(e)}_removeInactiveBinding(e){const t=this._bindings,i=e.binding,r=i.rootNode.uuid,s=i.path,a=this._bindingsByRootAndName,c=a[r],u=t[t.length-1],h=e._cacheIndex;u._cacheIndex=h,t[h]=u,t.pop(),delete c[s],Object.keys(c).length===0&&delete a[r]}_lendBinding(e){const t=this._bindings,i=e._cacheIndex,r=this._nActiveBindings++,s=t[r];e._cacheIndex=r,t[r]=e,s._cacheIndex=i,t[i]=s}_takeBackBinding(e){const t=this._bindings,i=e._cacheIndex,r=--this._nActiveBindings,s=t[r];e._cacheIndex=r,t[r]=e,s._cacheIndex=i,t[i]=s}_lendControlInterpolant(){const e=this._controlInterpolants,t=this._nActiveControlInterpolants++;let i=e[t];return i===void 0&&(i=new cm(new Float32Array(2),new Float32Array(2),1,TP),i.__cacheIndex=t,e[t]=i),i}_takeBackControlInterpolant(e){const t=this._controlInterpolants,i=e.__cacheIndex,r=--this._nActiveControlInterpolants,s=t[r];e.__cacheIndex=r,t[r]=e,s.__cacheIndex=i,t[i]=s}clipAction(e,t,i){const r=t||this._root,s=r.uuid;let a=typeof e=="string"?bl.findByName(r,e):e;const c=a!==null?a.uuid:e,u=this._actionsByClip[c];let h=null;if(i===void 0&&(a!==null?i=a.blendMode:i=nh),u!==void 0){const p=u.actionByRoot[s];if(p!==void 0&&p.blendMode===i)return p;h=u.knownActions[0],a===null&&(a=h._clip)}if(a===null)return null;const f=new DS(this,a,t,i);return this._bindAction(f,h),this._addInactiveAction(f,c,s),f}existingAction(e,t){const i=t||this._root,r=i.uuid,s=typeof e=="string"?bl.findByName(i,e):e,a=s?s.uuid:e,c=this._actionsByClip[a];return c!==void 0&&c.actionByRoot[r]||null}stopAllAction(){const e=this._actions,t=this._nActiveActions;for(let i=t-1;i>=0;--i)e[i].stop();return this}update(e){e*=this.timeScale;const t=this._actions,i=this._nActiveActions,r=this.time+=e,s=Math.sign(e),a=this._accuIndex^=1;for(let h=0;h!==i;++h)t[h]._update(r,e,s,a);const c=this._bindings,u=this._nActiveBindings;for(let h=0;h!==u;++h)c[h].apply(a);return this}setTime(e){this.time=0;for(let t=0;t<this._actions.length;t++)this._actions[t].time=0;return this.update(e)}getRoot(){return this._root}uncacheClip(e){const t=this._actions,i=e.uuid,r=this._actionsByClip,s=r[i];if(s!==void 0){const a=s.knownActions;for(let c=0,u=a.length;c!==u;++c){const h=a[c];this._deactivateAction(h);const f=h._cacheIndex,p=t[t.length-1];h._cacheIndex=null,h._byClipCacheIndex=null,p._cacheIndex=f,t[f]=p,t.pop(),this._removeInactiveBindingsForAction(h)}delete r[i]}}uncacheRoot(e){const t=e.uuid,i=this._actionsByClip;for(const a in i){const c=i[a].actionByRoot,u=c[t];u!==void 0&&(this._deactivateAction(u),this._removeInactiveAction(u))}const r=this._bindingsByRootAndName,s=r[t];if(s!==void 0)for(const a in s){const c=s[a];c.restoreOriginalState(),this._removeInactiveBinding(c)}}uncacheAction(e,t){const i=this.existingAction(e,t);i!==null&&(this._deactivateAction(i),this._removeInactiveAction(i))}}class Q{constructor(e){this.value=e}clone(){return new Q(this.value.clone===void 0?this.value:this.value.clone())}}let EP=0;class bP extends xi{constructor(){super(),this.isUniformsGroup=!0,Object.defineProperty(this,"id",{value:EP++}),this.name="",this.usage=vl,this.uniforms=[]}add(e){return this.uniforms.push(e),this}remove(e){const t=this.uniforms.indexOf(e);return t!==-1&&this.uniforms.splice(t,1),this}setName(e){return this.name=e,this}setUsage(e){return this.usage=e,this}dispose(){return this.dispatchEvent({type:"dispose"}),this}copy(e){this.name=e.name,this.usage=e.usage;const t=e.uniforms;this.uniforms.length=0;for(let i=0,r=t.length;i<r;i++)this.uniforms.push(t[i].clone());return this}clone(){return new this.constructor().copy(this)}}class AP extends hh{constructor(e,t,i=1){super(e,t),this.isInstancedInterleavedBuffer=!0,this.meshPerAttribute=i}copy(e){return super.copy(e),this.meshPerAttribute=e.meshPerAttribute,this}clone(e){const t=super.clone(e);return t.meshPerAttribute=this.meshPerAttribute,t}toJSON(e){const t=super.toJSON(e);return t.isInstancedInterleavedBuffer=!0,t.meshPerAttribute=this.meshPerAttribute,t}}class PP{constructor(e,t,i,r,s){this.isGLBufferAttribute=!0,this.name="",this.buffer=e,this.type=t,this.itemSize=i,this.elementSize=r,this.count=s,this.version=0}set needsUpdate(e){e===!0&&this.version++}setBuffer(e){return this.buffer=e,this}setType(e,t){return this.type=e,this.elementSize=t,this}setItemSize(e){return this.itemSize=e,this}setCount(e){return this.count=e,this}}class vm{constructor(e,t,i=0,r=1/0){this.ray=new io(e,t),this.near=i,this.far=r,this.camera=null,this.layers=new Gs,this.params={Mesh:{},Line:{threshold:1},LOD:{},Points:{threshold:1},Sprite:{}}}set(e,t){this.ray.set(e,t)}setFromCamera(e,t){t.isPerspectiveCamera?(this.ray.origin.setFromMatrixPosition(t.matrixWorld),this.ray.direction.set(e.x,e.y,.5).unproject(t).sub(this.ray.origin).normalize(),this.camera=t):t.isOrthographicCamera?(this.ray.origin.set(e.x,e.y,(t.near+t.far)/(t.near-t.far)).unproject(t),this.ray.direction.set(0,0,-1).transformDirection(t.matrixWorld),this.camera=t):console.error("THREE.Raycaster: Unsupported camera type: "+t.type)}intersectObject(e,t=!0,i=[]){return gp(e,this,i,t),i.sort(_0),i}intersectObjects(e,t=!0,i=[]){for(let r=0,s=e.length;r<s;r++)gp(e[r],this,i,t);return i.sort(_0),i}}function _0(n,e){return n.distance-e.distance}function gp(n,e,t,i){if(n.layers.test(e.layers)&&n.raycast(e,t),i===!0){const r=n.children;for(let s=0,a=r.length;s<a;s++)gp(r[s],e,t,!0)}}class ju{constructor(e=1,t=0,i=0){return this.radius=e,this.phi=t,this.theta=i,this}set(e,t,i){return this.radius=e,this.phi=t,this.theta=i,this}copy(e){return this.radius=e.radius,this.phi=e.phi,this.theta=e.theta,this}makeSafe(){return this.phi=Math.max(1e-6,Math.min(Math.PI-1e-6,this.phi)),this}setFromVector3(e){return this.setFromCartesianCoords(e.x,e.y,e.z)}setFromCartesianCoords(e,t,i){return this.radius=Math.sqrt(e*e+t*t+i*i),this.radius===0?(this.theta=0,this.phi=0):(this.theta=Math.atan2(e,i),this.phi=Math.acos(ln(t/this.radius,-1,1))),this}clone(){return new this.constructor().copy(this)}}class CP{constructor(e=1,t=0,i=0){return this.radius=e,this.theta=t,this.y=i,this}set(e,t,i){return this.radius=e,this.theta=t,this.y=i,this}copy(e){return this.radius=e.radius,this.theta=e.theta,this.y=e.y,this}setFromVector3(e){return this.setFromCartesianCoords(e.x,e.y,e.z)}setFromCartesianCoords(e,t,i){return this.radius=Math.sqrt(e*e+i*i),this.theta=Math.atan2(e,i),this.y=t,this}clone(){return new this.constructor().copy(this)}}const T0=new K;class RP{constructor(e=new K(1/0,1/0),t=new K(-1/0,-1/0)){this.isBox2=!0,this.min=e,this.max=t}set(e,t){return this.min.copy(e),this.max.copy(t),this}setFromPoints(e){this.makeEmpty();for(let t=0,i=e.length;t<i;t++)this.expandByPoint(e[t]);return this}setFromCenterAndSize(e,t){const i=T0.copy(t).multiplyScalar(.5);return this.min.copy(e).sub(i),this.max.copy(e).add(i),this}clone(){return new this.constructor().copy(this)}copy(e){return this.min.copy(e.min),this.max.copy(e.max),this}makeEmpty(){return this.min.x=this.min.y=1/0,this.max.x=this.max.y=-1/0,this}isEmpty(){return this.max.x<this.min.x||this.max.y<this.min.y}getCenter(e){return this.isEmpty()?e.set(0,0):e.addVectors(this.min,this.max).multiplyScalar(.5)}getSize(e){return this.isEmpty()?e.set(0,0):e.subVectors(this.max,this.min)}expandByPoint(e){return this.min.min(e),this.max.max(e),this}expandByVector(e){return this.min.sub(e),this.max.add(e),this}expandByScalar(e){return this.min.addScalar(-e),this.max.addScalar(e),this}containsPoint(e){return!(e.x<this.min.x||e.x>this.max.x||e.y<this.min.y||e.y>this.max.y)}containsBox(e){return this.min.x<=e.min.x&&e.max.x<=this.max.x&&this.min.y<=e.min.y&&e.max.y<=this.max.y}getParameter(e,t){return t.set((e.x-this.min.x)/(this.max.x-this.min.x),(e.y-this.min.y)/(this.max.y-this.min.y))}intersectsBox(e){return!(e.max.x<this.min.x||e.min.x>this.max.x||e.max.y<this.min.y||e.min.y>this.max.y)}clampPoint(e,t){return t.copy(e).clamp(this.min,this.max)}distanceToPoint(e){return this.clampPoint(e,T0).distanceTo(e)}intersect(e){return this.min.max(e.min),this.max.min(e.max),this.isEmpty()&&this.makeEmpty(),this}union(e){return this.min.min(e.min),this.max.max(e.max),this}translate(e){return this.min.add(e),this.max.add(e),this}equals(e){return e.min.equals(this.min)&&e.max.equals(this.max)}}const w0=new I,yu=new I;class DP{constructor(e=new I,t=new I){this.start=e,this.end=t}set(e,t){return this.start.copy(e),this.end.copy(t),this}copy(e){return this.start.copy(e.start),this.end.copy(e.end),this}getCenter(e){return e.addVectors(this.start,this.end).multiplyScalar(.5)}delta(e){return e.subVectors(this.end,this.start)}distanceSq(){return this.start.distanceToSquared(this.end)}distance(){return this.start.distanceTo(this.end)}at(e,t){return this.delta(t).multiplyScalar(e).add(this.start)}closestPointToPointParameter(e,t){w0.subVectors(e,this.start),yu.subVectors(this.end,this.start);const i=yu.dot(yu);let s=yu.dot(w0)/i;return t&&(s=ln(s,0,1)),s}closestPointToPoint(e,t,i){const r=this.closestPointToPointParameter(e,t);return this.delta(i).multiplyScalar(r).add(this.start)}applyMatrix4(e){return this.start.applyMatrix4(e),this.end.applyMatrix4(e),this}equals(e){return e.start.equals(this.start)&&e.end.equals(this.end)}clone(){return new this.constructor().copy(this)}}const E0=new I;class LP extends Ut{constructor(e,t){super(),this.light=e,this.matrix=e.matrixWorld,this.matrixAutoUpdate=!1,this.color=t,this.type="SpotLightHelper";const i=new mt,r=[0,0,0,0,0,1,0,0,0,1,0,1,0,0,0,-1,0,1,0,0,0,0,1,1,0,0,0,0,-1,1];for(let a=0,c=1,u=32;a<u;a++,c++){const h=a/u*Math.PI*2,f=c/u*Math.PI*2;r.push(Math.cos(h),Math.sin(h),1,Math.cos(f),Math.sin(f),1)}i.setAttribute("position",new Xe(r,3));const s=new jn({fog:!1,toneMapped:!1});this.cone=new ur(i,s),this.add(this.cone),this.update()}dispose(){this.cone.geometry.dispose(),this.cone.material.dispose()}update(){this.light.updateWorldMatrix(!0,!1),this.light.target.updateWorldMatrix(!0,!1);const e=this.light.distance?this.light.distance:1e3,t=e*Math.tan(this.light.angle);this.cone.scale.set(t,t,e),E0.setFromMatrixPosition(this.light.target.matrixWorld),this.cone.lookAt(E0),this.color!==void 0?this.cone.material.color.set(this.color):this.cone.material.color.copy(this.light.color)}}const Yr=new I,Su=new ze,vd=new ze;class IP extends ur{constructor(e){const t=LS(e),i=new mt,r=[],s=[],a=new be(0,0,1),c=new be(0,1,0);for(let h=0;h<t.length;h++){const f=t[h];f.parent&&f.parent.isBone&&(r.push(0,0,0),r.push(0,0,0),s.push(a.r,a.g,a.b),s.push(c.r,c.g,c.b))}i.setAttribute("position",new Xe(r,3)),i.setAttribute("color",new Xe(s,3));const u=new jn({vertexColors:!0,depthTest:!1,depthWrite:!1,toneMapped:!1,transparent:!0});super(i,u),this.isSkeletonHelper=!0,this.type="SkeletonHelper",this.root=e,this.bones=t,this.matrix=e.matrixWorld,this.matrixAutoUpdate=!1}updateMatrixWorld(e){const t=this.bones,i=this.geometry,r=i.getAttribute("position");vd.copy(this.root.matrixWorld).invert();for(let s=0,a=0;s<t.length;s++){const c=t[s];c.parent&&c.parent.isBone&&(Su.multiplyMatrices(vd,c.matrixWorld),Yr.setFromMatrixPosition(Su),r.setXYZ(a,Yr.x,Yr.y,Yr.z),Su.multiplyMatrices(vd,c.parent.matrixWorld),Yr.setFromMatrixPosition(Su),r.setXYZ(a+1,Yr.x,Yr.y,Yr.z),a+=2)}i.getAttribute("position").needsUpdate=!0,super.updateMatrixWorld(e)}dispose(){this.geometry.dispose(),this.material.dispose()}}function LS(n){const e=[];n.isBone===!0&&e.push(n);for(let t=0;t<n.children.length;t++)e.push.apply(e,LS(n.children[t]));return e}class UP extends Tn{constructor(e,t,i){const r=new Fl(t,4,2),s=new rs({wireframe:!0,fog:!1,toneMapped:!1});super(r,s),this.light=e,this.color=i,this.type="PointLightHelper",this.matrix=this.light.matrixWorld,this.matrixAutoUpdate=!1,this.update()}dispose(){this.geometry.dispose(),this.material.dispose()}update(){this.light.updateWorldMatrix(!0,!1),this.color!==void 0?this.material.color.set(this.color):this.material.color.copy(this.light.color)}}const NP=new I,b0=new be,A0=new be;class FP extends Ut{constructor(e,t,i){super(),this.light=e,this.matrix=e.matrixWorld,this.matrixAutoUpdate=!1,this.color=i,this.type="HemisphereLightHelper";const r=new Nl(t);r.rotateY(Math.PI*.5),this.material=new rs({wireframe:!0,fog:!1,toneMapped:!1}),this.color===void 0&&(this.material.vertexColors=!0);const s=r.getAttribute("position"),a=new Float32Array(s.count*3);r.setAttribute("color",new Ct(a,3)),this.add(new Tn(r,this.material)),this.update()}dispose(){this.children[0].geometry.dispose(),this.children[0].material.dispose()}update(){const e=this.children[0];if(this.color!==void 0)this.material.color.set(this.color);else{const t=e.geometry.getAttribute("color");b0.copy(this.light.color),A0.copy(this.light.groundColor);for(let i=0,r=t.count;i<r;i++){const s=i<r/2?b0:A0;t.setXYZ(i,s.r,s.g,s.b)}t.needsUpdate=!0}this.light.updateWorldMatrix(!0,!1),e.lookAt(NP.setFromMatrixPosition(this.light.matrixWorld).negate())}}class OP extends ur{constructor(e=10,t=10,i=4473924,r=8947848){i=new be(i),r=new be(r);const s=t/2,a=e/t,c=e/2,u=[],h=[];for(let m=0,g=0,y=-c;m<=t;m++,y+=a){u.push(-c,0,y,c,0,y),u.push(y,0,-c,y,0,c);const T=m===s?i:r;T.toArray(h,g),g+=3,T.toArray(h,g),g+=3,T.toArray(h,g),g+=3,T.toArray(h,g),g+=3}const f=new mt;f.setAttribute("position",new Xe(u,3)),f.setAttribute("color",new Xe(h,3));const p=new jn({vertexColors:!0,toneMapped:!1});super(f,p),this.type="GridHelper"}dispose(){this.geometry.dispose(),this.material.dispose()}}class BP extends ur{constructor(e=10,t=16,i=8,r=64,s=4473924,a=8947848){s=new be(s),a=new be(a);const c=[],u=[];if(t>1)for(let p=0;p<t;p++){const m=p/t*(Math.PI*2),g=Math.sin(m)*e,y=Math.cos(m)*e;c.push(0,0,0),c.push(g,0,y);const T=p&1?s:a;u.push(T.r,T.g,T.b),u.push(T.r,T.g,T.b)}for(let p=0;p<i;p++){const m=p&1?s:a,g=e-e/i*p;for(let y=0;y<r;y++){let T=y/r*(Math.PI*2),S=Math.sin(T)*g,x=Math.cos(T)*g;c.push(S,0,x),u.push(m.r,m.g,m.b),T=(y+1)/r*(Math.PI*2),S=Math.sin(T)*g,x=Math.cos(T)*g,c.push(S,0,x),u.push(m.r,m.g,m.b)}}const h=new mt;h.setAttribute("position",new Xe(c,3)),h.setAttribute("color",new Xe(u,3));const f=new jn({vertexColors:!0,toneMapped:!1});super(h,f),this.type="PolarGridHelper"}dispose(){this.geometry.dispose(),this.material.dispose()}}const P0=new I,Mu=new I,C0=new I;class zP extends Ut{constructor(e,t,i){super(),this.light=e,this.matrix=e.matrixWorld,this.matrixAutoUpdate=!1,this.color=i,this.type="DirectionalLightHelper",t===void 0&&(t=1);let r=new mt;r.setAttribute("position",new Xe([-t,t,0,t,t,0,t,-t,0,-t,-t,0,-t,t,0],3));const s=new jn({fog:!1,toneMapped:!1});this.lightPlane=new ns(r,s),this.add(this.lightPlane),r=new mt,r.setAttribute("position",new Xe([0,0,0,0,0,1],3)),this.targetLine=new ns(r,s),this.add(this.targetLine),this.update()}dispose(){this.lightPlane.geometry.dispose(),this.lightPlane.material.dispose(),this.targetLine.geometry.dispose(),this.targetLine.material.dispose()}update(){this.light.updateWorldMatrix(!0,!1),this.light.target.updateWorldMatrix(!0,!1),P0.setFromMatrixPosition(this.light.matrixWorld),Mu.setFromMatrixPosition(this.light.target.matrixWorld),C0.subVectors(Mu,P0),this.lightPlane.lookAt(Mu),this.color!==void 0?(this.lightPlane.material.color.set(this.color),this.targetLine.material.color.set(this.color)):(this.lightPlane.material.color.copy(this.light.color),this.targetLine.material.color.copy(this.light.color)),this.targetLine.lookAt(Mu),this.targetLine.scale.z=C0.length()}}const _u=new I,on=new so;class kP extends ur{constructor(e){const t=new mt,i=new jn({color:16777215,vertexColors:!0,toneMapped:!1}),r=[],s=[],a={};c("n1","n2"),c("n2","n4"),c("n4","n3"),c("n3","n1"),c("f1","f2"),c("f2","f4"),c("f4","f3"),c("f3","f1"),c("n1","f1"),c("n2","f2"),c("n3","f3"),c("n4","f4"),c("p","n1"),c("p","n2"),c("p","n3"),c("p","n4"),c("u1","u2"),c("u2","u3"),c("u3","u1"),c("c","t"),c("p","c"),c("cn1","cn2"),c("cn3","cn4"),c("cf1","cf2"),c("cf3","cf4");function c(y,T){u(y),u(T)}function u(y){r.push(0,0,0),s.push(0,0,0),a[y]===void 0&&(a[y]=[]),a[y].push(r.length/3-1)}t.setAttribute("position",new Xe(r,3)),t.setAttribute("color",new Xe(s,3)),super(t,i),this.type="CameraHelper",this.camera=e,this.camera.updateProjectionMatrix&&this.camera.updateProjectionMatrix(),this.matrix=e.matrixWorld,this.matrixAutoUpdate=!1,this.pointMap=a,this.update();const h=new be(16755200),f=new be(16711680),p=new be(43775),m=new be(16777215),g=new be(3355443);this.setColors(h,f,p,m,g)}setColors(e,t,i,r,s){const c=this.geometry.getAttribute("color");c.setXYZ(0,e.r,e.g,e.b),c.setXYZ(1,e.r,e.g,e.b),c.setXYZ(2,e.r,e.g,e.b),c.setXYZ(3,e.r,e.g,e.b),c.setXYZ(4,e.r,e.g,e.b),c.setXYZ(5,e.r,e.g,e.b),c.setXYZ(6,e.r,e.g,e.b),c.setXYZ(7,e.r,e.g,e.b),c.setXYZ(8,e.r,e.g,e.b),c.setXYZ(9,e.r,e.g,e.b),c.setXYZ(10,e.r,e.g,e.b),c.setXYZ(11,e.r,e.g,e.b),c.setXYZ(12,e.r,e.g,e.b),c.setXYZ(13,e.r,e.g,e.b),c.setXYZ(14,e.r,e.g,e.b),c.setXYZ(15,e.r,e.g,e.b),c.setXYZ(16,e.r,e.g,e.b),c.setXYZ(17,e.r,e.g,e.b),c.setXYZ(18,e.r,e.g,e.b),c.setXYZ(19,e.r,e.g,e.b),c.setXYZ(20,e.r,e.g,e.b),c.setXYZ(21,e.r,e.g,e.b),c.setXYZ(22,e.r,e.g,e.b),c.setXYZ(23,e.r,e.g,e.b),c.setXYZ(24,t.r,t.g,t.b),c.setXYZ(25,t.r,t.g,t.b),c.setXYZ(26,t.r,t.g,t.b),c.setXYZ(27,t.r,t.g,t.b),c.setXYZ(28,t.r,t.g,t.b),c.setXYZ(29,t.r,t.g,t.b),c.setXYZ(30,t.r,t.g,t.b),c.setXYZ(31,t.r,t.g,t.b),c.setXYZ(32,i.r,i.g,i.b),c.setXYZ(33,i.r,i.g,i.b),c.setXYZ(34,i.r,i.g,i.b),c.setXYZ(35,i.r,i.g,i.b),c.setXYZ(36,i.r,i.g,i.b),c.setXYZ(37,i.r,i.g,i.b),c.setXYZ(38,r.r,r.g,r.b),c.setXYZ(39,r.r,r.g,r.b),c.setXYZ(40,s.r,s.g,s.b),c.setXYZ(41,s.r,s.g,s.b),c.setXYZ(42,s.r,s.g,s.b),c.setXYZ(43,s.r,s.g,s.b),c.setXYZ(44,s.r,s.g,s.b),c.setXYZ(45,s.r,s.g,s.b),c.setXYZ(46,s.r,s.g,s.b),c.setXYZ(47,s.r,s.g,s.b),c.setXYZ(48,s.r,s.g,s.b),c.setXYZ(49,s.r,s.g,s.b),c.needsUpdate=!0}update(){const e=this.geometry,t=this.pointMap,i=1,r=1;on.projectionMatrixInverse.copy(this.camera.projectionMatrixInverse),un("c",t,e,on,0,0,-1),un("t",t,e,on,0,0,1),un("n1",t,e,on,-i,-r,-1),un("n2",t,e,on,i,-r,-1),un("n3",t,e,on,-i,r,-1),un("n4",t,e,on,i,r,-1),un("f1",t,e,on,-i,-r,1),un("f2",t,e,on,i,-r,1),un("f3",t,e,on,-i,r,1),un("f4",t,e,on,i,r,1),un("u1",t,e,on,i*.7,r*1.1,-1),un("u2",t,e,on,-i*.7,r*1.1,-1),un("u3",t,e,on,0,r*2,-1),un("cf1",t,e,on,-i,0,1),un("cf2",t,e,on,i,0,1),un("cf3",t,e,on,0,-r,1),un("cf4",t,e,on,0,r,1),un("cn1",t,e,on,-i,0,-1),un("cn2",t,e,on,i,0,-1),un("cn3",t,e,on,0,-r,-1),un("cn4",t,e,on,0,r,-1),e.getAttribute("position").needsUpdate=!0}dispose(){this.geometry.dispose(),this.material.dispose()}}function un(n,e,t,i,r,s,a){_u.set(r,s,a).unproject(i);const c=e[n];if(c!==void 0){const u=t.getAttribute("position");for(let h=0,f=c.length;h<f;h++)u.setXYZ(c[h],_u.x,_u.y,_u.z)}}const Tu=new cr;class HP extends ur{constructor(e,t=16776960){const i=new Uint16Array([0,1,1,2,2,3,3,0,4,5,5,6,6,7,7,4,0,4,1,5,2,6,3,7]),r=new Float32Array(8*3),s=new mt;s.setIndex(new Ct(i,1)),s.setAttribute("position",new Ct(r,3)),super(s,new jn({color:t,toneMapped:!1})),this.object=e,this.type="BoxHelper",this.matrixAutoUpdate=!1,this.update()}update(e){if(e!==void 0&&console.warn("THREE.BoxHelper: .update() has no longer arguments."),this.object!==void 0&&Tu.setFromObject(this.object),Tu.isEmpty())return;const t=Tu.min,i=Tu.max,r=this.geometry.attributes.position,s=r.array;s[0]=i.x,s[1]=i.y,s[2]=i.z,s[3]=t.x,s[4]=i.y,s[5]=i.z,s[6]=t.x,s[7]=t.y,s[8]=i.z,s[9]=i.x,s[10]=t.y,s[11]=i.z,s[12]=i.x,s[13]=i.y,s[14]=t.z,s[15]=t.x,s[16]=i.y,s[17]=t.z,s[18]=t.x,s[19]=t.y,s[20]=t.z,s[21]=i.x,s[22]=t.y,s[23]=t.z,r.needsUpdate=!0,this.geometry.computeBoundingSphere()}setFromObject(e){return this.object=e,this.update(),this}copy(e,t){return super.copy(e,t),this.object=e.object,this}dispose(){this.geometry.dispose(),this.material.dispose()}}class VP extends ur{constructor(e,t=16776960){const i=new Uint16Array([0,1,1,2,2,3,3,0,4,5,5,6,6,7,7,4,0,4,1,5,2,6,3,7]),r=[1,1,1,-1,1,1,-1,-1,1,1,-1,1,1,1,-1,-1,1,-1,-1,-1,-1,1,-1,-1],s=new mt;s.setIndex(new Ct(i,1)),s.setAttribute("position",new Xe(r,3)),super(s,new jn({color:t,toneMapped:!1})),this.box=e,this.type="Box3Helper",this.geometry.computeBoundingSphere()}updateMatrixWorld(e){const t=this.box;t.isEmpty()||(t.getCenter(this.position),t.getSize(this.scale),this.scale.multiplyScalar(.5),super.updateMatrixWorld(e))}dispose(){this.geometry.dispose(),this.material.dispose()}}class GP extends ns{constructor(e,t=1,i=16776960){const r=i,s=[1,-1,0,-1,1,0,-1,-1,0,1,1,0,-1,1,0,-1,-1,0,1,-1,0,1,1,0],a=new mt;a.setAttribute("position",new Xe(s,3)),a.computeBoundingSphere(),super(a,new jn({color:r,toneMapped:!1})),this.type="PlaneHelper",this.plane=e,this.size=t;const c=[1,1,0,-1,1,0,-1,-1,0,1,1,0,-1,-1,0,1,-1,0],u=new mt;u.setAttribute("position",new Xe(c,3)),u.computeBoundingSphere(),this.add(new Tn(u,new rs({color:r,opacity:.2,transparent:!0,depthWrite:!1,toneMapped:!1})))}updateMatrixWorld(e){this.position.set(0,0,0),this.scale.set(.5*this.size,.5*this.size,1),this.lookAt(this.plane.normal),this.translateZ(-this.plane.constant),super.updateMatrixWorld(e)}dispose(){this.geometry.dispose(),this.material.dispose(),this.children[0].geometry.dispose(),this.children[0].material.dispose()}}const R0=new I;let wu,xd;class WP extends Ut{constructor(e=new I(0,0,1),t=new I(0,0,0),i=1,r=16776960,s=i*.2,a=s*.2){super(),this.type="ArrowHelper",wu===void 0&&(wu=new mt,wu.setAttribute("position",new Xe([0,0,0,0,1,0],3)),xd=new oo(0,.5,1,5,1),xd.translate(0,-.5,0)),this.position.copy(t),this.line=new ns(wu,new jn({color:r,toneMapped:!1})),this.line.matrixAutoUpdate=!1,this.add(this.line),this.cone=new Tn(xd,new rs({color:r,toneMapped:!1})),this.cone.matrixAutoUpdate=!1,this.add(this.cone),this.setDirection(e),this.setLength(i,s,a)}setDirection(e){if(e.y>.99999)this.quaternion.set(0,0,0,1);else if(e.y<-.99999)this.quaternion.set(1,0,0,0);else{R0.set(e.z,0,-e.x).normalize();const t=Math.acos(e.y);this.quaternion.setFromAxisAngle(R0,t)}}setLength(e,t=e*.2,i=t*.2){this.line.scale.set(1,Math.max(1e-4,e-t),1),this.line.updateMatrix(),this.cone.scale.set(i,t,i),this.cone.position.y=e,this.cone.updateMatrix()}setColor(e){this.line.material.color.set(e),this.cone.material.color.set(e)}copy(e){return super.copy(e,!1),this.line.copy(e.line),this.cone.copy(e.cone),this}dispose(){this.line.geometry.dispose(),this.line.material.dispose(),this.cone.geometry.dispose(),this.cone.material.dispose()}}class XP extends ur{constructor(e=1){const t=[0,0,0,e,0,0,0,0,0,0,e,0,0,0,0,0,0,e],i=[1,0,0,1,.6,0,0,1,0,.6,1,0,0,0,1,0,.6,1],r=new mt;r.setAttribute("position",new Xe(t,3)),r.setAttribute("color",new Xe(i,3));const s=new jn({vertexColors:!0,toneMapped:!1});super(r,s),this.type="AxesHelper"}setColors(e,t,i){const r=new be,s=this.geometry.attributes.color.array;return r.set(e),r.toArray(s,0),r.toArray(s,3),r.set(t),r.toArray(s,6),r.toArray(s,9),r.set(i),r.toArray(s,12),r.toArray(s,15),this.geometry.attributes.color.needsUpdate=!0,this}dispose(){this.geometry.dispose(),this.material.dispose()}}class YP{constructor(){this.type="ShapePath",this.color=new be,this.subPaths=[],this.currentPath=null}moveTo(e,t){return this.currentPath=new Sl,this.subPaths.push(this.currentPath),this.currentPath.moveTo(e,t),this}lineTo(e,t){return this.currentPath.lineTo(e,t),this}quadraticCurveTo(e,t,i,r){return this.currentPath.quadraticCurveTo(e,t,i,r),this}bezierCurveTo(e,t,i,r,s,a){return this.currentPath.bezierCurveTo(e,t,i,r,s,a),this}splineThru(e){return this.currentPath.splineThru(e),this}toShapes(e){function t(x){const w=[];for(let M=0,b=x.length;M<b;M++){const P=x[M],C=new Ws;C.curves=P.curves,w.push(C)}return w}function i(x,w){const M=w.length;let b=!1;for(let P=M-1,C=0;C<M;P=C++){let L=w[P],U=w[C],A=U.x-L.x,R=U.y-L.y;if(Math.abs(R)>Number.EPSILON){if(R<0&&(L=w[C],A=-A,U=w[P],R=-R),x.y<L.y||x.y>U.y)continue;if(x.y===L.y){if(x.x===L.x)return!0}else{const z=R*(x.x-L.x)-A*(x.y-L.y);if(z===0)return!0;if(z<0)continue;b=!b}}else{if(x.y!==L.y)continue;if(U.x<=x.x&&x.x<=L.x||L.x<=x.x&&x.x<=U.x)return!0}}return b}const r=ar.isClockWise,s=this.subPaths;if(s.length===0)return[];let a,c,u;const h=[];if(s.length===1)return c=s[0],u=new Ws,u.curves=c.curves,h.push(u),h;let f=!r(s[0].getPoints());f=e?!f:f;const p=[],m=[];let g=[],y=0,T;m[y]=void 0,g[y]=[];for(let x=0,w=s.length;x<w;x++)c=s[x],T=c.getPoints(),a=r(T),a=e?!a:a,a?(!f&&m[y]&&y++,m[y]={s:new Ws,p:T},m[y].s.curves=c.curves,f&&y++,g[y]=[]):g[y].push({h:c,p:T[0]});if(!m[0])return t(s);if(m.length>1){let x=!1,w=0;for(let M=0,b=m.length;M<b;M++)p[M]=[];for(let M=0,b=m.length;M<b;M++){const P=g[M];for(let C=0;C<P.length;C++){const L=P[C];let U=!0;for(let A=0;A<m.length;A++)i(L.p,m[A].p)&&(M!==A&&w++,U?(U=!1,p[A].push(L)):x=!0);U&&p[M].push(L)}}w>0&&x===!1&&(g=p)}let S;for(let x=0,w=m.length;x<w;x++){u=m[x].s,h.push(u),S=g[x];for(let M=0,b=S.length;M<b;M++)u.holes.push(S[M].h)}return h}}typeof __THREE_DEVTOOLS__<"u"&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("register",{detail:{revision:is}}));typeof window<"u"&&(window.__THREE__?console.warn("WARNING: Multiple instances of Three.js being imported."):window.__THREE__=is);const ZP=Object.freeze(Object.defineProperty({__proto__:null,ACESFilmicToneMapping:Cp,AddEquation:Ds,AddOperation:ry,AdditiveAnimationBlendMode:Bp,AdditiveBlending:Ud,AlphaFormat:hy,AlwaysCompare:Ay,AlwaysDepth:bp,AlwaysStencilFunc:yy,AmbientLight:wS,AmbientLightProbe:aP,AnimationAction:DS,AnimationClip:bl,AnimationLoader:qA,AnimationMixer:wP,AnimationObjectGroup:_P,AnimationUtils:WA,ArcCurve:Ky,ArrayCamera:zy,ArrowHelper:WP,Audio:CS,AudioAnalyser:fP,AudioContext:dm,AudioListener:cP,AudioLoader:rP,AxesHelper:XP,BackSide:_n,BasicDepthPacking:In,BasicShadowMap:Wx,Bone:Kp,BooleanKeyframeTrack:Ks,Box2:RP,Box3:cr,Box3Helper:VP,BoxGeometry:js,BoxHelper:HP,BufferAttribute:Ct,BufferGeometry:mt,BufferGeometryLoader:PS,ByteType:cy,Cache:qs,Camera:so,CameraHelper:kP,CanvasTexture:jy,CapsuleGeometry:mh,CatmullRomCurve3:Qy,CineonToneMapping:oy,CircleGeometry:gh,ClampToEdgeWrapping:Mn,Clock:pm,Color:be,ColorKeyframeTrack:um,ColorManagement:Ci,CompressedArrayTexture:pA,CompressedTexture:Jp,CompressedTextureLoader:jA,ConeGeometry:vh,CubeCamera:Xp,CubeReflectionMapping:Jr,CubeRefractionMapping:$r,CubeTexture:Ll,CubeTextureLoader:KA,CubeUVReflectionMapping:no,CubicBezierCurve:em,CubicBezierCurve3:Jy,CubicInterpolant:mS,CullFaceBack:Id,CullFaceFront:Gx,CullFaceFrontBack:h_,CullFaceNone:Vx,Curve:Zi,CurvePath:eS,CustomBlending:Xx,CustomToneMapping:ly,CylinderGeometry:oo,Cylindrical:CP,Data3DTexture:Vs,DataArrayTexture:ih,DataTexture:sr,DataTextureLoader:QA,DataUtils:T1,DecrementStencilOp:T_,DecrementWrapStencilOp:E_,DefaultLoadingManager:xS,DepthFormat:Qr,DepthStencilFormat:ts,DepthTexture:lh,DirectionalLight:TS,DirectionalLightHelper:zP,DiscreteInterpolant:gS,DisplayP3ColorSpace:zp,DodecahedronGeometry:xh,DoubleSide:ni,DstAlphaFactor:Jx,DstColorFactor:ey,DynamicCopyUsage:k_,DynamicDrawUsage:U_,DynamicReadUsage:O_,EdgesGeometry:tS,EllipseCurve:dh,EqualCompare:_y,EqualDepth:ul,EqualStencilFunc:C_,EquirectangularReflectionMapping:hl,EquirectangularRefractionMapping:fl,Euler:ro,EventDispatcher:xi,ExtrudeGeometry:Sh,FileLoader:Cr,Float16BufferAttribute:C1,Float32BufferAttribute:Xe,Float64BufferAttribute:R1,FloatType:tn,Fog:uh,FogExp2:ch,FramebufferTexture:hp,FrontSide:or,Frustum:sh,GLBufferAttribute:PP,GLSL1:V_,GLSL3:Xu,GreaterCompare:wy,GreaterDepth:Pp,GreaterEqualCompare:by,GreaterEqualDepth:Ap,GreaterEqualStencilFunc:I_,GreaterStencilFunc:D_,GridHelper:OP,Group:Wa,HalfFloatType:ii,HemisphereLight:SS,HemisphereLightHelper:FP,HemisphereLightProbe:sP,IcosahedronGeometry:Mh,ImageBitmapLoader:iP,ImageLoader:Al,ImageUtils:Hp,IncrementStencilOp:__,IncrementWrapStencilOp:w_,InstancedBufferAttribute:$a,InstancedBufferGeometry:AS,InstancedInterleavedBuffer:AP,InstancedMesh:Xy,Int16BufferAttribute:A1,Int32BufferAttribute:P1,Int8BufferAttribute:w1,IntType:Dp,InterleavedBuffer:hh,InterleavedBufferAttribute:Ys,Interpolant:Ol,InterpolateDiscrete:pl,InterpolateLinear:ml,InterpolateSmooth:Bu,InvertStencilOp:b_,KeepStencilOp:zu,KeyframeTrack:qi,LOD:Gy,LatheGeometry:Ul,Layers:Gs,LessCompare:My,LessDepth:Gu,LessEqualCompare:Ty,LessEqualDepth:cl,LessEqualStencilFunc:R_,LessStencilFunc:P_,Light:as,LightProbe:Ph,Line:ns,Line3:DP,LineBasicMaterial:jn,LineCurve:ph,LineCurve3:$y,LineDashedMaterial:dS,LineLoop:Yy,LineSegments:ur,LinearEncoding:Dl,LinearFilter:Qe,LinearInterpolant:cm,LinearMipMapLinearFilter:g_,LinearMipMapNearestFilter:m_,LinearMipmapLinearFilter:es,LinearMipmapNearestFilter:Rp,LinearSRGBColorSpace:Yi,LinearToneMapping:sy,Loader:ri,LoaderUtils:mp,LoadingManager:hm,LoopOnce:my,LoopPingPong:vy,LoopRepeat:gy,LuminanceAlphaFormat:fy,LuminanceFormat:eh,MOUSE:As,Material:Pn,MaterialLoader:Ch,MathUtils:n1,Matrix3:gt,Matrix4:ze,MaxEquation:Bd,Mesh:Tn,MeshBasicMaterial:rs,MeshDepthMaterial:oh,MeshDistanceMaterial:Zp,MeshLambertMaterial:hS,MeshMatcapMaterial:fS,MeshNormalMaterial:am,MeshPhongMaterial:cS,MeshPhysicalMaterial:lS,MeshStandardMaterial:sm,MeshToonMaterial:uS,MinEquation:Od,MirroredRepeatWrapping:dl,MixOperation:iy,MultiplyBlending:Fd,MultiplyOperation:Rl,NearestFilter:ct,NearestMipMapLinearFilter:p_,NearestMipMapNearestFilter:d_,NearestMipmapLinearFilter:tl,NearestMipmapNearestFilter:Wu,NeverCompare:Sy,NeverDepth:Ep,NeverStencilFunc:A_,NoBlending:Jt,NoColorSpace:Ar,NoToneMapping:Wi,NormalAnimationBlendMode:nh,NormalBlending:ks,NotEqualCompare:Ey,NotEqualDepth:Qu,NotEqualStencilFunc:L_,NumberKeyframeTrack:wl,Object3D:Ut,ObjectLoader:tP,ObjectSpaceNormalMap:xy,OctahedronGeometry:Nl,OneFactor:jx,OneMinusDstAlphaFactor:$x,OneMinusDstColorFactor:ty,OneMinusSrcAlphaFactor:wp,OneMinusSrcColorFactor:Qx,OrthographicCamera:Pr,PCFShadowMap:Ku,PCFSoftShadowMap:el,PMREMGenerator:qu,Path:Sl,PerspectiveCamera:Yt,Plane:jr,PlaneGeometry:Il,PlaneHelper:GP,PointLight:_S,PointLightHelper:UP,Points:Zy,PointsMaterial:Qp,PolarGridHelper:BP,PolyhedronGeometry:ss,PositionalAudio:hP,PropertyBinding:Pt,PropertyMixer:RS,QuadraticBezierCurve:tm,QuadraticBezierCurve3:nm,Quaternion:hn,QuaternionKeyframeTrack:lo,QuaternionLinearInterpolant:vS,RED_GREEN_RGTC2_Format:ap,RED_RGTC1_Format:py,REVISION:is,RGBADepthPacking:lr,RGBAFormat:Qt,RGBAIntegerFormat:Op,RGBA_ASTC_10x10_Format:np,RGBA_ASTC_10x5_Format:$d,RGBA_ASTC_10x6_Format:ep,RGBA_ASTC_10x8_Format:tp,RGBA_ASTC_12x10_Format:ip,RGBA_ASTC_12x12_Format:rp,RGBA_ASTC_4x4_Format:Xd,RGBA_ASTC_5x4_Format:Yd,RGBA_ASTC_5x5_Format:Zd,RGBA_ASTC_6x5_Format:qd,RGBA_ASTC_6x6_Format:jd,RGBA_ASTC_8x5_Format:Kd,RGBA_ASTC_8x6_Format:Qd,RGBA_ASTC_8x8_Format:Jd,RGBA_BPTC_Format:Ou,RGBA_ETC2_EAC_Format:Wd,RGBA_PVRTC_2BPPV1_Format:Vd,RGBA_PVRTC_4BPPV1_Format:Hd,RGBA_S3TC_DXT1_Format:Uu,RGBA_S3TC_DXT3_Format:Nu,RGBA_S3TC_DXT5_Format:Fu,RGB_ETC1_Format:dy,RGB_ETC2_Format:Gd,RGB_PVRTC_2BPPV1_Format:kd,RGB_PVRTC_4BPPV1_Format:zd,RGB_S3TC_DXT1_Format:Iu,RGFormat:Np,RGIntegerFormat:Fp,RawShaderMaterial:oS,Ray:io,Raycaster:vm,RectAreaLight:ES,RedFormat:th,RedIntegerFormat:Up,ReinhardToneMapping:ay,RepeatWrapping:vi,ReplaceStencilOp:M_,ReverseSubtractEquation:Zx,RingGeometry:_h,SIGNED_RED_GREEN_RGTC2_Format:op,SIGNED_RED_RGTC1_Format:sp,SRGBColorSpace:pt,Scene:Xs,ShaderChunk:Je,ShaderLib:Vi,ShaderMaterial:_t,ShadowMaterial:aS,Shape:Ws,ShapeGeometry:Th,ShapePath:YP,ShapeUtils:ar,ShortType:uy,Skeleton:fh,SkeletonHelper:IP,SkinnedMesh:Wy,Source:Fs,Sphere:Li,SphereGeometry:Fl,Spherical:ju,SphericalHarmonics3:bS,SplineCurve:im,SpotLight:MS,SpotLightHelper:LP,Sprite:Vy,SpriteMaterial:jp,SrcAlphaFactor:Tp,SrcAlphaSaturateFactor:ny,SrcColorFactor:Kx,StaticCopyUsage:z_,StaticDrawUsage:vl,StaticReadUsage:F_,StereoCamera:oP,StreamCopyUsage:H_,StreamDrawUsage:N_,StreamReadUsage:B_,StringKeyframeTrack:Qs,SubtractEquation:Yx,SubtractiveBlending:Nd,TOUCH:Ps,TangentSpaceNormalMap:Dr,TetrahedronGeometry:wh,Texture:Zt,TextureLoader:yS,TorusGeometry:Eh,TorusKnotGeometry:bh,Triangle:ti,TriangleFanDrawMode:y_,TriangleStripDrawMode:x_,TrianglesDrawMode:v_,TubeGeometry:Ah,TwoPassDoubleSide:f_,UVMapping:Ju,Uint16BufferAttribute:Gp,Uint32BufferAttribute:Wp,Uint8BufferAttribute:E1,Uint8ClampedBufferAttribute:b1,Uniform:Q,UniformsGroup:bP,UniformsLib:Ie,UniformsUtils:Ly,UnsignedByteType:Vt,UnsignedInt248Type:br,UnsignedIntType:ir,UnsignedShort4444Type:Lp,UnsignedShort5551Type:Ip,UnsignedShortType:$u,VSMShadowMap:Hi,Vector2:K,Vector3:I,Vector4:Et,VectorKeyframeTrack:El,VideoTexture:qy,WebGL1Renderer:ky,WebGL3DRenderTarget:d1,WebGLArrayRenderTarget:f1,WebGLCoordinateSystem:rr,WebGLCubeRenderTarget:rh,WebGLMultipleRenderTargets:Vp,WebGLRenderTarget:wt,WebGLRenderer:qp,WebGLUtils:By,WebGPUCoordinateSystem:xl,WireframeGeometry:sS,WrapAroundEnding:gl,ZeroCurvatureEnding:Us,ZeroFactor:qx,ZeroSlopeEnding:Ns,ZeroStencilOp:S_,_SRGBAFormat:Yu,sRGBEncoding:Di},Symbol.toStringTag,{value:"Module"}));var IS={exports:{}},Js={};/**
 * @license React
 * react-reconciler-constants.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */Js.ConcurrentRoot=1;Js.ContinuousEventPriority=4;Js.DefaultEventPriority=16;Js.DiscreteEventPriority=1;Js.IdleEventPriority=536870912;Js.LegacyRoot=0;IS.exports=Js;var Ya=IS.exports;function qP(n){let e;const t=new Set,i=(h,f)=>{const p=typeof h=="function"?h(e):h;if(p!==e){const m=e;e=f?p:Object.assign({},e,p),t.forEach(g=>g(e,m))}},r=()=>e,s=(h,f=r,p=Object.is)=>{console.warn("[DEPRECATED] Please use `subscribeWithSelector` middleware");let m=f(e);function g(){const y=f(e);if(!p(m,y)){const T=m;h(m=y,T)}}return t.add(g),()=>t.delete(g)},u={setState:i,getState:r,subscribe:(h,f,p)=>f||p?s(h,f,p):(t.add(h),()=>t.delete(h)),destroy:()=>t.clear()};return e=n(i,r,u),u}const jP=typeof window>"u"||!window.navigator||/ServerSideRendering|^Deno\//.test(window.navigator.userAgent),D0=jP?ee.useEffect:ee.useLayoutEffect;function US(n){const e=typeof n=="function"?qP(n):n,t=(i=e.getState,r=Object.is)=>{const[,s]=ee.useReducer(S=>S+1,0),a=e.getState(),c=ee.useRef(a),u=ee.useRef(i),h=ee.useRef(r),f=ee.useRef(!1),p=ee.useRef();p.current===void 0&&(p.current=i(a));let m,g=!1;(c.current!==a||u.current!==i||h.current!==r||f.current)&&(m=i(a),g=!r(p.current,m)),D0(()=>{g&&(p.current=m),c.current=a,u.current=i,h.current=r,f.current=!1});const y=ee.useRef(a);D0(()=>{const S=()=>{try{const w=e.getState(),M=u.current(w);h.current(p.current,M)||(c.current=w,p.current=M,s())}catch{f.current=!0,s()}},x=e.subscribe(S);return e.getState()!==y.current&&S(),x},[]);const T=g?m:p.current;return ee.useDebugValue(T),T};return Object.assign(t,e),t[Symbol.iterator]=function(){console.warn("[useStore, api] = create() is deprecated and will be removed in v4");const i=[t,e];return{next(){const r=i.length<=0;return{value:i.shift(),done:r}}}},t}var NS={exports:{}},yd={exports:{}},Sd={};/**
 * @license React
 * scheduler.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */var L0;function KP(){return L0||(L0=1,function(n){function e(B,X){var Y=B.length;B.push(X);e:for(;0<Y;){var H=Y-1>>>1,q=B[H];if(0<r(q,X))B[H]=X,B[Y]=q,Y=H;else break e}}function t(B){return B.length===0?null:B[0]}function i(B){if(B.length===0)return null;var X=B[0],Y=B.pop();if(Y!==X){B[0]=Y;e:for(var H=0,q=B.length,ye=q>>>1;H<ye;){var ge=2*(H+1)-1,Pe=B[ge],Ue=ge+1,He=B[Ue];if(0>r(Pe,Y))Ue<q&&0>r(He,Pe)?(B[H]=He,B[Ue]=Y,H=Ue):(B[H]=Pe,B[ge]=Y,H=ge);else if(Ue<q&&0>r(He,Y))B[H]=He,B[Ue]=Y,H=Ue;else break e}}return X}function r(B,X){var Y=B.sortIndex-X.sortIndex;return Y!==0?Y:B.id-X.id}if(typeof performance=="object"&&typeof performance.now=="function"){var s=performance;n.unstable_now=function(){return s.now()}}else{var a=Date,c=a.now();n.unstable_now=function(){return a.now()-c}}var u=[],h=[],f=1,p=null,m=3,g=!1,y=!1,T=!1,S=typeof setTimeout=="function"?setTimeout:null,x=typeof clearTimeout=="function"?clearTimeout:null,w=typeof setImmediate<"u"?setImmediate:null;typeof navigator<"u"&&navigator.scheduling!==void 0&&navigator.scheduling.isInputPending!==void 0&&navigator.scheduling.isInputPending.bind(navigator.scheduling);function M(B){for(var X=t(h);X!==null;){if(X.callback===null)i(h);else if(X.startTime<=B)i(h),X.sortIndex=X.expirationTime,e(u,X);else break;X=t(h)}}function b(B){if(T=!1,M(B),!y)if(t(u)!==null)y=!0,ue(P);else{var X=t(h);X!==null&&ae(b,X.startTime-B)}}function P(B,X){y=!1,T&&(T=!1,x(U),U=-1),g=!0;var Y=m;try{for(M(X),p=t(u);p!==null&&(!(p.expirationTime>X)||B&&!z());){var H=p.callback;if(typeof H=="function"){p.callback=null,m=p.priorityLevel;var q=H(p.expirationTime<=X);X=n.unstable_now(),typeof q=="function"?p.callback=q:p===t(u)&&i(u),M(X)}else i(u);p=t(u)}if(p!==null)var ye=!0;else{var ge=t(h);ge!==null&&ae(b,ge.startTime-X),ye=!1}return ye}finally{p=null,m=Y,g=!1}}var C=!1,L=null,U=-1,A=5,R=-1;function z(){return!(n.unstable_now()-R<A)}function te(){if(L!==null){var B=n.unstable_now();R=B;var X=!0;try{X=L(!0,B)}finally{X?W():(C=!1,L=null)}}else C=!1}var W;if(typeof w=="function")W=function(){w(te)};else if(typeof MessageChannel<"u"){var J=new MessageChannel,ne=J.port2;J.port1.onmessage=te,W=function(){ne.postMessage(null)}}else W=function(){S(te,0)};function ue(B){L=B,C||(C=!0,W())}function ae(B,X){U=S(function(){B(n.unstable_now())},X)}n.unstable_IdlePriority=5,n.unstable_ImmediatePriority=1,n.unstable_LowPriority=4,n.unstable_NormalPriority=3,n.unstable_Profiling=null,n.unstable_UserBlockingPriority=2,n.unstable_cancelCallback=function(B){B.callback=null},n.unstable_continueExecution=function(){y||g||(y=!0,ue(P))},n.unstable_forceFrameRate=function(B){0>B||125<B?console.error("forceFrameRate takes a positive int between 0 and 125, forcing frame rates higher than 125 fps is not supported"):A=0<B?Math.floor(1e3/B):5},n.unstable_getCurrentPriorityLevel=function(){return m},n.unstable_getFirstCallbackNode=function(){return t(u)},n.unstable_next=function(B){switch(m){case 1:case 2:case 3:var X=3;break;default:X=m}var Y=m;m=X;try{return B()}finally{m=Y}},n.unstable_pauseExecution=function(){},n.unstable_requestPaint=function(){},n.unstable_runWithPriority=function(B,X){switch(B){case 1:case 2:case 3:case 4:case 5:break;default:B=3}var Y=m;m=B;try{return X()}finally{m=Y}},n.unstable_scheduleCallback=function(B,X,Y){var H=n.unstable_now();switch(typeof Y=="object"&&Y!==null?(Y=Y.delay,Y=typeof Y=="number"&&0<Y?H+Y:H):Y=H,B){case 1:var q=-1;break;case 2:q=250;break;case 5:q=1073741823;break;case 4:q=1e4;break;default:q=5e3}return q=Y+q,B={id:f++,callback:X,priorityLevel:B,startTime:Y,expirationTime:q,sortIndex:-1},Y>H?(B.sortIndex=Y,e(h,B),t(u)===null&&B===t(h)&&(T?(x(U),U=-1):T=!0,ae(b,Y-H))):(B.sortIndex=q,e(u,B),y||g||(y=!0,ue(P))),B},n.unstable_shouldYield=z,n.unstable_wrapCallback=function(B){var X=m;return function(){var Y=m;m=X;try{return B.apply(this,arguments)}finally{m=Y}}}}(Sd)),Sd}var I0;function QP(){return I0||(I0=1,yd.exports=KP()),yd.exports}/**
 * @license React
 * react-reconciler.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */var JP=function(e){var t={},i=ee,r=QP(),s=Object.assign;function a(o){for(var l="https://reactjs.org/docs/error-decoder.html?invariant="+o,d=1;d<arguments.length;d++)l+="&args[]="+encodeURIComponent(arguments[d]);return"Minified React error #"+o+"; visit "+l+" for the full message or use the non-minified dev environment for full errors and additional helpful warnings."}var c=i.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED,u=Symbol.for("react.element"),h=Symbol.for("react.portal"),f=Symbol.for("react.fragment"),p=Symbol.for("react.strict_mode"),m=Symbol.for("react.profiler"),g=Symbol.for("react.provider"),y=Symbol.for("react.context"),T=Symbol.for("react.forward_ref"),S=Symbol.for("react.suspense"),x=Symbol.for("react.suspense_list"),w=Symbol.for("react.memo"),M=Symbol.for("react.lazy"),b=Symbol.for("react.offscreen"),P=Symbol.iterator;function C(o){return o===null||typeof o!="object"?null:(o=P&&o[P]||o["@@iterator"],typeof o=="function"?o:null)}function L(o){if(o==null)return null;if(typeof o=="function")return o.displayName||o.name||null;if(typeof o=="string")return o;switch(o){case f:return"Fragment";case h:return"Portal";case m:return"Profiler";case p:return"StrictMode";case S:return"Suspense";case x:return"SuspenseList"}if(typeof o=="object")switch(o.$$typeof){case y:return(o.displayName||"Context")+".Consumer";case g:return(o._context.displayName||"Context")+".Provider";case T:var l=o.render;return o=o.displayName,o||(o=l.displayName||l.name||"",o=o!==""?"ForwardRef("+o+")":"ForwardRef"),o;case w:return l=o.displayName||null,l!==null?l:L(o.type)||"Memo";case M:l=o._payload,o=o._init;try{return L(o(l))}catch{}}return null}function U(o){var l=o.type;switch(o.tag){case 24:return"Cache";case 9:return(l.displayName||"Context")+".Consumer";case 10:return(l._context.displayName||"Context")+".Provider";case 18:return"DehydratedFragment";case 11:return o=l.render,o=o.displayName||o.name||"",l.displayName||(o!==""?"ForwardRef("+o+")":"ForwardRef");case 7:return"Fragment";case 5:return l;case 4:return"Portal";case 3:return"Root";case 6:return"Text";case 16:return L(l);case 8:return l===p?"StrictMode":"Mode";case 22:return"Offscreen";case 12:return"Profiler";case 21:return"Scope";case 13:return"Suspense";case 19:return"SuspenseList";case 25:return"TracingMarker";case 1:case 0:case 17:case 2:case 14:case 15:if(typeof l=="function")return l.displayName||l.name||null;if(typeof l=="string")return l}return null}function A(o){var l=o,d=o;if(o.alternate)for(;l.return;)l=l.return;else{o=l;do l=o,l.flags&4098&&(d=l.return),o=l.return;while(o)}return l.tag===3?d:null}function R(o){if(A(o)!==o)throw Error(a(188))}function z(o){var l=o.alternate;if(!l){if(l=A(o),l===null)throw Error(a(188));return l!==o?null:o}for(var d=o,v=l;;){var _=d.return;if(_===null)break;var E=_.alternate;if(E===null){if(v=_.return,v!==null){d=v;continue}break}if(_.child===E.child){for(E=_.child;E;){if(E===d)return R(_),o;if(E===v)return R(_),l;E=E.sibling}throw Error(a(188))}if(d.return!==v.return)d=_,v=E;else{for(var F=!1,Z=_.child;Z;){if(Z===d){F=!0,d=_,v=E;break}if(Z===v){F=!0,v=_,d=E;break}Z=Z.sibling}if(!F){for(Z=E.child;Z;){if(Z===d){F=!0,d=E,v=_;break}if(Z===v){F=!0,v=E,d=_;break}Z=Z.sibling}if(!F)throw Error(a(189))}}if(d.alternate!==v)throw Error(a(190))}if(d.tag!==3)throw Error(a(188));return d.stateNode.current===d?o:l}function te(o){return o=z(o),o!==null?W(o):null}function W(o){if(o.tag===5||o.tag===6)return o;for(o=o.child;o!==null;){var l=W(o);if(l!==null)return l;o=o.sibling}return null}function J(o){if(o.tag===5||o.tag===6)return o;for(o=o.child;o!==null;){if(o.tag!==4){var l=J(o);if(l!==null)return l}o=o.sibling}return null}var ne=Array.isArray,ue=e.getPublicInstance,ae=e.getRootHostContext,B=e.getChildHostContext,X=e.prepareForCommit,Y=e.resetAfterCommit,H=e.createInstance,q=e.appendInitialChild,ye=e.finalizeInitialChildren,ge=e.prepareUpdate,Pe=e.shouldSetTextContent,Ue=e.createTextInstance,He=e.scheduleTimeout,je=e.cancelTimeout,Tt=e.noTimeout,Nt=e.isPrimaryRenderer,Ye=e.supportsMutation,k=e.supportsPersistence,xe=e.supportsHydration,me=e.getInstanceFromNode,we=e.preparePortalMount,ve=e.getCurrentEventPriority,Ze=e.detachDeletedInstance,Be=e.supportsMicrotasks,ke=e.scheduleMicrotask,$e=e.supportsTestSelectors,yt=e.findFiberRoot,Gt=e.getBoundingRect,O=e.getTextContent,D=e.isHiddenSubtree,ce=e.matchAccessibilityRole,Te=e.setFocusIfFocusable,Me=e.setupIntersectionObserver,Le=e.appendChild,We=e.appendChildToContainer,Re=e.commitTextUpdate,fe=e.commitMount,V=e.commitUpdate,he=e.insertBefore,Se=e.insertInContainerBefore,_e=e.removeChild,De=e.removeChildFromContainer,nt=e.resetTextContent,At=e.hideInstance,G=e.hideTextInstance,Ae=e.unhideInstance,se=e.unhideTextInstance,Ce=e.clearContainer,Fe=e.cloneInstance,bt=e.createContainerChildSet,Wt=e.appendChildToContainerChildSet,fn=e.finalizeContainerChildren,si=e.replaceContainerChildren,qt=e.cloneHiddenInstance,ai=e.cloneHiddenTextInstance,Un=e.canHydrateInstance,Hl=e.canHydrateTextInstance,Vl=e.canHydrateSuspenseInstance,Gl=e.isSuspenseInstancePending,Lr=e.isSuspenseInstanceFallback,Wl=e.registerSuspenseInstanceRetry,ji=e.getNextHydratableSibling,Xl=e.getFirstHydratableChild,Lh=e.getFirstHydratableChildWithinContainer,Ih=e.getFirstHydratableChildWithinSuspenseInstance,Uh=e.hydrateInstance,N=e.hydrateTextInstance,re=e.hydrateSuspenseInstance,de=e.getNextHydratableInstanceAfterSuspenseInstance,$=e.commitHydratedContainer,pe=e.commitHydratedSuspenseInstance,Ve=e.clearSuspenseBoundary,et=e.clearSuspenseBoundaryFromContainer,it=e.shouldDeleteUnhydratedTailInstances,rt=e.didNotMatchHydratedContainerTextInstance,St=e.didNotMatchHydratedTextInstance,st;function at(o){if(st===void 0)try{throw Error()}catch(d){var l=d.stack.trim().match(/\n( *(at )?)/);st=l&&l[1]||""}return`
`+st+o}var Xt=!1;function jt(o,l){if(!o||Xt)return"";Xt=!0;var d=Error.prepareStackTrace;Error.prepareStackTrace=void 0;try{if(l)if(l=function(){throw Error()},Object.defineProperty(l.prototype,"props",{set:function(){throw Error()}}),typeof Reflect=="object"&&Reflect.construct){try{Reflect.construct(l,[])}catch(Ee){var v=Ee}Reflect.construct(o,[],l)}else{try{l.call()}catch(Ee){v=Ee}o.call(l.prototype)}else{try{throw Error()}catch(Ee){v=Ee}o()}}catch(Ee){if(Ee&&v&&typeof Ee.stack=="string"){for(var _=Ee.stack.split(`
`),E=v.stack.split(`
`),F=_.length-1,Z=E.length-1;1<=F&&0<=Z&&_[F]!==E[Z];)Z--;for(;1<=F&&0<=Z;F--,Z--)if(_[F]!==E[Z]){if(F!==1||Z!==1)do if(F--,Z--,0>Z||_[F]!==E[Z]){var le=`
`+_[F].replace(" at new "," at ");return o.displayName&&le.includes("<anonymous>")&&(le=le.replace("<anonymous>",o.displayName)),le}while(1<=F&&0<=Z);break}}}finally{Xt=!1,Error.prepareStackTrace=d}return(o=o?o.displayName||o.name:"")?at(o):""}var oi=Object.prototype.hasOwnProperty,li=[],kt=-1;function ut(o){return{current:o}}function zt(o){0>kt||(o.current=li[kt],li[kt]=null,kt--)}function lt(o,l){kt++,li[kt]=o.current,o.current=l}var Fn={},yn=ut(Fn),dn=ut(!1),Ii=Fn;function rn(o,l){var d=o.type.contextTypes;if(!d)return Fn;var v=o.stateNode;if(v&&v.__reactInternalMemoizedUnmaskedChildContext===l)return v.__reactInternalMemoizedMaskedChildContext;var _={},E;for(E in d)_[E]=l[E];return v&&(o=o.stateNode,o.__reactInternalMemoizedUnmaskedChildContext=l,o.__reactInternalMemoizedMaskedChildContext=_),_}function sn(o){return o=o.childContextTypes,o!=null}function Ir(){zt(dn),zt(yn)}function On(o,l,d){if(yn.current!==Fn)throw Error(a(168));lt(yn,l),lt(dn,d)}function ea(o,l,d){var v=o.stateNode;if(l=l.childContextTypes,typeof v.getChildContext!="function")return d;v=v.getChildContext();for(var _ in v)if(!(_ in l))throw Error(a(108,U(o)||"Unknown",_));return s({},d,v)}function ta(o){return o=(o=o.stateNode)&&o.__reactInternalMemoizedMergedChildContext||Fn,Ii=yn.current,lt(yn,o),lt(dn,dn.current),!0}function fo(o,l,d){var v=o.stateNode;if(!v)throw Error(a(169));d?(o=ea(o,l,Ii),v.__reactInternalMemoizedMergedChildContext=o,zt(dn),zt(yn),lt(yn,o)):zt(dn),lt(dn,d)}var Ui=Math.clz32?Math.clz32:_M,SM=Math.log,MM=Math.LN2;function _M(o){return o>>>=0,o===0?32:31-(SM(o)/MM|0)|0}var Yl=64,Zl=4194304;function po(o){switch(o&-o){case 1:return 1;case 2:return 2;case 4:return 4;case 8:return 8;case 16:return 16;case 32:return 32;case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:return o&4194240;case 4194304:case 8388608:case 16777216:case 33554432:case 67108864:return o&130023424;case 134217728:return 134217728;case 268435456:return 268435456;case 536870912:return 536870912;case 1073741824:return 1073741824;default:return o}}function ql(o,l){var d=o.pendingLanes;if(d===0)return 0;var v=0,_=o.suspendedLanes,E=o.pingedLanes,F=d&268435455;if(F!==0){var Z=F&~_;Z!==0?v=po(Z):(E&=F,E!==0&&(v=po(E)))}else F=d&~_,F!==0?v=po(F):E!==0&&(v=po(E));if(v===0)return 0;if(l!==0&&l!==v&&!(l&_)&&(_=v&-v,E=l&-l,_>=E||_===16&&(E&4194240)!==0))return l;if(v&4&&(v|=d&16),l=o.entangledLanes,l!==0)for(o=o.entanglements,l&=v;0<l;)d=31-Ui(l),_=1<<d,v|=o[d],l&=~_;return v}function TM(o,l){switch(o){case 1:case 2:case 4:return l+250;case 8:case 16:case 32:case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:return l+5e3;case 4194304:case 8388608:case 16777216:case 33554432:case 67108864:return-1;case 134217728:case 268435456:case 536870912:case 1073741824:return-1;default:return-1}}function wM(o,l){for(var d=o.suspendedLanes,v=o.pingedLanes,_=o.expirationTimes,E=o.pendingLanes;0<E;){var F=31-Ui(E),Z=1<<F,le=_[F];le===-1?(!(Z&d)||Z&v)&&(_[F]=TM(Z,l)):le<=l&&(o.expiredLanes|=Z),E&=~Z}}function Nh(o){return o=o.pendingLanes&-1073741825,o!==0?o:o&1073741824?1073741824:0}function Fh(o){for(var l=[],d=0;31>d;d++)l.push(o);return l}function mo(o,l,d){o.pendingLanes|=l,l!==536870912&&(o.suspendedLanes=0,o.pingedLanes=0),o=o.eventTimes,l=31-Ui(l),o[l]=d}function EM(o,l){var d=o.pendingLanes&~l;o.pendingLanes=l,o.suspendedLanes=0,o.pingedLanes=0,o.expiredLanes&=l,o.mutableReadLanes&=l,o.entangledLanes&=l,l=o.entanglements;var v=o.eventTimes;for(o=o.expirationTimes;0<d;){var _=31-Ui(d),E=1<<_;l[_]=0,v[_]=-1,o[_]=-1,d&=~E}}function Oh(o,l){var d=o.entangledLanes|=l;for(o=o.entanglements;d;){var v=31-Ui(d),_=1<<v;_&l|o[v]&l&&(o[v]|=l),d&=~_}}var Rt=0;function Am(o){return o&=-o,1<o?4<o?o&268435455?16:536870912:4:1}var Bh=r.unstable_scheduleCallback,Pm=r.unstable_cancelCallback,bM=r.unstable_shouldYield,AM=r.unstable_requestPaint,Cn=r.unstable_now,zh=r.unstable_ImmediatePriority,PM=r.unstable_UserBlockingPriority,kh=r.unstable_NormalPriority,CM=r.unstable_IdlePriority,jl=null,Ki=null;function RM(o){if(Ki&&typeof Ki.onCommitFiberRoot=="function")try{Ki.onCommitFiberRoot(jl,o,void 0,(o.current.flags&128)===128)}catch{}}function DM(o,l){return o===l&&(o!==0||1/o===1/l)||o!==o&&l!==l}var Qi=typeof Object.is=="function"?Object.is:DM,hr=null,Kl=!1,Hh=!1;function Cm(o){hr===null?hr=[o]:hr.push(o)}function LM(o){Kl=!0,Cm(o)}function Ji(){if(!Hh&&hr!==null){Hh=!0;var o=0,l=Rt;try{var d=hr;for(Rt=1;o<d.length;o++){var v=d[o];do v=v(!0);while(v!==null)}hr=null,Kl=!1}catch(_){throw hr!==null&&(hr=hr.slice(o+1)),Bh(zh,Ji),_}finally{Rt=l,Hh=!1}}return null}var IM=c.ReactCurrentBatchConfig;function Ql(o,l){if(Qi(o,l))return!0;if(typeof o!="object"||o===null||typeof l!="object"||l===null)return!1;var d=Object.keys(o),v=Object.keys(l);if(d.length!==v.length)return!1;for(v=0;v<d.length;v++){var _=d[v];if(!oi.call(l,_)||!Qi(o[_],l[_]))return!1}return!0}function UM(o){switch(o.tag){case 5:return at(o.type);case 16:return at("Lazy");case 13:return at("Suspense");case 19:return at("SuspenseList");case 0:case 2:case 15:return o=jt(o.type,!1),o;case 11:return o=jt(o.type.render,!1),o;case 1:return o=jt(o.type,!0),o;default:return""}}function Ni(o,l){if(o&&o.defaultProps){l=s({},l),o=o.defaultProps;for(var d in o)l[d]===void 0&&(l[d]=o[d]);return l}return l}var Jl=ut(null),$l=null,na=null,Vh=null;function Gh(){Vh=na=$l=null}function Rm(o,l,d){Nt?(lt(Jl,l._currentValue),l._currentValue=d):(lt(Jl,l._currentValue2),l._currentValue2=d)}function Wh(o){var l=Jl.current;zt(Jl),Nt?o._currentValue=l:o._currentValue2=l}function Xh(o,l,d){for(;o!==null;){var v=o.alternate;if((o.childLanes&l)!==l?(o.childLanes|=l,v!==null&&(v.childLanes|=l)):v!==null&&(v.childLanes&l)!==l&&(v.childLanes|=l),o===d)break;o=o.return}}function ia(o,l){$l=o,Vh=na=null,o=o.dependencies,o!==null&&o.firstContext!==null&&(o.lanes&l&&(hi=!0),o.firstContext=null)}function yi(o){var l=Nt?o._currentValue:o._currentValue2;if(Vh!==o)if(o={context:o,memoizedValue:l,next:null},na===null){if($l===null)throw Error(a(308));na=o,$l.dependencies={lanes:0,firstContext:o}}else na=na.next=o;return l}var $i=null,Ur=!1;function Yh(o){o.updateQueue={baseState:o.memoizedState,firstBaseUpdate:null,lastBaseUpdate:null,shared:{pending:null,interleaved:null,lanes:0},effects:null}}function Dm(o,l){o=o.updateQueue,l.updateQueue===o&&(l.updateQueue={baseState:o.baseState,firstBaseUpdate:o.firstBaseUpdate,lastBaseUpdate:o.lastBaseUpdate,shared:o.shared,effects:o.effects})}function fr(o,l){return{eventTime:o,lane:l,tag:0,payload:null,callback:null,next:null}}function Nr(o,l){var d=o.updateQueue;d!==null&&(d=d.shared,pn!==null&&o.mode&1&&!(Mt&2)?(o=d.interleaved,o===null?(l.next=l,$i===null?$i=[d]:$i.push(d)):(l.next=o.next,o.next=l),d.interleaved=l):(o=d.pending,o===null?l.next=l:(l.next=o.next,o.next=l),d.pending=l))}function ec(o,l,d){if(l=l.updateQueue,l!==null&&(l=l.shared,(d&4194240)!==0)){var v=l.lanes;v&=o.pendingLanes,d|=v,l.lanes=d,Oh(o,d)}}function Lm(o,l){var d=o.updateQueue,v=o.alternate;if(v!==null&&(v=v.updateQueue,d===v)){var _=null,E=null;if(d=d.firstBaseUpdate,d!==null){do{var F={eventTime:d.eventTime,lane:d.lane,tag:d.tag,payload:d.payload,callback:d.callback,next:null};E===null?_=E=F:E=E.next=F,d=d.next}while(d!==null);E===null?_=E=l:E=E.next=l}else _=E=l;d={baseState:v.baseState,firstBaseUpdate:_,lastBaseUpdate:E,shared:v.shared,effects:v.effects},o.updateQueue=d;return}o=d.lastBaseUpdate,o===null?d.firstBaseUpdate=l:o.next=l,d.lastBaseUpdate=l}function tc(o,l,d,v){var _=o.updateQueue;Ur=!1;var E=_.firstBaseUpdate,F=_.lastBaseUpdate,Z=_.shared.pending;if(Z!==null){_.shared.pending=null;var le=Z,Ee=le.next;le.next=null,F===null?E=Ee:F.next=Ee,F=le;var Ge=o.alternate;Ge!==null&&(Ge=Ge.updateQueue,Z=Ge.lastBaseUpdate,Z!==F&&(Z===null?Ge.firstBaseUpdate=Ee:Z.next=Ee,Ge.lastBaseUpdate=le))}if(E!==null){var ht=_.baseState;F=0,Ge=Ee=le=null,Z=E;do{var tt=Z.lane,Ht=Z.eventTime;if((v&tt)===tt){Ge!==null&&(Ge=Ge.next={eventTime:Ht,lane:0,tag:Z.tag,payload:Z.payload,callback:Z.callback,next:null});e:{var Ke=o,Hn=Z;switch(tt=l,Ht=d,Hn.tag){case 1:if(Ke=Hn.payload,typeof Ke=="function"){ht=Ke.call(Ht,ht,tt);break e}ht=Ke;break e;case 3:Ke.flags=Ke.flags&-65537|128;case 0:if(Ke=Hn.payload,tt=typeof Ke=="function"?Ke.call(Ht,ht,tt):Ke,tt==null)break e;ht=s({},ht,tt);break e;case 2:Ur=!0}}Z.callback!==null&&Z.lane!==0&&(o.flags|=64,tt=_.effects,tt===null?_.effects=[Z]:tt.push(Z))}else Ht={eventTime:Ht,lane:tt,tag:Z.tag,payload:Z.payload,callback:Z.callback,next:null},Ge===null?(Ee=Ge=Ht,le=ht):Ge=Ge.next=Ht,F|=tt;if(Z=Z.next,Z===null){if(Z=_.shared.pending,Z===null)break;tt=Z,Z=tt.next,tt.next=null,_.lastBaseUpdate=tt,_.shared.pending=null}}while(1);if(Ge===null&&(le=ht),_.baseState=le,_.firstBaseUpdate=Ee,_.lastBaseUpdate=Ge,l=_.shared.interleaved,l!==null){_=l;do F|=_.lane,_=_.next;while(_!==l)}else E===null&&(_.shared.lanes=0);fa|=F,o.lanes=F,o.memoizedState=ht}}function Im(o,l,d){if(o=l.effects,l.effects=null,o!==null)for(l=0;l<o.length;l++){var v=o[l],_=v.callback;if(_!==null){if(v.callback=null,v=d,typeof _!="function")throw Error(a(191,_));_.call(v)}}}var Um=new i.Component().refs;function Zh(o,l,d,v){l=o.memoizedState,d=d(v,l),d=d==null?l:s({},l,d),o.memoizedState=d,o.lanes===0&&(o.updateQueue.baseState=d)}var nc={isMounted:function(o){return(o=o._reactInternals)?A(o)===o:!1},enqueueSetState:function(o,l,d){o=o._reactInternals;var v=Xn(),_=Br(o),E=fr(v,_);E.payload=l,d!=null&&(E.callback=d),Nr(o,E),l=wi(o,_,v),l!==null&&ec(l,o,_)},enqueueReplaceState:function(o,l,d){o=o._reactInternals;var v=Xn(),_=Br(o),E=fr(v,_);E.tag=1,E.payload=l,d!=null&&(E.callback=d),Nr(o,E),l=wi(o,_,v),l!==null&&ec(l,o,_)},enqueueForceUpdate:function(o,l){o=o._reactInternals;var d=Xn(),v=Br(o),_=fr(d,v);_.tag=2,l!=null&&(_.callback=l),Nr(o,_),l=wi(o,v,d),l!==null&&ec(l,o,v)}};function Nm(o,l,d,v,_,E,F){return o=o.stateNode,typeof o.shouldComponentUpdate=="function"?o.shouldComponentUpdate(v,E,F):l.prototype&&l.prototype.isPureReactComponent?!Ql(d,v)||!Ql(_,E):!0}function Fm(o,l,d){var v=!1,_=Fn,E=l.contextType;return typeof E=="object"&&E!==null?E=yi(E):(_=sn(l)?Ii:yn.current,v=l.contextTypes,E=(v=v!=null)?rn(o,_):Fn),l=new l(d,E),o.memoizedState=l.state!==null&&l.state!==void 0?l.state:null,l.updater=nc,o.stateNode=l,l._reactInternals=o,v&&(o=o.stateNode,o.__reactInternalMemoizedUnmaskedChildContext=_,o.__reactInternalMemoizedMaskedChildContext=E),l}function Om(o,l,d,v){o=l.state,typeof l.componentWillReceiveProps=="function"&&l.componentWillReceiveProps(d,v),typeof l.UNSAFE_componentWillReceiveProps=="function"&&l.UNSAFE_componentWillReceiveProps(d,v),l.state!==o&&nc.enqueueReplaceState(l,l.state,null)}function qh(o,l,d,v){var _=o.stateNode;_.props=d,_.state=o.memoizedState,_.refs=Um,Yh(o);var E=l.contextType;typeof E=="object"&&E!==null?_.context=yi(E):(E=sn(l)?Ii:yn.current,_.context=rn(o,E)),_.state=o.memoizedState,E=l.getDerivedStateFromProps,typeof E=="function"&&(Zh(o,l,E,d),_.state=o.memoizedState),typeof l.getDerivedStateFromProps=="function"||typeof _.getSnapshotBeforeUpdate=="function"||typeof _.UNSAFE_componentWillMount!="function"&&typeof _.componentWillMount!="function"||(l=_.state,typeof _.componentWillMount=="function"&&_.componentWillMount(),typeof _.UNSAFE_componentWillMount=="function"&&_.UNSAFE_componentWillMount(),l!==_.state&&nc.enqueueReplaceState(_,_.state,null),tc(o,d,_,v),_.state=o.memoizedState),typeof _.componentDidMount=="function"&&(o.flags|=4194308)}var ra=[],sa=0,ic=null,rc=0,Si=[],Mi=0,ls=null,dr=1,pr="";function cs(o,l){ra[sa++]=rc,ra[sa++]=ic,ic=o,rc=l}function Bm(o,l,d){Si[Mi++]=dr,Si[Mi++]=pr,Si[Mi++]=ls,ls=o;var v=dr;o=pr;var _=32-Ui(v)-1;v&=~(1<<_),d+=1;var E=32-Ui(l)+_;if(30<E){var F=_-_%5;E=(v&(1<<F)-1).toString(32),v>>=F,_-=F,dr=1<<32-Ui(l)+_|d<<_|v,pr=E+o}else dr=1<<E|d<<_|v,pr=o}function jh(o){o.return!==null&&(cs(o,1),Bm(o,1,0))}function Kh(o){for(;o===ic;)ic=ra[--sa],ra[sa]=null,rc=ra[--sa],ra[sa]=null;for(;o===ls;)ls=Si[--Mi],Si[Mi]=null,pr=Si[--Mi],Si[Mi]=null,dr=Si[--Mi],Si[Mi]=null}var ci=null,ui=null,$t=!1,go=!1,Fi=null;function zm(o,l){var d=Ei(5,null,null,0);d.elementType="DELETED",d.stateNode=l,d.return=o,l=o.deletions,l===null?(o.deletions=[d],o.flags|=16):l.push(d)}function km(o,l){switch(o.tag){case 5:return l=Un(l,o.type,o.pendingProps),l!==null?(o.stateNode=l,ci=o,ui=Xl(l),!0):!1;case 6:return l=Hl(l,o.pendingProps),l!==null?(o.stateNode=l,ci=o,ui=null,!0):!1;case 13:if(l=Vl(l),l!==null){var d=ls!==null?{id:dr,overflow:pr}:null;return o.memoizedState={dehydrated:l,treeContext:d,retryLane:1073741824},d=Ei(18,null,null,0),d.stateNode=l,d.return=o,o.child=d,ci=o,ui=null,!0}return!1;default:return!1}}function Qh(o){return(o.mode&1)!==0&&(o.flags&128)===0}function Jh(o){if($t){var l=ui;if(l){var d=l;if(!km(o,l)){if(Qh(o))throw Error(a(418));l=ji(d);var v=ci;l&&km(o,l)?zm(v,d):(o.flags=o.flags&-4097|2,$t=!1,ci=o)}}else{if(Qh(o))throw Error(a(418));o.flags=o.flags&-4097|2,$t=!1,ci=o}}}function Hm(o){for(o=o.return;o!==null&&o.tag!==5&&o.tag!==3&&o.tag!==13;)o=o.return;ci=o}function vo(o){if(!xe||o!==ci)return!1;if(!$t)return Hm(o),$t=!0,!1;if(o.tag!==3&&(o.tag!==5||it(o.type)&&!Pe(o.type,o.memoizedProps))){var l=ui;if(l){if(Qh(o)){for(o=ui;o;)o=ji(o);throw Error(a(418))}for(;l;)zm(o,l),l=ji(l)}}if(Hm(o),o.tag===13){if(!xe)throw Error(a(316));if(o=o.memoizedState,o=o!==null?o.dehydrated:null,!o)throw Error(a(317));ui=de(o)}else ui=ci?ji(o.stateNode):null;return!0}function aa(){xe&&(ui=ci=null,go=$t=!1)}function $h(o){Fi===null?Fi=[o]:Fi.push(o)}function xo(o,l,d){if(o=d.ref,o!==null&&typeof o!="function"&&typeof o!="object"){if(d._owner){if(d=d._owner,d){if(d.tag!==1)throw Error(a(309));var v=d.stateNode}if(!v)throw Error(a(147,o));var _=v,E=""+o;return l!==null&&l.ref!==null&&typeof l.ref=="function"&&l.ref._stringRef===E?l.ref:(l=function(F){var Z=_.refs;Z===Um&&(Z=_.refs={}),F===null?delete Z[E]:Z[E]=F},l._stringRef=E,l)}if(typeof o!="string")throw Error(a(284));if(!d._owner)throw Error(a(290,o))}return o}function sc(o,l){throw o=Object.prototype.toString.call(l),Error(a(31,o==="[object Object]"?"object with keys {"+Object.keys(l).join(", ")+"}":o))}function Vm(o){var l=o._init;return l(o._payload)}function Gm(o){function l(ie,j){if(o){var oe=ie.deletions;oe===null?(ie.deletions=[j],ie.flags|=16):oe.push(j)}}function d(ie,j){if(!o)return null;for(;j!==null;)l(ie,j),j=j.sibling;return null}function v(ie,j){for(ie=new Map;j!==null;)j.key!==null?ie.set(j.key,j):ie.set(j.index,j),j=j.sibling;return ie}function _(ie,j){return ie=kr(ie,j),ie.index=0,ie.sibling=null,ie}function E(ie,j,oe){return ie.index=oe,o?(oe=ie.alternate,oe!==null?(oe=oe.index,oe<j?(ie.flags|=2,j):oe):(ie.flags|=2,j)):(ie.flags|=1048576,j)}function F(ie){return o&&ie.alternate===null&&(ie.flags|=2),ie}function Z(ie,j,oe,Oe){return j===null||j.tag!==6?(j=Of(oe,ie.mode,Oe),j.return=ie,j):(j=_(j,oe),j.return=ie,j)}function le(ie,j,oe,Oe){var qe=oe.type;return qe===f?Ge(ie,j,oe.props.children,Oe,oe.key):j!==null&&(j.elementType===qe||typeof qe=="object"&&qe!==null&&qe.$$typeof===M&&Vm(qe)===j.type)?(Oe=_(j,oe.props),Oe.ref=xo(ie,j,oe),Oe.return=ie,Oe):(Oe=Fc(oe.type,oe.key,oe.props,null,ie.mode,Oe),Oe.ref=xo(ie,j,oe),Oe.return=ie,Oe)}function Ee(ie,j,oe,Oe){return j===null||j.tag!==4||j.stateNode.containerInfo!==oe.containerInfo||j.stateNode.implementation!==oe.implementation?(j=Bf(oe,ie.mode,Oe),j.return=ie,j):(j=_(j,oe.children||[]),j.return=ie,j)}function Ge(ie,j,oe,Oe,qe){return j===null||j.tag!==7?(j=gs(oe,ie.mode,Oe,qe),j.return=ie,j):(j=_(j,oe),j.return=ie,j)}function ht(ie,j,oe){if(typeof j=="string"&&j!==""||typeof j=="number")return j=Of(""+j,ie.mode,oe),j.return=ie,j;if(typeof j=="object"&&j!==null){switch(j.$$typeof){case u:return oe=Fc(j.type,j.key,j.props,null,ie.mode,oe),oe.ref=xo(ie,null,j),oe.return=ie,oe;case h:return j=Bf(j,ie.mode,oe),j.return=ie,j;case M:var Oe=j._init;return ht(ie,Oe(j._payload),oe)}if(ne(j)||C(j))return j=gs(j,ie.mode,oe,null),j.return=ie,j;sc(ie,j)}return null}function tt(ie,j,oe,Oe){var qe=j!==null?j.key:null;if(typeof oe=="string"&&oe!==""||typeof oe=="number")return qe!==null?null:Z(ie,j,""+oe,Oe);if(typeof oe=="object"&&oe!==null){switch(oe.$$typeof){case u:return oe.key===qe?le(ie,j,oe,Oe):null;case h:return oe.key===qe?Ee(ie,j,oe,Oe):null;case M:return qe=oe._init,tt(ie,j,qe(oe._payload),Oe)}if(ne(oe)||C(oe))return qe!==null?null:Ge(ie,j,oe,Oe,null);sc(ie,oe)}return null}function Ht(ie,j,oe,Oe,qe){if(typeof Oe=="string"&&Oe!==""||typeof Oe=="number")return ie=ie.get(oe)||null,Z(j,ie,""+Oe,qe);if(typeof Oe=="object"&&Oe!==null){switch(Oe.$$typeof){case u:return ie=ie.get(Oe.key===null?oe:Oe.key)||null,le(j,ie,Oe,qe);case h:return ie=ie.get(Oe.key===null?oe:Oe.key)||null,Ee(j,ie,Oe,qe);case M:var vt=Oe._init;return Ht(ie,j,oe,vt(Oe._payload),qe)}if(ne(Oe)||C(Oe))return ie=ie.get(oe)||null,Ge(j,ie,Oe,qe,null);sc(j,Oe)}return null}function Ke(ie,j,oe,Oe){for(var qe=null,vt=null,ft=j,Dt=j=0,Dn=null;ft!==null&&Dt<oe.length;Dt++){ft.index>Dt?(Dn=ft,ft=null):Dn=ft.sibling;var Lt=tt(ie,ft,oe[Dt],Oe);if(Lt===null){ft===null&&(ft=Dn);break}o&&ft&&Lt.alternate===null&&l(ie,ft),j=E(Lt,j,Dt),vt===null?qe=Lt:vt.sibling=Lt,vt=Lt,ft=Dn}if(Dt===oe.length)return d(ie,ft),$t&&cs(ie,Dt),qe;if(ft===null){for(;Dt<oe.length;Dt++)ft=ht(ie,oe[Dt],Oe),ft!==null&&(j=E(ft,j,Dt),vt===null?qe=ft:vt.sibling=ft,vt=ft);return $t&&cs(ie,Dt),qe}for(ft=v(ie,ft);Dt<oe.length;Dt++)Dn=Ht(ft,ie,Dt,oe[Dt],Oe),Dn!==null&&(o&&Dn.alternate!==null&&ft.delete(Dn.key===null?Dt:Dn.key),j=E(Dn,j,Dt),vt===null?qe=Dn:vt.sibling=Dn,vt=Dn);return o&&ft.forEach(function(Hr){return l(ie,Hr)}),$t&&cs(ie,Dt),qe}function Hn(ie,j,oe,Oe){var qe=C(oe);if(typeof qe!="function")throw Error(a(150));if(oe=qe.call(oe),oe==null)throw Error(a(151));for(var vt=qe=null,ft=j,Dt=j=0,Dn=null,Lt=oe.next();ft!==null&&!Lt.done;Dt++,Lt=oe.next()){ft.index>Dt?(Dn=ft,ft=null):Dn=ft.sibling;var Hr=tt(ie,ft,Lt.value,Oe);if(Hr===null){ft===null&&(ft=Dn);break}o&&ft&&Hr.alternate===null&&l(ie,ft),j=E(Hr,j,Dt),vt===null?qe=Hr:vt.sibling=Hr,vt=Hr,ft=Dn}if(Lt.done)return d(ie,ft),$t&&cs(ie,Dt),qe;if(ft===null){for(;!Lt.done;Dt++,Lt=oe.next())Lt=ht(ie,Lt.value,Oe),Lt!==null&&(j=E(Lt,j,Dt),vt===null?qe=Lt:vt.sibling=Lt,vt=Lt);return $t&&cs(ie,Dt),qe}for(ft=v(ie,ft);!Lt.done;Dt++,Lt=oe.next())Lt=Ht(ft,ie,Dt,Lt.value,Oe),Lt!==null&&(o&&Lt.alternate!==null&&ft.delete(Lt.key===null?Dt:Lt.key),j=E(Lt,j,Dt),vt===null?qe=Lt:vt.sibling=Lt,vt=Lt);return o&&ft.forEach(function(u_){return l(ie,u_)}),$t&&cs(ie,Dt),qe}function bi(ie,j,oe,Oe){if(typeof oe=="object"&&oe!==null&&oe.type===f&&oe.key===null&&(oe=oe.props.children),typeof oe=="object"&&oe!==null){switch(oe.$$typeof){case u:e:{for(var qe=oe.key,vt=j;vt!==null;){if(vt.key===qe){if(qe=oe.type,qe===f){if(vt.tag===7){d(ie,vt.sibling),j=_(vt,oe.props.children),j.return=ie,ie=j;break e}}else if(vt.elementType===qe||typeof qe=="object"&&qe!==null&&qe.$$typeof===M&&Vm(qe)===vt.type){d(ie,vt.sibling),j=_(vt,oe.props),j.ref=xo(ie,vt,oe),j.return=ie,ie=j;break e}d(ie,vt);break}else l(ie,vt);vt=vt.sibling}oe.type===f?(j=gs(oe.props.children,ie.mode,Oe,oe.key),j.return=ie,ie=j):(Oe=Fc(oe.type,oe.key,oe.props,null,ie.mode,Oe),Oe.ref=xo(ie,j,oe),Oe.return=ie,ie=Oe)}return F(ie);case h:e:{for(vt=oe.key;j!==null;){if(j.key===vt)if(j.tag===4&&j.stateNode.containerInfo===oe.containerInfo&&j.stateNode.implementation===oe.implementation){d(ie,j.sibling),j=_(j,oe.children||[]),j.return=ie,ie=j;break e}else{d(ie,j);break}else l(ie,j);j=j.sibling}j=Bf(oe,ie.mode,Oe),j.return=ie,ie=j}return F(ie);case M:return vt=oe._init,bi(ie,j,vt(oe._payload),Oe)}if(ne(oe))return Ke(ie,j,oe,Oe);if(C(oe))return Hn(ie,j,oe,Oe);sc(ie,oe)}return typeof oe=="string"&&oe!==""||typeof oe=="number"?(oe=""+oe,j!==null&&j.tag===6?(d(ie,j.sibling),j=_(j,oe),j.return=ie,ie=j):(d(ie,j),j=Of(oe,ie.mode,Oe),j.return=ie,ie=j),F(ie)):d(ie,j)}return bi}var oa=Gm(!0),Wm=Gm(!1),yo={},_i=ut(yo),So=ut(yo),la=ut(yo);function er(o){if(o===yo)throw Error(a(174));return o}function ef(o,l){lt(la,l),lt(So,o),lt(_i,yo),o=ae(l),zt(_i),lt(_i,o)}function ca(){zt(_i),zt(So),zt(la)}function Xm(o){var l=er(la.current),d=er(_i.current);l=B(d,o.type,l),d!==l&&(lt(So,o),lt(_i,l))}function tf(o){So.current===o&&(zt(_i),zt(So))}var en=ut(0);function ac(o){for(var l=o;l!==null;){if(l.tag===13){var d=l.memoizedState;if(d!==null&&(d=d.dehydrated,d===null||Gl(d)||Lr(d)))return l}else if(l.tag===19&&l.memoizedProps.revealOrder!==void 0){if(l.flags&128)return l}else if(l.child!==null){l.child.return=l,l=l.child;continue}if(l===o)break;for(;l.sibling===null;){if(l.return===null||l.return===o)return null;l=l.return}l.sibling.return=l.return,l=l.sibling}return null}var nf=[];function rf(){for(var o=0;o<nf.length;o++){var l=nf[o];Nt?l._workInProgressVersionPrimary=null:l._workInProgressVersionSecondary=null}nf.length=0}var oc=c.ReactCurrentDispatcher,Ti=c.ReactCurrentBatchConfig,ua=0,an=null,Bn=null,Rn=null,lc=!1,Mo=!1,_o=0,NM=0;function zn(){throw Error(a(321))}function sf(o,l){if(l===null)return!1;for(var d=0;d<l.length&&d<o.length;d++)if(!Qi(o[d],l[d]))return!1;return!0}function af(o,l,d,v,_,E){if(ua=E,an=l,l.memoizedState=null,l.updateQueue=null,l.lanes=0,oc.current=o===null||o.memoizedState===null?zM:kM,o=d(v,_),Mo){E=0;do{if(Mo=!1,_o=0,25<=E)throw Error(a(301));E+=1,Rn=Bn=null,l.updateQueue=null,oc.current=HM,o=d(v,_)}while(Mo)}if(oc.current=dc,l=Bn!==null&&Bn.next!==null,ua=0,Rn=Bn=an=null,lc=!1,l)throw Error(a(300));return o}function of(){var o=_o!==0;return _o=0,o}function mr(){var o={memoizedState:null,baseState:null,baseQueue:null,queue:null,next:null};return Rn===null?an.memoizedState=Rn=o:Rn=Rn.next=o,Rn}function tr(){if(Bn===null){var o=an.alternate;o=o!==null?o.memoizedState:null}else o=Bn.next;var l=Rn===null?an.memoizedState:Rn.next;if(l!==null)Rn=l,Bn=o;else{if(o===null)throw Error(a(310));Bn=o,o={memoizedState:Bn.memoizedState,baseState:Bn.baseState,baseQueue:Bn.baseQueue,queue:Bn.queue,next:null},Rn===null?an.memoizedState=Rn=o:Rn=Rn.next=o}return Rn}function us(o,l){return typeof l=="function"?l(o):l}function cc(o){var l=tr(),d=l.queue;if(d===null)throw Error(a(311));d.lastRenderedReducer=o;var v=Bn,_=v.baseQueue,E=d.pending;if(E!==null){if(_!==null){var F=_.next;_.next=E.next,E.next=F}v.baseQueue=_=E,d.pending=null}if(_!==null){E=_.next,v=v.baseState;var Z=F=null,le=null,Ee=E;do{var Ge=Ee.lane;if((ua&Ge)===Ge)le!==null&&(le=le.next={lane:0,action:Ee.action,hasEagerState:Ee.hasEagerState,eagerState:Ee.eagerState,next:null}),v=Ee.hasEagerState?Ee.eagerState:o(v,Ee.action);else{var ht={lane:Ge,action:Ee.action,hasEagerState:Ee.hasEagerState,eagerState:Ee.eagerState,next:null};le===null?(Z=le=ht,F=v):le=le.next=ht,an.lanes|=Ge,fa|=Ge}Ee=Ee.next}while(Ee!==null&&Ee!==E);le===null?F=v:le.next=Z,Qi(v,l.memoizedState)||(hi=!0),l.memoizedState=v,l.baseState=F,l.baseQueue=le,d.lastRenderedState=v}if(o=d.interleaved,o!==null){_=o;do E=_.lane,an.lanes|=E,fa|=E,_=_.next;while(_!==o)}else _===null&&(d.lanes=0);return[l.memoizedState,d.dispatch]}function uc(o){var l=tr(),d=l.queue;if(d===null)throw Error(a(311));d.lastRenderedReducer=o;var v=d.dispatch,_=d.pending,E=l.memoizedState;if(_!==null){d.pending=null;var F=_=_.next;do E=o(E,F.action),F=F.next;while(F!==_);Qi(E,l.memoizedState)||(hi=!0),l.memoizedState=E,l.baseQueue===null&&(l.baseState=E),d.lastRenderedState=E}return[E,v]}function Ym(){}function Zm(o,l){var d=an,v=tr(),_=l(),E=!Qi(v.memoizedState,_);if(E&&(v.memoizedState=_,hi=!0),v=v.queue,wo(Km.bind(null,d,v,o),[o]),v.getSnapshot!==l||E||Rn!==null&&Rn.memoizedState.tag&1){if(d.flags|=2048,To(9,jm.bind(null,d,v,_,l),void 0,null),pn===null)throw Error(a(349));ua&30||qm(d,l,_)}return _}function qm(o,l,d){o.flags|=16384,o={getSnapshot:l,value:d},l=an.updateQueue,l===null?(l={lastEffect:null,stores:null},an.updateQueue=l,l.stores=[o]):(d=l.stores,d===null?l.stores=[o]:d.push(o))}function jm(o,l,d,v){l.value=d,l.getSnapshot=v,Qm(l)&&wi(o,1,-1)}function Km(o,l,d){return d(function(){Qm(l)&&wi(o,1,-1)})}function Qm(o){var l=o.getSnapshot;o=o.value;try{var d=l();return!Qi(o,d)}catch{return!0}}function lf(o){var l=mr();return typeof o=="function"&&(o=o()),l.memoizedState=l.baseState=o,o={pending:null,interleaved:null,lanes:0,dispatch:null,lastRenderedReducer:us,lastRenderedState:o},l.queue=o,o=o.dispatch=BM.bind(null,an,o),[l.memoizedState,o]}function To(o,l,d,v){return o={tag:o,create:l,destroy:d,deps:v,next:null},l=an.updateQueue,l===null?(l={lastEffect:null,stores:null},an.updateQueue=l,l.lastEffect=o.next=o):(d=l.lastEffect,d===null?l.lastEffect=o.next=o:(v=d.next,d.next=o,o.next=v,l.lastEffect=o)),o}function Jm(){return tr().memoizedState}function hc(o,l,d,v){var _=mr();an.flags|=o,_.memoizedState=To(1|l,d,void 0,v===void 0?null:v)}function fc(o,l,d,v){var _=tr();v=v===void 0?null:v;var E=void 0;if(Bn!==null){var F=Bn.memoizedState;if(E=F.destroy,v!==null&&sf(v,F.deps)){_.memoizedState=To(l,d,E,v);return}}an.flags|=o,_.memoizedState=To(1|l,d,E,v)}function cf(o,l){return hc(8390656,8,o,l)}function wo(o,l){return fc(2048,8,o,l)}function $m(o,l){return fc(4,2,o,l)}function eg(o,l){return fc(4,4,o,l)}function tg(o,l){if(typeof l=="function")return o=o(),l(o),function(){l(null)};if(l!=null)return o=o(),l.current=o,function(){l.current=null}}function ng(o,l,d){return d=d!=null?d.concat([o]):null,fc(4,4,tg.bind(null,l,o),d)}function uf(){}function ig(o,l){var d=tr();l=l===void 0?null:l;var v=d.memoizedState;return v!==null&&l!==null&&sf(l,v[1])?v[0]:(d.memoizedState=[o,l],o)}function rg(o,l){var d=tr();l=l===void 0?null:l;var v=d.memoizedState;return v!==null&&l!==null&&sf(l,v[1])?v[0]:(o=o(),d.memoizedState=[o,l],o)}function FM(o,l){var d=Rt;Rt=d!==0&&4>d?d:4,o(!0);var v=Ti.transition;Ti.transition={};try{o(!1),l()}finally{Rt=d,Ti.transition=v}}function sg(){return tr().memoizedState}function OM(o,l,d){var v=Br(o);d={lane:v,action:d,hasEagerState:!1,eagerState:null,next:null},ag(o)?og(l,d):(lg(o,l,d),d=Xn(),o=wi(o,v,d),o!==null&&cg(o,l,v))}function BM(o,l,d){var v=Br(o),_={lane:v,action:d,hasEagerState:!1,eagerState:null,next:null};if(ag(o))og(l,_);else{lg(o,l,_);var E=o.alternate;if(o.lanes===0&&(E===null||E.lanes===0)&&(E=l.lastRenderedReducer,E!==null))try{var F=l.lastRenderedState,Z=E(F,d);if(_.hasEagerState=!0,_.eagerState=Z,Qi(Z,F))return}catch{}finally{}d=Xn(),o=wi(o,v,d),o!==null&&cg(o,l,v)}}function ag(o){var l=o.alternate;return o===an||l!==null&&l===an}function og(o,l){Mo=lc=!0;var d=o.pending;d===null?l.next=l:(l.next=d.next,d.next=l),o.pending=l}function lg(o,l,d){pn!==null&&o.mode&1&&!(Mt&2)?(o=l.interleaved,o===null?(d.next=d,$i===null?$i=[l]:$i.push(l)):(d.next=o.next,o.next=d),l.interleaved=d):(o=l.pending,o===null?d.next=d:(d.next=o.next,o.next=d),l.pending=d)}function cg(o,l,d){if(d&4194240){var v=l.lanes;v&=o.pendingLanes,d|=v,l.lanes=d,Oh(o,d)}}var dc={readContext:yi,useCallback:zn,useContext:zn,useEffect:zn,useImperativeHandle:zn,useInsertionEffect:zn,useLayoutEffect:zn,useMemo:zn,useReducer:zn,useRef:zn,useState:zn,useDebugValue:zn,useDeferredValue:zn,useTransition:zn,useMutableSource:zn,useSyncExternalStore:zn,useId:zn,unstable_isNewReconciler:!1},zM={readContext:yi,useCallback:function(o,l){return mr().memoizedState=[o,l===void 0?null:l],o},useContext:yi,useEffect:cf,useImperativeHandle:function(o,l,d){return d=d!=null?d.concat([o]):null,hc(4194308,4,tg.bind(null,l,o),d)},useLayoutEffect:function(o,l){return hc(4194308,4,o,l)},useInsertionEffect:function(o,l){return hc(4,2,o,l)},useMemo:function(o,l){var d=mr();return l=l===void 0?null:l,o=o(),d.memoizedState=[o,l],o},useReducer:function(o,l,d){var v=mr();return l=d!==void 0?d(l):l,v.memoizedState=v.baseState=l,o={pending:null,interleaved:null,lanes:0,dispatch:null,lastRenderedReducer:o,lastRenderedState:l},v.queue=o,o=o.dispatch=OM.bind(null,an,o),[v.memoizedState,o]},useRef:function(o){var l=mr();return o={current:o},l.memoizedState=o},useState:lf,useDebugValue:uf,useDeferredValue:function(o){var l=lf(o),d=l[0],v=l[1];return cf(function(){var _=Ti.transition;Ti.transition={};try{v(o)}finally{Ti.transition=_}},[o]),d},useTransition:function(){var o=lf(!1),l=o[0];return o=FM.bind(null,o[1]),mr().memoizedState=o,[l,o]},useMutableSource:function(){},useSyncExternalStore:function(o,l,d){var v=an,_=mr();if($t){if(d===void 0)throw Error(a(407));d=d()}else{if(d=l(),pn===null)throw Error(a(349));ua&30||qm(v,l,d)}_.memoizedState=d;var E={value:d,getSnapshot:l};return _.queue=E,cf(Km.bind(null,v,E,o),[o]),v.flags|=2048,To(9,jm.bind(null,v,E,d,l),void 0,null),d},useId:function(){var o=mr(),l=pn.identifierPrefix;if($t){var d=pr,v=dr;d=(v&~(1<<32-Ui(v)-1)).toString(32)+d,l=":"+l+"R"+d,d=_o++,0<d&&(l+="H"+d.toString(32)),l+=":"}else d=NM++,l=":"+l+"r"+d.toString(32)+":";return o.memoizedState=l},unstable_isNewReconciler:!1},kM={readContext:yi,useCallback:ig,useContext:yi,useEffect:wo,useImperativeHandle:ng,useInsertionEffect:$m,useLayoutEffect:eg,useMemo:rg,useReducer:cc,useRef:Jm,useState:function(){return cc(us)},useDebugValue:uf,useDeferredValue:function(o){var l=cc(us),d=l[0],v=l[1];return wo(function(){var _=Ti.transition;Ti.transition={};try{v(o)}finally{Ti.transition=_}},[o]),d},useTransition:function(){var o=cc(us)[0],l=tr().memoizedState;return[o,l]},useMutableSource:Ym,useSyncExternalStore:Zm,useId:sg,unstable_isNewReconciler:!1},HM={readContext:yi,useCallback:ig,useContext:yi,useEffect:wo,useImperativeHandle:ng,useInsertionEffect:$m,useLayoutEffect:eg,useMemo:rg,useReducer:uc,useRef:Jm,useState:function(){return uc(us)},useDebugValue:uf,useDeferredValue:function(o){var l=uc(us),d=l[0],v=l[1];return wo(function(){var _=Ti.transition;Ti.transition={};try{v(o)}finally{Ti.transition=_}},[o]),d},useTransition:function(){var o=uc(us)[0],l=tr().memoizedState;return[o,l]},useMutableSource:Ym,useSyncExternalStore:Zm,useId:sg,unstable_isNewReconciler:!1};function hf(o,l){try{var d="",v=l;do d+=UM(v),v=v.return;while(v);var _=d}catch(E){_=`
Error generating stack: `+E.message+`
`+E.stack}return{value:o,source:l,stack:_}}function ff(o,l){try{console.error(l.value)}catch(d){setTimeout(function(){throw d})}}var VM=typeof WeakMap=="function"?WeakMap:Map;function ug(o,l,d){d=fr(-1,d),d.tag=3,d.payload={element:null};var v=l.value;return d.callback=function(){Cc||(Cc=!0,Rf=v),ff(o,l)},d}function hg(o,l,d){d=fr(-1,d),d.tag=3;var v=o.type.getDerivedStateFromError;if(typeof v=="function"){var _=l.value;d.payload=function(){return v(_)},d.callback=function(){ff(o,l)}}var E=o.stateNode;return E!==null&&typeof E.componentDidCatch=="function"&&(d.callback=function(){ff(o,l),typeof v!="function"&&(Fr===null?Fr=new Set([this]):Fr.add(this));var F=l.stack;this.componentDidCatch(l.value,{componentStack:F!==null?F:""})}),d}function fg(o,l,d){var v=o.pingCache;if(v===null){v=o.pingCache=new VM;var _=new Set;v.set(l,_)}else _=v.get(l),_===void 0&&(_=new Set,v.set(l,_));_.has(d)||(_.add(d),o=n_.bind(null,o,l,d),l.then(o,o))}function dg(o){do{var l;if((l=o.tag===13)&&(l=o.memoizedState,l=l!==null?l.dehydrated!==null:!0),l)return o;o=o.return}while(o!==null);return null}function pg(o,l,d,v,_){return o.mode&1?(o.flags|=65536,o.lanes=_,o):(o===l?o.flags|=65536:(o.flags|=128,d.flags|=131072,d.flags&=-52805,d.tag===1&&(d.alternate===null?d.tag=17:(l=fr(-1,1),l.tag=2,Nr(d,l))),d.lanes|=1),o)}function nr(o){o.flags|=4}function mg(o,l){if(o!==null&&o.child===l.child)return!0;if(l.flags&16)return!1;for(o=l.child;o!==null;){if(o.flags&12854||o.subtreeFlags&12854)return!1;o=o.sibling}return!0}var Eo,bo,pc,mc;if(Ye)Eo=function(o,l){for(var d=l.child;d!==null;){if(d.tag===5||d.tag===6)q(o,d.stateNode);else if(d.tag!==4&&d.child!==null){d.child.return=d,d=d.child;continue}if(d===l)break;for(;d.sibling===null;){if(d.return===null||d.return===l)return;d=d.return}d.sibling.return=d.return,d=d.sibling}},bo=function(){},pc=function(o,l,d,v,_){if(o=o.memoizedProps,o!==v){var E=l.stateNode,F=er(_i.current);d=ge(E,d,o,v,_,F),(l.updateQueue=d)&&nr(l)}},mc=function(o,l,d,v){d!==v&&nr(l)};else if(k){Eo=function(o,l,d,v){for(var _=l.child;_!==null;){if(_.tag===5){var E=_.stateNode;d&&v&&(E=qt(E,_.type,_.memoizedProps,_)),q(o,E)}else if(_.tag===6)E=_.stateNode,d&&v&&(E=ai(E,_.memoizedProps,_)),q(o,E);else if(_.tag!==4){if(_.tag===22&&_.memoizedState!==null)E=_.child,E!==null&&(E.return=_),Eo(o,_,!0,!0);else if(_.child!==null){_.child.return=_,_=_.child;continue}}if(_===l)break;for(;_.sibling===null;){if(_.return===null||_.return===l)return;_=_.return}_.sibling.return=_.return,_=_.sibling}};var gg=function(o,l,d,v){for(var _=l.child;_!==null;){if(_.tag===5){var E=_.stateNode;d&&v&&(E=qt(E,_.type,_.memoizedProps,_)),Wt(o,E)}else if(_.tag===6)E=_.stateNode,d&&v&&(E=ai(E,_.memoizedProps,_)),Wt(o,E);else if(_.tag!==4){if(_.tag===22&&_.memoizedState!==null)E=_.child,E!==null&&(E.return=_),gg(o,_,!0,!0);else if(_.child!==null){_.child.return=_,_=_.child;continue}}if(_===l)break;for(;_.sibling===null;){if(_.return===null||_.return===l)return;_=_.return}_.sibling.return=_.return,_=_.sibling}};bo=function(o,l){var d=l.stateNode;if(!mg(o,l)){o=d.containerInfo;var v=bt(o);gg(v,l,!1,!1),d.pendingChildren=v,nr(l),fn(o,v)}},pc=function(o,l,d,v,_){var E=o.stateNode,F=o.memoizedProps;if((o=mg(o,l))&&F===v)l.stateNode=E;else{var Z=l.stateNode,le=er(_i.current),Ee=null;F!==v&&(Ee=ge(Z,d,F,v,_,le)),o&&Ee===null?l.stateNode=E:(E=Fe(E,Ee,d,F,v,l,o,Z),ye(E,d,v,_,le)&&nr(l),l.stateNode=E,o?nr(l):Eo(E,l,!1,!1))}},mc=function(o,l,d,v){d!==v?(o=er(la.current),d=er(_i.current),l.stateNode=Ue(v,o,d,l),nr(l)):l.stateNode=o.stateNode}}else bo=function(){},pc=function(){},mc=function(){};function Ao(o,l){if(!$t)switch(o.tailMode){case"hidden":l=o.tail;for(var d=null;l!==null;)l.alternate!==null&&(d=l),l=l.sibling;d===null?o.tail=null:d.sibling=null;break;case"collapsed":d=o.tail;for(var v=null;d!==null;)d.alternate!==null&&(v=d),d=d.sibling;v===null?l||o.tail===null?o.tail=null:o.tail.sibling=null:v.sibling=null}}function kn(o){var l=o.alternate!==null&&o.alternate.child===o.child,d=0,v=0;if(l)for(var _=o.child;_!==null;)d|=_.lanes|_.childLanes,v|=_.subtreeFlags&14680064,v|=_.flags&14680064,_.return=o,_=_.sibling;else for(_=o.child;_!==null;)d|=_.lanes|_.childLanes,v|=_.subtreeFlags,v|=_.flags,_.return=o,_=_.sibling;return o.subtreeFlags|=v,o.childLanes=d,l}function GM(o,l,d){var v=l.pendingProps;switch(Kh(l),l.tag){case 2:case 16:case 15:case 0:case 11:case 7:case 8:case 12:case 9:case 14:return kn(l),null;case 1:return sn(l.type)&&Ir(),kn(l),null;case 3:return v=l.stateNode,ca(),zt(dn),zt(yn),rf(),v.pendingContext&&(v.context=v.pendingContext,v.pendingContext=null),(o===null||o.child===null)&&(vo(l)?nr(l):o===null||o.memoizedState.isDehydrated&&!(l.flags&256)||(l.flags|=1024,Fi!==null&&(If(Fi),Fi=null))),bo(o,l),kn(l),null;case 5:tf(l),d=er(la.current);var _=l.type;if(o!==null&&l.stateNode!=null)pc(o,l,_,v,d),o.ref!==l.ref&&(l.flags|=512,l.flags|=2097152);else{if(!v){if(l.stateNode===null)throw Error(a(166));return kn(l),null}if(o=er(_i.current),vo(l)){if(!xe)throw Error(a(175));o=Uh(l.stateNode,l.type,l.memoizedProps,d,o,l,!go),l.updateQueue=o,o!==null&&nr(l)}else{var E=H(_,v,d,o,l);Eo(E,l,!1,!1),l.stateNode=E,ye(E,_,v,d,o)&&nr(l)}l.ref!==null&&(l.flags|=512,l.flags|=2097152)}return kn(l),null;case 6:if(o&&l.stateNode!=null)mc(o,l,o.memoizedProps,v);else{if(typeof v!="string"&&l.stateNode===null)throw Error(a(166));if(o=er(la.current),d=er(_i.current),vo(l)){if(!xe)throw Error(a(176));if(o=l.stateNode,v=l.memoizedProps,(d=N(o,v,l,!go))&&(_=ci,_!==null))switch(E=(_.mode&1)!==0,_.tag){case 3:rt(_.stateNode.containerInfo,o,v,E);break;case 5:St(_.type,_.memoizedProps,_.stateNode,o,v,E)}d&&nr(l)}else l.stateNode=Ue(v,o,d,l)}return kn(l),null;case 13:if(zt(en),v=l.memoizedState,$t&&ui!==null&&l.mode&1&&!(l.flags&128)){for(o=ui;o;)o=ji(o);return aa(),l.flags|=98560,l}if(v!==null&&v.dehydrated!==null){if(v=vo(l),o===null){if(!v)throw Error(a(318));if(!xe)throw Error(a(344));if(o=l.memoizedState,o=o!==null?o.dehydrated:null,!o)throw Error(a(317));re(o,l)}else aa(),!(l.flags&128)&&(l.memoizedState=null),l.flags|=4;return kn(l),null}return Fi!==null&&(If(Fi),Fi=null),l.flags&128?(l.lanes=d,l):(v=v!==null,d=!1,o===null?vo(l):d=o.memoizedState!==null,v&&!d&&(l.child.flags|=8192,l.mode&1&&(o===null||en.current&1?Sn===0&&(Sn=3):Nf())),l.updateQueue!==null&&(l.flags|=4),kn(l),null);case 4:return ca(),bo(o,l),o===null&&we(l.stateNode.containerInfo),kn(l),null;case 10:return Wh(l.type._context),kn(l),null;case 17:return sn(l.type)&&Ir(),kn(l),null;case 19:if(zt(en),_=l.memoizedState,_===null)return kn(l),null;if(v=(l.flags&128)!==0,E=_.rendering,E===null)if(v)Ao(_,!1);else{if(Sn!==0||o!==null&&o.flags&128)for(o=l.child;o!==null;){if(E=ac(o),E!==null){for(l.flags|=128,Ao(_,!1),o=E.updateQueue,o!==null&&(l.updateQueue=o,l.flags|=4),l.subtreeFlags=0,o=d,v=l.child;v!==null;)d=v,_=o,d.flags&=14680066,E=d.alternate,E===null?(d.childLanes=0,d.lanes=_,d.child=null,d.subtreeFlags=0,d.memoizedProps=null,d.memoizedState=null,d.updateQueue=null,d.dependencies=null,d.stateNode=null):(d.childLanes=E.childLanes,d.lanes=E.lanes,d.child=E.child,d.subtreeFlags=0,d.deletions=null,d.memoizedProps=E.memoizedProps,d.memoizedState=E.memoizedState,d.updateQueue=E.updateQueue,d.type=E.type,_=E.dependencies,d.dependencies=_===null?null:{lanes:_.lanes,firstContext:_.firstContext}),v=v.sibling;return lt(en,en.current&1|2),l.child}o=o.sibling}_.tail!==null&&Cn()>Cf&&(l.flags|=128,v=!0,Ao(_,!1),l.lanes=4194304)}else{if(!v)if(o=ac(E),o!==null){if(l.flags|=128,v=!0,o=o.updateQueue,o!==null&&(l.updateQueue=o,l.flags|=4),Ao(_,!0),_.tail===null&&_.tailMode==="hidden"&&!E.alternate&&!$t)return kn(l),null}else 2*Cn()-_.renderingStartTime>Cf&&d!==1073741824&&(l.flags|=128,v=!0,Ao(_,!1),l.lanes=4194304);_.isBackwards?(E.sibling=l.child,l.child=E):(o=_.last,o!==null?o.sibling=E:l.child=E,_.last=E)}return _.tail!==null?(l=_.tail,_.rendering=l,_.tail=l.sibling,_.renderingStartTime=Cn(),l.sibling=null,o=en.current,lt(en,v?o&1|2:o&1),l):(kn(l),null);case 22:case 23:return Uf(),v=l.memoizedState!==null,o!==null&&o.memoizedState!==null!==v&&(l.flags|=8192),v&&l.mode&1?fi&1073741824&&(kn(l),Ye&&l.subtreeFlags&6&&(l.flags|=8192)):kn(l),null;case 24:return null;case 25:return null}throw Error(a(156,l.tag))}var WM=c.ReactCurrentOwner,hi=!1;function Wn(o,l,d,v){l.child=o===null?Wm(l,null,d,v):oa(l,o.child,d,v)}function vg(o,l,d,v,_){d=d.render;var E=l.ref;return ia(l,_),v=af(o,l,d,v,E,_),d=of(),o!==null&&!hi?(l.updateQueue=o.updateQueue,l.flags&=-2053,o.lanes&=~_,gr(o,l,_)):($t&&d&&jh(l),l.flags|=1,Wn(o,l,v,_),l.child)}function xg(o,l,d,v,_){if(o===null){var E=d.type;return typeof E=="function"&&!Ff(E)&&E.defaultProps===void 0&&d.compare===null&&d.defaultProps===void 0?(l.tag=15,l.type=E,yg(o,l,E,v,_)):(o=Fc(d.type,null,v,l,l.mode,_),o.ref=l.ref,o.return=l,l.child=o)}if(E=o.child,!(o.lanes&_)){var F=E.memoizedProps;if(d=d.compare,d=d!==null?d:Ql,d(F,v)&&o.ref===l.ref)return gr(o,l,_)}return l.flags|=1,o=kr(E,v),o.ref=l.ref,o.return=l,l.child=o}function yg(o,l,d,v,_){if(o!==null&&Ql(o.memoizedProps,v)&&o.ref===l.ref)if(hi=!1,(o.lanes&_)!==0)o.flags&131072&&(hi=!0);else return l.lanes=o.lanes,gr(o,l,_);return df(o,l,d,v,_)}function Sg(o,l,d){var v=l.pendingProps,_=v.children,E=o!==null?o.memoizedState:null;if(v.mode==="hidden")if(!(l.mode&1))l.memoizedState={baseLanes:0,cachePool:null},lt(ha,fi),fi|=d;else if(d&1073741824)l.memoizedState={baseLanes:0,cachePool:null},v=E!==null?E.baseLanes:d,lt(ha,fi),fi|=v;else return o=E!==null?E.baseLanes|d:d,l.lanes=l.childLanes=1073741824,l.memoizedState={baseLanes:o,cachePool:null},l.updateQueue=null,lt(ha,fi),fi|=o,null;else E!==null?(v=E.baseLanes|d,l.memoizedState=null):v=d,lt(ha,fi),fi|=v;return Wn(o,l,_,d),l.child}function Mg(o,l){var d=l.ref;(o===null&&d!==null||o!==null&&o.ref!==d)&&(l.flags|=512,l.flags|=2097152)}function df(o,l,d,v,_){var E=sn(d)?Ii:yn.current;return E=rn(l,E),ia(l,_),d=af(o,l,d,v,E,_),v=of(),o!==null&&!hi?(l.updateQueue=o.updateQueue,l.flags&=-2053,o.lanes&=~_,gr(o,l,_)):($t&&v&&jh(l),l.flags|=1,Wn(o,l,d,_),l.child)}function _g(o,l,d,v,_){if(sn(d)){var E=!0;ta(l)}else E=!1;if(ia(l,_),l.stateNode===null)o!==null&&(o.alternate=null,l.alternate=null,l.flags|=2),Fm(l,d,v),qh(l,d,v,_),v=!0;else if(o===null){var F=l.stateNode,Z=l.memoizedProps;F.props=Z;var le=F.context,Ee=d.contextType;typeof Ee=="object"&&Ee!==null?Ee=yi(Ee):(Ee=sn(d)?Ii:yn.current,Ee=rn(l,Ee));var Ge=d.getDerivedStateFromProps,ht=typeof Ge=="function"||typeof F.getSnapshotBeforeUpdate=="function";ht||typeof F.UNSAFE_componentWillReceiveProps!="function"&&typeof F.componentWillReceiveProps!="function"||(Z!==v||le!==Ee)&&Om(l,F,v,Ee),Ur=!1;var tt=l.memoizedState;F.state=tt,tc(l,v,F,_),le=l.memoizedState,Z!==v||tt!==le||dn.current||Ur?(typeof Ge=="function"&&(Zh(l,d,Ge,v),le=l.memoizedState),(Z=Ur||Nm(l,d,Z,v,tt,le,Ee))?(ht||typeof F.UNSAFE_componentWillMount!="function"&&typeof F.componentWillMount!="function"||(typeof F.componentWillMount=="function"&&F.componentWillMount(),typeof F.UNSAFE_componentWillMount=="function"&&F.UNSAFE_componentWillMount()),typeof F.componentDidMount=="function"&&(l.flags|=4194308)):(typeof F.componentDidMount=="function"&&(l.flags|=4194308),l.memoizedProps=v,l.memoizedState=le),F.props=v,F.state=le,F.context=Ee,v=Z):(typeof F.componentDidMount=="function"&&(l.flags|=4194308),v=!1)}else{F=l.stateNode,Dm(o,l),Z=l.memoizedProps,Ee=l.type===l.elementType?Z:Ni(l.type,Z),F.props=Ee,ht=l.pendingProps,tt=F.context,le=d.contextType,typeof le=="object"&&le!==null?le=yi(le):(le=sn(d)?Ii:yn.current,le=rn(l,le));var Ht=d.getDerivedStateFromProps;(Ge=typeof Ht=="function"||typeof F.getSnapshotBeforeUpdate=="function")||typeof F.UNSAFE_componentWillReceiveProps!="function"&&typeof F.componentWillReceiveProps!="function"||(Z!==ht||tt!==le)&&Om(l,F,v,le),Ur=!1,tt=l.memoizedState,F.state=tt,tc(l,v,F,_);var Ke=l.memoizedState;Z!==ht||tt!==Ke||dn.current||Ur?(typeof Ht=="function"&&(Zh(l,d,Ht,v),Ke=l.memoizedState),(Ee=Ur||Nm(l,d,Ee,v,tt,Ke,le)||!1)?(Ge||typeof F.UNSAFE_componentWillUpdate!="function"&&typeof F.componentWillUpdate!="function"||(typeof F.componentWillUpdate=="function"&&F.componentWillUpdate(v,Ke,le),typeof F.UNSAFE_componentWillUpdate=="function"&&F.UNSAFE_componentWillUpdate(v,Ke,le)),typeof F.componentDidUpdate=="function"&&(l.flags|=4),typeof F.getSnapshotBeforeUpdate=="function"&&(l.flags|=1024)):(typeof F.componentDidUpdate!="function"||Z===o.memoizedProps&&tt===o.memoizedState||(l.flags|=4),typeof F.getSnapshotBeforeUpdate!="function"||Z===o.memoizedProps&&tt===o.memoizedState||(l.flags|=1024),l.memoizedProps=v,l.memoizedState=Ke),F.props=v,F.state=Ke,F.context=le,v=Ee):(typeof F.componentDidUpdate!="function"||Z===o.memoizedProps&&tt===o.memoizedState||(l.flags|=4),typeof F.getSnapshotBeforeUpdate!="function"||Z===o.memoizedProps&&tt===o.memoizedState||(l.flags|=1024),v=!1)}return pf(o,l,d,v,E,_)}function pf(o,l,d,v,_,E){Mg(o,l);var F=(l.flags&128)!==0;if(!v&&!F)return _&&fo(l,d,!1),gr(o,l,E);v=l.stateNode,WM.current=l;var Z=F&&typeof d.getDerivedStateFromError!="function"?null:v.render();return l.flags|=1,o!==null&&F?(l.child=oa(l,o.child,null,E),l.child=oa(l,null,Z,E)):Wn(o,l,Z,E),l.memoizedState=v.state,_&&fo(l,d,!0),l.child}function Tg(o){var l=o.stateNode;l.pendingContext?On(o,l.pendingContext,l.pendingContext!==l.context):l.context&&On(o,l.context,!1),ef(o,l.containerInfo)}function wg(o,l,d,v,_){return aa(),$h(_),l.flags|=256,Wn(o,l,d,v),l.child}var gc={dehydrated:null,treeContext:null,retryLane:0};function vc(o){return{baseLanes:o,cachePool:null}}function Eg(o,l,d){var v=l.pendingProps,_=en.current,E=!1,F=(l.flags&128)!==0,Z;if((Z=F)||(Z=o!==null&&o.memoizedState===null?!1:(_&2)!==0),Z?(E=!0,l.flags&=-129):(o===null||o.memoizedState!==null)&&(_|=1),lt(en,_&1),o===null)return Jh(l),o=l.memoizedState,o!==null&&(o=o.dehydrated,o!==null)?(l.mode&1?Lr(o)?l.lanes=8:l.lanes=1073741824:l.lanes=1,null):(_=v.children,o=v.fallback,E?(v=l.mode,E=l.child,_={mode:"hidden",children:_},!(v&1)&&E!==null?(E.childLanes=0,E.pendingProps=_):E=Oc(_,v,0,null),o=gs(o,v,d,null),E.return=l,o.return=l,E.sibling=o,l.child=E,l.child.memoizedState=vc(d),l.memoizedState=gc,o):mf(l,_));if(_=o.memoizedState,_!==null){if(Z=_.dehydrated,Z!==null){if(F)return l.flags&256?(l.flags&=-257,xc(o,l,d,Error(a(422)))):l.memoizedState!==null?(l.child=o.child,l.flags|=128,null):(E=v.fallback,_=l.mode,v=Oc({mode:"visible",children:v.children},_,0,null),E=gs(E,_,d,null),E.flags|=2,v.return=l,E.return=l,v.sibling=E,l.child=v,l.mode&1&&oa(l,o.child,null,d),l.child.memoizedState=vc(d),l.memoizedState=gc,E);if(!(l.mode&1))l=xc(o,l,d,null);else if(Lr(Z))l=xc(o,l,d,Error(a(419)));else if(v=(d&o.childLanes)!==0,hi||v){if(v=pn,v!==null){switch(d&-d){case 4:E=2;break;case 16:E=8;break;case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:case 4194304:case 8388608:case 16777216:case 33554432:case 67108864:E=32;break;case 536870912:E=268435456;break;default:E=0}v=E&(v.suspendedLanes|d)?0:E,v!==0&&v!==_.retryLane&&(_.retryLane=v,wi(o,v,-1))}Nf(),l=xc(o,l,d,Error(a(421)))}else Gl(Z)?(l.flags|=128,l.child=o.child,l=i_.bind(null,o),Wl(Z,l),l=null):(d=_.treeContext,xe&&(ui=Ih(Z),ci=l,$t=!0,Fi=null,go=!1,d!==null&&(Si[Mi++]=dr,Si[Mi++]=pr,Si[Mi++]=ls,dr=d.id,pr=d.overflow,ls=l)),l=mf(l,l.pendingProps.children),l.flags|=4096);return l}return E?(v=Ag(o,l,v.children,v.fallback,d),E=l.child,_=o.child.memoizedState,E.memoizedState=_===null?vc(d):{baseLanes:_.baseLanes|d,cachePool:null},E.childLanes=o.childLanes&~d,l.memoizedState=gc,v):(d=bg(o,l,v.children,d),l.memoizedState=null,d)}return E?(v=Ag(o,l,v.children,v.fallback,d),E=l.child,_=o.child.memoizedState,E.memoizedState=_===null?vc(d):{baseLanes:_.baseLanes|d,cachePool:null},E.childLanes=o.childLanes&~d,l.memoizedState=gc,v):(d=bg(o,l,v.children,d),l.memoizedState=null,d)}function mf(o,l){return l=Oc({mode:"visible",children:l},o.mode,0,null),l.return=o,o.child=l}function bg(o,l,d,v){var _=o.child;return o=_.sibling,d=kr(_,{mode:"visible",children:d}),!(l.mode&1)&&(d.lanes=v),d.return=l,d.sibling=null,o!==null&&(v=l.deletions,v===null?(l.deletions=[o],l.flags|=16):v.push(o)),l.child=d}function Ag(o,l,d,v,_){var E=l.mode;o=o.child;var F=o.sibling,Z={mode:"hidden",children:d};return!(E&1)&&l.child!==o?(d=l.child,d.childLanes=0,d.pendingProps=Z,l.deletions=null):(d=kr(o,Z),d.subtreeFlags=o.subtreeFlags&14680064),F!==null?v=kr(F,v):(v=gs(v,E,_,null),v.flags|=2),v.return=l,d.return=l,d.sibling=v,l.child=d,v}function xc(o,l,d,v){return v!==null&&$h(v),oa(l,o.child,null,d),o=mf(l,l.pendingProps.children),o.flags|=2,l.memoizedState=null,o}function Pg(o,l,d){o.lanes|=l;var v=o.alternate;v!==null&&(v.lanes|=l),Xh(o.return,l,d)}function gf(o,l,d,v,_){var E=o.memoizedState;E===null?o.memoizedState={isBackwards:l,rendering:null,renderingStartTime:0,last:v,tail:d,tailMode:_}:(E.isBackwards=l,E.rendering=null,E.renderingStartTime=0,E.last=v,E.tail=d,E.tailMode=_)}function Cg(o,l,d){var v=l.pendingProps,_=v.revealOrder,E=v.tail;if(Wn(o,l,v.children,d),v=en.current,v&2)v=v&1|2,l.flags|=128;else{if(o!==null&&o.flags&128)e:for(o=l.child;o!==null;){if(o.tag===13)o.memoizedState!==null&&Pg(o,d,l);else if(o.tag===19)Pg(o,d,l);else if(o.child!==null){o.child.return=o,o=o.child;continue}if(o===l)break e;for(;o.sibling===null;){if(o.return===null||o.return===l)break e;o=o.return}o.sibling.return=o.return,o=o.sibling}v&=1}if(lt(en,v),!(l.mode&1))l.memoizedState=null;else switch(_){case"forwards":for(d=l.child,_=null;d!==null;)o=d.alternate,o!==null&&ac(o)===null&&(_=d),d=d.sibling;d=_,d===null?(_=l.child,l.child=null):(_=d.sibling,d.sibling=null),gf(l,!1,_,d,E);break;case"backwards":for(d=null,_=l.child,l.child=null;_!==null;){if(o=_.alternate,o!==null&&ac(o)===null){l.child=_;break}o=_.sibling,_.sibling=d,d=_,_=o}gf(l,!0,d,null,E);break;case"together":gf(l,!1,null,null,void 0);break;default:l.memoizedState=null}return l.child}function gr(o,l,d){if(o!==null&&(l.dependencies=o.dependencies),fa|=l.lanes,!(d&l.childLanes))return null;if(o!==null&&l.child!==o.child)throw Error(a(153));if(l.child!==null){for(o=l.child,d=kr(o,o.pendingProps),l.child=d,d.return=l;o.sibling!==null;)o=o.sibling,d=d.sibling=kr(o,o.pendingProps),d.return=l;d.sibling=null}return l.child}function XM(o,l,d){switch(l.tag){case 3:Tg(l),aa();break;case 5:Xm(l);break;case 1:sn(l.type)&&ta(l);break;case 4:ef(l,l.stateNode.containerInfo);break;case 10:Rm(l,l.type._context,l.memoizedProps.value);break;case 13:var v=l.memoizedState;if(v!==null)return v.dehydrated!==null?(lt(en,en.current&1),l.flags|=128,null):d&l.child.childLanes?Eg(o,l,d):(lt(en,en.current&1),o=gr(o,l,d),o!==null?o.sibling:null);lt(en,en.current&1);break;case 19:if(v=(d&l.childLanes)!==0,o.flags&128){if(v)return Cg(o,l,d);l.flags|=128}var _=l.memoizedState;if(_!==null&&(_.rendering=null,_.tail=null,_.lastEffect=null),lt(en,en.current),v)break;return null;case 22:case 23:return l.lanes=0,Sg(o,l,d)}return gr(o,l,d)}function YM(o,l){switch(Kh(l),l.tag){case 1:return sn(l.type)&&Ir(),o=l.flags,o&65536?(l.flags=o&-65537|128,l):null;case 3:return ca(),zt(dn),zt(yn),rf(),o=l.flags,o&65536&&!(o&128)?(l.flags=o&-65537|128,l):null;case 5:return tf(l),null;case 13:if(zt(en),o=l.memoizedState,o!==null&&o.dehydrated!==null){if(l.alternate===null)throw Error(a(340));aa()}return o=l.flags,o&65536?(l.flags=o&-65537|128,l):null;case 19:return zt(en),null;case 4:return ca(),null;case 10:return Wh(l.type._context),null;case 22:case 23:return Uf(),null;case 24:return null;default:return null}}var yc=!1,hs=!1,ZM=typeof WeakSet=="function"?WeakSet:Set,Ne=null;function Sc(o,l){var d=o.ref;if(d!==null)if(typeof d=="function")try{d(null)}catch(v){Jn(o,l,v)}else d.current=null}function vf(o,l,d){try{d()}catch(v){Jn(o,l,v)}}var Rg=!1;function qM(o,l){for(X(o.containerInfo),Ne=l;Ne!==null;)if(o=Ne,l=o.child,(o.subtreeFlags&1028)!==0&&l!==null)l.return=o,Ne=l;else for(;Ne!==null;){o=Ne;try{var d=o.alternate;if(o.flags&1024)switch(o.tag){case 0:case 11:case 15:break;case 1:if(d!==null){var v=d.memoizedProps,_=d.memoizedState,E=o.stateNode,F=E.getSnapshotBeforeUpdate(o.elementType===o.type?v:Ni(o.type,v),_);E.__reactInternalSnapshotBeforeUpdate=F}break;case 3:Ye&&Ce(o.stateNode.containerInfo);break;case 5:case 6:case 4:case 17:break;default:throw Error(a(163))}}catch(Z){Jn(o,o.return,Z)}if(l=o.sibling,l!==null){l.return=o.return,Ne=l;break}Ne=o.return}return d=Rg,Rg=!1,d}function fs(o,l,d){var v=l.updateQueue;if(v=v!==null?v.lastEffect:null,v!==null){var _=v=v.next;do{if((_.tag&o)===o){var E=_.destroy;_.destroy=void 0,E!==void 0&&vf(l,d,E)}_=_.next}while(_!==v)}}function Po(o,l){if(l=l.updateQueue,l=l!==null?l.lastEffect:null,l!==null){var d=l=l.next;do{if((d.tag&o)===o){var v=d.create;d.destroy=v()}d=d.next}while(d!==l)}}function xf(o){var l=o.ref;if(l!==null){var d=o.stateNode;switch(o.tag){case 5:o=ue(d);break;default:o=d}typeof l=="function"?l(o):l.current=o}}function Dg(o,l,d){if(Ki&&typeof Ki.onCommitFiberUnmount=="function")try{Ki.onCommitFiberUnmount(jl,l)}catch{}switch(l.tag){case 0:case 11:case 14:case 15:if(o=l.updateQueue,o!==null&&(o=o.lastEffect,o!==null)){var v=o=o.next;do{var _=v,E=_.destroy;_=_.tag,E!==void 0&&(_&2||_&4)&&vf(l,d,E),v=v.next}while(v!==o)}break;case 1:if(Sc(l,d),o=l.stateNode,typeof o.componentWillUnmount=="function")try{o.props=l.memoizedProps,o.state=l.memoizedState,o.componentWillUnmount()}catch(F){Jn(l,d,F)}break;case 5:Sc(l,d);break;case 4:Ye?Og(o,l,d):k&&k&&(l=l.stateNode.containerInfo,d=bt(l),si(l,d))}}function Lg(o,l,d){for(var v=l;;)if(Dg(o,v,d),v.child===null||Ye&&v.tag===4){if(v===l)break;for(;v.sibling===null;){if(v.return===null||v.return===l)return;v=v.return}v.sibling.return=v.return,v=v.sibling}else v.child.return=v,v=v.child}function Ig(o){var l=o.alternate;l!==null&&(o.alternate=null,Ig(l)),o.child=null,o.deletions=null,o.sibling=null,o.tag===5&&(l=o.stateNode,l!==null&&Ze(l)),o.stateNode=null,o.return=null,o.dependencies=null,o.memoizedProps=null,o.memoizedState=null,o.pendingProps=null,o.stateNode=null,o.updateQueue=null}function Ug(o){return o.tag===5||o.tag===3||o.tag===4}function Ng(o){e:for(;;){for(;o.sibling===null;){if(o.return===null||Ug(o.return))return null;o=o.return}for(o.sibling.return=o.return,o=o.sibling;o.tag!==5&&o.tag!==6&&o.tag!==18;){if(o.flags&2||o.child===null||o.tag===4)continue e;o.child.return=o,o=o.child}if(!(o.flags&2))return o.stateNode}}function Fg(o){if(Ye){e:{for(var l=o.return;l!==null;){if(Ug(l))break e;l=l.return}throw Error(a(160))}var d=l;switch(d.tag){case 5:l=d.stateNode,d.flags&32&&(nt(l),d.flags&=-33),d=Ng(o),Sf(o,d,l);break;case 3:case 4:l=d.stateNode.containerInfo,d=Ng(o),yf(o,d,l);break;default:throw Error(a(161))}}}function yf(o,l,d){var v=o.tag;if(v===5||v===6)o=o.stateNode,l?Se(d,o,l):We(d,o);else if(v!==4&&(o=o.child,o!==null))for(yf(o,l,d),o=o.sibling;o!==null;)yf(o,l,d),o=o.sibling}function Sf(o,l,d){var v=o.tag;if(v===5||v===6)o=o.stateNode,l?he(d,o,l):Le(d,o);else if(v!==4&&(o=o.child,o!==null))for(Sf(o,l,d),o=o.sibling;o!==null;)Sf(o,l,d),o=o.sibling}function Og(o,l,d){for(var v=l,_=!1,E,F;;){if(!_){_=v.return;e:for(;;){if(_===null)throw Error(a(160));switch(E=_.stateNode,_.tag){case 5:F=!1;break e;case 3:E=E.containerInfo,F=!0;break e;case 4:E=E.containerInfo,F=!0;break e}_=_.return}_=!0}if(v.tag===5||v.tag===6)Lg(o,v,d),F?De(E,v.stateNode):_e(E,v.stateNode);else if(v.tag===18)F?et(E,v.stateNode):Ve(E,v.stateNode);else if(v.tag===4){if(v.child!==null){E=v.stateNode.containerInfo,F=!0,v.child.return=v,v=v.child;continue}}else if(Dg(o,v,d),v.child!==null){v.child.return=v,v=v.child;continue}if(v===l)break;for(;v.sibling===null;){if(v.return===null||v.return===l)return;v=v.return,v.tag===4&&(_=!1)}v.sibling.return=v.return,v=v.sibling}}function Mf(o,l){if(Ye){switch(l.tag){case 0:case 11:case 14:case 15:fs(3,l,l.return),Po(3,l),fs(5,l,l.return);return;case 1:return;case 5:var d=l.stateNode;if(d!=null){var v=l.memoizedProps;o=o!==null?o.memoizedProps:v;var _=l.type,E=l.updateQueue;l.updateQueue=null,E!==null&&V(d,E,_,o,v,l)}return;case 6:if(l.stateNode===null)throw Error(a(162));d=l.memoizedProps,Re(l.stateNode,o!==null?o.memoizedProps:d,d);return;case 3:xe&&o!==null&&o.memoizedState.isDehydrated&&$(l.stateNode.containerInfo);return;case 12:return;case 13:Mc(l);return;case 19:Mc(l);return;case 17:return}throw Error(a(163))}switch(l.tag){case 0:case 11:case 14:case 15:fs(3,l,l.return),Po(3,l),fs(5,l,l.return);return;case 12:return;case 13:Mc(l);return;case 19:Mc(l);return;case 3:xe&&o!==null&&o.memoizedState.isDehydrated&&$(l.stateNode.containerInfo);break;case 22:case 23:return}e:if(k){switch(l.tag){case 1:case 5:case 6:break e;case 3:case 4:l=l.stateNode,si(l.containerInfo,l.pendingChildren);break e}throw Error(a(163))}}function Mc(o){var l=o.updateQueue;if(l!==null){o.updateQueue=null;var d=o.stateNode;d===null&&(d=o.stateNode=new ZM),l.forEach(function(v){var _=r_.bind(null,o,v);d.has(v)||(d.add(v),v.then(_,_))})}}function jM(o,l){for(Ne=l;Ne!==null;){l=Ne;var d=l.deletions;if(d!==null)for(var v=0;v<d.length;v++){var _=d[v];try{var E=o;Ye?Og(E,_,l):Lg(E,_,l);var F=_.alternate;F!==null&&(F.return=null),_.return=null}catch(qe){Jn(_,l,qe)}}if(d=l.child,l.subtreeFlags&12854&&d!==null)d.return=l,Ne=d;else for(;Ne!==null;){l=Ne;try{var Z=l.flags;if(Z&32&&Ye&&nt(l.stateNode),Z&512){var le=l.alternate;if(le!==null){var Ee=le.ref;Ee!==null&&(typeof Ee=="function"?Ee(null):Ee.current=null)}}if(Z&8192)switch(l.tag){case 13:if(l.memoizedState!==null){var Ge=l.alternate;(Ge===null||Ge.memoizedState===null)&&(Pf=Cn())}break;case 22:var ht=l.memoizedState!==null,tt=l.alternate,Ht=tt!==null&&tt.memoizedState!==null;if(d=l,Ye){e:if(v=d,_=ht,E=null,Ye)for(var Ke=v;;){if(Ke.tag===5){if(E===null){E=Ke;var Hn=Ke.stateNode;_?At(Hn):Ae(Ke.stateNode,Ke.memoizedProps)}}else if(Ke.tag===6){if(E===null){var bi=Ke.stateNode;_?G(bi):se(bi,Ke.memoizedProps)}}else if((Ke.tag!==22&&Ke.tag!==23||Ke.memoizedState===null||Ke===v)&&Ke.child!==null){Ke.child.return=Ke,Ke=Ke.child;continue}if(Ke===v)break;for(;Ke.sibling===null;){if(Ke.return===null||Ke.return===v)break e;E===Ke&&(E=null),Ke=Ke.return}E===Ke&&(E=null),Ke.sibling.return=Ke.return,Ke=Ke.sibling}}if(ht&&!Ht&&d.mode&1){Ne=d;for(var ie=d.child;ie!==null;){for(d=Ne=ie;Ne!==null;){v=Ne;var j=v.child;switch(v.tag){case 0:case 11:case 14:case 15:fs(4,v,v.return);break;case 1:Sc(v,v.return);var oe=v.stateNode;if(typeof oe.componentWillUnmount=="function"){var Oe=v.return;try{oe.props=v.memoizedProps,oe.state=v.memoizedState,oe.componentWillUnmount()}catch(qe){Jn(v,Oe,qe)}}break;case 5:Sc(v,v.return);break;case 22:if(v.memoizedState!==null){kg(d);continue}}j!==null?(j.return=v,Ne=j):kg(d)}ie=ie.sibling}}}switch(Z&4102){case 2:Fg(l),l.flags&=-3;break;case 6:Fg(l),l.flags&=-3,Mf(l.alternate,l);break;case 4096:l.flags&=-4097;break;case 4100:l.flags&=-4097,Mf(l.alternate,l);break;case 4:Mf(l.alternate,l)}}catch(qe){Jn(l,l.return,qe)}if(d=l.sibling,d!==null){d.return=l.return,Ne=d;break}Ne=l.return}}}function KM(o,l,d){Ne=o,Bg(o)}function Bg(o,l,d){for(var v=(o.mode&1)!==0;Ne!==null;){var _=Ne,E=_.child;if(_.tag===22&&v){var F=_.memoizedState!==null||yc;if(!F){var Z=_.alternate,le=Z!==null&&Z.memoizedState!==null||hs;Z=yc;var Ee=hs;if(yc=F,(hs=le)&&!Ee)for(Ne=_;Ne!==null;)F=Ne,le=F.child,F.tag===22&&F.memoizedState!==null?Hg(_):le!==null?(le.return=F,Ne=le):Hg(_);for(;E!==null;)Ne=E,Bg(E),E=E.sibling;Ne=_,yc=Z,hs=Ee}zg(o)}else _.subtreeFlags&8772&&E!==null?(E.return=_,Ne=E):zg(o)}}function zg(o){for(;Ne!==null;){var l=Ne;if(l.flags&8772){var d=l.alternate;try{if(l.flags&8772)switch(l.tag){case 0:case 11:case 15:hs||Po(5,l);break;case 1:var v=l.stateNode;if(l.flags&4&&!hs)if(d===null)v.componentDidMount();else{var _=l.elementType===l.type?d.memoizedProps:Ni(l.type,d.memoizedProps);v.componentDidUpdate(_,d.memoizedState,v.__reactInternalSnapshotBeforeUpdate)}var E=l.updateQueue;E!==null&&Im(l,E,v);break;case 3:var F=l.updateQueue;if(F!==null){if(d=null,l.child!==null)switch(l.child.tag){case 5:d=ue(l.child.stateNode);break;case 1:d=l.child.stateNode}Im(l,F,d)}break;case 5:var Z=l.stateNode;d===null&&l.flags&4&&fe(Z,l.type,l.memoizedProps,l);break;case 6:break;case 4:break;case 12:break;case 13:if(xe&&l.memoizedState===null){var le=l.alternate;if(le!==null){var Ee=le.memoizedState;if(Ee!==null){var Ge=Ee.dehydrated;Ge!==null&&pe(Ge)}}}break;case 19:case 17:case 21:case 22:case 23:break;default:throw Error(a(163))}hs||l.flags&512&&xf(l)}catch(ht){Jn(l,l.return,ht)}}if(l===o){Ne=null;break}if(d=l.sibling,d!==null){d.return=l.return,Ne=d;break}Ne=l.return}}function kg(o){for(;Ne!==null;){var l=Ne;if(l===o){Ne=null;break}var d=l.sibling;if(d!==null){d.return=l.return,Ne=d;break}Ne=l.return}}function Hg(o){for(;Ne!==null;){var l=Ne;try{switch(l.tag){case 0:case 11:case 15:var d=l.return;try{Po(4,l)}catch(le){Jn(l,d,le)}break;case 1:var v=l.stateNode;if(typeof v.componentDidMount=="function"){var _=l.return;try{v.componentDidMount()}catch(le){Jn(l,_,le)}}var E=l.return;try{xf(l)}catch(le){Jn(l,E,le)}break;case 5:var F=l.return;try{xf(l)}catch(le){Jn(l,F,le)}}}catch(le){Jn(l,l.return,le)}if(l===o){Ne=null;break}var Z=l.sibling;if(Z!==null){Z.return=l.return,Ne=Z;break}Ne=l.return}}var _c=0,Tc=1,wc=2,Ec=3,bc=4;if(typeof Symbol=="function"&&Symbol.for){var Co=Symbol.for;_c=Co("selector.component"),Tc=Co("selector.has_pseudo_class"),wc=Co("selector.role"),Ec=Co("selector.test_id"),bc=Co("selector.text")}function _f(o){var l=me(o);if(l!=null){if(typeof l.memoizedProps["data-testname"]!="string")throw Error(a(364));return l}if(o=yt(o),o===null)throw Error(a(362));return o.stateNode.current}function Tf(o,l){switch(l.$$typeof){case _c:if(o.type===l.value)return!0;break;case Tc:e:{l=l.value,o=[o,0];for(var d=0;d<o.length;){var v=o[d++],_=o[d++],E=l[_];if(v.tag!==5||!D(v)){for(;E!=null&&Tf(v,E);)_++,E=l[_];if(_===l.length){l=!0;break e}else for(v=v.child;v!==null;)o.push(v,_),v=v.sibling}}l=!1}return l;case wc:if(o.tag===5&&ce(o.stateNode,l.value))return!0;break;case bc:if((o.tag===5||o.tag===6)&&(o=O(o),o!==null&&0<=o.indexOf(l.value)))return!0;break;case Ec:if(o.tag===5&&(o=o.memoizedProps["data-testname"],typeof o=="string"&&o.toLowerCase()===l.value.toLowerCase()))return!0;break;default:throw Error(a(365))}return!1}function wf(o){switch(o.$$typeof){case _c:return"<"+(L(o.value)||"Unknown")+">";case Tc:return":has("+(wf(o)||"")+")";case wc:return'[role="'+o.value+'"]';case bc:return'"'+o.value+'"';case Ec:return'[data-testname="'+o.value+'"]';default:throw Error(a(365))}}function Vg(o,l){var d=[];o=[o,0];for(var v=0;v<o.length;){var _=o[v++],E=o[v++],F=l[E];if(_.tag!==5||!D(_)){for(;F!=null&&Tf(_,F);)E++,F=l[E];if(E===l.length)d.push(_);else for(_=_.child;_!==null;)o.push(_,E),_=_.sibling}}return d}function Ef(o,l){if(!$e)throw Error(a(363));o=_f(o),o=Vg(o,l),l=[],o=Array.from(o);for(var d=0;d<o.length;){var v=o[d++];if(v.tag===5)D(v)||l.push(v.stateNode);else for(v=v.child;v!==null;)o.push(v),v=v.sibling}return l}var QM=Math.ceil,Ac=c.ReactCurrentDispatcher,bf=c.ReactCurrentOwner,cn=c.ReactCurrentBatchConfig,Mt=0,pn=null,mn=null,Nn=0,fi=0,ha=ut(0),Sn=0,Ro=null,fa=0,Pc=0,Af=0,Do=null,Kn=null,Pf=0,Cf=1/0;function da(){Cf=Cn()+500}var Cc=!1,Rf=null,Fr=null,Rc=!1,Or=null,Dc=0,Lo=0,Df=null,Lc=-1,Ic=0;function Xn(){return Mt&6?Cn():Lc!==-1?Lc:Lc=Cn()}function Br(o){return o.mode&1?Mt&2&&Nn!==0?Nn&-Nn:IM.transition!==null?(Ic===0&&(o=Yl,Yl<<=1,!(Yl&4194240)&&(Yl=64),Ic=o),Ic):(o=Rt,o!==0?o:ve()):1}function wi(o,l,d){if(50<Lo)throw Lo=0,Df=null,Error(a(185));var v=Uc(o,l);return v===null?null:(mo(v,l,d),(!(Mt&2)||v!==pn)&&(v===pn&&(!(Mt&2)&&(Pc|=l),Sn===4&&zr(v,Nn)),Qn(v,d),l===1&&Mt===0&&!(o.mode&1)&&(da(),Kl&&Ji())),v)}function Uc(o,l){o.lanes|=l;var d=o.alternate;for(d!==null&&(d.lanes|=l),d=o,o=o.return;o!==null;)o.childLanes|=l,d=o.alternate,d!==null&&(d.childLanes|=l),d=o,o=o.return;return d.tag===3?d.stateNode:null}function Qn(o,l){var d=o.callbackNode;wM(o,l);var v=ql(o,o===pn?Nn:0);if(v===0)d!==null&&Pm(d),o.callbackNode=null,o.callbackPriority=0;else if(l=v&-v,o.callbackPriority!==l){if(d!=null&&Pm(d),l===1)o.tag===0?LM(Wg.bind(null,o)):Cm(Wg.bind(null,o)),Be?ke(function(){Mt===0&&Ji()}):Bh(zh,Ji),d=null;else{switch(Am(v)){case 1:d=zh;break;case 4:d=PM;break;case 16:d=kh;break;case 536870912:d=CM;break;default:d=kh}d=$g(d,Gg.bind(null,o))}o.callbackPriority=l,o.callbackNode=d}}function Gg(o,l){if(Lc=-1,Ic=0,Mt&6)throw Error(a(327));var d=o.callbackNode;if(ms()&&o.callbackNode!==d)return null;var v=ql(o,o===pn?Nn:0);if(v===0)return null;if(v&30||v&o.expiredLanes||l)l=Nc(o,v);else{l=v;var _=Mt;Mt|=2;var E=Zg();(pn!==o||Nn!==l)&&(da(),ds(o,l));do try{e_();break}catch(Z){Yg(o,Z)}while(1);Gh(),Ac.current=E,Mt=_,mn!==null?l=0:(pn=null,Nn=0,l=Sn)}if(l!==0){if(l===2&&(_=Nh(o),_!==0&&(v=_,l=Lf(o,_))),l===1)throw d=Ro,ds(o,0),zr(o,v),Qn(o,Cn()),d;if(l===6)zr(o,v);else{if(_=o.current.alternate,!(v&30)&&!JM(_)&&(l=Nc(o,v),l===2&&(E=Nh(o),E!==0&&(v=E,l=Lf(o,E))),l===1))throw d=Ro,ds(o,0),zr(o,v),Qn(o,Cn()),d;switch(o.finishedWork=_,o.finishedLanes=v,l){case 0:case 1:throw Error(a(345));case 2:ps(o,Kn);break;case 3:if(zr(o,v),(v&130023424)===v&&(l=Pf+500-Cn(),10<l)){if(ql(o,0)!==0)break;if(_=o.suspendedLanes,(_&v)!==v){Xn(),o.pingedLanes|=o.suspendedLanes&_;break}o.timeoutHandle=He(ps.bind(null,o,Kn),l);break}ps(o,Kn);break;case 4:if(zr(o,v),(v&4194240)===v)break;for(l=o.eventTimes,_=-1;0<v;){var F=31-Ui(v);E=1<<F,F=l[F],F>_&&(_=F),v&=~E}if(v=_,v=Cn()-v,v=(120>v?120:480>v?480:1080>v?1080:1920>v?1920:3e3>v?3e3:4320>v?4320:1960*QM(v/1960))-v,10<v){o.timeoutHandle=He(ps.bind(null,o,Kn),v);break}ps(o,Kn);break;case 5:ps(o,Kn);break;default:throw Error(a(329))}}}return Qn(o,Cn()),o.callbackNode===d?Gg.bind(null,o):null}function Lf(o,l){var d=Do;return o.current.memoizedState.isDehydrated&&(ds(o,l).flags|=256),o=Nc(o,l),o!==2&&(l=Kn,Kn=d,l!==null&&If(l)),o}function If(o){Kn===null?Kn=o:Kn.push.apply(Kn,o)}function JM(o){for(var l=o;;){if(l.flags&16384){var d=l.updateQueue;if(d!==null&&(d=d.stores,d!==null))for(var v=0;v<d.length;v++){var _=d[v],E=_.getSnapshot;_=_.value;try{if(!Qi(E(),_))return!1}catch{return!1}}}if(d=l.child,l.subtreeFlags&16384&&d!==null)d.return=l,l=d;else{if(l===o)break;for(;l.sibling===null;){if(l.return===null||l.return===o)return!0;l=l.return}l.sibling.return=l.return,l=l.sibling}}return!0}function zr(o,l){for(l&=~Af,l&=~Pc,o.suspendedLanes|=l,o.pingedLanes&=~l,o=o.expirationTimes;0<l;){var d=31-Ui(l),v=1<<d;o[d]=-1,l&=~v}}function Wg(o){if(Mt&6)throw Error(a(327));ms();var l=ql(o,0);if(!(l&1))return Qn(o,Cn()),null;var d=Nc(o,l);if(o.tag!==0&&d===2){var v=Nh(o);v!==0&&(l=v,d=Lf(o,v))}if(d===1)throw d=Ro,ds(o,0),zr(o,l),Qn(o,Cn()),d;if(d===6)throw Error(a(345));return o.finishedWork=o.current.alternate,o.finishedLanes=l,ps(o,Kn),Qn(o,Cn()),null}function Xg(o){Or!==null&&Or.tag===0&&!(Mt&6)&&ms();var l=Mt;Mt|=1;var d=cn.transition,v=Rt;try{if(cn.transition=null,Rt=1,o)return o()}finally{Rt=v,cn.transition=d,Mt=l,!(Mt&6)&&Ji()}}function Uf(){fi=ha.current,zt(ha)}function ds(o,l){o.finishedWork=null,o.finishedLanes=0;var d=o.timeoutHandle;if(d!==Tt&&(o.timeoutHandle=Tt,je(d)),mn!==null)for(d=mn.return;d!==null;){var v=d;switch(Kh(v),v.tag){case 1:v=v.type.childContextTypes,v!=null&&Ir();break;case 3:ca(),zt(dn),zt(yn),rf();break;case 5:tf(v);break;case 4:ca();break;case 13:zt(en);break;case 19:zt(en);break;case 10:Wh(v.type._context);break;case 22:case 23:Uf()}d=d.return}if(pn=o,mn=o=kr(o.current,null),Nn=fi=l,Sn=0,Ro=null,Af=Pc=fa=0,Kn=Do=null,$i!==null){for(l=0;l<$i.length;l++)if(d=$i[l],v=d.interleaved,v!==null){d.interleaved=null;var _=v.next,E=d.pending;if(E!==null){var F=E.next;E.next=_,v.next=F}d.pending=v}$i=null}return o}function Yg(o,l){do{var d=mn;try{if(Gh(),oc.current=dc,lc){for(var v=an.memoizedState;v!==null;){var _=v.queue;_!==null&&(_.pending=null),v=v.next}lc=!1}if(ua=0,Rn=Bn=an=null,Mo=!1,_o=0,bf.current=null,d===null||d.return===null){Sn=1,Ro=l,mn=null;break}e:{var E=o,F=d.return,Z=d,le=l;if(l=Nn,Z.flags|=32768,le!==null&&typeof le=="object"&&typeof le.then=="function"){var Ee=le,Ge=Z,ht=Ge.tag;if(!(Ge.mode&1)&&(ht===0||ht===11||ht===15)){var tt=Ge.alternate;tt?(Ge.updateQueue=tt.updateQueue,Ge.memoizedState=tt.memoizedState,Ge.lanes=tt.lanes):(Ge.updateQueue=null,Ge.memoizedState=null)}var Ht=dg(F);if(Ht!==null){Ht.flags&=-257,pg(Ht,F,Z,E,l),Ht.mode&1&&fg(E,Ee,l),l=Ht,le=Ee;var Ke=l.updateQueue;if(Ke===null){var Hn=new Set;Hn.add(le),l.updateQueue=Hn}else Ke.add(le);break e}else{if(!(l&1)){fg(E,Ee,l),Nf();break e}le=Error(a(426))}}else if($t&&Z.mode&1){var bi=dg(F);if(bi!==null){!(bi.flags&65536)&&(bi.flags|=256),pg(bi,F,Z,E,l),$h(le);break e}}E=le,Sn!==4&&(Sn=2),Do===null?Do=[E]:Do.push(E),le=hf(le,Z),Z=F;do{switch(Z.tag){case 3:Z.flags|=65536,l&=-l,Z.lanes|=l;var ie=ug(Z,le,l);Lm(Z,ie);break e;case 1:E=le;var j=Z.type,oe=Z.stateNode;if(!(Z.flags&128)&&(typeof j.getDerivedStateFromError=="function"||oe!==null&&typeof oe.componentDidCatch=="function"&&(Fr===null||!Fr.has(oe)))){Z.flags|=65536,l&=-l,Z.lanes|=l;var Oe=hg(Z,E,l);Lm(Z,Oe);break e}}Z=Z.return}while(Z!==null)}jg(d)}catch(qe){l=qe,mn===d&&d!==null&&(mn=d=d.return);continue}break}while(1)}function Zg(){var o=Ac.current;return Ac.current=dc,o===null?dc:o}function Nf(){(Sn===0||Sn===3||Sn===2)&&(Sn=4),pn===null||!(fa&268435455)&&!(Pc&268435455)||zr(pn,Nn)}function Nc(o,l){var d=Mt;Mt|=2;var v=Zg();pn===o&&Nn===l||ds(o,l);do try{$M();break}catch(_){Yg(o,_)}while(1);if(Gh(),Mt=d,Ac.current=v,mn!==null)throw Error(a(261));return pn=null,Nn=0,Sn}function $M(){for(;mn!==null;)qg(mn)}function e_(){for(;mn!==null&&!bM();)qg(mn)}function qg(o){var l=Jg(o.alternate,o,fi);o.memoizedProps=o.pendingProps,l===null?jg(o):mn=l,bf.current=null}function jg(o){var l=o;do{var d=l.alternate;if(o=l.return,l.flags&32768){if(d=YM(d,l),d!==null){d.flags&=32767,mn=d;return}if(o!==null)o.flags|=32768,o.subtreeFlags=0,o.deletions=null;else{Sn=6,mn=null;return}}else if(d=GM(d,l,fi),d!==null){mn=d;return}if(l=l.sibling,l!==null){mn=l;return}mn=l=o}while(l!==null);Sn===0&&(Sn=5)}function ps(o,l){var d=Rt,v=cn.transition;try{cn.transition=null,Rt=1,t_(o,l,d)}finally{cn.transition=v,Rt=d}return null}function t_(o,l,d){do ms();while(Or!==null);if(Mt&6)throw Error(a(327));var v=o.finishedWork,_=o.finishedLanes;if(v===null)return null;if(o.finishedWork=null,o.finishedLanes=0,v===o.current)throw Error(a(177));o.callbackNode=null,o.callbackPriority=0;var E=v.lanes|v.childLanes;if(EM(o,E),o===pn&&(mn=pn=null,Nn=0),!(v.subtreeFlags&2064)&&!(v.flags&2064)||Rc||(Rc=!0,$g(kh,function(){return ms(),null})),E=(v.flags&15990)!==0,v.subtreeFlags&15990||E){E=cn.transition,cn.transition=null;var F=Rt;Rt=1;var Z=Mt;Mt|=4,bf.current=null,qM(o,v),jM(o,v),Y(o.containerInfo),o.current=v,KM(v),AM(),Mt=Z,Rt=F,cn.transition=E}else o.current=v;if(Rc&&(Rc=!1,Or=o,Dc=_),E=o.pendingLanes,E===0&&(Fr=null),RM(v.stateNode),Qn(o,Cn()),l!==null)for(d=o.onRecoverableError,v=0;v<l.length;v++)d(l[v]);if(Cc)throw Cc=!1,o=Rf,Rf=null,o;return Dc&1&&o.tag!==0&&ms(),E=o.pendingLanes,E&1?o===Df?Lo++:(Lo=0,Df=o):Lo=0,Ji(),null}function ms(){if(Or!==null){var o=Am(Dc),l=cn.transition,d=Rt;try{if(cn.transition=null,Rt=16>o?16:o,Or===null)var v=!1;else{if(o=Or,Or=null,Dc=0,Mt&6)throw Error(a(331));var _=Mt;for(Mt|=4,Ne=o.current;Ne!==null;){var E=Ne,F=E.child;if(Ne.flags&16){var Z=E.deletions;if(Z!==null){for(var le=0;le<Z.length;le++){var Ee=Z[le];for(Ne=Ee;Ne!==null;){var Ge=Ne;switch(Ge.tag){case 0:case 11:case 15:fs(8,Ge,E)}var ht=Ge.child;if(ht!==null)ht.return=Ge,Ne=ht;else for(;Ne!==null;){Ge=Ne;var tt=Ge.sibling,Ht=Ge.return;if(Ig(Ge),Ge===Ee){Ne=null;break}if(tt!==null){tt.return=Ht,Ne=tt;break}Ne=Ht}}}var Ke=E.alternate;if(Ke!==null){var Hn=Ke.child;if(Hn!==null){Ke.child=null;do{var bi=Hn.sibling;Hn.sibling=null,Hn=bi}while(Hn!==null)}}Ne=E}}if(E.subtreeFlags&2064&&F!==null)F.return=E,Ne=F;else e:for(;Ne!==null;){if(E=Ne,E.flags&2048)switch(E.tag){case 0:case 11:case 15:fs(9,E,E.return)}var ie=E.sibling;if(ie!==null){ie.return=E.return,Ne=ie;break e}Ne=E.return}}var j=o.current;for(Ne=j;Ne!==null;){F=Ne;var oe=F.child;if(F.subtreeFlags&2064&&oe!==null)oe.return=F,Ne=oe;else e:for(F=j;Ne!==null;){if(Z=Ne,Z.flags&2048)try{switch(Z.tag){case 0:case 11:case 15:Po(9,Z)}}catch(qe){Jn(Z,Z.return,qe)}if(Z===F){Ne=null;break e}var Oe=Z.sibling;if(Oe!==null){Oe.return=Z.return,Ne=Oe;break e}Ne=Z.return}}if(Mt=_,Ji(),Ki&&typeof Ki.onPostCommitFiberRoot=="function")try{Ki.onPostCommitFiberRoot(jl,o)}catch{}v=!0}return v}finally{Rt=d,cn.transition=l}}return!1}function Kg(o,l,d){l=hf(d,l),l=ug(o,l,1),Nr(o,l),l=Xn(),o=Uc(o,1),o!==null&&(mo(o,1,l),Qn(o,l))}function Jn(o,l,d){if(o.tag===3)Kg(o,o,d);else for(;l!==null;){if(l.tag===3){Kg(l,o,d);break}else if(l.tag===1){var v=l.stateNode;if(typeof l.type.getDerivedStateFromError=="function"||typeof v.componentDidCatch=="function"&&(Fr===null||!Fr.has(v))){o=hf(d,o),o=hg(l,o,1),Nr(l,o),o=Xn(),l=Uc(l,1),l!==null&&(mo(l,1,o),Qn(l,o));break}}l=l.return}}function n_(o,l,d){var v=o.pingCache;v!==null&&v.delete(l),l=Xn(),o.pingedLanes|=o.suspendedLanes&d,pn===o&&(Nn&d)===d&&(Sn===4||Sn===3&&(Nn&130023424)===Nn&&500>Cn()-Pf?ds(o,0):Af|=d),Qn(o,l)}function Qg(o,l){l===0&&(o.mode&1?(l=Zl,Zl<<=1,!(Zl&130023424)&&(Zl=4194304)):l=1);var d=Xn();o=Uc(o,l),o!==null&&(mo(o,l,d),Qn(o,d))}function i_(o){var l=o.memoizedState,d=0;l!==null&&(d=l.retryLane),Qg(o,d)}function r_(o,l){var d=0;switch(o.tag){case 13:var v=o.stateNode,_=o.memoizedState;_!==null&&(d=_.retryLane);break;case 19:v=o.stateNode;break;default:throw Error(a(314))}v!==null&&v.delete(l),Qg(o,d)}var Jg;Jg=function(o,l,d){if(o!==null)if(o.memoizedProps!==l.pendingProps||dn.current)hi=!0;else{if(!(o.lanes&d)&&!(l.flags&128))return hi=!1,XM(o,l,d);hi=!!(o.flags&131072)}else hi=!1,$t&&l.flags&1048576&&Bm(l,rc,l.index);switch(l.lanes=0,l.tag){case 2:var v=l.type;o!==null&&(o.alternate=null,l.alternate=null,l.flags|=2),o=l.pendingProps;var _=rn(l,yn.current);ia(l,d),_=af(null,l,v,o,_,d);var E=of();return l.flags|=1,typeof _=="object"&&_!==null&&typeof _.render=="function"&&_.$$typeof===void 0?(l.tag=1,l.memoizedState=null,l.updateQueue=null,sn(v)?(E=!0,ta(l)):E=!1,l.memoizedState=_.state!==null&&_.state!==void 0?_.state:null,Yh(l),_.updater=nc,l.stateNode=_,_._reactInternals=l,qh(l,v,o,d),l=pf(null,l,v,!0,E,d)):(l.tag=0,$t&&E&&jh(l),Wn(null,l,_,d),l=l.child),l;case 16:v=l.elementType;e:{switch(o!==null&&(o.alternate=null,l.alternate=null,l.flags|=2),o=l.pendingProps,_=v._init,v=_(v._payload),l.type=v,_=l.tag=a_(v),o=Ni(v,o),_){case 0:l=df(null,l,v,o,d);break e;case 1:l=_g(null,l,v,o,d);break e;case 11:l=vg(null,l,v,o,d);break e;case 14:l=xg(null,l,v,Ni(v.type,o),d);break e}throw Error(a(306,v,""))}return l;case 0:return v=l.type,_=l.pendingProps,_=l.elementType===v?_:Ni(v,_),df(o,l,v,_,d);case 1:return v=l.type,_=l.pendingProps,_=l.elementType===v?_:Ni(v,_),_g(o,l,v,_,d);case 3:e:{if(Tg(l),o===null)throw Error(a(387));v=l.pendingProps,E=l.memoizedState,_=E.element,Dm(o,l),tc(l,v,null,d);var F=l.memoizedState;if(v=F.element,xe&&E.isDehydrated)if(E={element:v,isDehydrated:!1,cache:F.cache,transitions:F.transitions},l.updateQueue.baseState=E,l.memoizedState=E,l.flags&256){_=Error(a(423)),l=wg(o,l,v,d,_);break e}else if(v!==_){_=Error(a(424)),l=wg(o,l,v,d,_);break e}else for(xe&&(ui=Lh(l.stateNode.containerInfo),ci=l,$t=!0,Fi=null,go=!1),d=Wm(l,null,v,d),l.child=d;d;)d.flags=d.flags&-3|4096,d=d.sibling;else{if(aa(),v===_){l=gr(o,l,d);break e}Wn(o,l,v,d)}l=l.child}return l;case 5:return Xm(l),o===null&&Jh(l),v=l.type,_=l.pendingProps,E=o!==null?o.memoizedProps:null,F=_.children,Pe(v,_)?F=null:E!==null&&Pe(v,E)&&(l.flags|=32),Mg(o,l),Wn(o,l,F,d),l.child;case 6:return o===null&&Jh(l),null;case 13:return Eg(o,l,d);case 4:return ef(l,l.stateNode.containerInfo),v=l.pendingProps,o===null?l.child=oa(l,null,v,d):Wn(o,l,v,d),l.child;case 11:return v=l.type,_=l.pendingProps,_=l.elementType===v?_:Ni(v,_),vg(o,l,v,_,d);case 7:return Wn(o,l,l.pendingProps,d),l.child;case 8:return Wn(o,l,l.pendingProps.children,d),l.child;case 12:return Wn(o,l,l.pendingProps.children,d),l.child;case 10:e:{if(v=l.type._context,_=l.pendingProps,E=l.memoizedProps,F=_.value,Rm(l,v,F),E!==null)if(Qi(E.value,F)){if(E.children===_.children&&!dn.current){l=gr(o,l,d);break e}}else for(E=l.child,E!==null&&(E.return=l);E!==null;){var Z=E.dependencies;if(Z!==null){F=E.child;for(var le=Z.firstContext;le!==null;){if(le.context===v){if(E.tag===1){le=fr(-1,d&-d),le.tag=2;var Ee=E.updateQueue;if(Ee!==null){Ee=Ee.shared;var Ge=Ee.pending;Ge===null?le.next=le:(le.next=Ge.next,Ge.next=le),Ee.pending=le}}E.lanes|=d,le=E.alternate,le!==null&&(le.lanes|=d),Xh(E.return,d,l),Z.lanes|=d;break}le=le.next}}else if(E.tag===10)F=E.type===l.type?null:E.child;else if(E.tag===18){if(F=E.return,F===null)throw Error(a(341));F.lanes|=d,Z=F.alternate,Z!==null&&(Z.lanes|=d),Xh(F,d,l),F=E.sibling}else F=E.child;if(F!==null)F.return=E;else for(F=E;F!==null;){if(F===l){F=null;break}if(E=F.sibling,E!==null){E.return=F.return,F=E;break}F=F.return}E=F}Wn(o,l,_.children,d),l=l.child}return l;case 9:return _=l.type,v=l.pendingProps.children,ia(l,d),_=yi(_),v=v(_),l.flags|=1,Wn(o,l,v,d),l.child;case 14:return v=l.type,_=Ni(v,l.pendingProps),_=Ni(v.type,_),xg(o,l,v,_,d);case 15:return yg(o,l,l.type,l.pendingProps,d);case 17:return v=l.type,_=l.pendingProps,_=l.elementType===v?_:Ni(v,_),o!==null&&(o.alternate=null,l.alternate=null,l.flags|=2),l.tag=1,sn(v)?(o=!0,ta(l)):o=!1,ia(l,d),Fm(l,v,_),qh(l,v,_,d),pf(null,l,v,!0,o,d);case 19:return Cg(o,l,d);case 22:return Sg(o,l,d)}throw Error(a(156,l.tag))};function $g(o,l){return Bh(o,l)}function s_(o,l,d,v){this.tag=o,this.key=d,this.sibling=this.child=this.return=this.stateNode=this.type=this.elementType=null,this.index=0,this.ref=null,this.pendingProps=l,this.dependencies=this.memoizedState=this.updateQueue=this.memoizedProps=null,this.mode=v,this.subtreeFlags=this.flags=0,this.deletions=null,this.childLanes=this.lanes=0,this.alternate=null}function Ei(o,l,d,v){return new s_(o,l,d,v)}function Ff(o){return o=o.prototype,!(!o||!o.isReactComponent)}function a_(o){if(typeof o=="function")return Ff(o)?1:0;if(o!=null){if(o=o.$$typeof,o===T)return 11;if(o===w)return 14}return 2}function kr(o,l){var d=o.alternate;return d===null?(d=Ei(o.tag,l,o.key,o.mode),d.elementType=o.elementType,d.type=o.type,d.stateNode=o.stateNode,d.alternate=o,o.alternate=d):(d.pendingProps=l,d.type=o.type,d.flags=0,d.subtreeFlags=0,d.deletions=null),d.flags=o.flags&14680064,d.childLanes=o.childLanes,d.lanes=o.lanes,d.child=o.child,d.memoizedProps=o.memoizedProps,d.memoizedState=o.memoizedState,d.updateQueue=o.updateQueue,l=o.dependencies,d.dependencies=l===null?null:{lanes:l.lanes,firstContext:l.firstContext},d.sibling=o.sibling,d.index=o.index,d.ref=o.ref,d}function Fc(o,l,d,v,_,E){var F=2;if(v=o,typeof o=="function")Ff(o)&&(F=1);else if(typeof o=="string")F=5;else e:switch(o){case f:return gs(d.children,_,E,l);case p:F=8,_|=8;break;case m:return o=Ei(12,d,l,_|2),o.elementType=m,o.lanes=E,o;case S:return o=Ei(13,d,l,_),o.elementType=S,o.lanes=E,o;case x:return o=Ei(19,d,l,_),o.elementType=x,o.lanes=E,o;case b:return Oc(d,_,E,l);default:if(typeof o=="object"&&o!==null)switch(o.$$typeof){case g:F=10;break e;case y:F=9;break e;case T:F=11;break e;case w:F=14;break e;case M:F=16,v=null;break e}throw Error(a(130,o==null?o:typeof o,""))}return l=Ei(F,d,l,_),l.elementType=o,l.type=v,l.lanes=E,l}function gs(o,l,d,v){return o=Ei(7,o,v,l),o.lanes=d,o}function Oc(o,l,d,v){return o=Ei(22,o,v,l),o.elementType=b,o.lanes=d,o.stateNode={},o}function Of(o,l,d){return o=Ei(6,o,null,l),o.lanes=d,o}function Bf(o,l,d){return l=Ei(4,o.children!==null?o.children:[],o.key,l),l.lanes=d,l.stateNode={containerInfo:o.containerInfo,pendingChildren:null,implementation:o.implementation},l}function o_(o,l,d,v,_){this.tag=l,this.containerInfo=o,this.finishedWork=this.pingCache=this.current=this.pendingChildren=null,this.timeoutHandle=Tt,this.callbackNode=this.pendingContext=this.context=null,this.callbackPriority=0,this.eventTimes=Fh(0),this.expirationTimes=Fh(-1),this.entangledLanes=this.finishedLanes=this.mutableReadLanes=this.expiredLanes=this.pingedLanes=this.suspendedLanes=this.pendingLanes=0,this.entanglements=Fh(0),this.identifierPrefix=v,this.onRecoverableError=_,xe&&(this.mutableSourceEagerHydrationData=null)}function ev(o,l,d,v,_,E,F,Z,le){return o=new o_(o,l,d,Z,le),l===1?(l=1,E===!0&&(l|=8)):l=0,E=Ei(3,null,null,l),o.current=E,E.stateNode=o,E.memoizedState={element:v,isDehydrated:d,cache:null,transitions:null},Yh(E),o}function tv(o){if(!o)return Fn;o=o._reactInternals;e:{if(A(o)!==o||o.tag!==1)throw Error(a(170));var l=o;do{switch(l.tag){case 3:l=l.stateNode.context;break e;case 1:if(sn(l.type)){l=l.stateNode.__reactInternalMemoizedMergedChildContext;break e}}l=l.return}while(l!==null);throw Error(a(171))}if(o.tag===1){var d=o.type;if(sn(d))return ea(o,d,l)}return l}function nv(o){var l=o._reactInternals;if(l===void 0)throw typeof o.render=="function"?Error(a(188)):(o=Object.keys(o).join(","),Error(a(268,o)));return o=te(l),o===null?null:o.stateNode}function iv(o,l){if(o=o.memoizedState,o!==null&&o.dehydrated!==null){var d=o.retryLane;o.retryLane=d!==0&&d<l?d:l}}function zf(o,l){iv(o,l),(o=o.alternate)&&iv(o,l)}function l_(o){return o=te(o),o===null?null:o.stateNode}function c_(){return null}return t.attemptContinuousHydration=function(o){if(o.tag===13){var l=Xn();wi(o,134217728,l),zf(o,134217728)}},t.attemptHydrationAtCurrentPriority=function(o){if(o.tag===13){var l=Xn(),d=Br(o);wi(o,d,l),zf(o,d)}},t.attemptSynchronousHydration=function(o){switch(o.tag){case 3:var l=o.stateNode;if(l.current.memoizedState.isDehydrated){var d=po(l.pendingLanes);d!==0&&(Oh(l,d|1),Qn(l,Cn()),!(Mt&6)&&(da(),Ji()))}break;case 13:var v=Xn();Xg(function(){return wi(o,1,v)}),zf(o,1)}},t.batchedUpdates=function(o,l){var d=Mt;Mt|=1;try{return o(l)}finally{Mt=d,Mt===0&&(da(),Kl&&Ji())}},t.createComponentSelector=function(o){return{$$typeof:_c,value:o}},t.createContainer=function(o,l,d,v,_,E,F){return ev(o,l,!1,null,d,v,_,E,F)},t.createHasPseudoClassSelector=function(o){return{$$typeof:Tc,value:o}},t.createHydrationContainer=function(o,l,d,v,_,E,F,Z,le){return o=ev(d,v,!0,o,_,E,F,Z,le),o.context=tv(null),d=o.current,v=Xn(),_=Br(d),E=fr(v,_),E.callback=l??null,Nr(d,E),o.current.lanes=_,mo(o,_,v),Qn(o,v),o},t.createPortal=function(o,l,d){var v=3<arguments.length&&arguments[3]!==void 0?arguments[3]:null;return{$$typeof:h,key:v==null?null:""+v,children:o,containerInfo:l,implementation:d}},t.createRoleSelector=function(o){return{$$typeof:wc,value:o}},t.createTestNameSelector=function(o){return{$$typeof:Ec,value:o}},t.createTextSelector=function(o){return{$$typeof:bc,value:o}},t.deferredUpdates=function(o){var l=Rt,d=cn.transition;try{return cn.transition=null,Rt=16,o()}finally{Rt=l,cn.transition=d}},t.discreteUpdates=function(o,l,d,v,_){var E=Rt,F=cn.transition;try{return cn.transition=null,Rt=1,o(l,d,v,_)}finally{Rt=E,cn.transition=F,Mt===0&&da()}},t.findAllNodes=Ef,t.findBoundingRects=function(o,l){if(!$e)throw Error(a(363));l=Ef(o,l),o=[];for(var d=0;d<l.length;d++)o.push(Gt(l[d]));for(l=o.length-1;0<l;l--){d=o[l];for(var v=d.x,_=v+d.width,E=d.y,F=E+d.height,Z=l-1;0<=Z;Z--)if(l!==Z){var le=o[Z],Ee=le.x,Ge=Ee+le.width,ht=le.y,tt=ht+le.height;if(v>=Ee&&E>=ht&&_<=Ge&&F<=tt){o.splice(l,1);break}else if(v!==Ee||d.width!==le.width||tt<E||ht>F){if(!(E!==ht||d.height!==le.height||Ge<v||Ee>_)){Ee>v&&(le.width+=Ee-v,le.x=v),Ge<_&&(le.width=_-Ee),o.splice(l,1);break}}else{ht>E&&(le.height+=ht-E,le.y=E),tt<F&&(le.height=F-ht),o.splice(l,1);break}}}return o},t.findHostInstance=nv,t.findHostInstanceWithNoPortals=function(o){return o=z(o),o=o!==null?J(o):null,o===null?null:o.stateNode},t.findHostInstanceWithWarning=function(o){return nv(o)},t.flushControlled=function(o){var l=Mt;Mt|=1;var d=cn.transition,v=Rt;try{cn.transition=null,Rt=1,o()}finally{Rt=v,cn.transition=d,Mt=l,Mt===0&&(da(),Ji())}},t.flushPassiveEffects=ms,t.flushSync=Xg,t.focusWithin=function(o,l){if(!$e)throw Error(a(363));for(o=_f(o),l=Vg(o,l),l=Array.from(l),o=0;o<l.length;){var d=l[o++];if(!D(d)){if(d.tag===5&&Te(d.stateNode))return!0;for(d=d.child;d!==null;)l.push(d),d=d.sibling}}return!1},t.getCurrentUpdatePriority=function(){return Rt},t.getFindAllNodesFailureDescription=function(o,l){if(!$e)throw Error(a(363));var d=0,v=[];o=[_f(o),0];for(var _=0;_<o.length;){var E=o[_++],F=o[_++],Z=l[F];if((E.tag!==5||!D(E))&&(Tf(E,Z)&&(v.push(wf(Z)),F++,F>d&&(d=F)),F<l.length))for(E=E.child;E!==null;)o.push(E,F),E=E.sibling}if(d<l.length){for(o=[];d<l.length;d++)o.push(wf(l[d]));return`findAllNodes was able to match part of the selector:
  `+(v.join(" > ")+`

No matching component was found for:
  `)+o.join(" > ")}return null},t.getPublicRootInstance=function(o){if(o=o.current,!o.child)return null;switch(o.child.tag){case 5:return ue(o.child.stateNode);default:return o.child.stateNode}},t.injectIntoDevTools=function(o){if(o={bundleType:o.bundleType,version:o.version,rendererPackageName:o.rendererPackageName,rendererConfig:o.rendererConfig,overrideHookState:null,overrideHookStateDeletePath:null,overrideHookStateRenamePath:null,overrideProps:null,overridePropsDeletePath:null,overridePropsRenamePath:null,setErrorHandler:null,setSuspenseHandler:null,scheduleUpdate:null,currentDispatcherRef:c.ReactCurrentDispatcher,findHostInstanceByFiber:l_,findFiberByHostInstance:o.findFiberByHostInstance||c_,findHostInstancesForRefresh:null,scheduleRefresh:null,scheduleRoot:null,setRefreshHandler:null,getCurrentFiber:null,reconcilerVersion:"18.0.0-fc46dba67-20220329"},typeof __REACT_DEVTOOLS_GLOBAL_HOOK__>"u")o=!1;else{var l=__REACT_DEVTOOLS_GLOBAL_HOOK__;if(l.isDisabled||!l.supportsFiber)o=!0;else{try{jl=l.inject(o),Ki=l}catch{}o=!!l.checkDCE}}return o},t.isAlreadyRendering=function(){return!1},t.observeVisibleRects=function(o,l,d,v){if(!$e)throw Error(a(363));o=Ef(o,l);var _=Me(o,d,v).disconnect;return{disconnect:function(){_()}}},t.registerMutableSourceForHydration=function(o,l){var d=l._getVersion;d=d(l._source),o.mutableSourceEagerHydrationData==null?o.mutableSourceEagerHydrationData=[l,d]:o.mutableSourceEagerHydrationData.push(l,d)},t.runWithPriority=function(o,l){var d=Rt;try{return Rt=o,l()}finally{Rt=d}},t.shouldError=function(){return null},t.shouldSuspend=function(){return!1},t.updateContainer=function(o,l,d,v){var _=l.current,E=Xn(),F=Br(_);return d=tv(d),l.context===null?l.context=d:l.pendingContext=d,l=fr(E,F),l.payload={element:o},v=v===void 0?null:v,v!==null&&(l.callback=v),Nr(_,l),o=wi(_,F,E),o!==null&&ec(o,_,F),F},t};NS.exports=JP;var $P=NS.exports;const e2=Hx($P);var FS={exports:{}},OS={};/**
 * @license React
 * scheduler.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */(function(n){function e(B,X){var Y=B.length;B.push(X);e:for(;0<Y;){var H=Y-1>>>1,q=B[H];if(0<r(q,X))B[H]=X,B[Y]=q,Y=H;else break e}}function t(B){return B.length===0?null:B[0]}function i(B){if(B.length===0)return null;var X=B[0],Y=B.pop();if(Y!==X){B[0]=Y;e:for(var H=0,q=B.length,ye=q>>>1;H<ye;){var ge=2*(H+1)-1,Pe=B[ge],Ue=ge+1,He=B[Ue];if(0>r(Pe,Y))Ue<q&&0>r(He,Pe)?(B[H]=He,B[Ue]=Y,H=Ue):(B[H]=Pe,B[ge]=Y,H=ge);else if(Ue<q&&0>r(He,Y))B[H]=He,B[Ue]=Y,H=Ue;else break e}}return X}function r(B,X){var Y=B.sortIndex-X.sortIndex;return Y!==0?Y:B.id-X.id}if(typeof performance=="object"&&typeof performance.now=="function"){var s=performance;n.unstable_now=function(){return s.now()}}else{var a=Date,c=a.now();n.unstable_now=function(){return a.now()-c}}var u=[],h=[],f=1,p=null,m=3,g=!1,y=!1,T=!1,S=typeof setTimeout=="function"?setTimeout:null,x=typeof clearTimeout=="function"?clearTimeout:null,w=typeof setImmediate<"u"?setImmediate:null;typeof navigator<"u"&&navigator.scheduling!==void 0&&navigator.scheduling.isInputPending!==void 0&&navigator.scheduling.isInputPending.bind(navigator.scheduling);function M(B){for(var X=t(h);X!==null;){if(X.callback===null)i(h);else if(X.startTime<=B)i(h),X.sortIndex=X.expirationTime,e(u,X);else break;X=t(h)}}function b(B){if(T=!1,M(B),!y)if(t(u)!==null)y=!0,ue(P);else{var X=t(h);X!==null&&ae(b,X.startTime-B)}}function P(B,X){y=!1,T&&(T=!1,x(U),U=-1),g=!0;var Y=m;try{for(M(X),p=t(u);p!==null&&(!(p.expirationTime>X)||B&&!z());){var H=p.callback;if(typeof H=="function"){p.callback=null,m=p.priorityLevel;var q=H(p.expirationTime<=X);X=n.unstable_now(),typeof q=="function"?p.callback=q:p===t(u)&&i(u),M(X)}else i(u);p=t(u)}if(p!==null)var ye=!0;else{var ge=t(h);ge!==null&&ae(b,ge.startTime-X),ye=!1}return ye}finally{p=null,m=Y,g=!1}}var C=!1,L=null,U=-1,A=5,R=-1;function z(){return!(n.unstable_now()-R<A)}function te(){if(L!==null){var B=n.unstable_now();R=B;var X=!0;try{X=L(!0,B)}finally{X?W():(C=!1,L=null)}}else C=!1}var W;if(typeof w=="function")W=function(){w(te)};else if(typeof MessageChannel<"u"){var J=new MessageChannel,ne=J.port2;J.port1.onmessage=te,W=function(){ne.postMessage(null)}}else W=function(){S(te,0)};function ue(B){L=B,C||(C=!0,W())}function ae(B,X){U=S(function(){B(n.unstable_now())},X)}n.unstable_IdlePriority=5,n.unstable_ImmediatePriority=1,n.unstable_LowPriority=4,n.unstable_NormalPriority=3,n.unstable_Profiling=null,n.unstable_UserBlockingPriority=2,n.unstable_cancelCallback=function(B){B.callback=null},n.unstable_continueExecution=function(){y||g||(y=!0,ue(P))},n.unstable_forceFrameRate=function(B){0>B||125<B?console.error("forceFrameRate takes a positive int between 0 and 125, forcing frame rates higher than 125 fps is not supported"):A=0<B?Math.floor(1e3/B):5},n.unstable_getCurrentPriorityLevel=function(){return m},n.unstable_getFirstCallbackNode=function(){return t(u)},n.unstable_next=function(B){switch(m){case 1:case 2:case 3:var X=3;break;default:X=m}var Y=m;m=X;try{return B()}finally{m=Y}},n.unstable_pauseExecution=function(){},n.unstable_requestPaint=function(){},n.unstable_runWithPriority=function(B,X){switch(B){case 1:case 2:case 3:case 4:case 5:break;default:B=3}var Y=m;m=B;try{return X()}finally{m=Y}},n.unstable_scheduleCallback=function(B,X,Y){var H=n.unstable_now();switch(typeof Y=="object"&&Y!==null?(Y=Y.delay,Y=typeof Y=="number"&&0<Y?H+Y:H):Y=H,B){case 1:var q=-1;break;case 2:q=250;break;case 5:q=1073741823;break;case 4:q=1e4;break;default:q=5e3}return q=Y+q,B={id:f++,callback:X,priorityLevel:B,startTime:Y,expirationTime:q,sortIndex:-1},Y>H?(B.sortIndex=Y,e(h,B),t(u)===null&&B===t(h)&&(T?(x(U),U=-1):T=!0,ae(b,Y-H))):(B.sortIndex=q,e(u,B),y||g||(y=!0,ue(P))),B},n.unstable_shouldYield=z,n.unstable_wrapCallback=function(B){var X=m;return function(){var Y=m;m=X;try{return B.apply(this,arguments)}finally{m=Y}}}})(OS);FS.exports=OS;var U0=FS.exports;const t2=n=>typeof n=="object"&&typeof n.then=="function",Bs=[];function BS(n,e,t=(i,r)=>i===r){if(n===e)return!0;if(!n||!e)return!1;const i=n.length;if(e.length!==i)return!1;for(let r=0;r<i;r++)if(!t(n[r],e[r]))return!1;return!0}function zS(n,e=null,t=!1,i={}){e===null&&(e=[n]);for(const s of Bs)if(BS(e,s.keys,s.equal)){if(t)return;if(Object.prototype.hasOwnProperty.call(s,"error"))throw s.error;if(Object.prototype.hasOwnProperty.call(s,"response"))return i.lifespan&&i.lifespan>0&&(s.timeout&&clearTimeout(s.timeout),s.timeout=setTimeout(s.remove,i.lifespan)),s.response;if(!t)throw s.promise}const r={keys:e,equal:i.equal,remove:()=>{const s=Bs.indexOf(r);s!==-1&&Bs.splice(s,1)},promise:(t2(n)?n:n(...e)).then(s=>{r.response=s,i.lifespan&&i.lifespan>0&&(r.timeout=setTimeout(r.remove,i.lifespan))}).catch(s=>r.error=s)};if(Bs.push(r),!t)throw r.promise}const n2=(n,e,t)=>zS(n,e,!1,t),i2=(n,e,t)=>void zS(n,e,!0,t),r2=n=>{if(n===void 0||n.length===0)Bs.splice(0,Bs.length);else{const e=Bs.find(t=>BS(n,t.keys,t.equal));e&&e.remove()}},xm={},kS=n=>void Object.assign(xm,n);function s2(n,e){function t(f,{args:p=[],attach:m,...g},y){let T=`${f[0].toUpperCase()}${f.slice(1)}`,S;if(f==="primitive"){if(g.object===void 0)throw new Error("R3F: Primitives without 'object' are invalid!");const x=g.object;S=za(x,{type:f,root:y,attach:m,primitive:!0})}else{const x=xm[T];if(!x)throw new Error(`R3F: ${T} is not part of the THREE namespace! Did you forget to extend? See: https://docs.pmnd.rs/react-three-fiber/api/objects#using-3rd-party-objects-declaratively`);if(!Array.isArray(p))throw new Error("R3F: The args prop must be an array!");S=za(new x(...p),{type:f,root:y,attach:m,memoizedProps:{args:p}})}return S.__r3f.attach===void 0&&(S instanceof mt?S.__r3f.attach="geometry":S instanceof Pn&&(S.__r3f.attach="material")),T!=="inject"&&Td(S,g),S}function i(f,p){let m=!1;if(p){var g,y;(g=p.__r3f)!=null&&g.attach?_d(f,p,p.__r3f.attach):p.isObject3D&&f.isObject3D&&(f.add(p),m=!0),m||(y=f.__r3f)==null||y.objects.push(p),p.__r3f||za(p,{}),p.__r3f.parent=f,xp(p),ka(p)}}function r(f,p,m){let g=!1;if(p){var y,T;if((y=p.__r3f)!=null&&y.attach)_d(f,p,p.__r3f.attach);else if(p.isObject3D&&f.isObject3D){p.parent=f,p.dispatchEvent({type:"added"});const S=f.children.filter(w=>w!==p),x=S.indexOf(m);f.children=[...S.slice(0,x),p,...S.slice(x)],g=!0}g||(T=f.__r3f)==null||T.objects.push(p),p.__r3f||za(p,{}),p.__r3f.parent=f,xp(p),ka(p)}}function s(f,p,m=!1){f&&[...f].forEach(g=>a(p,g,m))}function a(f,p,m){if(p){var g,y,T;if(p.__r3f&&(p.__r3f.parent=null),(g=f.__r3f)!=null&&g.objects&&(f.__r3f.objects=f.__r3f.objects.filter(b=>b!==p)),(y=p.__r3f)!=null&&y.attach)z0(f,p,p.__r3f.attach);else if(p.isObject3D&&f.isObject3D){var S;f.remove(p),(S=p.__r3f)!=null&&S.root&&f2(p.__r3f.root,p)}const w=(T=p.__r3f)==null?void 0:T.primitive,M=m===void 0?p.dispose!==null&&!w:m;if(!w){var x;s((x=p.__r3f)==null?void 0:x.objects,p,M),s(p.children,p,M)}delete p.__r3f,M&&p.dispose&&p.type!=="Scene"&&U0.unstable_scheduleCallback(U0.unstable_IdlePriority,()=>{try{p.dispose()}catch{}}),ka(f)}}function c(f,p,m,g){var y;const T=(y=f.__r3f)==null?void 0:y.parent;if(!T)return;const S=t(p,m,f.__r3f.root);if(f.children){for(const x of f.children)x.__r3f&&i(S,x);f.children=f.children.filter(x=>!x.__r3f)}f.__r3f.objects.forEach(x=>i(S,x)),f.__r3f.objects=[],f.__r3f.autoRemovedBeforeAppend||a(T,f),S.parent&&(S.__r3f.autoRemovedBeforeAppend=!0),i(T,S),S.raycast&&S.__r3f.eventCount&&S.__r3f.root.getState().internal.interaction.push(S),[g,g.alternate].forEach(x=>{x!==null&&(x.stateNode=S,x.ref&&(typeof x.ref=="function"?x.ref(S):x.ref.current=S))})}const u=()=>console.warn("Text is not allowed in the R3F tree! This could be stray whitespace or characters.");return{reconciler:e2({createInstance:t,removeChild:a,appendChild:i,appendInitialChild:i,insertBefore:r,supportsMutation:!0,isPrimaryRenderer:!1,supportsPersistence:!1,supportsHydration:!1,noTimeout:-1,appendChildToContainer:(f,p)=>{if(!p)return;const m=f.getState().scene;m.__r3f&&(m.__r3f.root=f,i(m,p))},removeChildFromContainer:(f,p)=>{p&&a(f.getState().scene,p)},insertInContainerBefore:(f,p,m)=>{if(!p||!m)return;const g=f.getState().scene;g.__r3f&&r(g,p,m)},getRootHostContext:()=>null,getChildHostContext:f=>f,finalizeInitialChildren(f){var p;return!!((p=f==null?void 0:f.__r3f)!=null?p:{}).handlers},prepareUpdate(f,p,m,g){var y;if(((y=f==null?void 0:f.__r3f)!=null?y:{}).primitive&&g.object&&g.object!==f)return[!0];{const{args:S=[],children:x,...w}=g,{args:M=[],children:b,...P}=m;if(!Array.isArray(S))throw new Error("R3F: the args prop must be an array!");if(S.some((L,U)=>L!==M[U]))return[!0];const C=ZS(f,w,P,!0);return C.changes.length?[!1,C]:null}},commitUpdate(f,[p,m],g,y,T,S){p?c(f,g,T,S):Td(f,m)},commitMount(f,p,m,g){var y;const T=(y=f.__r3f)!=null?y:{};f.raycast&&T.handlers&&T.eventCount&&f.__r3f.root.getState().internal.interaction.push(f)},getPublicInstance:f=>f,prepareForCommit:()=>null,preparePortalMount:f=>za(f.getState().scene),resetAfterCommit:()=>{},shouldSetTextContent:()=>!1,clearContainer:()=>!1,hideInstance(f){var p;const{attach:m,parent:g}=(p=f.__r3f)!=null?p:{};m&&g&&z0(g,f,m),f.isObject3D&&(f.visible=!1),ka(f)},unhideInstance(f,p){var m;const{attach:g,parent:y}=(m=f.__r3f)!=null?m:{};g&&y&&_d(y,f,g),(f.isObject3D&&p.visible==null||p.visible)&&(f.visible=!0),ka(f)},createTextInstance:u,hideTextInstance:u,unhideTextInstance:u,getCurrentEventPriority:()=>e?e():Ya.DefaultEventPriority,beforeActiveInstanceBlur:()=>{},afterActiveInstanceBlur:()=>{},detachDeletedInstance:()=>{},now:typeof performance<"u"&&Kt.fun(performance.now)?performance.now:Kt.fun(Date.now)?Date.now:()=>0,scheduleTimeout:Kt.fun(setTimeout)?setTimeout:void 0,cancelTimeout:Kt.fun(clearTimeout)?clearTimeout:void 0}),applyProps:Td}}var N0,F0;const Md=n=>"colorSpace"in n||"outputColorSpace"in n,HS=()=>{var n;return(n=xm.ColorManagement)!=null?n:null},VS=n=>n&&n.isOrthographicCamera,a2=n=>n&&n.hasOwnProperty("current"),co=typeof window<"u"&&((N0=window.document)!=null&&N0.createElement||((F0=window.navigator)==null?void 0:F0.product)==="ReactNative")?ee.useLayoutEffect:ee.useEffect;function GS(n){const e=ee.useRef(n);return co(()=>void(e.current=n),[n]),e}function o2({set:n}){return co(()=>(n(new Promise(()=>null)),()=>n(!1)),[n]),null}class WS extends ee.Component{constructor(...e){super(...e),this.state={error:!1}}componentDidCatch(e){this.props.set(e)}render(){return this.state.error?null:this.props.children}}WS.getDerivedStateFromError=()=>({error:!0});const XS="__default",O0=new Map,l2=n=>n&&!!n.memoized&&!!n.changes;function YS(n){var e;const t=typeof window<"u"?(e=window.devicePixelRatio)!=null?e:2:1;return Array.isArray(n)?Math.min(Math.max(n[0],t),n[1]):n}const Go=n=>{var e;return(e=n.__r3f)==null?void 0:e.root.getState()},Kt={obj:n=>n===Object(n)&&!Kt.arr(n)&&typeof n!="function",fun:n=>typeof n=="function",str:n=>typeof n=="string",num:n=>typeof n=="number",boo:n=>typeof n=="boolean",und:n=>n===void 0,arr:n=>Array.isArray(n),equ(n,e,{arrays:t="shallow",objects:i="reference",strict:r=!0}={}){if(typeof n!=typeof e||!!n!=!!e)return!1;if(Kt.str(n)||Kt.num(n))return n===e;const s=Kt.obj(n);if(s&&i==="reference")return n===e;const a=Kt.arr(n);if(a&&t==="reference")return n===e;if((a||s)&&n===e)return!0;let c;for(c in n)if(!(c in e))return!1;if(s&&t==="shallow"&&i==="shallow"){for(c in r?e:n)if(!Kt.equ(n[c],e[c],{strict:r,objects:"reference"}))return!1}else for(c in r?e:n)if(n[c]!==e[c])return!1;if(Kt.und(c)){if(a&&n.length===0&&e.length===0||s&&Object.keys(n).length===0&&Object.keys(e).length===0)return!0;if(n!==e)return!1}return!0}};function c2(n){const e={nodes:{},materials:{}};return n&&n.traverse(t=>{t.name&&(e.nodes[t.name]=t),t.material&&!e.materials[t.material.name]&&(e.materials[t.material.name]=t.material)}),e}function u2(n){n.dispose&&n.type!=="Scene"&&n.dispose();for(const e in n)e.dispose==null||e.dispose(),delete n[e]}function za(n,e){const t=n;return t.__r3f={type:"",root:null,previousAttach:null,memoizedProps:{},eventCount:0,handlers:{},objects:[],parent:null,...e},n}function vp(n,e){let t=n;if(e.includes("-")){const i=e.split("-"),r=i.pop();return t=i.reduce((s,a)=>s[a],n),{target:t,key:r}}else return{target:t,key:e}}const B0=/-\d+$/;function _d(n,e,t){if(Kt.str(t)){if(B0.test(t)){const s=t.replace(B0,""),{target:a,key:c}=vp(n,s);Array.isArray(a[c])||(a[c]=[])}const{target:i,key:r}=vp(n,t);e.__r3f.previousAttach=i[r],i[r]=e}else e.__r3f.previousAttach=t(n,e)}function z0(n,e,t){var i,r;if(Kt.str(t)){const{target:s,key:a}=vp(n,t),c=e.__r3f.previousAttach;c===void 0?delete s[a]:s[a]=c}else(i=e.__r3f)==null||i.previousAttach==null||i.previousAttach(n,e);(r=e.__r3f)==null||delete r.previousAttach}function ZS(n,{children:e,key:t,ref:i,...r},{children:s,key:a,ref:c,...u}={},h=!1){var f;const p=(f=n==null?void 0:n.__r3f)!=null?f:{},m=Object.entries(r),g=[];if(h){const T=Object.keys(u);for(let S=0;S<T.length;S++)r.hasOwnProperty(T[S])||m.unshift([T[S],XS+"remove"])}m.forEach(([T,S])=>{var x;if((x=n.__r3f)!=null&&x.primitive&&T==="object"||Kt.equ(S,u[T]))return;if(/^on(Pointer|Click|DoubleClick|ContextMenu|Wheel)/.test(T))return g.push([T,S,!0,[]]);let w=[];T.includes("-")&&(w=T.split("-")),g.push([T,S,!1,w]);for(const M in r){const b=r[M];M.startsWith(`${T}-`)&&g.push([M,b,!1,M.split("-")])}});const y={...r};return p.memoizedProps&&p.memoizedProps.args&&(y.args=p.memoizedProps.args),p.memoizedProps&&p.memoizedProps.attach&&(y.attach=p.memoizedProps.attach),{memoized:y,changes:g}}function Td(n,e){var t,i,r;const s=(t=n.__r3f)!=null?t:{},a=s.root,c=(i=a==null||a.getState==null?void 0:a.getState())!=null?i:{},{memoized:u,changes:h}=l2(e)?e:ZS(n,e),f=s.eventCount;n.__r3f&&(n.__r3f.memoizedProps=u);for(let m=0;m<h.length;m++){let[g,y,T,S]=h[m];if(Md(n)){const b="srgb",P="srgb-linear";g==="encoding"?(g="colorSpace",y=y===3001?b:P):g==="outputEncoding"&&(g="outputColorSpace",y=y===3001?b:P)}let x=n,w=x[g];if(S.length&&(w=S.reduce((M,b)=>M[b],n),!(w&&w.set))){const[M,...b]=S.reverse();x=b.reverse().reduce((P,C)=>P[C],n),g=M}if(y===XS+"remove")if(x.constructor){let M=O0.get(x.constructor);M||(M=new x.constructor,O0.set(x.constructor,M)),y=M[g]}else y=0;if(T)y?s.handlers[g]=y:delete s.handlers[g],s.eventCount=Object.keys(s.handlers).length;else if(w&&w.set&&(w.copy||w instanceof Gs)){if(Array.isArray(y))w.fromArray?w.fromArray(y):w.set(...y);else if(w.copy&&y&&y.constructor&&w.constructor===y.constructor)w.copy(y);else if(y!==void 0){const M=w instanceof be;!M&&w.setScalar?w.setScalar(y):w instanceof Gs&&y instanceof Gs?w.mask=y.mask:w.set(y),!HS()&&!c.linear&&M&&w.convertSRGBToLinear()}}else if(x[g]=y,x[g]instanceof Zt&&x[g].format===Qt&&x[g].type===Vt){const M=x[g];Md(M)&&Md(c.gl)?M.colorSpace=c.gl.outputColorSpace:M.encoding=c.gl.outputEncoding}ka(n)}if(s.parent&&c.internal&&n.raycast&&f!==s.eventCount){const m=c.internal.interaction.indexOf(n);m>-1&&c.internal.interaction.splice(m,1),s.eventCount&&c.internal.interaction.push(n)}return!(h.length===1&&h[0][0]==="onUpdate")&&h.length&&(r=n.__r3f)!=null&&r.parent&&xp(n),n}function ka(n){var e,t;const i=(e=n.__r3f)==null||(t=e.root)==null||t.getState==null?void 0:t.getState();i&&i.internal.frames===0&&i.invalidate()}function xp(n){n.onUpdate==null||n.onUpdate(n)}function qS(n,e){n.manual||(VS(n)?(n.left=e.width/-2,n.right=e.width/2,n.top=e.height/2,n.bottom=e.height/-2):n.aspect=e.width/e.height,n.updateProjectionMatrix(),n.updateMatrixWorld())}function Eu(n){return(n.eventObject||n.object).uuid+"/"+n.index+n.instanceId}function h2(){var n;const e=typeof self<"u"&&self||typeof window<"u"&&window;if(!e)return Ya.DefaultEventPriority;switch((n=e.event)==null?void 0:n.type){case"click":case"contextmenu":case"dblclick":case"pointercancel":case"pointerdown":case"pointerup":return Ya.DiscreteEventPriority;case"pointermove":case"pointerout":case"pointerover":case"pointerenter":case"pointerleave":case"wheel":return Ya.ContinuousEventPriority;default:return Ya.DefaultEventPriority}}function jS(n,e,t,i){const r=t.get(e);r&&(t.delete(e),t.size===0&&(n.delete(i),r.target.releasePointerCapture(i)))}function f2(n,e){const{internal:t}=n.getState();t.interaction=t.interaction.filter(i=>i!==e),t.initialHits=t.initialHits.filter(i=>i!==e),t.hovered.forEach((i,r)=>{(i.eventObject===e||i.object===e)&&t.hovered.delete(r)}),t.capturedMap.forEach((i,r)=>{jS(t.capturedMap,e,i,r)})}function d2(n){function e(u){const{internal:h}=n.getState(),f=u.offsetX-h.initialClick[0],p=u.offsetY-h.initialClick[1];return Math.round(Math.sqrt(f*f+p*p))}function t(u){return u.filter(h=>["Move","Over","Enter","Out","Leave"].some(f=>{var p;return(p=h.__r3f)==null?void 0:p.handlers["onPointer"+f]}))}function i(u,h){const f=n.getState(),p=new Set,m=[],g=h?h(f.internal.interaction):f.internal.interaction;for(let x=0;x<g.length;x++){const w=Go(g[x]);w&&(w.raycaster.camera=void 0)}f.previousRoot||f.events.compute==null||f.events.compute(u,f);function y(x){const w=Go(x);if(!w||!w.events.enabled||w.raycaster.camera===null)return[];if(w.raycaster.camera===void 0){var M;w.events.compute==null||w.events.compute(u,w,(M=w.previousRoot)==null?void 0:M.getState()),w.raycaster.camera===void 0&&(w.raycaster.camera=null)}return w.raycaster.camera?w.raycaster.intersectObject(x,!0):[]}let T=g.flatMap(y).sort((x,w)=>{const M=Go(x.object),b=Go(w.object);return!M||!b?x.distance-w.distance:b.events.priority-M.events.priority||x.distance-w.distance}).filter(x=>{const w=Eu(x);return p.has(w)?!1:(p.add(w),!0)});f.events.filter&&(T=f.events.filter(T,f));for(const x of T){let w=x.object;for(;w;){var S;(S=w.__r3f)!=null&&S.eventCount&&m.push({...x,eventObject:w}),w=w.parent}}if("pointerId"in u&&f.internal.capturedMap.has(u.pointerId))for(let x of f.internal.capturedMap.get(u.pointerId).values())p.has(Eu(x.intersection))||m.push(x.intersection);return m}function r(u,h,f,p){const m=n.getState();if(u.length){const g={stopped:!1};for(const y of u){const T=Go(y.object)||m,{raycaster:S,pointer:x,camera:w,internal:M}=T,b=new I(x.x,x.y,0).unproject(w),P=R=>{var z,te;return(z=(te=M.capturedMap.get(R))==null?void 0:te.has(y.eventObject))!=null?z:!1},C=R=>{const z={intersection:y,target:h.target};M.capturedMap.has(R)?M.capturedMap.get(R).set(y.eventObject,z):M.capturedMap.set(R,new Map([[y.eventObject,z]])),h.target.setPointerCapture(R)},L=R=>{const z=M.capturedMap.get(R);z&&jS(M.capturedMap,y.eventObject,z,R)};let U={};for(let R in h){let z=h[R];typeof z!="function"&&(U[R]=z)}let A={...y,...U,pointer:x,intersections:u,stopped:g.stopped,delta:f,unprojectedPoint:b,ray:S.ray,camera:w,stopPropagation(){const R="pointerId"in h&&M.capturedMap.get(h.pointerId);if((!R||R.has(y.eventObject))&&(A.stopped=g.stopped=!0,M.hovered.size&&Array.from(M.hovered.values()).find(z=>z.eventObject===y.eventObject))){const z=u.slice(0,u.indexOf(y));s([...z,y])}},target:{hasPointerCapture:P,setPointerCapture:C,releasePointerCapture:L},currentTarget:{hasPointerCapture:P,setPointerCapture:C,releasePointerCapture:L},nativeEvent:h};if(p(A),g.stopped===!0)break}}return u}function s(u){const{internal:h}=n.getState();for(const f of h.hovered.values())if(!u.length||!u.find(p=>p.object===f.object&&p.index===f.index&&p.instanceId===f.instanceId)){const m=f.eventObject.__r3f,g=m==null?void 0:m.handlers;if(h.hovered.delete(Eu(f)),m!=null&&m.eventCount){const y={...f,intersections:u};g.onPointerOut==null||g.onPointerOut(y),g.onPointerLeave==null||g.onPointerLeave(y)}}}function a(u,h){for(let f=0;f<h.length;f++){const p=h[f].__r3f;p==null||p.handlers.onPointerMissed==null||p.handlers.onPointerMissed(u)}}function c(u){switch(u){case"onPointerLeave":case"onPointerCancel":return()=>s([]);case"onLostPointerCapture":return h=>{const{internal:f}=n.getState();"pointerId"in h&&f.capturedMap.has(h.pointerId)&&requestAnimationFrame(()=>{f.capturedMap.has(h.pointerId)&&(f.capturedMap.delete(h.pointerId),s([]))})}}return function(f){const{onPointerMissed:p,internal:m}=n.getState();m.lastEvent.current=f;const g=u==="onPointerMove",y=u==="onClick"||u==="onContextMenu"||u==="onDoubleClick",S=i(f,g?t:void 0),x=y?e(f):0;u==="onPointerDown"&&(m.initialClick=[f.offsetX,f.offsetY],m.initialHits=S.map(M=>M.eventObject)),y&&!S.length&&x<=2&&(a(f,m.interaction),p&&p(f)),g&&s(S);function w(M){const b=M.eventObject,P=b.__r3f,C=P==null?void 0:P.handlers;if(P!=null&&P.eventCount)if(g){if(C.onPointerOver||C.onPointerEnter||C.onPointerOut||C.onPointerLeave){const L=Eu(M),U=m.hovered.get(L);U?U.stopped&&M.stopPropagation():(m.hovered.set(L,M),C.onPointerOver==null||C.onPointerOver(M),C.onPointerEnter==null||C.onPointerEnter(M))}C.onPointerMove==null||C.onPointerMove(M)}else{const L=C[u];L?(!y||m.initialHits.includes(b))&&(a(f,m.interaction.filter(U=>!m.initialHits.includes(U))),L(M)):y&&m.initialHits.includes(b)&&a(f,m.interaction.filter(U=>!m.initialHits.includes(U)))}}r(S,f,x,w)}}return{handlePointer:c}}const p2=["set","get","setSize","setFrameloop","setDpr","events","invalidate","advance","size","viewport"],KS=n=>!!(n!=null&&n.render),ym=ee.createContext(null),m2=(n,e)=>{const t=US((c,u)=>{const h=new I,f=new I,p=new I;function m(x=u().camera,w=f,M=u().size){const{width:b,height:P,top:C,left:L}=M,U=b/P;w instanceof I?p.copy(w):p.set(...w);const A=x.getWorldPosition(h).distanceTo(p);if(VS(x))return{width:b/x.zoom,height:P/x.zoom,top:C,left:L,factor:1,distance:A,aspect:U};{const R=x.fov*Math.PI/180,z=2*Math.tan(R/2)*A,te=z*(b/P);return{width:te,height:z,top:C,left:L,factor:b/te,distance:A,aspect:U}}}let g;const y=x=>c(w=>({performance:{...w.performance,current:x}})),T=new K;return{set:c,get:u,gl:null,camera:null,raycaster:null,events:{priority:1,enabled:!0,connected:!1},xr:null,scene:null,invalidate:(x=1)=>n(u(),x),advance:(x,w)=>e(x,w,u()),legacy:!1,linear:!1,flat:!1,controls:null,clock:new pm,pointer:T,mouse:T,frameloop:"always",onPointerMissed:void 0,performance:{current:1,min:.5,max:1,debounce:200,regress:()=>{const x=u();g&&clearTimeout(g),x.performance.current!==x.performance.min&&y(x.performance.min),g=setTimeout(()=>y(u().performance.max),x.performance.debounce)}},size:{width:0,height:0,top:0,left:0,updateStyle:!1},viewport:{initialDpr:0,dpr:0,width:0,height:0,top:0,left:0,aspect:0,distance:0,factor:0,getCurrentViewport:m},setEvents:x=>c(w=>({...w,events:{...w.events,...x}})),setSize:(x,w,M,b,P)=>{const C=u().camera,L={width:x,height:w,top:b||0,left:P||0,updateStyle:M};c(U=>({size:L,viewport:{...U.viewport,...m(C,f,L)}}))},setDpr:x=>c(w=>{const M=YS(x);return{viewport:{...w.viewport,dpr:M,initialDpr:w.viewport.initialDpr||M}}}),setFrameloop:(x="always")=>{const w=u().clock;w.stop(),w.elapsedTime=0,x!=="never"&&(w.start(),w.elapsedTime=0),c(()=>({frameloop:x}))},previousRoot:void 0,internal:{active:!1,priority:0,frames:0,lastEvent:ee.createRef(),interaction:[],hovered:new Map,subscribers:[],initialClick:[0,0],initialHits:[],capturedMap:new Map,subscribe:(x,w,M)=>{const b=u().internal;return b.priority=b.priority+(w>0?1:0),b.subscribers.push({ref:x,priority:w,store:M}),b.subscribers=b.subscribers.sort((P,C)=>P.priority-C.priority),()=>{const P=u().internal;P!=null&&P.subscribers&&(P.priority=P.priority-(w>0?1:0),P.subscribers=P.subscribers.filter(C=>C.ref!==x))}}}}}),i=t.getState();let r=i.size,s=i.viewport.dpr,a=i.camera;return t.subscribe(()=>{const{camera:c,size:u,viewport:h,gl:f,set:p}=t.getState();if(u!==r||h.dpr!==s){var m;r=u,s=h.dpr,qS(c,u),f.setPixelRatio(h.dpr);const g=(m=u.updateStyle)!=null?m:typeof HTMLCanvasElement<"u"&&f.domElement instanceof HTMLCanvasElement;f.setSize(u.width,u.height,g)}c!==a&&(a=c,p(g=>({viewport:{...g.viewport,...g.viewport.getCurrentViewport(c)}})))}),t.subscribe(c=>n(c)),t};let bu,g2=new Set,v2=new Set,x2=new Set;function wd(n,e){if(n.size)for(const{callback:t}of n.values())t(e)}function Wo(n,e){switch(n){case"before":return wd(g2,e);case"after":return wd(v2,e);case"tail":return wd(x2,e)}}let Ed,bd;function Ad(n,e,t){let i=e.clock.getDelta();for(e.frameloop==="never"&&typeof n=="number"&&(i=n-e.clock.elapsedTime,e.clock.oldTime=e.clock.elapsedTime,e.clock.elapsedTime=n),Ed=e.internal.subscribers,bu=0;bu<Ed.length;bu++)bd=Ed[bu],bd.ref.current(bd.store.getState(),i,t);return!e.internal.priority&&e.gl.render&&e.gl.render(e.scene,e.camera),e.internal.frames=Math.max(0,e.internal.frames-1),e.frameloop==="always"?1:e.internal.frames}function y2(n){let e=!1,t,i,r;function s(u){i=requestAnimationFrame(s),e=!0,t=0,Wo("before",u);for(const f of n.values()){var h;r=f.store.getState(),r.internal.active&&(r.frameloop==="always"||r.internal.frames>0)&&!((h=r.gl.xr)!=null&&h.isPresenting)&&(t+=Ad(u,r))}if(Wo("after",u),t===0)return Wo("tail",u),e=!1,cancelAnimationFrame(i)}function a(u,h=1){var f;if(!u)return n.forEach(p=>a(p.store.getState()),h);(f=u.gl.xr)!=null&&f.isPresenting||!u.internal.active||u.frameloop==="never"||(u.internal.frames=Math.min(60,u.internal.frames+h),e||(e=!0,requestAnimationFrame(s)))}function c(u,h=!0,f,p){if(h&&Wo("before",u),f)Ad(u,f,p);else for(const m of n.values())Ad(u,m.store.getState());h&&Wo("after",u)}return{loop:s,invalidate:a,advance:c}}function S2(n){const e=ee.useRef(null);return co(()=>void(e.current=n.current.__r3f),[n]),e}function Sm(){const n=ee.useContext(ym);if(!n)throw new Error("R3F: Hooks can only be used within the Canvas component!");return n}function vn(n=t=>t,e){return Sm()(n,e)}function Rh(n,e=0){const t=Sm(),i=t.getState().internal.subscribe,r=GS(n);return co(()=>i(r,e,t),[e,i,t]),null}function QS(n,e){return function(t,...i){const r=new t;return n&&n(r),Promise.all(i.map(s=>new Promise((a,c)=>r.load(s,u=>{u.scene&&Object.assign(u,c2(u.scene)),a(u)},e,u=>c(new Error(`Could not load ${s}: ${u.message})`))))))}}function Mm(n,e,t,i){const r=Array.isArray(e)?e:[e],s=n2(QS(t,i),[n,...r],{equal:Kt.equ});return Array.isArray(e)?s:s[0]}Mm.preload=function(n,e,t){const i=Array.isArray(e)?e:[e];return i2(QS(t),[n,...i])};Mm.clear=function(n,e){const t=Array.isArray(e)?e:[e];return r2([n,...t])};const eo=new Map,{invalidate:k0,advance:H0}=y2(eo),{reconciler:Pl,applyProps:Rs}=s2(eo,h2),Fa={objects:"shallow",strict:!1},M2=(n,e)=>{const t=typeof n=="function"?n(e):n;return KS(t)?t:new qp({powerPreference:"high-performance",canvas:e,antialias:!0,alpha:!0,...n})};function _2(n,e){if(e)return e;if(typeof HTMLCanvasElement<"u"&&n instanceof HTMLCanvasElement&&n.parentElement){const{width:t,height:i,top:r,left:s}=n.parentElement.getBoundingClientRect();return{width:t,height:i,top:r,left:s}}else if(typeof OffscreenCanvas<"u"&&n instanceof OffscreenCanvas)return{width:n.width,height:n.height,top:0,left:0};return{width:0,height:0,top:0,left:0}}function T2(n){const e=eo.get(n),t=e==null?void 0:e.fiber,i=e==null?void 0:e.store;e&&console.warn("R3F.createRoot should only be called once!");const r=typeof reportError=="function"?reportError:console.error,s=i||m2(k0,H0),a=t||Pl.createContainer(s,Ya.ConcurrentRoot,null,!1,null,"",r,null);e||eo.set(n,{fiber:a,store:s});let c,u=!1,h;return{configure(f={}){let{gl:p,size:m,scene:g,events:y,onCreated:T,shadows:S=!1,linear:x=!1,flat:w=!1,legacy:M=!1,orthographic:b=!1,frameloop:P="always",dpr:C=[1,2],performance:L,raycaster:U,camera:A,onPointerMissed:R}=f,z=s.getState(),te=z.gl;z.gl||z.set({gl:te=M2(p,n)});let W=z.raycaster;W||z.set({raycaster:W=new vm});const{params:J,...ne}=U||{};if(Kt.equ(ne,W,Fa)||Rs(W,{...ne}),Kt.equ(J,W.params,Fa)||Rs(W,{params:{...W.params,...J}}),!z.camera||z.camera===h&&!Kt.equ(h,A,Fa)){h=A;const H=A instanceof so,q=H?A:b?new Pr(0,0,0,0,.1,1e3):new Yt(75,0,.1,1e3);H||(q.position.z=5,A&&Rs(q,A),!z.camera&&!(A!=null&&A.rotation)&&q.lookAt(0,0,0)),z.set({camera:q})}if(!z.scene){let H;g instanceof Xs?H=g:(H=new Xs,g&&Rs(H,g)),z.set({scene:za(H)})}if(!z.xr){const H=(ge,Pe)=>{const Ue=s.getState();Ue.frameloop!=="never"&&H0(ge,!0,Ue,Pe)},q=()=>{const ge=s.getState();ge.gl.xr.enabled=ge.gl.xr.isPresenting,ge.gl.xr.setAnimationLoop(ge.gl.xr.isPresenting?H:null),ge.gl.xr.isPresenting||k0(ge)},ye={connect(){const ge=s.getState().gl;ge.xr.addEventListener("sessionstart",q),ge.xr.addEventListener("sessionend",q)},disconnect(){const ge=s.getState().gl;ge.xr.removeEventListener("sessionstart",q),ge.xr.removeEventListener("sessionend",q)}};te.xr&&ye.connect(),z.set({xr:ye})}if(te.shadowMap){const H=te.shadowMap.enabled,q=te.shadowMap.type;if(te.shadowMap.enabled=!!S,Kt.boo(S))te.shadowMap.type=el;else if(Kt.str(S)){var ue;const ye={basic:Wx,percentage:Ku,soft:el,variance:Hi};te.shadowMap.type=(ue=ye[S])!=null?ue:el}else Kt.obj(S)&&Object.assign(te.shadowMap,S);(H!==te.shadowMap.enabled||q!==te.shadowMap.type)&&(te.shadowMap.needsUpdate=!0)}const ae=HS();ae&&("enabled"in ae?ae.enabled=!M:"legacyMode"in ae&&(ae.legacyMode=M)),Rs(te,{outputEncoding:x?3e3:3001,toneMapping:w?Wi:Cp}),z.legacy!==M&&z.set(()=>({legacy:M})),z.linear!==x&&z.set(()=>({linear:x})),z.flat!==w&&z.set(()=>({flat:w})),p&&!Kt.fun(p)&&!KS(p)&&!Kt.equ(p,te,Fa)&&Rs(te,p),y&&!z.events.handlers&&z.set({events:y(s)});const Y=_2(n,m);return Kt.equ(Y,z.size,Fa)||z.setSize(Y.width,Y.height,Y.updateStyle,Y.top,Y.left),C&&z.viewport.dpr!==YS(C)&&z.setDpr(C),z.frameloop!==P&&z.setFrameloop(P),z.onPointerMissed||z.set({onPointerMissed:R}),L&&!Kt.equ(L,z.performance,Fa)&&z.set(H=>({performance:{...H.performance,...L}})),c=T,u=!0,this},render(f){return u||this.configure(),Pl.updateContainer(ee.createElement(w2,{store:s,children:f,onCreated:c,rootElement:n}),a,null,()=>{}),s},unmount(){JS(n)}}}function w2({store:n,children:e,onCreated:t,rootElement:i}){return co(()=>{const r=n.getState();r.set(s=>({internal:{...s.internal,active:!0}})),t&&t(r),n.getState().events.connected||r.events.connect==null||r.events.connect(i)},[]),ee.createElement(ym.Provider,{value:n},e)}function JS(n,e){const t=eo.get(n),i=t==null?void 0:t.fiber;if(i){const r=t==null?void 0:t.store.getState();r&&(r.internal.active=!1),Pl.updateContainer(null,i,null,()=>{r&&setTimeout(()=>{try{var s,a,c,u;r.events.disconnect==null||r.events.disconnect(),(s=r.gl)==null||(a=s.renderLists)==null||a.dispose==null||a.dispose(),(c=r.gl)==null||c.forceContextLoss==null||c.forceContextLoss(),(u=r.gl)!=null&&u.xr&&r.xr.disconnect(),u2(r),eo.delete(n),e&&e(n)}catch{}},500)})}}function E2(n,e,t){return ee.createElement(b2,{key:e.uuid,children:n,container:e,state:t})}function b2({state:n={},children:e,container:t}){const{events:i,size:r,...s}=n,a=Sm(),[c]=ee.useState(()=>new vm),[u]=ee.useState(()=>new K),h=ee.useCallback((p,m)=>{const g={...p};Object.keys(p).forEach(T=>{(p2.includes(T)||p[T]!==m[T]&&m[T])&&delete g[T]});let y;if(m&&r){const T=m.camera;y=p.viewport.getCurrentViewport(T,new I,r),T!==p.camera&&qS(T,r)}return{...g,scene:t,raycaster:c,pointer:u,mouse:u,previousRoot:a,events:{...p.events,...m==null?void 0:m.events,...i},size:{...p.size,...r},viewport:{...p.viewport,...y},...s}},[n]),[f]=ee.useState(()=>{const p=a.getState();return US((g,y)=>({...p,scene:t,raycaster:c,pointer:u,mouse:u,previousRoot:a,events:{...p.events,...i},size:{...p.size,...r},...s,set:g,get:y,setEvents:T=>g(S=>({...S,events:{...S.events,...T}}))}))});return ee.useEffect(()=>{const p=a.subscribe(m=>f.setState(g=>h(m,g)));return()=>{p(),f.destroy()}},[]),ee.useEffect(()=>{f.setState(p=>h(a.getState(),p))},[h]),ee.createElement(ee.Fragment,null,Pl.createPortal(ee.createElement(ym.Provider,{value:f},e),f,null))}Pl.injectIntoDevTools({bundleType:0,rendererPackageName:"@react-three/fiber",version:ee.version});function Cl(){return Cl=Object.assign?Object.assign.bind():function(n){for(var e=1;e<arguments.length;e++){var t=arguments[e];for(var i in t)Object.prototype.hasOwnProperty.call(t,i)&&(n[i]=t[i])}return n},Cl.apply(this,arguments)}function yp(n,e,t){var i,r,s,a,c;e==null&&(e=100);function u(){var f=Date.now()-a;f<e&&f>=0?i=setTimeout(u,e-f):(i=null,t||(c=n.apply(s,r),s=r=null))}var h=function(){s=this,r=arguments,a=Date.now();var f=t&&!i;return i||(i=setTimeout(u,e)),f&&(c=n.apply(s,r),s=r=null),c};return h.clear=function(){i&&(clearTimeout(i),i=null)},h.flush=function(){i&&(c=n.apply(s,r),s=r=null,clearTimeout(i),i=null)},h}yp.debounce=yp;var A2=yp;const V0=Hx(A2);function P2(n){let{debounce:e,scroll:t,polyfill:i,offsetSize:r}=n===void 0?{debounce:0,scroll:!1,offsetSize:!1}:n;const s=i||(typeof window>"u"?class{}:window.ResizeObserver);if(!s)throw new Error("This browser does not support ResizeObserver out of the box. See: https://github.com/react-spring/react-use-measure/#resize-observer-polyfills");const[a,c]=ee.useState({left:0,top:0,width:0,height:0,bottom:0,right:0,x:0,y:0}),u=ee.useRef({element:null,scrollContainers:null,resizeObserver:null,lastBounds:a}),h=e?typeof e=="number"?e:e.scroll:null,f=e?typeof e=="number"?e:e.resize:null,p=ee.useRef(!1);ee.useEffect(()=>(p.current=!0,()=>void(p.current=!1)));const[m,g,y]=ee.useMemo(()=>{const w=()=>{if(!u.current.element)return;const{left:M,top:b,width:P,height:C,bottom:L,right:U,x:A,y:R}=u.current.element.getBoundingClientRect(),z={left:M,top:b,width:P,height:C,bottom:L,right:U,x:A,y:R};u.current.element instanceof HTMLElement&&r&&(z.height=u.current.element.offsetHeight,z.width=u.current.element.offsetWidth),Object.freeze(z),p.current&&!L2(u.current.lastBounds,z)&&c(u.current.lastBounds=z)};return[w,f?V0(w,f):w,h?V0(w,h):w]},[c,r,h,f]);function T(){u.current.scrollContainers&&(u.current.scrollContainers.forEach(w=>w.removeEventListener("scroll",y,!0)),u.current.scrollContainers=null),u.current.resizeObserver&&(u.current.resizeObserver.disconnect(),u.current.resizeObserver=null)}function S(){u.current.element&&(u.current.resizeObserver=new s(y),u.current.resizeObserver.observe(u.current.element),t&&u.current.scrollContainers&&u.current.scrollContainers.forEach(w=>w.addEventListener("scroll",y,{capture:!0,passive:!0})))}const x=w=>{!w||w===u.current.element||(T(),u.current.element=w,u.current.scrollContainers=$S(w),S())};return R2(y,!!t),C2(g),ee.useEffect(()=>{T(),S()},[t,y,g]),ee.useEffect(()=>T,[]),[x,a,m]}function C2(n){ee.useEffect(()=>{const e=n;return window.addEventListener("resize",e),()=>void window.removeEventListener("resize",e)},[n])}function R2(n,e){ee.useEffect(()=>{if(e){const t=n;return window.addEventListener("scroll",t,{capture:!0,passive:!0}),()=>void window.removeEventListener("scroll",t,!0)}},[n,e])}function $S(n){const e=[];if(!n||n===document.body)return e;const{overflow:t,overflowX:i,overflowY:r}=window.getComputedStyle(n);return[t,i,r].some(s=>s==="auto"||s==="scroll")&&e.push(n),[...e,...$S(n.parentElement)]}const D2=["x","y","top","bottom","left","right","width","height"],L2=(n,e)=>D2.every(t=>n[t]===e[t]);var I2=Object.defineProperty,U2=Object.defineProperties,N2=Object.getOwnPropertyDescriptors,G0=Object.getOwnPropertySymbols,F2=Object.prototype.hasOwnProperty,O2=Object.prototype.propertyIsEnumerable,W0=(n,e,t)=>e in n?I2(n,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):n[e]=t,X0=(n,e)=>{for(var t in e||(e={}))F2.call(e,t)&&W0(n,t,e[t]);if(G0)for(var t of G0(e))O2.call(e,t)&&W0(n,t,e[t]);return n},B2=(n,e)=>U2(n,N2(e));function eM(n,e,t){if(!n)return;if(t(n)===!0)return n;let i=e?n.return:n.child;for(;i;){const r=eM(i,e,t);if(r)return r;i=e?null:i.sibling}}function tM(n){try{return Object.defineProperties(n,{_currentRenderer:{get(){return null},set(){}},_currentRenderer2:{get(){return null},set(){}}})}catch{return n}}const _m=tM(ee.createContext(null));class nM extends ee.Component{render(){return ee.createElement(_m.Provider,{value:this._reactInternals},this.props.children)}}const{ReactCurrentOwner:Y0,ReactCurrentDispatcher:Z0}=ee.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;function z2(){const n=ee.useContext(_m);if(n===null)throw new Error("its-fine: useFiber must be called within a <FiberProvider />!");const e=ee.useId();return ee.useMemo(()=>{for(const i of[Y0==null?void 0:Y0.current,n,n==null?void 0:n.alternate]){if(!i)continue;const r=eM(i,!1,s=>{let a=s.memoizedState;for(;a;){if(a.memoizedState===e)return!0;a=a.next}});if(r)return r}},[n,e])}function k2(){var n,e;const t=z2(),[i]=ee.useState(()=>new Map);i.clear();let r=t;for(;r;){const s=(n=r.type)==null?void 0:n._context;s&&s!==_m&&!i.has(s)&&i.set(s,(e=Z0==null?void 0:Z0.current)==null?void 0:e.readContext(tM(s))),r=r.return}return i}function H2(){const n=k2();return ee.useMemo(()=>Array.from(n.keys()).reduce((e,t)=>i=>ee.createElement(e,null,ee.createElement(t.Provider,B2(X0({},i),{value:n.get(t)}))),e=>ee.createElement(nM,X0({},e))),[n])}const Pd={onClick:["click",!1],onContextMenu:["contextmenu",!1],onDoubleClick:["dblclick",!1],onWheel:["wheel",!0],onPointerDown:["pointerdown",!0],onPointerUp:["pointerup",!0],onPointerLeave:["pointerleave",!0],onPointerMove:["pointermove",!0],onPointerCancel:["pointercancel",!0],onLostPointerCapture:["lostpointercapture",!0]};function V2(n){const{handlePointer:e}=d2(n);return{priority:1,enabled:!0,compute(t,i,r){i.pointer.set(t.offsetX/i.size.width*2-1,-(t.offsetY/i.size.height)*2+1),i.raycaster.setFromCamera(i.pointer,i.camera)},connected:void 0,handlers:Object.keys(Pd).reduce((t,i)=>({...t,[i]:e(i)}),{}),update:()=>{var t;const{events:i,internal:r}=n.getState();(t=r.lastEvent)!=null&&t.current&&i.handlers&&i.handlers.onPointerMove(r.lastEvent.current)},connect:t=>{var i;const{set:r,events:s}=n.getState();s.disconnect==null||s.disconnect(),r(a=>({events:{...a.events,connected:t}})),Object.entries((i=s.handlers)!=null?i:[]).forEach(([a,c])=>{const[u,h]=Pd[a];t.addEventListener(u,c,{passive:h})})},disconnect:()=>{const{set:t,events:i}=n.getState();if(i.connected){var r;Object.entries((r=i.handlers)!=null?r:[]).forEach(([s,a])=>{if(i&&i.connected instanceof HTMLElement){const[c]=Pd[s];i.connected.removeEventListener(c,a)}}),t(s=>({events:{...s.events,connected:void 0}}))}}}}const G2=ee.forwardRef(function({children:e,fallback:t,resize:i,style:r,gl:s,events:a=V2,eventSource:c,eventPrefix:u,shadows:h,linear:f,flat:p,legacy:m,orthographic:g,frameloop:y,dpr:T,performance:S,raycaster:x,camera:w,onPointerMissed:M,onCreated:b,...P},C){ee.useMemo(()=>kS(ZP),[]);const L=H2(),[U,A]=P2({scroll:!0,debounce:{scroll:50,resize:0},...i}),R=ee.useRef(null),z=ee.useRef(null);ee.useImperativeHandle(C,()=>R.current);const te=GS(M),[W,J]=ee.useState(!1),[ne,ue]=ee.useState(!1);if(W)throw W;if(ne)throw ne;const ae=ee.useRef(null);co(()=>{const X=R.current;A.width>0&&A.height>0&&X&&(ae.current||(ae.current=T2(X)),ae.current.configure({gl:s,events:a,shadows:h,linear:f,flat:p,legacy:m,orthographic:g,frameloop:y,dpr:T,performance:S,raycaster:x,camera:w,size:A,onPointerMissed:(...Y)=>te.current==null?void 0:te.current(...Y),onCreated:Y=>{Y.events.connect==null||Y.events.connect(c?a2(c)?c.current:c:z.current),u&&Y.setEvents({compute:(H,q)=>{const ye=H[u+"X"],ge=H[u+"Y"];q.pointer.set(ye/q.size.width*2-1,-(ge/q.size.height)*2+1),q.raycaster.setFromCamera(q.pointer,q.camera)}}),b==null||b(Y)}}),ae.current.render(ee.createElement(L,null,ee.createElement(WS,{set:ue},ee.createElement(ee.Suspense,{fallback:ee.createElement(o2,{set:J})},e)))))}),ee.useEffect(()=>{const X=R.current;if(X)return()=>JS(X)},[]);const B=c?"none":"auto";return ee.createElement("div",Cl({ref:z,style:{position:"relative",width:"100%",height:"100%",overflow:"hidden",pointerEvents:B,...r}},P),ee.createElement("div",{ref:U,style:{width:"100%",height:"100%"}},ee.createElement("canvas",{ref:R,style:{display:"block"}},t)))}),W2=ee.forwardRef(function(e,t){return ee.createElement(nM,null,ee.createElement(G2,Cl({},e,{ref:t})))});function al(n,e,t){return e in n?Object.defineProperty(n,e,{value:t,enumerable:!0,configurable:!0,writable:!0}):n[e]=t,n}function Sp(n,e){(e==null||e>n.length)&&(e=n.length);for(var t=0,i=new Array(e);t<e;t++)i[t]=n[t];return i}function X2(n,e){if(n){if(typeof n=="string")return Sp(n,e);var t=Object.prototype.toString.call(n).slice(8,-1);if(t==="Object"&&n.constructor&&(t=n.constructor.name),t==="Map"||t==="Set")return Array.from(n);if(t==="Arguments"||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t))return Sp(n,e)}}function Y2(n){if(Array.isArray(n))return Sp(n)}function Z2(n){if(typeof Symbol<"u"&&n[Symbol.iterator]!=null||n["@@iterator"]!=null)return Array.from(n)}function q2(){throw new TypeError(`Invalid attempt to spread non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`)}function j2(n){return Y2(n)||Z2(n)||X2(n)||q2()}new K;new K;function K2(n,e,t){return Math.max(e,Math.min(t,n))}function Q2(n,e){return K2(n-Math.floor(n/e)*e,0,e)}function J2(n,e){var t=Q2(e-n,Math.PI*2);return t>Math.PI&&(t-=Math.PI*2),t}function iM(n,e){if(!(n instanceof e))throw new TypeError("Cannot call a class as a function")}var Pi=function n(e,t,i){var r=this;iM(this,n),al(this,"dot2",function(s,a){return r.x*s+r.y*a}),al(this,"dot3",function(s,a,c){return r.x*s+r.y*a+r.z*c}),this.x=e,this.y=t,this.z=i},$2=[new Pi(1,1,0),new Pi(-1,1,0),new Pi(1,-1,0),new Pi(-1,-1,0),new Pi(1,0,1),new Pi(-1,0,1),new Pi(1,0,-1),new Pi(-1,0,-1),new Pi(0,1,1),new Pi(0,-1,1),new Pi(0,1,-1),new Pi(0,-1,-1)],q0=[151,160,137,91,90,15,131,13,201,95,96,53,194,233,7,225,140,36,103,30,69,142,8,99,37,240,21,10,23,190,6,148,247,120,234,75,0,26,197,62,94,252,219,203,117,35,11,32,57,177,33,88,237,149,56,87,174,20,125,136,171,168,68,175,74,165,71,134,139,48,27,166,77,146,158,231,83,111,229,122,60,211,133,230,220,105,92,41,55,46,245,40,244,102,143,54,65,25,63,161,1,216,80,73,209,76,132,187,208,89,18,169,200,196,135,130,116,188,159,86,164,100,109,198,173,186,3,64,52,217,226,250,124,123,5,202,38,147,118,126,255,82,85,212,207,206,59,227,47,16,58,17,182,189,28,42,223,183,170,213,119,248,152,2,44,154,163,70,221,153,101,155,167,43,172,9,129,22,39,253,19,98,108,110,79,113,224,232,178,185,112,104,218,246,97,228,251,34,242,193,238,210,144,12,191,179,162,241,81,51,145,235,249,14,239,107,49,192,214,31,181,199,106,157,184,84,204,176,115,121,50,45,127,4,150,254,138,236,205,93,222,114,67,29,24,72,243,141,128,195,78,66,215,61,156,180],j0=new Array(512),K0=new Array(512),eC=function(e){e>0&&e<1&&(e*=65536),e=Math.floor(e),e<256&&(e|=e<<8);for(var t=0;t<256;t++){var i;t&1?i=q0[t]^e&255:i=q0[t]^e>>8&255,j0[t]=j0[t+256]=i,K0[t]=K0[t+256]=$2[i%12]}};eC(0);function tC(n){if(typeof n=="number")n=Math.abs(n);else if(typeof n=="string"){var e=n;n=0;for(var t=0;t<e.length;t++)n=(n+(t+1)*(e.charCodeAt(t)%96))%2147483647}return n===0&&(n=311),n}function Q0(n){var e=tC(n);return function(){var t=e*48271%2147483647;return e=t,t/2147483647}}var nC=function n(e){var t=this;iM(this,n),al(this,"seed",0),al(this,"init",function(i){t.seed=i,t.value=Q0(i)}),al(this,"value",Q0(this.seed)),this.init(e)};new nC(Math.random());var iC=function(e){var t=arguments.length>1&&arguments[1]!==void 0?arguments[1]:.01,i=arguments.length>2&&arguments[2]!==void 0?arguments[2]:1,r=arguments.length>3&&arguments[3]!==void 0?arguments[3]:1/(2*Math.PI);return i/Math.atan(1/t)*Math.atan(Math.sin(2*Math.PI*e*r)/t)},rM=function(e){return 1/(1+e+.48*e*e+.235*e*e*e)};function wn(n,e,t){var i=arguments.length>3&&arguments[3]!==void 0?arguments[3]:.25,r=arguments.length>4&&arguments[4]!==void 0?arguments[4]:.01,s=arguments.length>5&&arguments[5]!==void 0?arguments[5]:1/0,a=arguments.length>6&&arguments[6]!==void 0?arguments[6]:rM,c=arguments.length>7&&arguments[7]!==void 0?arguments[7]:.001,u="velocity_"+e;if(n.__damp===void 0&&(n.__damp={}),n.__damp[u]===void 0&&(n.__damp[u]=0),Math.abs(n[e]-t)<=c)return n[e]=t,!1;i=Math.max(1e-4,i);var h=2/i,f=a(h*r),p=n[e]-t,m=t,g=s*i;p=Math.min(Math.max(p,-g),g),t=n[e]-p;var y=(n.__damp[u]+h*p)*r;n.__damp[u]=(n.__damp[u]-h*y)*f;var T=t+(p+y)*f;return m-n[e]>0==T>m&&(T=m,n.__damp[u]=(T-m)/r),n[e]=T,!0}function Ka(n,e,t,i,r,s,a,c){return wn(n,e,n[e]+J2(n[e],t),i,r,s,a,c)}var Xo=new K,J0,$0;function rC(n,e,t,i,r,s,a){return typeof e=="number"?Xo.setScalar(e):Array.isArray(e)?Xo.set(e[0],e[1]):Xo.copy(e),J0=wn(n,"x",Xo.x,t,i,r,s,a),$0=wn(n,"y",Xo.y,t,i,r,s,a),J0||$0}var Oa=new I,ex,tx,nx;function Mp(n,e,t,i,r,s,a){return typeof e=="number"?Oa.setScalar(e):Array.isArray(e)?Oa.set(e[0],e[1],e[2]):Oa.copy(e),ex=wn(n,"x",Oa.x,t,i,r,s,a),tx=wn(n,"y",Oa.y,t,i,r,s,a),nx=wn(n,"z",Oa.z,t,i,r,s,a),ex||tx||nx}var bs=new Et,ix,rx,sx,ax;function sC(n,e,t,i,r,s,a){return typeof e=="number"?bs.setScalar(e):Array.isArray(e)?bs.set(e[0],e[1],e[2],e[3]):bs.copy(e),ix=wn(n,"x",bs.x,t,i,r,s,a),rx=wn(n,"y",bs.y,t,i,r,s,a),sx=wn(n,"z",bs.z,t,i,r,s,a),ax=wn(n,"w",bs.w,t,i,r,s,a),ix||rx||sx||ax}var Yo=new ro,ox,lx,cx;function aC(n,e,t,i,r,s,a){return Array.isArray(e)?Yo.set(e[0],e[1],e[2],e[3]):Yo.copy(e),ox=Ka(n,"x",Yo.x,t,i,r,s,a),lx=Ka(n,"y",Yo.y,t,i,r,s,a),cx=Ka(n,"z",Yo.z,t,i,r,s,a),ox||lx||cx}var Ba=new be,ux,hx,fx;function oC(n,e,t,i,r,s,a){return e instanceof be?Ba.copy(e):Array.isArray(e)?Ba.setRGB(e[0],e[1],e[2]):Ba.set(e),ux=wn(n,"r",Ba.r,t,i,r,s,a),hx=wn(n,"g",Ba.g,t,i,r,s,a),fx=wn(n,"b",Ba.b,t,i,r,s,a),ux||hx||fx}var ki=new hn,wr=new Et,dx=new Et,Zo=new Et,px,mx,gx,vx;function sM(n,e,t,i,r,s,a){var c=n;Array.isArray(e)?ki.set(e[0],e[1],e[2],e[3]):ki.copy(e);var u=n.dot(ki)>0?1:-1;return ki.x*=u,ki.y*=u,ki.z*=u,ki.w*=u,px=wn(n,"x",ki.x,t,i,r,s,a),mx=wn(n,"y",ki.y,t,i,r,s,a),gx=wn(n,"z",ki.z,t,i,r,s,a),vx=wn(n,"w",ki.w,t,i,r,s,a),wr.set(n.x,n.y,n.z,n.w).normalize(),dx.set(c.__damp.velocity_x,c.__damp.velocity_y,c.__damp.velocity_z,c.__damp.velocity_w),Zo.copy(wr).multiplyScalar(dx.dot(wr)/wr.dot(wr)),c.__damp.velocity_x-=Zo.x,c.__damp.velocity_y-=Zo.y,c.__damp.velocity_z-=Zo.z,c.__damp.velocity_w-=Zo.w,n.set(wr.x,wr.y,wr.z,wr.w),px||mx||gx||vx}var qo=new ju,xx,yx,Sx;function lC(n,e,t,i,r,s,a){return Array.isArray(e)?qo.set(e[0],e[1],e[2]):qo.copy(e),xx=wn(n,"radius",qo.radius,t,i,r,s,a),yx=Ka(n,"phi",qo.phi,t,i,r,s,a),Sx=Ka(n,"theta",qo.theta,t,i,r,s,a),xx||yx||Sx}var Au=new ze,Mx=new I,_x=new hn,Tx=new I,wx,Ex,bx;function cC(n,e,t,i,r,s,a){var c=n;return c.__damp===void 0&&(c.__damp={position:new I,rotation:new hn,scale:new I},n.decompose(c.__damp.position,c.__damp.rotation,c.__damp.scale)),Array.isArray(e)?Au.set.apply(Au,j2(e)):Au.copy(e),Au.decompose(Mx,_x,Tx),wx=Mp(c.__damp.position,Mx,t,i,r,s,a),Ex=sM(c.__damp.rotation,_x,t,i,r,s,a),bx=Mp(c.__damp.scale,Tx,t,i,r,s,a),n.compose(c.__damp.position,c.__damp.rotation,c.__damp.scale),wx||Ex||bx}var uC=Object.freeze({__proto__:null,rsqw:iC,exp:rM,damp:wn,dampAngle:Ka,damp2:rC,damp3:Mp,damp4:sC,dampE:aC,dampC:oC,dampQ:sM,dampS:lC,dampM:cC});let jo;function hC(){var n;if(jo!==void 0)return jo;try{let e;const t=document.createElement("canvas");return jo=!!(window.WebGL2RenderingContext&&(e=t.getContext("webgl2"))),e&&((n=e.getExtension("WEBGL_lose_context"))==null||n.loseContext()),jo}catch{return jo=!1}}var fC=Object.defineProperty,dC=(n,e,t)=>e in n?fC(n,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):n[e]=t,dt=(n,e,t)=>(dC(n,typeof e!="symbol"?e+"":e,t),t);const Ax=(n,e)=>(n%e+e)%e;let pC=class extends xi{constructor(e,t){super(),dt(this,"object"),dt(this,"domElement"),dt(this,"enabled",!0),dt(this,"target",new I),dt(this,"minDistance",0),dt(this,"maxDistance",1/0),dt(this,"minZoom",0),dt(this,"maxZoom",1/0),dt(this,"minPolarAngle",0),dt(this,"maxPolarAngle",Math.PI),dt(this,"minAzimuthAngle",-1/0),dt(this,"maxAzimuthAngle",1/0),dt(this,"enableDamping",!1),dt(this,"dampingFactor",.05),dt(this,"enableZoom",!0),dt(this,"zoomSpeed",1),dt(this,"enableRotate",!0),dt(this,"rotateSpeed",1),dt(this,"enablePan",!0),dt(this,"panSpeed",1),dt(this,"screenSpacePanning",!0),dt(this,"keyPanSpeed",7),dt(this,"autoRotate",!1),dt(this,"autoRotateSpeed",2),dt(this,"reverseOrbit",!1),dt(this,"keys",{LEFT:"ArrowLeft",UP:"ArrowUp",RIGHT:"ArrowRight",BOTTOM:"ArrowDown"}),dt(this,"mouseButtons",{LEFT:As.ROTATE,MIDDLE:As.DOLLY,RIGHT:As.PAN}),dt(this,"touches",{ONE:Ps.ROTATE,TWO:Ps.DOLLY_PAN}),dt(this,"target0"),dt(this,"position0"),dt(this,"zoom0"),dt(this,"_domElementKeyEvents",null),dt(this,"getPolarAngle"),dt(this,"getAzimuthalAngle"),dt(this,"setPolarAngle"),dt(this,"setAzimuthalAngle"),dt(this,"getDistance"),dt(this,"listenToKeyEvents"),dt(this,"saveState"),dt(this,"reset"),dt(this,"update"),dt(this,"connect"),dt(this,"dispose"),this.object=e,this.domElement=t,this.target0=this.target.clone(),this.position0=this.object.position.clone(),this.zoom0=this.object.zoom,this.getPolarAngle=()=>f.phi,this.getAzimuthalAngle=()=>f.theta,this.setPolarAngle=V=>{let he=Ax(V,2*Math.PI),Se=f.phi;Se<0&&(Se+=2*Math.PI),he<0&&(he+=2*Math.PI);let _e=Math.abs(he-Se);2*Math.PI-_e<_e&&(he<Se?he+=2*Math.PI:Se+=2*Math.PI),p.phi=he-Se,i.update()},this.setAzimuthalAngle=V=>{let he=Ax(V,2*Math.PI),Se=f.theta;Se<0&&(Se+=2*Math.PI),he<0&&(he+=2*Math.PI);let _e=Math.abs(he-Se);2*Math.PI-_e<_e&&(he<Se?he+=2*Math.PI:Se+=2*Math.PI),p.theta=he-Se,i.update()},this.getDistance=()=>i.object.position.distanceTo(i.target),this.listenToKeyEvents=V=>{V.addEventListener("keydown",D),this._domElementKeyEvents=V},this.saveState=()=>{i.target0.copy(i.target),i.position0.copy(i.object.position),i.zoom0=i.object.zoom},this.reset=()=>{i.target.copy(i.target0),i.object.position.copy(i.position0),i.object.zoom=i.zoom0,i.object.updateProjectionMatrix(),i.dispatchEvent(r),i.update(),u=c.NONE},this.update=(()=>{const V=new I,he=new hn().setFromUnitVectors(e.up,new I(0,1,0)),Se=he.clone().invert(),_e=new I,De=new hn,nt=2*Math.PI;return function(){const G=i.object.position;V.copy(G).sub(i.target),V.applyQuaternion(he),f.setFromVector3(V),i.autoRotate&&u===c.NONE&&te(R()),i.enableDamping?(f.theta+=p.theta*i.dampingFactor,f.phi+=p.phi*i.dampingFactor):(f.theta+=p.theta,f.phi+=p.phi);let Ae=i.minAzimuthAngle,se=i.maxAzimuthAngle;return isFinite(Ae)&&isFinite(se)&&(Ae<-Math.PI?Ae+=nt:Ae>Math.PI&&(Ae-=nt),se<-Math.PI?se+=nt:se>Math.PI&&(se-=nt),Ae<=se?f.theta=Math.max(Ae,Math.min(se,f.theta)):f.theta=f.theta>(Ae+se)/2?Math.max(Ae,f.theta):Math.min(se,f.theta)),f.phi=Math.max(i.minPolarAngle,Math.min(i.maxPolarAngle,f.phi)),f.makeSafe(),f.radius*=m,f.radius=Math.max(i.minDistance,Math.min(i.maxDistance,f.radius)),i.enableDamping===!0?i.target.addScaledVector(g,i.dampingFactor):i.target.add(g),V.setFromSpherical(f),V.applyQuaternion(Se),G.copy(i.target).add(V),i.object.lookAt(i.target),i.enableDamping===!0?(p.theta*=1-i.dampingFactor,p.phi*=1-i.dampingFactor,g.multiplyScalar(1-i.dampingFactor)):(p.set(0,0,0),g.set(0,0,0)),m=1,y||_e.distanceToSquared(i.object.position)>h||8*(1-De.dot(i.object.quaternion))>h?(i.dispatchEvent(r),_e.copy(i.object.position),De.copy(i.object.quaternion),y=!1,!0):!1}})(),this.connect=V=>{V===document&&console.error('THREE.OrbitControls: "document" should not be used as the target "domElement". Please use "renderer.domElement" instead.'),i.domElement=V,i.domElement.style.touchAction="none",i.domElement.addEventListener("contextmenu",Me),i.domElement.addEventListener("pointerdown",Ze),i.domElement.addEventListener("pointercancel",$e),i.domElement.addEventListener("wheel",O)},this.dispose=()=>{var V,he,Se,_e,De,nt;(V=i.domElement)==null||V.removeEventListener("contextmenu",Me),(he=i.domElement)==null||he.removeEventListener("pointerdown",Ze),(Se=i.domElement)==null||Se.removeEventListener("pointercancel",$e),(_e=i.domElement)==null||_e.removeEventListener("wheel",O),(De=i.domElement)==null||De.ownerDocument.removeEventListener("pointermove",Be),(nt=i.domElement)==null||nt.ownerDocument.removeEventListener("pointerup",ke),i._domElementKeyEvents!==null&&i._domElementKeyEvents.removeEventListener("keydown",D)};const i=this,r={type:"change"},s={type:"start"},a={type:"end"},c={NONE:-1,ROTATE:0,DOLLY:1,PAN:2,TOUCH_ROTATE:3,TOUCH_PAN:4,TOUCH_DOLLY_PAN:5,TOUCH_DOLLY_ROTATE:6};let u=c.NONE;const h=1e-6,f=new ju,p=new ju;let m=1;const g=new I;let y=!1;const T=new K,S=new K,x=new K,w=new K,M=new K,b=new K,P=new K,C=new K,L=new K,U=[],A={};function R(){return 2*Math.PI/60/60*i.autoRotateSpeed}function z(){return Math.pow(.95,i.zoomSpeed)}function te(V){i.reverseOrbit?p.theta+=V:p.theta-=V}function W(V){i.reverseOrbit?p.phi+=V:p.phi-=V}const J=(()=>{const V=new I;return function(Se,_e){V.setFromMatrixColumn(_e,0),V.multiplyScalar(-Se),g.add(V)}})(),ne=(()=>{const V=new I;return function(Se,_e){i.screenSpacePanning===!0?V.setFromMatrixColumn(_e,1):(V.setFromMatrixColumn(_e,0),V.crossVectors(i.object.up,V)),V.multiplyScalar(Se),g.add(V)}})(),ue=(()=>{const V=new I;return function(Se,_e){const De=i.domElement;if(De&&i.object instanceof Yt&&i.object.isPerspectiveCamera){const nt=i.object.position;V.copy(nt).sub(i.target);let At=V.length();At*=Math.tan(i.object.fov/2*Math.PI/180),J(2*Se*At/De.clientHeight,i.object.matrix),ne(2*_e*At/De.clientHeight,i.object.matrix)}else De&&i.object instanceof Pr&&i.object.isOrthographicCamera?(J(Se*(i.object.right-i.object.left)/i.object.zoom/De.clientWidth,i.object.matrix),ne(_e*(i.object.top-i.object.bottom)/i.object.zoom/De.clientHeight,i.object.matrix)):(console.warn("WARNING: OrbitControls.js encountered an unknown camera type - pan disabled."),i.enablePan=!1)}})();function ae(V){i.object instanceof Yt&&i.object.isPerspectiveCamera?m/=V:i.object instanceof Pr&&i.object.isOrthographicCamera?(i.object.zoom=Math.max(i.minZoom,Math.min(i.maxZoom,i.object.zoom*V)),i.object.updateProjectionMatrix(),y=!0):(console.warn("WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled."),i.enableZoom=!1)}function B(V){i.object instanceof Yt&&i.object.isPerspectiveCamera?m*=V:i.object instanceof Pr&&i.object.isOrthographicCamera?(i.object.zoom=Math.max(i.minZoom,Math.min(i.maxZoom,i.object.zoom/V)),i.object.updateProjectionMatrix(),y=!0):(console.warn("WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled."),i.enableZoom=!1)}function X(V){T.set(V.clientX,V.clientY)}function Y(V){P.set(V.clientX,V.clientY)}function H(V){w.set(V.clientX,V.clientY)}function q(V){S.set(V.clientX,V.clientY),x.subVectors(S,T).multiplyScalar(i.rotateSpeed);const he=i.domElement;he&&(te(2*Math.PI*x.x/he.clientHeight),W(2*Math.PI*x.y/he.clientHeight)),T.copy(S),i.update()}function ye(V){C.set(V.clientX,V.clientY),L.subVectors(C,P),L.y>0?ae(z()):L.y<0&&B(z()),P.copy(C),i.update()}function ge(V){M.set(V.clientX,V.clientY),b.subVectors(M,w).multiplyScalar(i.panSpeed),ue(b.x,b.y),w.copy(M),i.update()}function Pe(V){V.deltaY<0?B(z()):V.deltaY>0&&ae(z()),i.update()}function Ue(V){let he=!1;switch(V.code){case i.keys.UP:ue(0,i.keyPanSpeed),he=!0;break;case i.keys.BOTTOM:ue(0,-i.keyPanSpeed),he=!0;break;case i.keys.LEFT:ue(i.keyPanSpeed,0),he=!0;break;case i.keys.RIGHT:ue(-i.keyPanSpeed,0),he=!0;break}he&&(V.preventDefault(),i.update())}function He(){if(U.length==1)T.set(U[0].pageX,U[0].pageY);else{const V=.5*(U[0].pageX+U[1].pageX),he=.5*(U[0].pageY+U[1].pageY);T.set(V,he)}}function je(){if(U.length==1)w.set(U[0].pageX,U[0].pageY);else{const V=.5*(U[0].pageX+U[1].pageX),he=.5*(U[0].pageY+U[1].pageY);w.set(V,he)}}function Tt(){const V=U[0].pageX-U[1].pageX,he=U[0].pageY-U[1].pageY,Se=Math.sqrt(V*V+he*he);P.set(0,Se)}function Nt(){i.enableZoom&&Tt(),i.enablePan&&je()}function Ye(){i.enableZoom&&Tt(),i.enableRotate&&He()}function k(V){if(U.length==1)S.set(V.pageX,V.pageY);else{const Se=fe(V),_e=.5*(V.pageX+Se.x),De=.5*(V.pageY+Se.y);S.set(_e,De)}x.subVectors(S,T).multiplyScalar(i.rotateSpeed);const he=i.domElement;he&&(te(2*Math.PI*x.x/he.clientHeight),W(2*Math.PI*x.y/he.clientHeight)),T.copy(S)}function xe(V){if(U.length==1)M.set(V.pageX,V.pageY);else{const he=fe(V),Se=.5*(V.pageX+he.x),_e=.5*(V.pageY+he.y);M.set(Se,_e)}b.subVectors(M,w).multiplyScalar(i.panSpeed),ue(b.x,b.y),w.copy(M)}function me(V){const he=fe(V),Se=V.pageX-he.x,_e=V.pageY-he.y,De=Math.sqrt(Se*Se+_e*_e);C.set(0,De),L.set(0,Math.pow(C.y/P.y,i.zoomSpeed)),ae(L.y),P.copy(C)}function we(V){i.enableZoom&&me(V),i.enablePan&&xe(V)}function ve(V){i.enableZoom&&me(V),i.enableRotate&&k(V)}function Ze(V){var he,Se;i.enabled!==!1&&(U.length===0&&((he=i.domElement)==null||he.ownerDocument.addEventListener("pointermove",Be),(Se=i.domElement)==null||Se.ownerDocument.addEventListener("pointerup",ke)),Le(V),V.pointerType==="touch"?ce(V):yt(V))}function Be(V){i.enabled!==!1&&(V.pointerType==="touch"?Te(V):Gt(V))}function ke(V){var he,Se,_e;We(V),U.length===0&&((he=i.domElement)==null||he.releasePointerCapture(V.pointerId),(Se=i.domElement)==null||Se.ownerDocument.removeEventListener("pointermove",Be),(_e=i.domElement)==null||_e.ownerDocument.removeEventListener("pointerup",ke)),i.dispatchEvent(a),u=c.NONE}function $e(V){We(V)}function yt(V){let he;switch(V.button){case 0:he=i.mouseButtons.LEFT;break;case 1:he=i.mouseButtons.MIDDLE;break;case 2:he=i.mouseButtons.RIGHT;break;default:he=-1}switch(he){case As.DOLLY:if(i.enableZoom===!1)return;Y(V),u=c.DOLLY;break;case As.ROTATE:if(V.ctrlKey||V.metaKey||V.shiftKey){if(i.enablePan===!1)return;H(V),u=c.PAN}else{if(i.enableRotate===!1)return;X(V),u=c.ROTATE}break;case As.PAN:if(V.ctrlKey||V.metaKey||V.shiftKey){if(i.enableRotate===!1)return;X(V),u=c.ROTATE}else{if(i.enablePan===!1)return;H(V),u=c.PAN}break;default:u=c.NONE}u!==c.NONE&&i.dispatchEvent(s)}function Gt(V){if(i.enabled!==!1)switch(u){case c.ROTATE:if(i.enableRotate===!1)return;q(V);break;case c.DOLLY:if(i.enableZoom===!1)return;ye(V);break;case c.PAN:if(i.enablePan===!1)return;ge(V);break}}function O(V){i.enabled===!1||i.enableZoom===!1||u!==c.NONE&&u!==c.ROTATE||(V.preventDefault(),i.dispatchEvent(s),Pe(V),i.dispatchEvent(a))}function D(V){i.enabled===!1||i.enablePan===!1||Ue(V)}function ce(V){switch(Re(V),U.length){case 1:switch(i.touches.ONE){case Ps.ROTATE:if(i.enableRotate===!1)return;He(),u=c.TOUCH_ROTATE;break;case Ps.PAN:if(i.enablePan===!1)return;je(),u=c.TOUCH_PAN;break;default:u=c.NONE}break;case 2:switch(i.touches.TWO){case Ps.DOLLY_PAN:if(i.enableZoom===!1&&i.enablePan===!1)return;Nt(),u=c.TOUCH_DOLLY_PAN;break;case Ps.DOLLY_ROTATE:if(i.enableZoom===!1&&i.enableRotate===!1)return;Ye(),u=c.TOUCH_DOLLY_ROTATE;break;default:u=c.NONE}break;default:u=c.NONE}u!==c.NONE&&i.dispatchEvent(s)}function Te(V){switch(Re(V),u){case c.TOUCH_ROTATE:if(i.enableRotate===!1)return;k(V),i.update();break;case c.TOUCH_PAN:if(i.enablePan===!1)return;xe(V),i.update();break;case c.TOUCH_DOLLY_PAN:if(i.enableZoom===!1&&i.enablePan===!1)return;we(V),i.update();break;case c.TOUCH_DOLLY_ROTATE:if(i.enableZoom===!1&&i.enableRotate===!1)return;ve(V),i.update();break;default:u=c.NONE}}function Me(V){i.enabled!==!1&&V.preventDefault()}function Le(V){U.push(V)}function We(V){delete A[V.pointerId];for(let he=0;he<U.length;he++)if(U[he].pointerId==V.pointerId){U.splice(he,1);return}}function Re(V){let he=A[V.pointerId];he===void 0&&(he=new K,A[V.pointerId]=he),he.set(V.pageX,V.pageY)}function fe(V){const he=V.pointerId===U[0].pointerId?U[1]:U[0];return A[he.pointerId]}t!==void 0&&this.connect(t),this.update()}};const mC=ee.forwardRef(({makeDefault:n,camera:e,regress:t,domElement:i,enableDamping:r=!0,keyEvents:s=!1,onChange:a,onStart:c,onEnd:u,...h},f)=>{const p=vn(C=>C.invalidate),m=vn(C=>C.camera),g=vn(C=>C.gl),y=vn(C=>C.events),T=vn(C=>C.setEvents),S=vn(C=>C.set),x=vn(C=>C.get),w=vn(C=>C.performance),M=e||m,b=i||y.connected||g.domElement,P=ee.useMemo(()=>new pC(M),[M]);return Rh(()=>{P.enabled&&P.update()},-1),ee.useEffect(()=>(s&&P.connect(s===!0?b:s),P.connect(b),()=>void P.dispose()),[s,b,t,P,p]),ee.useEffect(()=>{const C=A=>{p(),t&&w.regress(),a&&a(A)},L=A=>{c&&c(A)},U=A=>{u&&u(A)};return P.addEventListener("change",C),P.addEventListener("start",L),P.addEventListener("end",U),()=>{P.removeEventListener("start",L),P.removeEventListener("end",U),P.removeEventListener("change",C)}},[a,c,u,P,p,T]),ee.useEffect(()=>{if(n){const C=x().controls;return S({controls:P}),()=>S({controls:C})}},[n,P]),ee.createElement("primitive",Cl({ref:f,object:P,enableDamping:r},h))});var gC=`uniform mat4 modelMatrix;
uniform mat4 viewMatrix;
uniform mat4 projectionMatrix;
uniform float uTime;

attribute vec3 position;
attribute vec2 uv;

varying vec2 vUv;
varying float vFactor;

vec2 fade(vec2 t) {
    return t*t*t*(t*(t*6.0-15.0)+10.0);
}

vec4 permute(vec4 x) {return mod(((x*34.0)+1.0)*x, 289.0);}

float cnoise(vec2 P) {
    vec4 Pi = floor(P.xyxy) + vec4(0.0, 0.0, 1.0, 1.0);
    vec4 Pf = fract(P.xyxy) - vec4(0.0, 0.0, 1.0, 1.0);
    Pi = mod(Pi, 289.0); 
    vec4 ix = Pi.xzxz;
    vec4 iy = Pi.yyww;
    vec4 fx = Pf.xzxz;
    vec4 fy = Pf.yyww;
    vec4 i = permute(permute(ix) + iy);
    vec4 gx = 2.0 * fract(i * 0.0243902439) - 1.0; 
    vec4 gy = abs(gx) - 0.5;
    vec4 tx = floor(gx + 0.5);
    gx = gx - tx;
    vec2 g00 = vec2(gx.x,gy.x);
    vec2 g10 = vec2(gx.y,gy.y);
    vec2 g01 = vec2(gx.z,gy.z);
    vec2 g11 = vec2(gx.w,gy.w);
    vec4 norm = 1.79284291400159 - 0.85373472095314 * vec4(dot(g00, g00), dot(g01, g01), dot(g10, g10), dot(g11, g11));
    g00 *= norm.x;
    g01 *= norm.y;
    g10 *= norm.z;
    g11 *= norm.w;
    float n00 = dot(g00, vec2(fx.x, fy.x));
    float n10 = dot(g10, vec2(fx.y, fy.y));
    float n01 = dot(g01, vec2(fx.z, fy.z));
    float n11 = dot(g11, vec2(fx.w, fy.w));
    vec2 fade_xy = fade(Pf.xy);
    vec2 n_x = mix(vec2(n00, n01), vec2(n10, n11), fade_xy.x);
    float n_xy = mix(n_x.x, n_x.y, fade_xy.y);
    return 2.3 * n_xy;
}

void main() {

    float factor = floor((cnoise(vec2(position.x + uTime * 0.05, position.y + uTime * 0.05) * 2.0) + 0.9) * 4.0) / 4.0;
    

    vec3 displacedPosition = vec3(
        position.x,
        position.y,
        factor * 0.1
    );
    
    gl_Position = projectionMatrix * viewMatrix * modelMatrix * vec4(displacedPosition, 1.0);

    vUv = uv;
    vFactor = factor;
}`,vC=`#define PI 3.1415926535897932384626433832795

precision mediump float;

varying vec2 vUv;
varying float vFactor;

void main() {

    float factor = floor(vFactor * 10.0) / 10.0;
    vec4 baseColor = vec4(0.29, 0.15, 0.01, 1.0);
    vec4 highlightColor = vec4(1.00, 0.61, 0.18, 1.0);

    vec4 baseColorMix = mix(baseColor, highlightColor, factor);

    float slopesFactor = step(0.1 , mod(vFactor * 4.0, 1.0));
    vec4 slopesColor = vec4(2.00, 1.71, 0.33, 1.0);

    vec4 finalColorMix = mix(baseColorMix, slopesColor , slopesFactor);

    gl_FragColor = finalColorMix;
}`;/**
 * postprocessing v6.32.2 build Sat Jul 01 2023
 * https://github.com/pmndrs/postprocessing
 * Copyright 2015-2023 Raoul van Rüschen
 * @license Zlib
 */var $s="varying vec2 vUv;void main(){vUv=position.xy*0.5+0.5;gl_Position=vec4(position.xy,1.0,1.0);}",xC=`#ifdef FRAMEBUFFER_PRECISION_HIGH
uniform mediump sampler2D inputBuffer;
#else
uniform lowp sampler2D inputBuffer;
#endif
#if PASS == 1
uniform vec4 kernel64[32];
#else
uniform vec4 kernel16[8];
#endif
uniform lowp sampler2D cocBuffer;uniform vec2 texelSize;uniform float scale;varying vec2 vUv;void main(){
#ifdef FOREGROUND
vec2 CoCNearFar=texture2D(cocBuffer,vUv).rg;float CoC=CoCNearFar.r*scale;
#else
float CoC=texture2D(cocBuffer,vUv).g*scale;
#endif
if(CoC==0.0){gl_FragColor=texture2D(inputBuffer,vUv);}else{
#ifdef FOREGROUND
vec2 step=texelSize*max(CoC,CoCNearFar.g*scale);
#else
vec2 step=texelSize*CoC;
#endif
#if PASS == 1
vec4 acc=vec4(0.0);for(int i=0;i<32;++i){vec4 kernel=kernel64[i];vec2 uv=step*kernel.xy+vUv;acc+=texture2D(inputBuffer,uv);uv=step*kernel.zw+vUv;acc+=texture2D(inputBuffer,uv);}gl_FragColor=acc/64.0;
#else
vec4 maxValue=texture2D(inputBuffer,vUv);for(int i=0;i<8;++i){vec4 kernel=kernel16[i];vec2 uv=step*kernel.xy+vUv;maxValue=max(texture2D(inputBuffer,uv),maxValue);uv=step*kernel.zw+vUv;maxValue=max(texture2D(inputBuffer,uv),maxValue);}gl_FragColor=maxValue;
#endif
}}`,Pu=class extends _t{constructor(n=!1,e=!1){super({name:"BokehMaterial",defines:{PASS:n?"2":"1"},uniforms:{inputBuffer:new Q(null),cocBuffer:new Q(null),texelSize:new Q(new K),kernel64:new Q(null),kernel16:new Q(null),scale:new Q(1)},blending:Jt,toneMapped:!1,depthWrite:!1,depthTest:!1,fragmentShader:xC,vertexShader:$s}),e&&(this.defines.FOREGROUND="1"),this.generateKernel()}set inputBuffer(n){this.uniforms.inputBuffer.value=n}setInputBuffer(n){this.uniforms.inputBuffer.value=n}set cocBuffer(n){this.uniforms.cocBuffer.value=n}setCoCBuffer(n){this.uniforms.cocBuffer.value=n}get scale(){return this.uniforms.scale.value}set scale(n){this.uniforms.scale.value=n}getScale(n){return this.scale}setScale(n){this.scale=n}generateKernel(){const n=2.39996323,e=new Float64Array(128),t=new Float64Array(32);let i=0,r=0;for(let s=0,a=Math.sqrt(80);s<80;++s){const c=s*n,u=Math.sqrt(s)/a,h=u*Math.cos(c),f=u*Math.sin(c);s%5===0?(t[r++]=h,t[r++]=f):(e[i++]=h,e[i++]=f)}this.uniforms.kernel64.value=e,this.uniforms.kernel16.value=t}setTexelSize(n,e){this.uniforms.texelSize.value.set(n,e)}setSize(n,e){this.uniforms.texelSize.value.set(1/n,1/e)}},aM="",Ot="srgb",to="srgb-linear",oM=Number(is.replace(/\D+/g,"")),Tm=oM>=152,lM=new Map([[Dl,to],[Di,Ot]]),yC=new Map([[to,Dl],[Ot,Di]]);function Rr(n){return n===null?null:Tm?n.outputColorSpace:lM.get(n.outputEncoding)}function En(n,e){n!==null&&(Tm?n.colorSpace=e:n.encoding=yC.get(e))}function Cd(n,e){n===null||e===null||(Tm?e.colorSpace=n.colorSpace:e.encoding=n.encoding)}function Bl(n){return oM<154?n.replace("colorspace_fragment","encodings_fragment"):n}function Za(n,e,t){return n*(e-t)-e}function zs(n,e,t){return Math.min(Math.max((n+e)/(e-t),0),1)}var SC=`#include <common>
#include <packing>
#ifdef GL_FRAGMENT_PRECISION_HIGH
uniform highp sampler2D depthBuffer;
#else
uniform mediump sampler2D depthBuffer;
#endif
uniform float focusDistance;uniform float focusRange;uniform float cameraNear;uniform float cameraFar;varying vec2 vUv;float readDepth(const in vec2 uv){
#if DEPTH_PACKING == 3201
float depth=unpackRGBAToDepth(texture2D(depthBuffer,uv));
#else
float depth=texture2D(depthBuffer,uv).r;
#endif
#ifdef LOG_DEPTH
float d=pow(2.0,depth*log2(cameraFar+1.0))-1.0;float a=cameraFar/(cameraFar-cameraNear);float b=cameraFar*cameraNear/(cameraNear-cameraFar);depth=a+b/d;
#endif
return depth;}void main(){float depth=readDepth(vUv);
#ifdef PERSPECTIVE_CAMERA
float viewZ=perspectiveDepthToViewZ(depth,cameraNear,cameraFar);float linearDepth=viewZToOrthographicDepth(viewZ,cameraNear,cameraFar);
#else
float linearDepth=depth;
#endif
float signedDistance=linearDepth-focusDistance;float magnitude=smoothstep(0.0,focusRange,abs(signedDistance));gl_FragColor.rg=magnitude*vec2(step(signedDistance,0.0),step(0.0,signedDistance));}`,MC=class extends _t{constructor(n){super({name:"CircleOfConfusionMaterial",defines:{DEPTH_PACKING:"0"},uniforms:{depthBuffer:new Q(null),focusDistance:new Q(0),focusRange:new Q(0),cameraNear:new Q(.3),cameraFar:new Q(1e3)},blending:Jt,toneMapped:!1,depthWrite:!1,depthTest:!1,fragmentShader:SC,vertexShader:$s}),this.uniforms.focalLength=this.uniforms.focusRange,this.copyCameraSettings(n)}get near(){return this.uniforms.cameraNear.value}get far(){return this.uniforms.cameraFar.value}set depthBuffer(n){this.uniforms.depthBuffer.value=n}set depthPacking(n){this.defines.DEPTH_PACKING=n.toFixed(0),this.needsUpdate=!0}setDepthBuffer(n,e=In){this.depthBuffer=n,this.depthPacking=e}get focusDistance(){return this.uniforms.focusDistance.value}set focusDistance(n){this.uniforms.focusDistance.value=n}get worldFocusDistance(){return-Za(this.focusDistance,this.near,this.far)}set worldFocusDistance(n){this.focusDistance=zs(-n,this.near,this.far)}getFocusDistance(n){this.uniforms.focusDistance.value=n}setFocusDistance(n){this.uniforms.focusDistance.value=n}get focalLength(){return this.focusRange}set focalLength(n){this.focusRange=n}get focusRange(){return this.uniforms.focusRange.value}set focusRange(n){this.uniforms.focusRange.value=n}get worldFocusRange(){return-Za(this.focusRange,this.near,this.far)}set worldFocusRange(n){this.focusRange=zs(-n,this.near,this.far)}getFocalLength(n){return this.focusRange}setFocalLength(n){this.focusRange=n}adoptCameraSettings(n){this.copyCameraSettings(n)}copyCameraSettings(n){n&&(this.uniforms.cameraNear.value=n.near,this.uniforms.cameraFar.value=n.far,n instanceof Yt?this.defines.PERSPECTIVE_CAMERA="1":delete this.defines.PERSPECTIVE_CAMERA,this.needsUpdate=!0)}},ot={SKIP:9,SET:30,ADD:0,ALPHA:1,AVERAGE:2,COLOR:3,COLOR_BURN:4,COLOR_DODGE:5,DARKEN:6,DIFFERENCE:7,DIVIDE:8,DST:9,EXCLUSION:10,HARD_LIGHT:11,HARD_MIX:12,HUE:13,INVERT:14,INVERT_RGB:15,LIGHTEN:16,LINEAR_BURN:17,LINEAR_DODGE:18,LINEAR_LIGHT:19,LUMINOSITY:20,MULTIPLY:21,NEGATION:22,NORMAL:23,OVERLAY:24,PIN_LIGHT:25,REFLECT:26,SATURATION:27,SCREEN:28,SOFT_LIGHT:29,SRC:30,SUBTRACT:31,VIVID_LIGHT:32},qa={RED:0,GREEN:1,BLUE:2,ALPHA:3},$o={FULL:0,SINGLE:1},ol={DEFAULT:0,KEEP_MAX_DEPTH:1,DISCARD_MAX_DEPTH:2},Xi={NONE:0,DEPTH:1,CONVOLUTION:2},It={FRAGMENT_HEAD:"FRAGMENT_HEAD",FRAGMENT_MAIN_UV:"FRAGMENT_MAIN_UV",FRAGMENT_MAIN_IMAGE:"FRAGMENT_MAIN_IMAGE",VERTEX_HEAD:"VERTEX_HEAD",VERTEX_MAIN_SUPPORT:"VERTEX_MAIN_SUPPORT"},Is={DISABLED:0,SPORADIC:1,CONSTANT_MILD:2,CONSTANT_WILD:3},uo={VERY_SMALL:0,SMALL:1,MEDIUM:2,LARGE:3,VERY_LARGE:4,HUGE:5},_C={SCALE_UP:"lut.scaleup"},ll={DISCARD:0,MULTIPLY:1,MULTIPLY_RGB_SET_ALPHA:2},TC=`#ifdef FRAMEBUFFER_PRECISION_HIGH
uniform mediump sampler2D inputBuffer;
#else
uniform lowp sampler2D inputBuffer;
#endif
varying vec2 vUv0;varying vec2 vUv1;varying vec2 vUv2;varying vec2 vUv3;void main(){vec4 sum=texture2D(inputBuffer,vUv0);sum+=texture2D(inputBuffer,vUv1);sum+=texture2D(inputBuffer,vUv2);sum+=texture2D(inputBuffer,vUv3);gl_FragColor=sum*0.25;
#include <colorspace_fragment>
}`,wC="uniform vec4 texelSize;uniform float kernel;uniform float scale;varying vec2 vUv0;varying vec2 vUv1;varying vec2 vUv2;varying vec2 vUv3;void main(){vec2 uv=position.xy*0.5+0.5;vec2 dUv=(texelSize.xy*vec2(kernel)+texelSize.zw)*scale;vUv0=vec2(uv.x-dUv.x,uv.y+dUv.y);vUv1=vec2(uv.x+dUv.x,uv.y+dUv.y);vUv2=vec2(uv.x+dUv.x,uv.y-dUv.y);vUv3=vec2(uv.x-dUv.x,uv.y-dUv.y);gl_Position=vec4(position.xy,1.0,1.0);}",EC=[new Float32Array([0,0]),new Float32Array([0,1,1]),new Float32Array([0,1,1,2]),new Float32Array([0,1,2,2,3]),new Float32Array([0,1,2,3,4,4,5]),new Float32Array([0,1,2,3,4,5,7,8,9,10])],bC=class extends _t{constructor(n=new Et){super({name:"KawaseBlurMaterial",uniforms:{inputBuffer:new Q(null),texelSize:new Q(new Et),scale:new Q(1),kernel:new Q(0)},blending:Jt,toneMapped:!1,depthWrite:!1,depthTest:!1,fragmentShader:TC,vertexShader:wC}),this.fragmentShader=Bl(this.fragmentShader),this.setTexelSize(n.x,n.y),this.kernelSize=uo.MEDIUM}set inputBuffer(n){this.uniforms.inputBuffer.value=n}setInputBuffer(n){this.inputBuffer=n}get kernelSequence(){return EC[this.kernelSize]}get scale(){return this.uniforms.scale.value}set scale(n){this.uniforms.scale.value=n}getScale(){return this.uniforms.scale.value}setScale(n){this.uniforms.scale.value=n}getKernel(){return null}get kernel(){return this.uniforms.kernel.value}set kernel(n){this.uniforms.kernel.value=n}setKernel(n){this.kernel=n}setTexelSize(n,e){this.uniforms.texelSize.value.set(n,e,n*.5,e*.5)}setSize(n,e){const t=1/n,i=1/e;this.uniforms.texelSize.value.set(t,i,t*.5,i*.5)}},AC=`#include <common>
#include <dithering_pars_fragment>
#ifdef FRAMEBUFFER_PRECISION_HIGH
uniform mediump sampler2D inputBuffer;
#else
uniform lowp sampler2D inputBuffer;
#endif
uniform float opacity;varying vec2 vUv;void main(){vec4 texel=texture2D(inputBuffer,vUv);gl_FragColor=opacity*texel;
#include <colorspace_fragment>
#include <dithering_fragment>
}`,cM=class extends _t{constructor(){super({name:"CopyMaterial",uniforms:{inputBuffer:new Q(null),opacity:new Q(1)},blending:Jt,toneMapped:!1,depthWrite:!1,depthTest:!1,fragmentShader:AC,vertexShader:$s}),this.fragmentShader=Bl(this.fragmentShader)}set inputBuffer(n){this.uniforms.inputBuffer.value=n}setInputBuffer(n){this.uniforms.inputBuffer.value=n}getOpacity(n){return this.uniforms.opacity.value}setOpacity(n){this.uniforms.opacity.value=n}},PC=`#include <packing>
#include <clipping_planes_pars_fragment>
#ifdef GL_FRAGMENT_PRECISION_HIGH
uniform highp sampler2D depthBuffer;
#else
uniform mediump sampler2D depthBuffer;
#endif
uniform float cameraNear;uniform float cameraFar;varying float vViewZ;varying vec4 vProjTexCoord;void main(){
#include <clipping_planes_fragment>
vec2 projTexCoord=(vProjTexCoord.xy/vProjTexCoord.w)*0.5+0.5;projTexCoord=clamp(projTexCoord,0.002,0.998);
#if DEPTH_PACKING == 3201
float fragCoordZ=unpackRGBAToDepth(texture2D(depthBuffer,projTexCoord));
#else
float fragCoordZ=texture2D(depthBuffer,projTexCoord).r;
#endif
#ifdef PERSPECTIVE_CAMERA
float viewZ=perspectiveDepthToViewZ(fragCoordZ,cameraNear,cameraFar);
#else
float viewZ=orthographicDepthToViewZ(fragCoordZ,cameraNear,cameraFar);
#endif
float depthTest=(-vViewZ>-viewZ)?1.0:0.0;gl_FragColor.rg=vec2(0.0,depthTest);}`,CC=`#include <common>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <clipping_planes_pars_vertex>
varying float vViewZ;varying vec4 vProjTexCoord;void main(){
#include <skinbase_vertex>
#include <begin_vertex>
#include <morphtarget_vertex>
#include <skinning_vertex>
#include <project_vertex>
vViewZ=mvPosition.z;vProjTexCoord=gl_Position;
#include <clipping_planes_vertex>
}`,RC=class extends _t{constructor(n=null,e){super({name:"DepthComparisonMaterial",defines:{DEPTH_PACKING:"0"},uniforms:{depthBuffer:new Q(null),cameraNear:new Q(.3),cameraFar:new Q(1e3)},blending:Jt,toneMapped:!1,depthWrite:!1,depthTest:!1,fragmentShader:PC,vertexShader:CC}),this.depthBuffer=n,this.depthPacking=lr,this.copyCameraSettings(e)}set depthBuffer(n){this.uniforms.depthBuffer.value=n}set depthPacking(n){this.defines.DEPTH_PACKING=n.toFixed(0),this.needsUpdate=!0}setDepthBuffer(n,e=lr){this.depthBuffer=n,this.depthPacking=e}adoptCameraSettings(n){this.copyCameraSettings(n)}copyCameraSettings(n){n&&(this.uniforms.cameraNear.value=n.near,this.uniforms.cameraFar.value=n.far,n instanceof Yt?this.defines.PERSPECTIVE_CAMERA="1":delete this.defines.PERSPECTIVE_CAMERA,this.needsUpdate=!0)}},DC=`#include <packing>
varying vec2 vUv;
#ifdef NORMAL_DEPTH
#ifdef GL_FRAGMENT_PRECISION_HIGH
uniform highp sampler2D normalDepthBuffer;
#else
uniform mediump sampler2D normalDepthBuffer;
#endif
float readDepth(const in vec2 uv){return texture2D(normalDepthBuffer,uv).a;}
#else
#if INPUT_DEPTH_PACKING == 3201
uniform lowp sampler2D depthBuffer;
#elif defined(GL_FRAGMENT_PRECISION_HIGH)
uniform highp sampler2D depthBuffer;
#else
uniform mediump sampler2D depthBuffer;
#endif
float readDepth(const in vec2 uv){
#if INPUT_DEPTH_PACKING == 3201
return unpackRGBAToDepth(texture2D(depthBuffer,uv));
#else
return texture2D(depthBuffer,uv).r;
#endif
}
#endif
void main(){
#if INPUT_DEPTH_PACKING == OUTPUT_DEPTH_PACKING
gl_FragColor=texture2D(depthBuffer,vUv);
#else
float depth=readDepth(vUv);
#if OUTPUT_DEPTH_PACKING == 3201
gl_FragColor=(depth==1.0)?vec4(1.0):packDepthToRGBA(depth);
#else
gl_FragColor=vec4(vec3(depth),1.0);
#endif
#endif
}`,LC=`varying vec2 vUv;
#if DEPTH_COPY_MODE == 1
uniform vec2 texelPosition;
#endif
void main(){
#if DEPTH_COPY_MODE == 1
vUv=texelPosition;
#else
vUv=position.xy*0.5+0.5;
#endif
gl_Position=vec4(position.xy,1.0,1.0);}`,IC=class extends _t{constructor(){super({name:"DepthCopyMaterial",defines:{INPUT_DEPTH_PACKING:"0",OUTPUT_DEPTH_PACKING:"0",DEPTH_COPY_MODE:"0"},uniforms:{depthBuffer:new Q(null),texelPosition:new Q(new K)},blending:Jt,toneMapped:!1,depthWrite:!1,depthTest:!1,fragmentShader:DC,vertexShader:LC}),this.depthCopyMode=$o.FULL}get depthBuffer(){return this.uniforms.depthBuffer.value}set depthBuffer(n){this.uniforms.depthBuffer.value=n}set inputDepthPacking(n){this.defines.INPUT_DEPTH_PACKING=n.toFixed(0),this.needsUpdate=!0}get outputDepthPacking(){return Number(this.defines.OUTPUT_DEPTH_PACKING)}set outputDepthPacking(n){this.defines.OUTPUT_DEPTH_PACKING=n.toFixed(0),this.needsUpdate=!0}setDepthBuffer(n,e=In){this.depthBuffer=n,this.inputDepthPacking=e}getInputDepthPacking(){return Number(this.defines.INPUT_DEPTH_PACKING)}setInputDepthPacking(n){this.defines.INPUT_DEPTH_PACKING=n.toFixed(0),this.needsUpdate=!0}getOutputDepthPacking(){return Number(this.defines.OUTPUT_DEPTH_PACKING)}setOutputDepthPacking(n){this.defines.OUTPUT_DEPTH_PACKING=n.toFixed(0),this.needsUpdate=!0}get texelPosition(){return this.uniforms.texelPosition.value}getTexelPosition(){return this.uniforms.texelPosition.value}setTexelPosition(n){this.uniforms.texelPosition.value=n}get mode(){return this.depthCopyMode}set mode(n){this.depthCopyMode=n,this.defines.DEPTH_COPY_MODE=n.toFixed(0),this.needsUpdate=!0}getMode(){return this.mode}setMode(n){this.mode=n}},UC=`#include <packing>
#ifdef GL_FRAGMENT_PRECISION_HIGH
uniform highp sampler2D depthBuffer;
#else
uniform mediump sampler2D depthBuffer;
#endif
#ifdef DOWNSAMPLE_NORMALS
uniform lowp sampler2D normalBuffer;
#endif
varying vec2 vUv0;varying vec2 vUv1;varying vec2 vUv2;varying vec2 vUv3;float readDepth(const in vec2 uv){
#if DEPTH_PACKING == 3201
return unpackRGBAToDepth(texture2D(depthBuffer,uv));
#else
return texture2D(depthBuffer,uv).r;
#endif
}int findBestDepth(const in highp float samples[4]){float c=(samples[0]+samples[1]+samples[2]+samples[3])*0.25;highp float distances[]=float[4](abs(c-samples[0]),abs(c-samples[1]),abs(c-samples[2]),abs(c-samples[3]));float maxDistance=max(max(distances[0],distances[1]),max(distances[2],distances[3]));int remaining[3];int rejected[3];int i,j,k;for(i=0,j=0,k=0;i<4;++i){if(distances[i]<maxDistance){remaining[j++]=i;}else{rejected[k++]=i;}}for(;j<3;++j){remaining[j]=rejected[--k];}vec3 s=vec3(samples[remaining[0]],samples[remaining[1]],samples[remaining[2]]);c=(s.x+s.y+s.z)/3.0;distances[0]=abs(c-s.x);distances[1]=abs(c-s.y);distances[2]=abs(c-s.z);float minDistance=min(distances[0],min(distances[1],distances[2]));for(i=0;i<3;++i){if(distances[i]==minDistance){break;}}return remaining[i];}void main(){highp float d[]=float[4](readDepth(vUv0),readDepth(vUv1),readDepth(vUv2),readDepth(vUv3));int index=findBestDepth(d);
#ifdef DOWNSAMPLE_NORMALS
highp vec3 n[]=vec3[4](texture2D(normalBuffer,vUv0).rgb,texture2D(normalBuffer,vUv1).rgb,texture2D(normalBuffer,vUv2).rgb,texture2D(normalBuffer,vUv3).rgb);
#else
highp vec3 n[]=vec3[4](vec3(0.0),vec3(0.0),vec3(0.0),vec3(0.0));
#endif
gl_FragColor=vec4(n[index],d[index]);}`,NC="uniform vec2 texelSize;varying vec2 vUv0;varying vec2 vUv1;varying vec2 vUv2;varying vec2 vUv3;void main(){vec2 uv=position.xy*0.5+0.5;vUv0=uv;vUv1=vec2(uv.x,uv.y+texelSize.y);vUv2=vec2(uv.x+texelSize.x,uv.y);vUv3=uv+texelSize;gl_Position=vec4(position.xy,1.0,1.0);}",FC=class extends _t{constructor(){super({name:"DepthDownsamplingMaterial",defines:{DEPTH_PACKING:"0"},uniforms:{depthBuffer:new Q(null),normalBuffer:new Q(null),texelSize:new Q(new K)},blending:Jt,toneMapped:!1,depthWrite:!1,depthTest:!1,fragmentShader:UC,vertexShader:NC})}set depthBuffer(n){this.uniforms.depthBuffer.value=n}set depthPacking(n){this.defines.DEPTH_PACKING=n.toFixed(0),this.needsUpdate=!0}setDepthBuffer(n,e=In){this.depthBuffer=n,this.depthPacking=e}set normalBuffer(n){this.uniforms.normalBuffer.value=n,n!==null?this.defines.DOWNSAMPLE_NORMALS="1":delete this.defines.DOWNSAMPLE_NORMALS,this.needsUpdate=!0}setNormalBuffer(n){this.normalBuffer=n}setTexelSize(n,e){this.uniforms.texelSize.value.set(n,e)}setSize(n,e){this.uniforms.texelSize.value.set(1/n,1/e)}},OC=`#include <common>
#include <packing>
#ifdef GL_FRAGMENT_PRECISION_HIGH
uniform highp sampler2D depthBuffer0;uniform highp sampler2D depthBuffer1;
#else
uniform mediump sampler2D depthBuffer0;uniform mediump sampler2D depthBuffer1;
#endif
uniform sampler2D inputBuffer;uniform vec2 cameraNearFar;float getViewZ(const in float depth){
#ifdef PERSPECTIVE_CAMERA
return perspectiveDepthToViewZ(depth,cameraNearFar.x,cameraNearFar.y);
#else
return orthographicDepthToViewZ(depth,cameraNearFar.x,cameraNearFar.y);
#endif
}varying vec2 vUv;void main(){vec2 depth;
#if DEPTH_PACKING_0 == 3201
depth.x=unpackRGBAToDepth(texture2D(depthBuffer0,vUv));
#else
depth.x=texture2D(depthBuffer0,vUv).r;
#ifdef LOG_DEPTH
float d=pow(2.0,depth.x*log2(cameraNearFar.y+1.0))-1.0;float a=cameraNearFar.y/(cameraNearFar.y-cameraNearFar.x);float b=cameraNearFar.y*cameraNearFar.x/(cameraNearFar.x-cameraNearFar.y);depth.x=a+b/d;
#endif
#endif
#if DEPTH_PACKING_1 == 3201
depth.y=unpackRGBAToDepth(texture2D(depthBuffer1,vUv));
#else
depth.y=texture2D(depthBuffer1,vUv).r;
#ifdef LOG_DEPTH
float d=pow(2.0,depth.y*log2(cameraNearFar.y+1.0))-1.0;float a=cameraNearFar.y/(cameraNearFar.y-cameraNearFar.x);float b=cameraNearFar.y*cameraNearFar.x/(cameraNearFar.x-cameraNearFar.y);depth.y=a+b/d;
#endif
#endif
bool isMaxDepth=(depth.x==1.0);
#ifdef PERSPECTIVE_CAMERA
depth.x=viewZToOrthographicDepth(getViewZ(depth.x),cameraNearFar.x,cameraNearFar.y);depth.y=viewZToOrthographicDepth(getViewZ(depth.y),cameraNearFar.x,cameraNearFar.y);
#endif
#if DEPTH_TEST_STRATEGY == 0
bool keep=depthTest(depth.x,depth.y);
#elif DEPTH_TEST_STRATEGY == 1
bool keep=isMaxDepth||depthTest(depth.x,depth.y);
#else
bool keep=!isMaxDepth&&depthTest(depth.x,depth.y);
#endif
if(keep){gl_FragColor=texture2D(inputBuffer,vUv);}else{discard;}}`,uM=class extends _t{constructor(){super({name:"DepthMaskMaterial",defines:{DEPTH_EPSILON:"0.0001",DEPTH_PACKING_0:"0",DEPTH_PACKING_1:"0",DEPTH_TEST_STRATEGY:ol.KEEP_MAX_DEPTH},uniforms:{inputBuffer:new Q(null),depthBuffer0:new Q(null),depthBuffer1:new Q(null),cameraNearFar:new Q(new K(1,1))},blending:Jt,toneMapped:!1,depthWrite:!1,depthTest:!1,fragmentShader:OC,vertexShader:$s}),this.depthMode=Gu}set depthBuffer0(n){this.uniforms.depthBuffer0.value=n}set depthPacking0(n){this.defines.DEPTH_PACKING_0=n.toFixed(0),this.needsUpdate=!0}setDepthBuffer0(n,e=In){this.depthBuffer0=n,this.depthPacking0=e}set depthBuffer1(n){this.uniforms.depthBuffer1.value=n}set depthPacking1(n){this.defines.DEPTH_PACKING_1=n.toFixed(0),this.needsUpdate=!0}setDepthBuffer1(n,e=In){this.depthBuffer1=n,this.depthPacking1=e}get maxDepthStrategy(){return Number(this.defines.DEPTH_TEST_STRATEGY)}set maxDepthStrategy(n){this.defines.DEPTH_TEST_STRATEGY=n.toFixed(0),this.needsUpdate=!0}get keepFar(){return this.maxDepthStrategy}set keepFar(n){this.maxDepthStrategy=n?ol.KEEP_MAX_DEPTH:ol.DISCARD_MAX_DEPTH}getMaxDepthStrategy(){return this.maxDepthStrategy}setMaxDepthStrategy(n){this.maxDepthStrategy=n}get epsilon(){return Number(this.defines.DEPTH_EPSILON)}set epsilon(n){this.defines.DEPTH_EPSILON=n.toFixed(16),this.needsUpdate=!0}getEpsilon(){return this.epsilon}setEpsilon(n){this.epsilon=n}get depthMode(){return Number(this.defines.DEPTH_MODE)}set depthMode(n){let e;switch(n){case Ep:e="false";break;case bp:e="true";break;case ul:e="abs(d1 - d0) <= DEPTH_EPSILON";break;case Qu:e="abs(d1 - d0) > DEPTH_EPSILON";break;case Gu:e="d0 > d1";break;case cl:e="d0 >= d1";break;case Ap:e="d0 <= d1";break;case Pp:default:e="d0 < d1";break}this.defines.DEPTH_MODE=n.toFixed(0),this.defines["depthTest(d0, d1)"]=e,this.needsUpdate=!0}getDepthMode(){return this.depthMode}setDepthMode(n){this.depthMode=n}adoptCameraSettings(n){this.copyCameraSettings(n)}copyCameraSettings(n){n&&(this.uniforms.cameraNearFar.value.set(n.near,n.far),n instanceof Yt?this.defines.PERSPECTIVE_CAMERA="1":delete this.defines.PERSPECTIVE_CAMERA,this.needsUpdate=!0)}},BC=`#ifdef FRAMEBUFFER_PRECISION_HIGH
uniform mediump sampler2D inputBuffer;
#else
uniform lowp sampler2D inputBuffer;
#endif
#define WEIGHT_INNER 0.125
#define WEIGHT_OUTER 0.0555555
varying vec2 vUv;varying vec2 vUv00;varying vec2 vUv01;varying vec2 vUv02;varying vec2 vUv03;varying vec2 vUv04;varying vec2 vUv05;varying vec2 vUv06;varying vec2 vUv07;varying vec2 vUv08;varying vec2 vUv09;varying vec2 vUv10;varying vec2 vUv11;float clampToBorder(const in vec2 uv){return float(uv.s>=0.0&&uv.s<=1.0&&uv.t>=0.0&&uv.t<=1.0);}void main(){vec4 c=vec4(0.0);vec4 w=WEIGHT_INNER*vec4(clampToBorder(vUv00),clampToBorder(vUv01),clampToBorder(vUv02),clampToBorder(vUv03));c+=w.x*texture2D(inputBuffer,vUv00);c+=w.y*texture2D(inputBuffer,vUv01);c+=w.z*texture2D(inputBuffer,vUv02);c+=w.w*texture2D(inputBuffer,vUv03);w=WEIGHT_OUTER*vec4(clampToBorder(vUv04),clampToBorder(vUv05),clampToBorder(vUv06),clampToBorder(vUv07));c+=w.x*texture2D(inputBuffer,vUv04);c+=w.y*texture2D(inputBuffer,vUv05);c+=w.z*texture2D(inputBuffer,vUv06);c+=w.w*texture2D(inputBuffer,vUv07);w=WEIGHT_OUTER*vec4(clampToBorder(vUv08),clampToBorder(vUv09),clampToBorder(vUv10),clampToBorder(vUv11));c+=w.x*texture2D(inputBuffer,vUv08);c+=w.y*texture2D(inputBuffer,vUv09);c+=w.z*texture2D(inputBuffer,vUv10);c+=w.w*texture2D(inputBuffer,vUv11);c+=WEIGHT_OUTER*texture2D(inputBuffer,vUv);gl_FragColor=c;
#include <colorspace_fragment>
}`,zC="uniform vec2 texelSize;varying vec2 vUv;varying vec2 vUv00;varying vec2 vUv01;varying vec2 vUv02;varying vec2 vUv03;varying vec2 vUv04;varying vec2 vUv05;varying vec2 vUv06;varying vec2 vUv07;varying vec2 vUv08;varying vec2 vUv09;varying vec2 vUv10;varying vec2 vUv11;void main(){vUv=position.xy*0.5+0.5;vUv00=vUv+texelSize*vec2(-1.0,1.0);vUv01=vUv+texelSize*vec2(1.0,1.0);vUv02=vUv+texelSize*vec2(-1.0,-1.0);vUv03=vUv+texelSize*vec2(1.0,-1.0);vUv04=vUv+texelSize*vec2(-2.0,2.0);vUv05=vUv+texelSize*vec2(0.0,2.0);vUv06=vUv+texelSize*vec2(2.0,2.0);vUv07=vUv+texelSize*vec2(-2.0,0.0);vUv08=vUv+texelSize*vec2(2.0,0.0);vUv09=vUv+texelSize*vec2(-2.0,-2.0);vUv10=vUv+texelSize*vec2(0.0,-2.0);vUv11=vUv+texelSize*vec2(2.0,-2.0);gl_Position=vec4(position.xy,1.0,1.0);}",kC=class extends _t{constructor(){super({name:"DownsamplingMaterial",uniforms:{inputBuffer:new Q(null),texelSize:new Q(new K)},blending:Jt,toneMapped:!1,depthWrite:!1,depthTest:!1,fragmentShader:BC,vertexShader:zC}),this.fragmentShader=Bl(this.fragmentShader)}set inputBuffer(n){this.uniforms.inputBuffer.value=n}setSize(n,e){this.uniforms.texelSize.value.set(1/n,1/e)}},HC=`#include <common>
#include <packing>
#include <dithering_pars_fragment>
#define packFloatToRGBA(v) packDepthToRGBA(v)
#define unpackRGBAToFloat(v) unpackRGBAToDepth(v)
#ifdef FRAMEBUFFER_PRECISION_HIGH
uniform mediump sampler2D inputBuffer;
#else
uniform lowp sampler2D inputBuffer;
#endif
#if DEPTH_PACKING == 3201
uniform lowp sampler2D depthBuffer;
#elif defined(GL_FRAGMENT_PRECISION_HIGH)
uniform highp sampler2D depthBuffer;
#else
uniform mediump sampler2D depthBuffer;
#endif
uniform vec2 resolution;uniform vec2 texelSize;uniform float cameraNear;uniform float cameraFar;uniform float aspect;uniform float time;varying vec2 vUv;
#if THREE_REVISION < 143
#define luminance(v) linearToRelativeLuminance(v)
#endif
#if THREE_REVISION >= 137
vec4 sRGBToLinear(const in vec4 value){return vec4(mix(pow(value.rgb*0.9478672986+vec3(0.0521327014),vec3(2.4)),value.rgb*0.0773993808,vec3(lessThanEqual(value.rgb,vec3(0.04045)))),value.a);}
#endif
float readDepth(const in vec2 uv){
#if DEPTH_PACKING == 3201
return unpackRGBAToDepth(texture2D(depthBuffer,uv));
#else
return texture2D(depthBuffer,uv).r;
#endif
}float getViewZ(const in float depth){
#ifdef PERSPECTIVE_CAMERA
return perspectiveDepthToViewZ(depth,cameraNear,cameraFar);
#else
return orthographicDepthToViewZ(depth,cameraNear,cameraFar);
#endif
}vec3 RGBToHCV(const in vec3 RGB){vec4 P=mix(vec4(RGB.bg,-1.0,2.0/3.0),vec4(RGB.gb,0.0,-1.0/3.0),step(RGB.b,RGB.g));vec4 Q=mix(vec4(P.xyw,RGB.r),vec4(RGB.r,P.yzx),step(P.x,RGB.r));float C=Q.x-min(Q.w,Q.y);float H=abs((Q.w-Q.y)/(6.0*C+EPSILON)+Q.z);return vec3(H,C,Q.x);}vec3 RGBToHSL(const in vec3 RGB){vec3 HCV=RGBToHCV(RGB);float L=HCV.z-HCV.y*0.5;float S=HCV.y/(1.0-abs(L*2.0-1.0)+EPSILON);return vec3(HCV.x,S,L);}vec3 HueToRGB(const in float H){float R=abs(H*6.0-3.0)-1.0;float G=2.0-abs(H*6.0-2.0);float B=2.0-abs(H*6.0-4.0);return clamp(vec3(R,G,B),0.0,1.0);}vec3 HSLToRGB(const in vec3 HSL){vec3 RGB=HueToRGB(HSL.x);float C=(1.0-abs(2.0*HSL.z-1.0))*HSL.y;return(RGB-0.5)*C+HSL.z;}FRAGMENT_HEAD void main(){FRAGMENT_MAIN_UV vec4 color0=texture2D(inputBuffer,UV);vec4 color1=vec4(0.0);FRAGMENT_MAIN_IMAGE gl_FragColor=color0;
#ifdef ENCODE_OUTPUT
#include <colorspace_fragment>
#endif
#include <dithering_fragment>
}`,VC="uniform vec2 resolution;uniform vec2 texelSize;uniform float cameraNear;uniform float cameraFar;uniform float aspect;uniform float time;varying vec2 vUv;VERTEX_HEAD void main(){vUv=position.xy*0.5+0.5;VERTEX_MAIN_SUPPORT gl_Position=vec4(position.xy,1.0,1.0);}",GC=class extends _t{constructor(n,e,t,i,r=!1){super({name:"EffectMaterial",defines:{THREE_REVISION:is.replace(/\D+/g,""),DEPTH_PACKING:"0",ENCODE_OUTPUT:"1"},uniforms:{inputBuffer:new Q(null),depthBuffer:new Q(null),resolution:new Q(new K),texelSize:new Q(new K),cameraNear:new Q(.3),cameraFar:new Q(1e3),aspect:new Q(1),time:new Q(0)},blending:Jt,toneMapped:!1,depthWrite:!1,depthTest:!1,dithering:r}),n&&this.setShaderParts(n),e&&this.setDefines(e),t&&this.setUniforms(t),this.copyCameraSettings(i)}set inputBuffer(n){this.uniforms.inputBuffer.value=n}setInputBuffer(n){this.uniforms.inputBuffer.value=n}get depthBuffer(){return this.uniforms.depthBuffer.value}set depthBuffer(n){this.uniforms.depthBuffer.value=n}get depthPacking(){return Number(this.defines.DEPTH_PACKING)}set depthPacking(n){this.defines.DEPTH_PACKING=n.toFixed(0),this.needsUpdate=!0}setDepthBuffer(n,e=In){this.depthBuffer=n,this.depthPacking=e}setShaderData(n){this.setShaderParts(n.shaderParts),this.setDefines(n.defines),this.setUniforms(n.uniforms),this.setExtensions(n.extensions)}setShaderParts(n){return this.fragmentShader=HC.replace(It.FRAGMENT_HEAD,n.get(It.FRAGMENT_HEAD)||"").replace(It.FRAGMENT_MAIN_UV,n.get(It.FRAGMENT_MAIN_UV)||"").replace(It.FRAGMENT_MAIN_IMAGE,n.get(It.FRAGMENT_MAIN_IMAGE)||""),this.vertexShader=VC.replace(It.VERTEX_HEAD,n.get(It.VERTEX_HEAD)||"").replace(It.VERTEX_MAIN_SUPPORT,n.get(It.VERTEX_MAIN_SUPPORT)||""),this.fragmentShader=Bl(this.fragmentShader),this.needsUpdate=!0,this}setDefines(n){for(const e of n.entries())this.defines[e[0]]=e[1];return this.needsUpdate=!0,this}setUniforms(n){for(const e of n.entries())this.uniforms[e[0]]=e[1];return this}setExtensions(n){this.extensions={};for(const e of n)this.extensions[e]=!0;return this}get encodeOutput(){return this.defines.ENCODE_OUTPUT!==void 0}set encodeOutput(n){this.encodeOutput!==n&&(n?this.defines.ENCODE_OUTPUT="1":delete this.defines.ENCODE_OUTPUT,this.needsUpdate=!0)}isOutputEncodingEnabled(n){return this.encodeOutput}setOutputEncodingEnabled(n){this.encodeOutput=n}get time(){return this.uniforms.time.value}set time(n){this.uniforms.time.value=n}setDeltaTime(n){this.uniforms.time.value+=n}adoptCameraSettings(n){this.copyCameraSettings(n)}copyCameraSettings(n){n&&(this.uniforms.cameraNear.value=n.near,this.uniforms.cameraFar.value=n.far,n instanceof Yt?this.defines.PERSPECTIVE_CAMERA="1":delete this.defines.PERSPECTIVE_CAMERA,this.needsUpdate=!0)}setSize(n,e){const t=this.uniforms;t.resolution.value.set(n,e),t.texelSize.value.set(1/n,1/e),t.aspect.value=n/e}static get Section(){return It}},WC=`#include <common>
#include <dithering_pars_fragment>
#ifdef FRAMEBUFFER_PRECISION_HIGH
uniform mediump sampler2D inputBuffer;
#else
uniform lowp sampler2D inputBuffer;
#endif
uniform vec2 lightPosition;uniform float exposure;uniform float decay;uniform float density;uniform float weight;uniform float clampMax;varying vec2 vUv;void main(){vec2 coord=vUv;vec2 delta=lightPosition-coord;delta*=1.0/SAMPLES_FLOAT*density;float illuminationDecay=1.0;vec4 color=vec4(0.0);for(int i=0;i<SAMPLES_INT;++i){coord+=delta;vec4 texel=texture2D(inputBuffer,coord);texel*=illuminationDecay*weight;color+=texel;illuminationDecay*=decay;}gl_FragColor=clamp(color*exposure,0.0,clampMax);
#include <dithering_fragment>
}`,XC=class extends _t{constructor(n){super({name:"GodRaysMaterial",defines:{SAMPLES_INT:"60",SAMPLES_FLOAT:"60.0"},uniforms:{inputBuffer:new Q(null),lightPosition:new Q(n),density:new Q(1),decay:new Q(1),weight:new Q(1),exposure:new Q(1),clampMax:new Q(1)},blending:Jt,toneMapped:!1,depthWrite:!1,depthTest:!1,fragmentShader:WC,vertexShader:$s})}set inputBuffer(n){this.uniforms.inputBuffer.value=n}setInputBuffer(n){this.uniforms.inputBuffer.value=n}get lightPosition(){return this.uniforms.lightPosition.value}getLightPosition(){return this.uniforms.lightPosition.value}setLightPosition(n){this.uniforms.lightPosition.value=n}get density(){return this.uniforms.density.value}set density(n){this.uniforms.density.value=n}getDensity(){return this.uniforms.density.value}setDensity(n){this.uniforms.density.value=n}get decay(){return this.uniforms.decay.value}set decay(n){this.uniforms.decay.value=n}getDecay(){return this.uniforms.decay.value}setDecay(n){this.uniforms.decay.value=n}get weight(){return this.uniforms.weight.value}set weight(n){this.uniforms.weight.value=n}getWeight(){return this.uniforms.weight.value}setWeight(n){this.uniforms.weight.value=n}get exposure(){return this.uniforms.exposure.value}set exposure(n){this.uniforms.exposure.value=n}getExposure(){return this.uniforms.exposure.value}setExposure(n){this.uniforms.exposure.value=n}get maxIntensity(){return this.uniforms.clampMax.value}set maxIntensity(n){this.uniforms.clampMax.value=n}getMaxIntensity(){return this.uniforms.clampMax.value}setMaxIntensity(n){this.uniforms.clampMax.value=n}get samples(){return Number(this.defines.SAMPLES_INT)}set samples(n){const e=Math.floor(n);this.defines.SAMPLES_INT=e.toFixed(0),this.defines.SAMPLES_FLOAT=e.toFixed(1),this.needsUpdate=!0}getSamples(){return this.samples}setSamples(n){this.samples=n}},YC=`#include <common>
#if THREE_REVISION < 143
#define luminance(v) linearToRelativeLuminance(v)
#endif
#ifdef FRAMEBUFFER_PRECISION_HIGH
uniform mediump sampler2D inputBuffer;
#else
uniform lowp sampler2D inputBuffer;
#endif
#ifdef RANGE
uniform vec2 range;
#elif defined(THRESHOLD)
uniform float threshold;uniform float smoothing;
#endif
varying vec2 vUv;void main(){vec4 texel=texture2D(inputBuffer,vUv);float l=luminance(texel.rgb);
#ifdef RANGE
float low=step(range.x,l);float high=step(l,range.y);l*=low*high;
#elif defined(THRESHOLD)
l=smoothstep(threshold,threshold+smoothing,l);
#endif
#ifdef COLOR
gl_FragColor=vec4(texel.rgb*l,l);
#else
gl_FragColor=vec4(l);
#endif
}`,ZC=class extends _t{constructor(n=!1,e=null){super({name:"LuminanceMaterial",defines:{THREE_REVISION:is.replace(/\D+/g,"")},uniforms:{inputBuffer:new Q(null),threshold:new Q(0),smoothing:new Q(1),range:new Q(null)},blending:Jt,toneMapped:!1,depthWrite:!1,depthTest:!1,fragmentShader:YC,vertexShader:$s}),this.colorOutput=n,this.luminanceRange=e}set inputBuffer(n){this.uniforms.inputBuffer.value=n}setInputBuffer(n){this.uniforms.inputBuffer.value=n}get threshold(){return this.uniforms.threshold.value}set threshold(n){this.smoothing>0||n>0?this.defines.THRESHOLD="1":delete this.defines.THRESHOLD,this.uniforms.threshold.value=n}getThreshold(){return this.threshold}setThreshold(n){this.threshold=n}get smoothing(){return this.uniforms.smoothing.value}set smoothing(n){this.threshold>0||n>0?this.defines.THRESHOLD="1":delete this.defines.THRESHOLD,this.uniforms.smoothing.value=n}getSmoothingFactor(){return this.smoothing}setSmoothingFactor(n){this.smoothing=n}get useThreshold(){return this.threshold>0||this.smoothing>0}set useThreshold(n){}get colorOutput(){return this.defines.COLOR!==void 0}set colorOutput(n){n?this.defines.COLOR="1":delete this.defines.COLOR,this.needsUpdate=!0}isColorOutputEnabled(n){return this.colorOutput}setColorOutputEnabled(n){this.colorOutput=n}get useRange(){return this.luminanceRange!==null}set useRange(n){this.luminanceRange=null}get luminanceRange(){return this.uniforms.range.value}set luminanceRange(n){n!==null?this.defines.RANGE="1":delete this.defines.RANGE,this.uniforms.range.value=n,this.needsUpdate=!0}getLuminanceRange(){return this.luminanceRange}setLuminanceRange(n){this.luminanceRange=n}},qC=`#ifdef FRAMEBUFFER_PRECISION_HIGH
uniform mediump sampler2D inputBuffer;
#else
uniform lowp sampler2D inputBuffer;
#endif
#ifdef MASK_PRECISION_HIGH
uniform mediump sampler2D maskTexture;
#else
uniform lowp sampler2D maskTexture;
#endif
#if MASK_FUNCTION != 0
uniform float strength;
#endif
varying vec2 vUv;void main(){
#if COLOR_CHANNEL == 0
float mask=texture2D(maskTexture,vUv).r;
#elif COLOR_CHANNEL == 1
float mask=texture2D(maskTexture,vUv).g;
#elif COLOR_CHANNEL == 2
float mask=texture2D(maskTexture,vUv).b;
#else
float mask=texture2D(maskTexture,vUv).a;
#endif
#if MASK_FUNCTION == 0
#ifdef INVERTED
mask=step(mask,0.0);
#else
mask=1.0-step(mask,0.0);
#endif
#else
mask=clamp(mask*strength,0.0,1.0);
#ifdef INVERTED
mask=1.0-mask;
#endif
#endif
#if MASK_FUNCTION == 2
gl_FragColor=vec4(mask*texture2D(inputBuffer,vUv).rgb,mask);
#else
gl_FragColor=mask*texture2D(inputBuffer,vUv);
#endif
}`,jC=class extends _t{constructor(n=null){super({name:"MaskMaterial",uniforms:{maskTexture:new Q(n),inputBuffer:new Q(null),strength:new Q(1)},blending:Jt,toneMapped:!1,depthWrite:!1,depthTest:!1,fragmentShader:qC,vertexShader:$s}),this.colorChannel=qa.RED,this.maskFunction=ll.DISCARD}set inputBuffer(n){this.uniforms.inputBuffer.value=n}setInputBuffer(n){this.uniforms.inputBuffer.value=n}set maskTexture(n){this.uniforms.maskTexture.value=n,delete this.defines.MASK_PRECISION_HIGH,n.type!==Vt&&(this.defines.MASK_PRECISION_HIGH="1"),this.needsUpdate=!0}setMaskTexture(n){this.maskTexture=n}set colorChannel(n){this.defines.COLOR_CHANNEL=n.toFixed(0),this.needsUpdate=!0}setColorChannel(n){this.colorChannel=n}set maskFunction(n){this.defines.MASK_FUNCTION=n.toFixed(0),this.needsUpdate=!0}setMaskFunction(n){this.maskFunction=n}get inverted(){return this.defines.INVERTED!==void 0}set inverted(n){this.inverted&&!n?delete this.defines.INVERTED:n&&(this.defines.INVERTED="1"),this.needsUpdate=!0}isInverted(){return this.inverted}setInverted(n){this.inverted=n}get strength(){return this.uniforms.strength.value}set strength(n){this.uniforms.strength.value=n}getStrength(){return this.strength}setStrength(n){this.strength=n}},KC="uniform lowp sampler2D inputBuffer;varying vec2 vUv0;varying vec2 vUv1;varying vec2 vUv2;varying vec2 vUv3;void main(){vec2 c0=texture2D(inputBuffer,vUv0).rg;vec2 c1=texture2D(inputBuffer,vUv1).rg;vec2 c2=texture2D(inputBuffer,vUv2).rg;vec2 c3=texture2D(inputBuffer,vUv3).rg;float d0=(c0.x-c1.x)*0.5;float d1=(c2.x-c3.x)*0.5;float d=length(vec2(d0,d1));float a0=min(c0.y,c1.y);float a1=min(c2.y,c3.y);float visibilityFactor=min(a0,a1);gl_FragColor.rg=(1.0-visibilityFactor>0.001)?vec2(d,0.0):vec2(0.0,d);}",QC="uniform vec2 texelSize;varying vec2 vUv0;varying vec2 vUv1;varying vec2 vUv2;varying vec2 vUv3;void main(){vec2 uv=position.xy*0.5+0.5;vUv0=vec2(uv.x+texelSize.x,uv.y);vUv1=vec2(uv.x-texelSize.x,uv.y);vUv2=vec2(uv.x,uv.y+texelSize.y);vUv3=vec2(uv.x,uv.y-texelSize.y);gl_Position=vec4(position.xy,1.0,1.0);}",JC=class extends _t{constructor(n=new K){super({name:"OutlineMaterial",uniforms:{inputBuffer:new Q(null),texelSize:new Q(new K)},blending:Jt,toneMapped:!1,depthWrite:!1,depthTest:!1,fragmentShader:KC,vertexShader:QC}),this.uniforms.texelSize.value.set(n.x,n.y),this.uniforms.maskTexture=this.uniforms.inputBuffer}set inputBuffer(n){this.uniforms.inputBuffer.value=n}setInputBuffer(n){this.uniforms.inputBuffer.value=n}setTexelSize(n,e){this.uniforms.texelSize.value.set(n,e)}setSize(n,e){this.uniforms.texelSize.value.set(1/n,1/e)}},$C=`#include <common>
#include <packing>
#ifdef NORMAL_DEPTH
#ifdef GL_FRAGMENT_PRECISION_HIGH
uniform highp sampler2D normalDepthBuffer;
#else
uniform mediump sampler2D normalDepthBuffer;
#endif
float readDepth(const in vec2 uv){return texture2D(normalDepthBuffer,uv).a;}
#else
uniform lowp sampler2D normalBuffer;
#if DEPTH_PACKING == 3201
uniform lowp sampler2D depthBuffer;
#elif defined(GL_FRAGMENT_PRECISION_HIGH)
uniform highp sampler2D depthBuffer;
#else
uniform mediump sampler2D depthBuffer;
#endif
float readDepth(const in vec2 uv){
#if DEPTH_PACKING == 3201
return unpackRGBAToDepth(texture2D(depthBuffer,uv));
#else
return texture2D(depthBuffer,uv).r;
#endif
}
#endif
uniform lowp sampler2D noiseTexture;uniform mat4 inverseProjectionMatrix;uniform mat4 projectionMatrix;uniform vec2 texelSize;uniform vec2 cameraNearFar;uniform float intensity;uniform float minRadiusScale;uniform float fade;uniform float bias;uniform vec2 distanceCutoff;uniform vec2 proximityCutoff;varying vec2 vUv;varying vec2 vUv2;float getViewZ(const in float depth){
#ifdef PERSPECTIVE_CAMERA
return perspectiveDepthToViewZ(depth,cameraNearFar.x,cameraNearFar.y);
#else
return orthographicDepthToViewZ(depth,cameraNearFar.x,cameraNearFar.y);
#endif
}vec3 getViewPosition(const in vec2 screenPosition,const in float depth,const in float viewZ){vec4 clipPosition=vec4(vec3(screenPosition,depth)*2.0-1.0,1.0);float clipW=projectionMatrix[2][3]*viewZ+projectionMatrix[3][3];clipPosition*=clipW;return(inverseProjectionMatrix*clipPosition).xyz;}float getAmbientOcclusion(const in vec3 p,const in vec3 n,const in float depth,const in vec2 uv){float radiusScale=1.0-smoothstep(0.0,distanceCutoff.y,depth);radiusScale=radiusScale*(1.0-minRadiusScale)+minRadiusScale;float radius=RADIUS*radiusScale;float noise=texture2D(noiseTexture,vUv2).r;float baseAngle=noise*PI2;float rings=SPIRAL_TURNS*PI2;float occlusion=0.0;int taps=0;for(int i=0;i<SAMPLES_INT;++i){float alpha=(float(i)+0.5)*INV_SAMPLES_FLOAT;float angle=alpha*rings+baseAngle;vec2 rotation=vec2(cos(angle),sin(angle));vec2 coords=alpha*radius*rotation*texelSize+uv;if(coords.s<0.0||coords.s>1.0||coords.t<0.0||coords.t>1.0){continue;}float sampleDepth=readDepth(coords);float viewZ=getViewZ(sampleDepth);
#ifdef PERSPECTIVE_CAMERA
float linearSampleDepth=viewZToOrthographicDepth(viewZ,cameraNearFar.x,cameraNearFar.y);
#else
float linearSampleDepth=sampleDepth;
#endif
float proximity=abs(depth-linearSampleDepth);if(proximity<proximityCutoff.y){float falloff=1.0-smoothstep(proximityCutoff.x,proximityCutoff.y,proximity);vec3 Q=getViewPosition(coords,sampleDepth,viewZ);vec3 v=Q-p;float vv=dot(v,v);float vn=dot(v,n)-bias;float f=max(RADIUS_SQ-vv,0.0)/RADIUS_SQ;occlusion+=(f*f*f*max(vn/(fade+vv),0.0))*falloff;}++taps;}return occlusion/(4.0*max(float(taps),1.0));}void main(){
#ifdef NORMAL_DEPTH
vec4 normalDepth=texture2D(normalDepthBuffer,vUv);
#else
vec4 normalDepth=vec4(texture2D(normalBuffer,vUv).xyz,readDepth(vUv));
#endif
float ao=0.0;float depth=normalDepth.a;float viewZ=getViewZ(depth);
#ifdef PERSPECTIVE_CAMERA
float linearDepth=viewZToOrthographicDepth(viewZ,cameraNearFar.x,cameraNearFar.y);
#else
float linearDepth=depth;
#endif
if(linearDepth<distanceCutoff.y){vec3 viewPosition=getViewPosition(vUv,depth,viewZ);vec3 viewNormal=unpackRGBToNormal(normalDepth.rgb);ao+=getAmbientOcclusion(viewPosition,viewNormal,linearDepth,vUv);float d=smoothstep(distanceCutoff.x,distanceCutoff.y,linearDepth);ao=mix(ao,0.0,d);
#ifdef LEGACY_INTENSITY
ao=clamp(1.0-pow(1.0-ao,abs(intensity)),0.0,1.0);
#endif
}gl_FragColor.r=ao;}`,eR="uniform vec2 noiseScale;varying vec2 vUv;varying vec2 vUv2;void main(){vUv=position.xy*0.5+0.5;vUv2=vUv*noiseScale;gl_Position=vec4(position.xy,1.0,1.0);}",tR=class extends _t{constructor(n){super({name:"SSAOMaterial",defines:{SAMPLES_INT:"0",INV_SAMPLES_FLOAT:"0.0",SPIRAL_TURNS:"0.0",RADIUS:"1.0",RADIUS_SQ:"1.0",DISTANCE_SCALING:"1",DEPTH_PACKING:"0"},uniforms:{depthBuffer:new Q(null),normalBuffer:new Q(null),normalDepthBuffer:new Q(null),noiseTexture:new Q(null),inverseProjectionMatrix:new Q(new ze),projectionMatrix:new Q(new ze),texelSize:new Q(new K),cameraNearFar:new Q(new K),distanceCutoff:new Q(new K),proximityCutoff:new Q(new K),noiseScale:new Q(new K),minRadiusScale:new Q(.33),intensity:new Q(1),fade:new Q(.01),bias:new Q(0)},blending:Jt,toneMapped:!1,depthWrite:!1,depthTest:!1,fragmentShader:$C,vertexShader:eR}),this.copyCameraSettings(n),this.resolution=new K,this.r=1}get near(){return this.uniforms.cameraNearFar.value.x}get far(){return this.uniforms.cameraNearFar.value.y}set normalDepthBuffer(n){this.uniforms.normalDepthBuffer.value=n,n!==null?this.defines.NORMAL_DEPTH="1":delete this.defines.NORMAL_DEPTH,this.needsUpdate=!0}setNormalDepthBuffer(n){this.normalDepthBuffer=n}set normalBuffer(n){this.uniforms.normalBuffer.value=n}setNormalBuffer(n){this.uniforms.normalBuffer.value=n}set depthBuffer(n){this.uniforms.depthBuffer.value=n}set depthPacking(n){this.defines.DEPTH_PACKING=n.toFixed(0),this.needsUpdate=!0}setDepthBuffer(n,e=In){this.depthBuffer=n,this.depthPacking=e}set noiseTexture(n){this.uniforms.noiseTexture.value=n}setNoiseTexture(n){this.uniforms.noiseTexture.value=n}get samples(){return Number(this.defines.SAMPLES_INT)}set samples(n){this.defines.SAMPLES_INT=n.toFixed(0),this.defines.INV_SAMPLES_FLOAT=(1/n).toFixed(9),this.needsUpdate=!0}getSamples(){return this.samples}setSamples(n){this.samples=n}get rings(){return Number(this.defines.SPIRAL_TURNS)}set rings(n){this.defines.SPIRAL_TURNS=n.toFixed(1),this.needsUpdate=!0}getRings(){return this.rings}setRings(n){this.rings=n}get intensity(){return this.uniforms.intensity.value}set intensity(n){this.uniforms.intensity.value=n,this.defines.LEGACY_INTENSITY===void 0&&(this.defines.LEGACY_INTENSITY="1",this.needsUpdate=!0)}getIntensity(){return this.uniforms.intensity.value}setIntensity(n){this.uniforms.intensity.value=n}get fade(){return this.uniforms.fade.value}set fade(n){this.uniforms.fade.value=n}getFade(){return this.uniforms.fade.value}setFade(n){this.uniforms.fade.value=n}get bias(){return this.uniforms.bias.value}set bias(n){this.uniforms.bias.value=n}getBias(){return this.uniforms.bias.value}setBias(n){this.uniforms.bias.value=n}get minRadiusScale(){return this.uniforms.minRadiusScale.value}set minRadiusScale(n){this.uniforms.minRadiusScale.value=n}getMinRadiusScale(){return this.uniforms.minRadiusScale.value}setMinRadiusScale(n){this.uniforms.minRadiusScale.value=n}updateRadius(){const n=this.r*this.resolution.height;this.defines.RADIUS=n.toFixed(11),this.defines.RADIUS_SQ=(n*n).toFixed(11),this.needsUpdate=!0}get radius(){return this.r}set radius(n){this.r=Math.min(Math.max(n,1e-6),1),this.updateRadius()}getRadius(){return this.radius}setRadius(n){this.radius=n}get distanceScaling(){return!0}set distanceScaling(n){}isDistanceScalingEnabled(){return this.distanceScaling}setDistanceScalingEnabled(n){this.distanceScaling=n}get distanceThreshold(){return this.uniforms.distanceCutoff.value.x}set distanceThreshold(n){this.uniforms.distanceCutoff.value.set(Math.min(Math.max(n,0),1),Math.min(Math.max(n+this.distanceFalloff,0),1))}get worldDistanceThreshold(){return-Za(this.distanceThreshold,this.near,this.far)}set worldDistanceThreshold(n){this.distanceThreshold=zs(-n,this.near,this.far)}get distanceFalloff(){return this.uniforms.distanceCutoff.value.y-this.distanceThreshold}set distanceFalloff(n){this.uniforms.distanceCutoff.value.y=Math.min(Math.max(this.distanceThreshold+n,0),1)}get worldDistanceFalloff(){return-Za(this.distanceFalloff,this.near,this.far)}set worldDistanceFalloff(n){this.distanceFalloff=zs(-n,this.near,this.far)}setDistanceCutoff(n,e){this.uniforms.distanceCutoff.value.set(Math.min(Math.max(n,0),1),Math.min(Math.max(n+e,0),1))}get proximityThreshold(){return this.uniforms.proximityCutoff.value.x}set proximityThreshold(n){this.uniforms.proximityCutoff.value.set(Math.min(Math.max(n,0),1),Math.min(Math.max(n+this.proximityFalloff,0),1))}get worldProximityThreshold(){return-Za(this.proximityThreshold,this.near,this.far)}set worldProximityThreshold(n){this.proximityThreshold=zs(-n,this.near,this.far)}get proximityFalloff(){return this.uniforms.proximityCutoff.value.y-this.proximityThreshold}set proximityFalloff(n){this.uniforms.proximityCutoff.value.y=Math.min(Math.max(this.proximityThreshold+n,0),1)}get worldProximityFalloff(){return-Za(this.proximityFalloff,this.near,this.far)}set worldProximityFalloff(n){this.proximityFalloff=zs(-n,this.near,this.far)}setProximityCutoff(n,e){this.uniforms.proximityCutoff.value.set(Math.min(Math.max(n,0),1),Math.min(Math.max(n+e,0),1))}setTexelSize(n,e){this.uniforms.texelSize.value.set(n,e)}adoptCameraSettings(n){this.copyCameraSettings(n)}copyCameraSettings(n){n&&(this.uniforms.cameraNearFar.value.set(n.near,n.far),this.uniforms.projectionMatrix.value.copy(n.projectionMatrix),this.uniforms.inverseProjectionMatrix.value.copy(n.projectionMatrix).invert(),n instanceof Yt?this.defines.PERSPECTIVE_CAMERA="1":delete this.defines.PERSPECTIVE_CAMERA,this.needsUpdate=!0)}setSize(n,e){const t=this.uniforms,i=t.noiseTexture.value;i!==null&&t.noiseScale.value.set(n/i.image.width,e/i.image.height),t.texelSize.value.set(1/n,1/e),this.resolution.set(n,e),this.updateRadius()}},nR=`#ifdef FRAMEBUFFER_PRECISION_HIGH
uniform mediump sampler2D inputBuffer;uniform mediump sampler2D supportBuffer;
#else
uniform lowp sampler2D inputBuffer;uniform lowp sampler2D supportBuffer;
#endif
uniform float radius;varying vec2 vUv;varying vec2 vUv0;varying vec2 vUv1;varying vec2 vUv2;varying vec2 vUv3;varying vec2 vUv4;varying vec2 vUv5;varying vec2 vUv6;varying vec2 vUv7;void main(){vec4 c=vec4(0.0);c+=texture2D(inputBuffer,vUv0)*0.0625;c+=texture2D(inputBuffer,vUv1)*0.125;c+=texture2D(inputBuffer,vUv2)*0.0625;c+=texture2D(inputBuffer,vUv3)*0.125;c+=texture2D(inputBuffer,vUv)*0.25;c+=texture2D(inputBuffer,vUv4)*0.125;c+=texture2D(inputBuffer,vUv5)*0.0625;c+=texture2D(inputBuffer,vUv6)*0.125;c+=texture2D(inputBuffer,vUv7)*0.0625;vec4 baseColor=texture2D(supportBuffer,vUv);gl_FragColor=mix(baseColor,c,radius);
#include <colorspace_fragment>
}`,iR="uniform vec2 texelSize;varying vec2 vUv;varying vec2 vUv0;varying vec2 vUv1;varying vec2 vUv2;varying vec2 vUv3;varying vec2 vUv4;varying vec2 vUv5;varying vec2 vUv6;varying vec2 vUv7;void main(){vUv=position.xy*0.5+0.5;vUv0=vUv+texelSize*vec2(-1.0,1.0);vUv1=vUv+texelSize*vec2(0.0,1.0);vUv2=vUv+texelSize*vec2(1.0,1.0);vUv3=vUv+texelSize*vec2(-1.0,0.0);vUv4=vUv+texelSize*vec2(1.0,0.0);vUv5=vUv+texelSize*vec2(-1.0,-1.0);vUv6=vUv+texelSize*vec2(0.0,-1.0);vUv7=vUv+texelSize*vec2(1.0,-1.0);gl_Position=vec4(position.xy,1.0,1.0);}",rR=class extends _t{constructor(){super({name:"UpsamplingMaterial",uniforms:{inputBuffer:new Q(null),supportBuffer:new Q(null),texelSize:new Q(new K),radius:new Q(.85)},blending:Jt,toneMapped:!1,depthWrite:!1,depthTest:!1,fragmentShader:nR,vertexShader:iR}),this.fragmentShader=Bl(this.fragmentShader)}set inputBuffer(n){this.uniforms.inputBuffer.value=n}set supportBuffer(n){this.uniforms.supportBuffer.value=n}get radius(){return this.uniforms.radius.value}set radius(n){this.uniforms.radius.value=n}setSize(n,e){this.uniforms.texelSize.value.set(1/n,1/e)}},sR=new so,Zr=null;function aR(){if(Zr===null){const n=new Float32Array([-1,-1,0,3,-1,0,-1,3,0]),e=new Float32Array([0,0,2,0,0,2]);Zr=new mt,Zr.setAttribute!==void 0?(Zr.setAttribute("position",new Ct(n,3)),Zr.setAttribute("uv",new Ct(e,2))):(Zr.addAttribute("position",new Ct(n,3)),Zr.addAttribute("uv",new Ct(e,2)))}return Zr}var xn=class hM{constructor(e="Pass",t=new Xs,i=sR){this.name=e,this.renderer=null,this.scene=t,this.camera=i,this.screen=null,this.rtt=!0,this.needsSwap=!0,this.needsDepthTexture=!1,this.enabled=!0}get renderToScreen(){return!this.rtt}set renderToScreen(e){if(this.rtt===e){const t=this.fullscreenMaterial;t!==null&&(t.needsUpdate=!0),this.rtt=!e}}set mainScene(e){}set mainCamera(e){}setRenderer(e){this.renderer=e}isEnabled(){return this.enabled}setEnabled(e){this.enabled=e}get fullscreenMaterial(){return this.screen!==null?this.screen.material:null}set fullscreenMaterial(e){let t=this.screen;t!==null?t.material=e:(t=new Tn(aR(),e),t.frustumCulled=!1,this.scene===null&&(this.scene=new Xs),this.scene.add(t),this.screen=t)}getFullscreenMaterial(){return this.fullscreenMaterial}setFullscreenMaterial(e){this.fullscreenMaterial=e}getDepthTexture(){return null}setDepthTexture(e,t=In){}render(e,t,i,r,s){throw new Error("Render method not implemented!")}setSize(e,t){}initialize(e,t,i){}dispose(){for(const e of Object.keys(this)){const t=this[e];(t instanceof wt||t instanceof Pn||t instanceof Zt||t instanceof hM)&&this[e].dispose()}}},fM=class extends xn{constructor(n,e=!0){super("CopyPass"),this.fullscreenMaterial=new cM,this.needsSwap=!1,this.renderTarget=n,n===void 0&&(this.renderTarget=new wt(1,1,{minFilter:Qe,magFilter:Qe,stencilBuffer:!1,depthBuffer:!1}),this.renderTarget.texture.name="CopyPass.Target"),this.autoResize=e}get resize(){return this.autoResize}set resize(n){this.autoResize=n}get texture(){return this.renderTarget.texture}getTexture(){return this.renderTarget.texture}setAutoResizeEnabled(n){this.autoResize=n}render(n,e,t,i,r){this.fullscreenMaterial.inputBuffer=e.texture,n.setRenderTarget(this.renderToScreen?null:this.renderTarget),n.render(this.scene,this.camera)}setSize(n,e){this.autoResize&&this.renderTarget.setSize(n,e)}initialize(n,e,t){t!==void 0&&(this.renderTarget.texture.type=t,t!==Vt?this.fullscreenMaterial.defines.FRAMEBUFFER_PRECISION_HIGH="1":Rr(n)===Ot&&En(this.renderTarget.texture,Ot))}},oR=class extends xn{constructor(){super("ClearMaskPass",null,null),this.needsSwap=!1}render(n,e,t,i,r){const s=n.state.buffers.stencil;s.setLocked(!1),s.setTest(!1)}},Px=new be,zl=class extends xn{constructor(n=!0,e=!0,t=!1){super("ClearPass",null,null),this.needsSwap=!1,this.color=n,this.depth=e,this.stencil=t,this.overrideClearColor=null,this.overrideClearAlpha=-1}setClearFlags(n,e,t){this.color=n,this.depth=e,this.stencil=t}getOverrideClearColor(){return this.overrideClearColor}setOverrideClearColor(n){this.overrideClearColor=n}getOverrideClearAlpha(){return this.overrideClearAlpha}setOverrideClearAlpha(n){this.overrideClearAlpha=n}render(n,e,t,i,r){const s=this.overrideClearColor,a=this.overrideClearAlpha,c=n.getClearAlpha(),u=s!==null,h=a>=0;u?(n.getClearColor(Px),n.setClearColor(s,h?a:c)):h&&n.setClearAlpha(a),n.setRenderTarget(this.renderToScreen?null:e),n.clear(this.color,this.depth,this.stencil),u?n.setClearColor(Px,c):h&&n.setClearAlpha(c)}},qr=-1,Bt=class extends xi{constructor(n,e=qr,t=qr,i=1){super(),this.resizable=n,this.baseSize=new K(1,1),this.preferredSize=new K(e,t),this.target=this.preferredSize,this.s=i,this.effectiveSize=new K,this.addEventListener("change",()=>this.updateEffectiveSize()),this.updateEffectiveSize()}updateEffectiveSize(){const n=this.baseSize,e=this.preferredSize,t=this.effectiveSize,i=this.scale;e.width!==qr?t.width=e.width:e.height!==qr?t.width=Math.round(e.height*(n.width/Math.max(n.height,1))):t.width=Math.round(n.width*i),e.height!==qr?t.height=e.height:e.width!==qr?t.height=Math.round(e.width/Math.max(n.width/Math.max(n.height,1),1)):t.height=Math.round(n.height*i)}get width(){return this.effectiveSize.width}set width(n){this.preferredWidth=n}get height(){return this.effectiveSize.height}set height(n){this.preferredHeight=n}getWidth(){return this.width}getHeight(){return this.height}get scale(){return this.s}set scale(n){this.s!==n&&(this.s=n,this.preferredSize.setScalar(qr),this.dispatchEvent({type:"change"}),this.resizable.setSize(this.baseSize.width,this.baseSize.height))}getScale(){return this.scale}setScale(n){this.scale=n}get baseWidth(){return this.baseSize.width}set baseWidth(n){this.baseSize.width!==n&&(this.baseSize.width=n,this.dispatchEvent({type:"change"}),this.resizable.setSize(this.baseSize.width,this.baseSize.height))}getBaseWidth(){return this.baseWidth}setBaseWidth(n){this.baseWidth=n}get baseHeight(){return this.baseSize.height}set baseHeight(n){this.baseSize.height!==n&&(this.baseSize.height=n,this.dispatchEvent({type:"change"}),this.resizable.setSize(this.baseSize.width,this.baseSize.height))}getBaseHeight(){return this.baseHeight}setBaseHeight(n){this.baseHeight=n}setBaseSize(n,e){(this.baseSize.width!==n||this.baseSize.height!==e)&&(this.baseSize.set(n,e),this.dispatchEvent({type:"change"}),this.resizable.setSize(this.baseSize.width,this.baseSize.height))}get preferredWidth(){return this.preferredSize.width}set preferredWidth(n){this.preferredSize.width!==n&&(this.preferredSize.width=n,this.dispatchEvent({type:"change"}),this.resizable.setSize(this.baseSize.width,this.baseSize.height))}getPreferredWidth(){return this.preferredWidth}setPreferredWidth(n){this.preferredWidth=n}get preferredHeight(){return this.preferredSize.height}set preferredHeight(n){this.preferredSize.height!==n&&(this.preferredSize.height=n,this.dispatchEvent({type:"change"}),this.resizable.setSize(this.baseSize.width,this.baseSize.height))}getPreferredHeight(){return this.preferredHeight}setPreferredHeight(n){this.preferredHeight=n}setPreferredSize(n,e){(this.preferredSize.width!==n||this.preferredSize.height!==e)&&(this.preferredSize.set(n,e),this.dispatchEvent({type:"change"}),this.resizable.setSize(this.baseSize.width,this.baseSize.height))}copy(n){this.s=n.scale,this.baseSize.set(n.baseWidth,n.baseHeight),this.preferredSize.set(n.preferredWidth,n.preferredHeight),this.dispatchEvent({type:"change"}),this.resizable.setSize(this.baseSize.width,this.baseSize.height)}static get AUTO_SIZE(){return qr}},Rd=!1,Cx=class{constructor(n=null){this.originalMaterials=new Map,this.material=null,this.materials=null,this.materialsBackSide=null,this.materialsDoubleSide=null,this.materialsFlatShaded=null,this.materialsFlatShadedBackSide=null,this.materialsFlatShadedDoubleSide=null,this.setMaterial(n),this.meshCount=0,this.replaceMaterial=e=>{if(e.isMesh){let t;if(e.material.flatShading)switch(e.material.side){case ni:t=this.materialsFlatShadedDoubleSide;break;case _n:t=this.materialsFlatShadedBackSide;break;default:t=this.materialsFlatShaded;break}else switch(e.material.side){case ni:t=this.materialsDoubleSide;break;case _n:t=this.materialsBackSide;break;default:t=this.materials;break}this.originalMaterials.set(e,e.material),e.isSkinnedMesh?e.material=t[2]:e.isInstancedMesh?e.material=t[1]:e.material=t[0],++this.meshCount}}}cloneMaterial(n){if(!(n instanceof _t))return n.clone();const e=n.uniforms,t=new Map;for(const r in e){const s=e[r].value;s.isRenderTargetTexture&&(e[r].value=null,t.set(r,s))}const i=n.clone();for(const r of t)e[r[0]].value=r[1],i.uniforms[r[0]].value=r[1];return i}setMaterial(n){if(this.disposeMaterials(),this.material=n,n!==null){const e=this.materials=[this.cloneMaterial(n),this.cloneMaterial(n),this.cloneMaterial(n)];for(const t of e)t.uniforms=Object.assign({},n.uniforms),t.side=or;e[2].skinning=!0,this.materialsBackSide=e.map(t=>{const i=this.cloneMaterial(t);return i.uniforms=Object.assign({},n.uniforms),i.side=_n,i}),this.materialsDoubleSide=e.map(t=>{const i=this.cloneMaterial(t);return i.uniforms=Object.assign({},n.uniforms),i.side=ni,i}),this.materialsFlatShaded=e.map(t=>{const i=this.cloneMaterial(t);return i.uniforms=Object.assign({},n.uniforms),i.flatShading=!0,i}),this.materialsFlatShadedBackSide=e.map(t=>{const i=this.cloneMaterial(t);return i.uniforms=Object.assign({},n.uniforms),i.flatShading=!0,i.side=_n,i}),this.materialsFlatShadedDoubleSide=e.map(t=>{const i=this.cloneMaterial(t);return i.uniforms=Object.assign({},n.uniforms),i.flatShading=!0,i.side=ni,i})}}render(n,e,t){const i=n.shadowMap.enabled;if(n.shadowMap.enabled=!1,Rd){const r=this.originalMaterials;this.meshCount=0,e.traverse(this.replaceMaterial),n.render(e,t);for(const s of r)s[0].material=s[1];this.meshCount!==r.size&&r.clear()}else{const r=e.overrideMaterial;e.overrideMaterial=this.material,n.render(e,t),e.overrideMaterial=r}n.shadowMap.enabled=i}disposeMaterials(){if(this.material!==null){const n=this.materials.concat(this.materialsBackSide).concat(this.materialsDoubleSide).concat(this.materialsFlatShaded).concat(this.materialsFlatShadedBackSide).concat(this.materialsFlatShadedDoubleSide);for(const e of n)e.dispose()}}dispose(){this.originalMaterials.clear(),this.disposeMaterials()}static get workaroundEnabled(){return Rd}static set workaroundEnabled(n){Rd=n}},ho=class extends xn{constructor(n,e,t=null){super("RenderPass",n,e),this.needsSwap=!1,this.clearPass=new zl,this.overrideMaterialManager=t===null?null:new Cx(t),this.ignoreBackground=!1,this.skipShadowMapUpdate=!1,this.selection=null}set mainScene(n){this.scene=n}set mainCamera(n){this.camera=n}get renderToScreen(){return super.renderToScreen}set renderToScreen(n){super.renderToScreen=n,this.clearPass.renderToScreen=n}get overrideMaterial(){const n=this.overrideMaterialManager;return n!==null?n.material:null}set overrideMaterial(n){const e=this.overrideMaterialManager;n!==null?e!==null?e.setMaterial(n):this.overrideMaterialManager=new Cx(n):e!==null&&(e.dispose(),this.overrideMaterialManager=null)}getOverrideMaterial(){return this.overrideMaterial}setOverrideMaterial(n){this.overrideMaterial=n}get clear(){return this.clearPass.enabled}set clear(n){this.clearPass.enabled=n}getSelection(){return this.selection}setSelection(n){this.selection=n}isBackgroundDisabled(){return this.ignoreBackground}setBackgroundDisabled(n){this.ignoreBackground=n}isShadowMapDisabled(){return this.skipShadowMapUpdate}setShadowMapDisabled(n){this.skipShadowMapUpdate=n}getClearPass(){return this.clearPass}render(n,e,t,i,r){const s=this.scene,a=this.camera,c=this.selection,u=a.layers.mask,h=s.background,f=n.shadowMap.autoUpdate,p=this.renderToScreen?null:e;c!==null&&a.layers.set(c.getLayer()),this.skipShadowMapUpdate&&(n.shadowMap.autoUpdate=!1),(this.ignoreBackground||this.clearPass.overrideClearColor!==null)&&(s.background=null),this.clearPass.enabled&&this.clearPass.render(n,e),n.setRenderTarget(p),this.overrideMaterialManager!==null?this.overrideMaterialManager.render(n,s,a):n.render(s,a),a.layers.mask=u,s.background=h,n.shadowMap.autoUpdate=f}},wm=class extends xn{constructor(n,e,{renderTarget:t,resolutionScale:i=1,width:r=Bt.AUTO_SIZE,height:s=Bt.AUTO_SIZE,resolutionX:a=r,resolutionY:c=s}={}){super("DepthPass"),this.needsSwap=!1,this.renderPass=new ho(n,e,new oh({depthPacking:lr}));const u=this.renderPass;u.skipShadowMapUpdate=!0,u.ignoreBackground=!0;const h=u.clearPass;h.overrideClearColor=new be(16777215),h.overrideClearAlpha=1,this.renderTarget=t,this.renderTarget===void 0&&(this.renderTarget=new wt(1,1,{minFilter:ct,magFilter:ct}),this.renderTarget.texture.name="DepthPass.Target");const f=this.resolution=new Bt(this,a,c,i);f.addEventListener("change",p=>this.setSize(f.baseWidth,f.baseHeight))}set mainScene(n){this.renderPass.mainScene=n}set mainCamera(n){this.renderPass.mainCamera=n}get texture(){return this.renderTarget.texture}getTexture(){return this.renderTarget.texture}getResolution(){return this.resolution}getResolutionScale(){return this.resolution.scale}setResolutionScale(n){this.resolution.scale=n}render(n,e,t,i,r){const s=this.renderToScreen?null:this.renderTarget;this.renderPass.render(n,s)}setSize(n,e){const t=this.resolution;t.setBaseSize(n,e),this.renderTarget.setSize(t.width,t.height)}},dM=class extends xn{constructor({normalBuffer:n=null,resolutionScale:e=.5,width:t=Bt.AUTO_SIZE,height:i=Bt.AUTO_SIZE,resolutionX:r=t,resolutionY:s=i}={}){super("DepthDownsamplingPass");const a=new FC;a.normalBuffer=n,this.fullscreenMaterial=a,this.needsDepthTexture=!0,this.needsSwap=!1,this.renderTarget=new wt(1,1,{minFilter:ct,magFilter:ct,depthBuffer:!1,type:tn}),this.renderTarget.texture.name="DepthDownsamplingPass.Target",this.renderTarget.texture.generateMipmaps=!1;const c=this.resolution=new Bt(this,r,s,e);c.addEventListener("change",u=>this.setSize(c.baseWidth,c.baseHeight))}get texture(){return this.renderTarget.texture}getTexture(){return this.renderTarget.texture}getResolution(){return this.resolution}setDepthTexture(n,e=In){this.fullscreenMaterial.depthBuffer=n,this.fullscreenMaterial.depthPacking=e}render(n,e,t,i,r){n.setRenderTarget(this.renderToScreen?null:this.renderTarget),n.render(this.scene,this.camera)}setSize(n,e){const t=this.resolution;t.setBaseSize(n,e),this.renderTarget.setSize(t.width,t.height),this.fullscreenMaterial.setSize(n,e)}initialize(n,e,t){const i=n.getContext();if(!(i.getExtension("EXT_color_buffer_float")||i.getExtension("EXT_color_buffer_half_float")))throw new Error("Rendering to float texture is not supported.")}},lR=class extends xn{constructor({depthPacking:n=lr}={}){super("DepthCopyPass");const e=new IC;e.outputDepthPacking=n,this.fullscreenMaterial=e,this.needsDepthTexture=!0,this.needsSwap=!1,this.renderTarget=new wt(1,1,{type:n===lr?Vt:tn,minFilter:ct,magFilter:ct,depthBuffer:!1}),this.renderTarget.texture.name="DepthCopyPass.Target"}get texture(){return this.renderTarget.texture}getTexture(){return this.renderTarget.texture}get depthPacking(){return this.fullscreenMaterial.outputDepthPacking}getDepthPacking(){return this.fullscreenMaterial.outputDepthPacking}setDepthTexture(n,e=In){this.fullscreenMaterial.depthBuffer=n,this.fullscreenMaterial.inputDepthPacking=e}render(n,e,t,i,r){n.setRenderTarget(this.renderToScreen?null:this.renderTarget),n.render(this.scene,this.camera)}setSize(n,e){this.renderTarget.setSize(n,e)}},Cu=new Float32Array([255/256/256**3,255/256/256**2,255/256/256,255/256]);function cR(n){return(n[0]*Cu[0]+n[1]*Cu[1]+n[2]*Cu[2]+n[3]*Cu[3])/255}var uR=class extends lR{constructor({depthPacking:n=lr,mode:e=$o.SINGLE}={}){super({depthPacking:n}),this.name="DepthPickingPass",this.fullscreenMaterial.mode=e,this.pixelBuffer=n===lr?new Uint8Array(4):new Float32Array(4),this.callback=null}readDepth(n){return this.fullscreenMaterial.texelPosition.set(n.x*.5+.5,n.y*.5+.5),new Promise(e=>{this.callback=e})}render(n,e,t,i,r){const s=this.fullscreenMaterial,a=s.mode;if(a===$o.FULL&&super.render(n),this.callback!==null){const c=this.renderTarget,u=this.pixelBuffer,h=c.texture.type!==tn;let f=0,p=0;if(a===$o.SINGLE)super.render(n);else{const m=s.texelPosition;f=Math.round(m.x*c.width),p=Math.round(m.y*c.height)}n.readRenderTargetPixels(c,f,p,1,1,u),this.callback(h?cR(u):u[0]),this.callback=null}}setSize(n,e){this.fullscreenMaterial.mode===$o.FULL&&super.setSize(n,e)}};function Rx(n,e,t){for(const i of e){const r="$1"+n+i.charAt(0).toUpperCase()+i.slice(1),s=new RegExp("([^\\.])(\\b"+i+"\\b)","g");for(const a of t.entries())a[1]!==null&&t.set(a[0],a[1].replace(s,r))}}function hR(n,e,t){let i=e.getFragmentShader(),r=e.getVertexShader();const s=i!==void 0&&/mainImage/.test(i),a=i!==void 0&&/mainUv/.test(i);if(t.attributes|=e.getAttributes(),i===void 0)throw new Error(`Missing fragment shader (${e.name})`);if(a&&t.attributes&Xi.CONVOLUTION)throw new Error(`Effects that transform UVs are incompatible with convolution effects (${e.name})`);if(!s&&!a)throw new Error(`Could not find mainImage or mainUv function (${e.name})`);{const c=/\w+\s+(\w+)\([\w\s,]*\)\s*{/g,u=t.shaderParts;let h=u.get(It.FRAGMENT_HEAD)||"",f=u.get(It.FRAGMENT_MAIN_UV)||"",p=u.get(It.FRAGMENT_MAIN_IMAGE)||"",m=u.get(It.VERTEX_HEAD)||"",g=u.get(It.VERTEX_MAIN_SUPPORT)||"";const y=new Set,T=new Set;if(a&&(f+=`	${n}MainUv(UV);
`,t.uvTransformation=!0),r!==null&&/mainSupport/.test(r)){const w=/mainSupport *\([\w\s]*?uv\s*?\)/.test(r);g+=`	${n}MainSupport(`,g+=w?`vUv);
`:`);
`;for(const M of r.matchAll(/(?:varying\s+\w+\s+([\S\s]*?);)/g))for(const b of M[1].split(/\s*,\s*/))t.varyings.add(b),y.add(b),T.add(b);for(const M of r.matchAll(c))T.add(M[1])}for(const w of i.matchAll(c))T.add(w[1]);for(const w of e.defines.keys())T.add(w.replace(/\([\w\s,]*\)/g,""));for(const w of e.uniforms.keys())T.add(w);T.delete("while"),T.delete("for"),T.delete("if"),e.uniforms.forEach((w,M)=>t.uniforms.set(n+M.charAt(0).toUpperCase()+M.slice(1),w)),e.defines.forEach((w,M)=>t.defines.set(n+M.charAt(0).toUpperCase()+M.slice(1),w));const S=new Map([["fragment",i],["vertex",r]]);Rx(n,T,t.defines),Rx(n,T,S),i=S.get("fragment"),r=S.get("vertex");const x=e.blendMode;if(t.blendModes.set(x.blendFunction,x),s){e.inputColorSpace!==null&&e.inputColorSpace!==t.colorSpace&&(p+=e.inputColorSpace===Ot?`color0 = LinearTosRGB(color0);
	`:`color0 = sRGBToLinear(color0);
	`),e.outputColorSpace!==aM?t.colorSpace=e.outputColorSpace:e.inputColorSpace!==null&&(t.colorSpace=e.inputColorSpace);const w=/MainImage *\([\w\s,]*?depth[\w\s,]*?\)/;p+=`${n}MainImage(color0, UV, `,t.attributes&Xi.DEPTH&&w.test(i)&&(p+="depth, ",t.readDepth=!0),p+=`color1);
	`;const M=n+"BlendOpacity";t.uniforms.set(M,x.opacity),p+=`color0 = blend${x.blendFunction}(color0, color1, ${M});

	`,h+=`uniform float ${M};

`}if(h+=i+`
`,r!==null&&(m+=r+`
`),u.set(It.FRAGMENT_HEAD,h),u.set(It.FRAGMENT_MAIN_UV,f),u.set(It.FRAGMENT_MAIN_IMAGE,p),u.set(It.VERTEX_HEAD,m),u.set(It.VERTEX_MAIN_SUPPORT,g),e.extensions!==null)for(const w of e.extensions)t.extensions.add(w)}}var fR=class extends xn{constructor(n,...e){super("EffectPass"),this.fullscreenMaterial=new GC(null,null,null,n),this.listener=t=>this.handleEvent(t),this.effects=[],this.setEffects(e),this.skipRendering=!1,this.minTime=1,this.maxTime=Number.POSITIVE_INFINITY,this.timeScale=1}set mainScene(n){for(const e of this.effects)e.mainScene=n}set mainCamera(n){this.fullscreenMaterial.copyCameraSettings(n);for(const e of this.effects)e.mainCamera=n}get encodeOutput(){return this.fullscreenMaterial.encodeOutput}set encodeOutput(n){this.fullscreenMaterial.encodeOutput=n}get dithering(){return this.fullscreenMaterial.dithering}set dithering(n){const e=this.fullscreenMaterial;e.dithering=n,e.needsUpdate=!0}setEffects(n){for(const e of this.effects)e.removeEventListener("change",this.listener);this.effects=n.sort((e,t)=>t.attributes-e.attributes);for(const e of this.effects)e.addEventListener("change",this.listener)}updateMaterial(){const n=new SR;let e=0;for(const a of this.effects)if(a.blendMode.blendFunction===ot.DST)n.attributes|=a.getAttributes()&Xi.DEPTH;else{if(n.attributes&a.getAttributes()&Xi.CONVOLUTION)throw new Error(`Convolution effects cannot be merged (${a.name})`);hR("e"+e++,a,n)}let t=n.shaderParts.get(It.FRAGMENT_HEAD),i=n.shaderParts.get(It.FRAGMENT_MAIN_IMAGE),r=n.shaderParts.get(It.FRAGMENT_MAIN_UV);const s=/\bblend\b/g;for(const a of n.blendModes.values())t+=a.getShaderCode().replace(s,`blend${a.blendFunction}`)+`
`;n.attributes&Xi.DEPTH?(n.readDepth&&(i=`float depth = readDepth(UV);

	`+i),this.needsDepthTexture=this.getDepthTexture()===null):this.needsDepthTexture=!1,n.colorSpace===Ot&&(i+=`color0 = sRGBToLinear(color0);
	`),n.uvTransformation?(r=`vec2 transformedUv = vUv;
`+r,n.defines.set("UV","transformedUv")):n.defines.set("UV","vUv"),n.shaderParts.set(It.FRAGMENT_HEAD,t),n.shaderParts.set(It.FRAGMENT_MAIN_IMAGE,i),n.shaderParts.set(It.FRAGMENT_MAIN_UV,r);for(const[a,c]of n.shaderParts)c!==null&&n.shaderParts.set(a,c.trim().replace(/^#/,`
#`));this.skipRendering=e===0,this.needsSwap=!this.skipRendering,this.fullscreenMaterial.setShaderData(n)}recompile(){this.updateMaterial()}getDepthTexture(){return this.fullscreenMaterial.depthBuffer}setDepthTexture(n,e=In){this.fullscreenMaterial.depthBuffer=n,this.fullscreenMaterial.depthPacking=e;for(const t of this.effects)t.setDepthTexture(n,e)}render(n,e,t,i,r){for(const s of this.effects)s.update(n,e,i);if(!this.skipRendering||this.renderToScreen){const s=this.fullscreenMaterial;s.inputBuffer=e.texture,s.time+=i*this.timeScale,n.setRenderTarget(this.renderToScreen?null:t),n.render(this.scene,this.camera)}}setSize(n,e){this.fullscreenMaterial.setSize(n,e);for(const t of this.effects)t.setSize(n,e)}initialize(n,e,t){this.renderer=n;for(const i of this.effects)i.initialize(n,e,t);this.updateMaterial(),t!==void 0&&t!==Vt&&(this.fullscreenMaterial.defines.FRAMEBUFFER_PRECISION_HIGH="1")}dispose(){super.dispose();for(const n of this.effects)n.removeEventListener("change",this.listener),n.dispose()}handleEvent(n){switch(n.type){case"change":this.recompile();break}}},Dh=class extends xn{constructor({kernelSize:n=uo.MEDIUM,resolutionScale:e=.5,width:t=Bt.AUTO_SIZE,height:i=Bt.AUTO_SIZE,resolutionX:r=t,resolutionY:s=i}={}){super("KawaseBlurPass"),this.renderTargetA=new wt(1,1,{depthBuffer:!1}),this.renderTargetA.texture.name="Blur.Target.A",this.renderTargetB=this.renderTargetA.clone(),this.renderTargetB.texture.name="Blur.Target.B";const a=this.resolution=new Bt(this,r,s,e);a.addEventListener("change",c=>this.setSize(a.baseWidth,a.baseHeight)),this._blurMaterial=new bC,this._blurMaterial.kernelSize=n,this.copyMaterial=new cM}getResolution(){return this.resolution}get blurMaterial(){return this._blurMaterial}set blurMaterial(n){this._blurMaterial=n}get dithering(){return this.copyMaterial.dithering}set dithering(n){this.copyMaterial.dithering=n}get kernelSize(){return this.blurMaterial.kernelSize}set kernelSize(n){this.blurMaterial.kernelSize=n}get width(){return this.resolution.width}set width(n){this.resolution.preferredWidth=n}get height(){return this.resolution.height}set height(n){this.resolution.preferredHeight=n}get scale(){return this.blurMaterial.scale}set scale(n){this.blurMaterial.scale=n}getScale(){return this.blurMaterial.scale}setScale(n){this.blurMaterial.scale=n}getKernelSize(){return this.kernelSize}setKernelSize(n){this.kernelSize=n}getResolutionScale(){return this.resolution.scale}setResolutionScale(n){this.resolution.scale=n}render(n,e,t,i,r){const s=this.scene,a=this.camera,c=this.renderTargetA,u=this.renderTargetB,h=this.blurMaterial,f=h.kernelSequence;let p=e;this.fullscreenMaterial=h;for(let m=0,g=f.length;m<g;++m){const y=m&1?u:c;h.kernel=f[m],h.inputBuffer=p.texture,n.setRenderTarget(y),n.render(s,a),p=y}this.fullscreenMaterial=this.copyMaterial,this.copyMaterial.inputBuffer=p.texture,n.setRenderTarget(this.renderToScreen?null:t),n.render(s,a)}setSize(n,e){const t=this.resolution;t.setBaseSize(n,e);const i=t.width,r=t.height;this.renderTargetA.setSize(i,r),this.renderTargetB.setSize(i,r),this.blurMaterial.setSize(n,e)}initialize(n,e,t){t!==void 0&&(this.renderTargetA.texture.type=t,this.renderTargetB.texture.type=t,t!==Vt?(this.blurMaterial.defines.FRAMEBUFFER_PRECISION_HIGH="1",this.copyMaterial.defines.FRAMEBUFFER_PRECISION_HIGH="1"):Rr(n)===Ot&&(En(this.renderTargetA.texture,Ot),En(this.renderTargetB.texture,Ot)))}static get AUTO_SIZE(){return Bt.AUTO_SIZE}},dR=class extends xn{constructor({renderTarget:n,luminanceRange:e,colorOutput:t,resolutionScale:i=1,width:r=Bt.AUTO_SIZE,height:s=Bt.AUTO_SIZE,resolutionX:a=r,resolutionY:c=s}={}){super("LuminancePass"),this.fullscreenMaterial=new ZC(t,e),this.needsSwap=!1,this.renderTarget=n,this.renderTarget===void 0&&(this.renderTarget=new wt(1,1,{depthBuffer:!1}),this.renderTarget.texture.name="LuminancePass.Target");const u=this.resolution=new Bt(this,a,c,i);u.addEventListener("change",h=>this.setSize(u.baseWidth,u.baseHeight))}get texture(){return this.renderTarget.texture}getTexture(){return this.renderTarget.texture}getResolution(){return this.resolution}render(n,e,t,i,r){const s=this.fullscreenMaterial;s.inputBuffer=e.texture,n.setRenderTarget(this.renderToScreen?null:this.renderTarget),n.render(this.scene,this.camera)}setSize(n,e){const t=this.resolution;t.setBaseSize(n,e),this.renderTarget.setSize(t.width,t.height)}initialize(n,e,t){t!==void 0&&t!==Vt&&(this.renderTarget.texture.type=t,this.fullscreenMaterial.defines.FRAMEBUFFER_PRECISION_HIGH="1")}},pR=class extends xn{constructor(n,e){super("MaskPass",n,e),this.needsSwap=!1,this.clearPass=new zl(!1,!1,!0),this.inverse=!1}set mainScene(n){this.scene=n}set mainCamera(n){this.camera=n}get inverted(){return this.inverse}set inverted(n){this.inverse=n}get clear(){return this.clearPass.enabled}set clear(n){this.clearPass.enabled=n}getClearPass(){return this.clearPass}isInverted(){return this.inverted}setInverted(n){this.inverted=n}render(n,e,t,i,r){const s=n.getContext(),a=n.state.buffers,c=this.scene,u=this.camera,h=this.clearPass,f=this.inverted?0:1,p=1-f;a.color.setMask(!1),a.depth.setMask(!1),a.color.setLocked(!0),a.depth.setLocked(!0),a.stencil.setTest(!0),a.stencil.setOp(s.REPLACE,s.REPLACE,s.REPLACE),a.stencil.setFunc(s.ALWAYS,f,4294967295),a.stencil.setClear(p),a.stencil.setLocked(!0),this.clearPass.enabled&&(this.renderToScreen?h.render(n,null):(h.render(n,e),h.render(n,t))),this.renderToScreen?(n.setRenderTarget(null),n.render(c,u)):(n.setRenderTarget(e),n.render(c,u),n.setRenderTarget(t),n.render(c,u)),a.color.setLocked(!1),a.depth.setLocked(!1),a.stencil.setLocked(!1),a.stencil.setFunc(s.EQUAL,1,4294967295),a.stencil.setOp(s.KEEP,s.KEEP,s.KEEP),a.stencil.setLocked(!0)}},mR=class extends xn{constructor(){super("MipmapBlurPass"),this.needsSwap=!1,this.renderTarget=new wt(1,1,{depthBuffer:!1}),this.renderTarget.texture.name="Upsampling.Mipmap0",this.downsamplingMipmaps=[],this.upsamplingMipmaps=[],this.downsamplingMaterial=new kC,this.upsamplingMaterial=new rR,this.resolution=new K}get texture(){return this.renderTarget.texture}get levels(){return this.downsamplingMipmaps.length}set levels(n){if(this.levels!==n){const e=this.renderTarget;this.dispose(),this.downsamplingMipmaps=[],this.upsamplingMipmaps=[];for(let t=0;t<n;++t){const i=e.clone();i.texture.name="Downsampling.Mipmap"+t,this.downsamplingMipmaps.push(i)}this.upsamplingMipmaps.push(e);for(let t=1,i=n-1;t<i;++t){const r=e.clone();r.texture.name="Upsampling.Mipmap"+t,this.upsamplingMipmaps.push(r)}this.setSize(this.resolution.x,this.resolution.y)}}get radius(){return this.upsamplingMaterial.radius}set radius(n){this.upsamplingMaterial.radius=n}render(n,e,t,i,r){const{scene:s,camera:a}=this,{downsamplingMaterial:c,upsamplingMaterial:u}=this,{downsamplingMipmaps:h,upsamplingMipmaps:f}=this;let p=e;this.fullscreenMaterial=c;for(let m=0,g=h.length;m<g;++m){const y=h[m];c.setSize(p.width,p.height),c.inputBuffer=p.texture,n.setRenderTarget(y),n.render(s,a),p=y}this.fullscreenMaterial=u;for(let m=f.length-1;m>=0;--m){const g=f[m];u.setSize(p.width,p.height),u.inputBuffer=p.texture,u.supportBuffer=h[m].texture,n.setRenderTarget(g),n.render(s,a),p=g}}setSize(n,e){const t=this.resolution;t.set(n,e);let i=t.width,r=t.height;for(let s=0,a=this.downsamplingMipmaps.length;s<a;++s)i=Math.round(i*.5),r=Math.round(r*.5),this.downsamplingMipmaps[s].setSize(i,r),s<this.upsamplingMipmaps.length&&this.upsamplingMipmaps[s].setSize(i,r)}initialize(n,e,t){if(t!==void 0){const i=this.downsamplingMipmaps.concat(this.upsamplingMipmaps);for(const r of i)r.texture.type=t;if(t!==Vt)this.downsamplingMaterial.defines.FRAMEBUFFER_PRECISION_HIGH="1",this.upsamplingMaterial.defines.FRAMEBUFFER_PRECISION_HIGH="1";else if(Rr(n)===Ot)for(const r of i)En(r.texture,Ot)}}dispose(){super.dispose();for(const n of this.downsamplingMipmaps.concat(this.upsamplingMipmaps))n.dispose()}},gR=class extends xn{constructor(n,e,{renderTarget:t,resolutionScale:i=1,width:r=Bt.AUTO_SIZE,height:s=Bt.AUTO_SIZE,resolutionX:a=r,resolutionY:c=s}={}){super("NormalPass"),this.needsSwap=!1,this.renderPass=new ho(n,e,new am);const u=this.renderPass;u.ignoreBackground=!0,u.skipShadowMapUpdate=!0;const h=u.getClearPass();h.overrideClearColor=new be(7829503),h.overrideClearAlpha=1,this.renderTarget=t,this.renderTarget===void 0&&(this.renderTarget=new wt(1,1,{minFilter:ct,magFilter:ct}),this.renderTarget.texture.name="NormalPass.Target");const f=this.resolution=new Bt(this,a,c,i);f.addEventListener("change",p=>this.setSize(f.baseWidth,f.baseHeight))}set mainScene(n){this.renderPass.mainScene=n}set mainCamera(n){this.renderPass.mainCamera=n}get texture(){return this.renderTarget.texture}getTexture(){return this.renderTarget.texture}getResolution(){return this.resolution}getResolutionScale(){return this.resolution.scale}setResolutionScale(n){this.resolution.scale=n}render(n,e,t,i,r){const s=this.renderToScreen?null:this.renderTarget;this.renderPass.render(n,s,s)}setSize(n,e){const t=this.resolution;t.setBaseSize(n,e),this.renderTarget.setSize(t.width,t.height)}},Gi=class extends xn{constructor(n,e="inputBuffer"){super("ShaderPass"),this.fullscreenMaterial=n,this.input=e}setInput(n){this.input=n}render(n,e,t,i,r){const s=this.fullscreenMaterial.uniforms;e!==null&&s!==void 0&&s[this.input]!==void 0&&(s[this.input].value=e.texture),n.setRenderTarget(this.renderToScreen?null:t),n.render(this.scene,this.camera)}initialize(n,e,t){t!==void 0&&t!==Vt&&(this.fullscreenMaterial.defines.FRAMEBUFFER_PRECISION_HIGH="1")}},Dd=1/1e3,vR=1e3,xR=class{constructor(){this.startTime=performance.now(),this.previousTime=0,this.currentTime=0,this._delta=0,this._elapsed=0,this._fixedDelta=1e3/60,this.timescale=1,this.useFixedDelta=!1,this._autoReset=!1}get autoReset(){return this._autoReset}set autoReset(n){typeof document<"u"&&document.hidden!==void 0&&(n?document.addEventListener("visibilitychange",this):document.removeEventListener("visibilitychange",this),this._autoReset=n)}get delta(){return this._delta*Dd}get fixedDelta(){return this._fixedDelta*Dd}set fixedDelta(n){this._fixedDelta=n*vR}get elapsed(){return this._elapsed*Dd}update(n){this.useFixedDelta?this._delta=this.fixedDelta:(this.previousTime=this.currentTime,this.currentTime=(n!==void 0?n:performance.now())-this.startTime,this._delta=this.currentTime-this.previousTime),this._delta*=this.timescale,this._elapsed+=this._delta}reset(){this._delta=0,this._elapsed=0,this.currentTime=performance.now()-this.startTime}handleEvent(n){document.hidden||(this.currentTime=performance.now()-this.startTime)}dispose(){this.autoReset=!1}},yR=class{constructor(e=null,{depthBuffer:t=!0,stencilBuffer:i=!1,multisampling:r=0,frameBufferType:s}={}){this.renderer=null,this.inputBuffer=this.createBuffer(t,i,s,r),this.outputBuffer=this.inputBuffer.clone(),this.copyPass=new fM,this.depthTexture=null,this.passes=[],this.timer=new xR,this.autoRenderToScreen=!0,this.setRenderer(e)}get multisampling(){return this.inputBuffer.samples||0}set multisampling(e){const t=this.inputBuffer,i=this.multisampling;i>0&&e>0?(this.inputBuffer.samples=e,this.outputBuffer.samples=e,this.inputBuffer.dispose(),this.outputBuffer.dispose()):i!==e&&(this.inputBuffer.dispose(),this.outputBuffer.dispose(),this.inputBuffer=this.createBuffer(t.depthBuffer,t.stencilBuffer,t.texture.type,e),this.inputBuffer.depthTexture=this.depthTexture,this.outputBuffer=this.inputBuffer.clone())}getTimer(){return this.timer}getRenderer(){return this.renderer}setRenderer(e){if(this.renderer=e,e!==null){const t=e.getSize(new K),i=e.getContext().getContextAttributes().alpha,r=this.inputBuffer.texture.type;r===Vt&&Rr(e)===Ot&&(En(this.inputBuffer.texture,Ot),En(this.outputBuffer.texture,Ot),this.inputBuffer.dispose(),this.outputBuffer.dispose()),e.autoClear=!1,this.setSize(t.width,t.height);for(const s of this.passes)s.initialize(e,i,r)}}replaceRenderer(e,t=!0){const i=this.renderer,r=i.domElement.parentNode;return this.setRenderer(e),t&&r!==null&&(r.removeChild(i.domElement),r.appendChild(e.domElement)),i}createDepthTexture(){const e=this.depthTexture=new lh;return this.inputBuffer.depthTexture=e,this.inputBuffer.dispose(),this.inputBuffer.stencilBuffer?(e.format=ts,e.type=br):e.type=ir,e}deleteDepthTexture(){if(this.depthTexture!==null){this.depthTexture.dispose(),this.depthTexture=null,this.inputBuffer.depthTexture=null,this.inputBuffer.dispose();for(const e of this.passes)e.setDepthTexture(null)}}createBuffer(e,t,i,r){const s=this.renderer,a=s===null?new K:s.getDrawingBufferSize(new K),c={minFilter:Qe,magFilter:Qe,stencilBuffer:t,depthBuffer:e,type:i},u=new wt(a.width,a.height,c);return r>0&&(u.ignoreDepthForMultisampleCopy=!1,u.samples=r),i===Vt&&Rr(s)===Ot&&En(u.texture,Ot),u.texture.name="EffectComposer.Buffer",u.texture.generateMipmaps=!1,u}setMainScene(e){for(const t of this.passes)t.mainScene=e}setMainCamera(e){for(const t of this.passes)t.mainCamera=e}addPass(e,t){const i=this.passes,r=this.renderer,s=r.getDrawingBufferSize(new K),a=r.getContext().getContextAttributes().alpha,c=this.inputBuffer.texture.type;if(e.setRenderer(r),e.setSize(s.width,s.height),e.initialize(r,a,c),this.autoRenderToScreen&&(i.length>0&&(i[i.length-1].renderToScreen=!1),e.renderToScreen&&(this.autoRenderToScreen=!1)),t!==void 0?i.splice(t,0,e):i.push(e),this.autoRenderToScreen&&(i[i.length-1].renderToScreen=!0),e.needsDepthTexture||this.depthTexture!==null)if(this.depthTexture===null){const u=this.createDepthTexture();for(e of i)e.setDepthTexture(u)}else e.setDepthTexture(this.depthTexture)}removePass(e){const t=this.passes,i=t.indexOf(e);if(i!==-1&&t.splice(i,1).length>0){if(this.depthTexture!==null){const a=(u,h)=>u||h.needsDepthTexture;t.reduce(a,!1)||(e.getDepthTexture()===this.depthTexture&&e.setDepthTexture(null),this.deleteDepthTexture())}this.autoRenderToScreen&&i===t.length&&(e.renderToScreen=!1,t.length>0&&(t[t.length-1].renderToScreen=!0))}}removeAllPasses(){const e=this.passes;this.deleteDepthTexture(),e.length>0&&(this.autoRenderToScreen&&(e[e.length-1].renderToScreen=!1),this.passes=[])}render(e){const t=this.renderer,i=this.copyPass;let r=this.inputBuffer,s=this.outputBuffer,a=!1,c,u,h;e===void 0&&(this.timer.update(),e=this.timer.delta);for(const f of this.passes)f.enabled&&(f.render(t,r,s,e,a),f.needsSwap&&(a&&(i.renderToScreen=f.renderToScreen,c=t.getContext(),u=t.state.buffers.stencil,u.setFunc(c.NOTEQUAL,1,4294967295),i.render(t,r,s,e,a),u.setFunc(c.EQUAL,1,4294967295)),h=r,r=s,s=h),f instanceof pR?a=!0:f instanceof oR&&(a=!1))}setSize(e,t,i){const r=this.renderer,s=r.getSize(new K);(e===void 0||t===void 0)&&(e=s.width,t=s.height),(s.width!==e||s.height!==t)&&r.setSize(e,t,i);const a=r.getDrawingBufferSize(new K);this.inputBuffer.setSize(a.width,a.height),this.outputBuffer.setSize(a.width,a.height);for(const c of this.passes)c.setSize(a.width,a.height)}reset(){const e=this.timer.autoReset;this.dispose(),this.autoRenderToScreen=!0,this.timer.autoReset=e}dispose(){for(const e of this.passes)e.dispose();this.passes=[],this.inputBuffer!==null&&this.inputBuffer.dispose(),this.outputBuffer!==null&&this.outputBuffer.dispose(),this.deleteDepthTexture(),this.copyPass.dispose(),this.timer.dispose()}},SR=class{constructor(){this.shaderParts=new Map([[It.FRAGMENT_HEAD,null],[It.FRAGMENT_MAIN_UV,null],[It.FRAGMENT_MAIN_IMAGE,null],[It.VERTEX_HEAD,null],[It.VERTEX_MAIN_SUPPORT,null]]),this.defines=new Map,this.uniforms=new Map,this.blendModes=new Map,this.extensions=new Set,this.attributes=Xi.NONE,this.varyings=new Set,this.uvTransformation=!1,this.readDepth=!1,this.colorSpace=to}},Em=class extends Set{constructor(n,e=10){super(),this.l=e,this.exclusive=!1,n!==void 0&&this.set(n)}get layer(){return this.l}set layer(n){const e=this.l;for(const t of this)t.layers.disable(e),t.layers.enable(n);this.l=n}getLayer(){return this.layer}setLayer(n){this.layer=n}isExclusive(){return this.exclusive}setExclusive(n){this.exclusive=n}clear(){const n=this.layer;for(const e of this)e.layers.disable(n);return super.clear()}set(n){this.clear();for(const e of n)this.add(e);return this}indexOf(n){return this.has(n)?0:-1}add(n){return this.exclusive?n.layers.set(this.layer):n.layers.enable(this.layer),super.add(n)}delete(n){return this.has(n)&&n.layers.disable(this.layer),super.delete(n)}toggle(n){let e;return this.has(n)?(this.delete(n),e=!1):(this.add(n),e=!0),e}setVisible(n){for(const e of this)n?e.layers.enable(0):e.layers.disable(0);return this}},MR="vec4 blend(const in vec4 x,const in vec4 y,const in float opacity){return mix(x,x+y,opacity);}",_R="vec4 blend(const in vec4 x,const in vec4 y,const in float opacity){return mix(x,y,min(y.a,opacity));}",TR="vec4 blend(const in vec4 x,const in vec4 y,const in float opacity){return mix(x,(x+y)*0.5,opacity);}",wR="vec4 blend(const in vec4 x,const in vec4 y,const in float opacity){vec3 xHSL=RGBToHSL(x.rgb);vec3 yHSL=RGBToHSL(y.rgb);vec3 z=HSLToRGB(vec3(yHSL.rg,xHSL.b));return vec4(mix(x.rgb,z,opacity),y.a);}",ER="vec4 blend(const in vec4 x,const in vec4 y,const in float opacity){vec4 z=mix(step(0.0,y)*(1.0-min(vec4(1.0),(1.0-x)/y)),vec4(1.0),step(1.0,x));return mix(x,z,opacity);}",bR="vec4 blend(const in vec4 x,const in vec4 y,const in float opacity){vec4 z=step(0.0,x)*mix(min(vec4(1.0),x/max(1.0-y,1e-9)),vec4(1.0),step(1.0,y));return mix(x,z,opacity);}",AR="vec4 blend(const in vec4 x,const in vec4 y,const in float opacity){return mix(x,min(x,y),opacity);}",PR="vec4 blend(const in vec4 x,const in vec4 y,const in float opacity){return mix(x,abs(x-y),opacity);}",CR="vec4 blend(const in vec4 x,const in vec4 y,const in float opacity){return mix(x,x/max(y,1e-12),opacity);}",RR="vec4 blend(const in vec4 x,const in vec4 y,const in float opacity){return mix(x,(x+y-2.0*x*y),opacity);}",DR="vec4 blend(const in vec4 x,const in vec4 y,const in float opacity){vec4 a=min(x,1.0),b=min(y,1.0);vec4 z=mix(2.0*a*b,1.0-2.0*(1.0-a)*(1.0-b),step(0.5,y));return mix(x,z,opacity);}",LR="vec4 blend(const in vec4 x,const in vec4 y,const in float opacity){return mix(x,step(1.0,x+y),opacity);}",IR="vec4 blend(const in vec4 x,const in vec4 y,const in float opacity){vec3 xHSL=RGBToHSL(x.rgb);vec3 yHSL=RGBToHSL(y.rgb);vec3 z=HSLToRGB(vec3(yHSL.r,xHSL.gb));return vec4(mix(x.rgb,z,opacity),y.a);}",UR="vec4 blend(const in vec4 x,const in vec4 y,const in float opacity){return mix(x,1.0-y,opacity);}",NR="vec4 blend(const in vec4 x,const in vec4 y,const in float opacity){return mix(x,y*(1.0-x),opacity);}",FR="vec4 blend(const in vec4 x,const in vec4 y,const in float opacity){return mix(x,max(x,y),opacity);}",OR="vec4 blend(const in vec4 x,const in vec4 y,const in float opacity){return mix(x,clamp(y+x-1.0,0.0,1.0),opacity);}",BR="vec4 blend(const in vec4 x,const in vec4 y,const in float opacity){return mix(x,min(x+y,1.0),opacity);}",zR="vec4 blend(const in vec4 x,const in vec4 y,const in float opacity){return mix(x,clamp(2.0*y+x-1.0,0.0,1.0),opacity);}",kR="vec4 blend(const in vec4 x,const in vec4 y,const in float opacity){vec3 xHSL=RGBToHSL(x.rgb);vec3 yHSL=RGBToHSL(y.rgb);vec3 z=HSLToRGB(vec3(xHSL.rg,yHSL.b));return vec4(mix(x.rgb,z,opacity),y.a);}",HR="vec4 blend(const in vec4 x,const in vec4 y,const in float opacity){return mix(x,x*y,opacity);}",VR="vec4 blend(const in vec4 x,const in vec4 y,const in float opacity){return mix(x,1.0-abs(1.0-x-y),opacity);}",GR="vec4 blend(const in vec4 x,const in vec4 y,const in float opacity){return mix(x,y,opacity);}",WR="vec4 blend(const in vec4 x,const in vec4 y,const in float opacity){vec4 z=mix(2.0*y*x,1.0-2.0*(1.0-y)*(1.0-x),step(0.5,x));return mix(x,z,opacity);}",XR="vec4 blend(const in vec4 x,const in vec4 y,const in float opacity){vec4 y2=2.0*y;vec4 z=mix(mix(y2,x,step(0.5*x,y)),max(vec4(0.0),y2-1.0),step(x,(y2-1.0)));return mix(x,z,opacity);}",YR="vec4 blend(const in vec4 x,const in vec4 y,const in float opacity){vec4 z=mix(min(x*x/max(1.0-y,1e-12),1.0),y,step(1.0,y));return mix(x,z,opacity);}",ZR="vec4 blend(const in vec4 x,const in vec4 y,const in float opacity){vec3 xHSL=RGBToHSL(x.rgb);vec3 yHSL=RGBToHSL(y.rgb);vec3 z=HSLToRGB(vec3(xHSL.r,yHSL.g,xHSL.b));return vec4(mix(x.rgb,z,opacity),y.a);}",qR="vec4 blend(const in vec4 x,const in vec4 y,const in float opacity){return mix(x,x+y-min(x*y,1.0),opacity);}",jR="vec4 blend(const in vec4 x,const in vec4 y,const in float opacity){vec4 y2=2.0*y;vec4 w=step(0.5,y);vec4 z=mix(x-(1.0-y2)*x*(1.0-x),mix(x+(y2-1.0)*(sqrt(x)-x),x+(y2-1.0)*x*((16.0*x-12.0)*x+3.0),w*(1.0-step(0.25,x))),w);return mix(x,z,opacity);}",KR="vec4 blend(const in vec4 x,const in vec4 y,const in float opacity){return y;}",QR="vec4 blend(const in vec4 x,const in vec4 y,const in float opacity){return mix(x,max(x+y-1.0,0.0),opacity);}",JR="vec4 blend(const in vec4 x,const in vec4 y,const in float opacity){vec4 z=mix(max(1.0-min((1.0-x)/(2.0*y),1.0),0.0),min(x/(2.0*(1.0-y)),1.0),step(0.5,y));return mix(x,z,opacity);}",$R=new Map([[ot.ADD,MR],[ot.ALPHA,_R],[ot.AVERAGE,TR],[ot.COLOR,wR],[ot.COLOR_BURN,ER],[ot.COLOR_DODGE,bR],[ot.DARKEN,AR],[ot.DIFFERENCE,PR],[ot.DIVIDE,CR],[ot.DST,null],[ot.EXCLUSION,RR],[ot.HARD_LIGHT,DR],[ot.HARD_MIX,LR],[ot.HUE,IR],[ot.INVERT,UR],[ot.INVERT_RGB,NR],[ot.LIGHTEN,FR],[ot.LINEAR_BURN,OR],[ot.LINEAR_DODGE,BR],[ot.LINEAR_LIGHT,zR],[ot.LUMINOSITY,kR],[ot.MULTIPLY,HR],[ot.NEGATION,VR],[ot.NORMAL,GR],[ot.OVERLAY,WR],[ot.PIN_LIGHT,XR],[ot.REFLECT,YR],[ot.SATURATION,ZR],[ot.SCREEN,qR],[ot.SOFT_LIGHT,jR],[ot.SRC,KR],[ot.SUBTRACT,QR],[ot.VIVID_LIGHT,JR]]),eD=class extends xi{constructor(n,e=1){super(),this._blendFunction=n,this.opacity=new Q(e)}getOpacity(){return this.opacity.value}setOpacity(n){this.opacity.value=n}get blendFunction(){return this._blendFunction}set blendFunction(n){this._blendFunction=n,this.dispatchEvent({type:"change"})}getBlendFunction(){return this.blendFunction}setBlendFunction(n){this.blendFunction=n}getShaderCode(){return $R.get(this.blendFunction)}},qn=class extends xi{constructor(n,e,{attributes:t=Xi.NONE,blendFunction:i=ot.NORMAL,defines:r=new Map,uniforms:s=new Map,extensions:a=null,vertexShader:c=null}={}){super(),this.name=n,this.renderer=null,this.attributes=t,this.fragmentShader=e,this.vertexShader=c,this.defines=r,this.uniforms=s,this.extensions=a,this.blendMode=new eD(i),this.blendMode.addEventListener("change",u=>this.setChanged()),this._inputColorSpace=to,this._outputColorSpace=aM}get inputColorSpace(){return this._inputColorSpace}set inputColorSpace(n){this._inputColorSpace=n,this.setChanged()}get outputColorSpace(){return this._outputColorSpace}set outputColorSpace(n){this._outputColorSpace=n,this.setChanged()}set mainScene(n){}set mainCamera(n){}getName(){return this.name}setRenderer(n){this.renderer=n}getDefines(){return this.defines}getUniforms(){return this.uniforms}getExtensions(){return this.extensions}getBlendMode(){return this.blendMode}getAttributes(){return this.attributes}setAttributes(n){this.attributes=n,this.setChanged()}getFragmentShader(){return this.fragmentShader}setFragmentShader(n){this.fragmentShader=n,this.setChanged()}getVertexShader(){return this.vertexShader}setVertexShader(n){this.vertexShader=n,this.setChanged()}setChanged(){this.dispatchEvent({type:"change"})}setDepthTexture(n,e=In){}update(n,e,t){}setSize(n,e){}initialize(n,e,t){}dispose(){for(const n of Object.keys(this)){const e=this[n];(e instanceof wt||e instanceof Pn||e instanceof Zt||e instanceof xn)&&this[n].dispose()}}},tD=`#ifdef FRAMEBUFFER_PRECISION_HIGH
uniform mediump sampler2D map;
#else
uniform lowp sampler2D map;
#endif
uniform float intensity;void mainImage(const in vec4 inputColor,const in vec2 uv,out vec4 outputColor){outputColor=texture2D(map,uv)*intensity;}`,pM=class extends qn{constructor({blendFunction:n=ot.SCREEN,luminanceThreshold:e=.9,luminanceSmoothing:t=.025,mipmapBlur:i=!1,intensity:r=1,radius:s=.85,levels:a=8,kernelSize:c=uo.LARGE,resolutionScale:u=.5,width:h=Bt.AUTO_SIZE,height:f=Bt.AUTO_SIZE,resolutionX:p=h,resolutionY:m=f}={}){super("BloomEffect",tD,{blendFunction:n,uniforms:new Map([["map",new Q(null)],["intensity",new Q(r)]])}),this.renderTarget=new wt(1,1,{depthBuffer:!1}),this.renderTarget.texture.name="Bloom.Target",this.blurPass=new Dh({kernelSize:c}),this.luminancePass=new dR({colorOutput:!0}),this.luminanceMaterial.threshold=e,this.luminanceMaterial.smoothing=t,this.mipmapBlurPass=new mR,this.mipmapBlurPass.enabled=i,this.mipmapBlurPass.radius=s,this.mipmapBlurPass.levels=a,this.uniforms.get("map").value=i?this.mipmapBlurPass.texture:this.renderTarget.texture;const g=this.resolution=new Bt(this,p,m,u);g.addEventListener("change",y=>this.setSize(g.baseWidth,g.baseHeight))}get texture(){return this.mipmapBlurPass.enabled?this.mipmapBlurPass.texture:this.renderTarget.texture}getTexture(){return this.texture}getResolution(){return this.resolution}getBlurPass(){return this.blurPass}getLuminancePass(){return this.luminancePass}get luminanceMaterial(){return this.luminancePass.fullscreenMaterial}getLuminanceMaterial(){return this.luminancePass.fullscreenMaterial}get width(){return this.resolution.width}set width(n){this.resolution.preferredWidth=n}get height(){return this.resolution.height}set height(n){this.resolution.preferredHeight=n}get dithering(){return this.blurPass.dithering}set dithering(n){this.blurPass.dithering=n}get kernelSize(){return this.blurPass.kernelSize}set kernelSize(n){this.blurPass.kernelSize=n}get distinction(){return console.warn(this.name,"distinction was removed"),1}set distinction(n){console.warn(this.name,"distinction was removed")}get intensity(){return this.uniforms.get("intensity").value}set intensity(n){this.uniforms.get("intensity").value=n}getIntensity(){return this.intensity}setIntensity(n){this.intensity=n}getResolutionScale(){return this.resolution.scale}setResolutionScale(n){this.resolution.scale=n}update(n,e,t){const i=this.renderTarget,r=this.luminancePass;r.enabled?(r.render(n,e),this.mipmapBlurPass.enabled?this.mipmapBlurPass.render(n,r.renderTarget):this.blurPass.render(n,r.renderTarget,i)):this.mipmapBlurPass.enabled?this.mipmapBlurPass.render(n,e):this.blurPass.render(n,e,i)}setSize(n,e){const t=this.resolution;t.setBaseSize(n,e),this.renderTarget.setSize(t.width,t.height),this.blurPass.resolution.copy(t),this.luminancePass.setSize(n,e),this.mipmapBlurPass.setSize(n,e)}initialize(n,e,t){this.blurPass.initialize(n,e,t),this.luminancePass.initialize(n,e,t),this.mipmapBlurPass.initialize(n,e,t),t!==void 0&&(this.renderTarget.texture.type=t,Rr(n)===Ot&&En(this.renderTarget.texture,Ot))}},nD="void mainImage(const in vec4 inputColor,const in vec2 uv,out vec4 outputColor){outputColor=vec4(vec3(average(inputColor.rgb)),inputColor.a);}",iD=class extends qn{constructor(n){super("ColorAverageEffect",nD,{blendFunction:n})}},rD=`#ifdef FRAMEBUFFER_PRECISION_HIGH
uniform mediump sampler2D nearColorBuffer;uniform mediump sampler2D farColorBuffer;
#else
uniform lowp sampler2D nearColorBuffer;uniform lowp sampler2D farColorBuffer;
#endif
uniform lowp sampler2D nearCoCBuffer;uniform float scale;void mainImage(const in vec4 inputColor,const in vec2 uv,const in float depth,out vec4 outputColor){vec4 colorNear=texture2D(nearColorBuffer,uv);vec4 colorFar=texture2D(farColorBuffer,uv);float cocNear=texture2D(nearCoCBuffer,uv).r;cocNear=min(cocNear*scale,1.0);vec4 result=inputColor*(1.0-colorFar.a)+colorFar;result=mix(result,colorNear,cocNear);outputColor=result;}`,sD=class extends qn{constructor(n,{blendFunction:e,worldFocusDistance:t,worldFocusRange:i,focusDistance:r=0,focalLength:s=.1,focusRange:a=s,bokehScale:c=1,resolutionScale:u=1,width:h=Bt.AUTO_SIZE,height:f=Bt.AUTO_SIZE,resolutionX:p=h,resolutionY:m=f}={}){super("DepthOfFieldEffect",rD,{blendFunction:e,attributes:Xi.DEPTH,uniforms:new Map([["nearColorBuffer",new Q(null)],["farColorBuffer",new Q(null)],["nearCoCBuffer",new Q(null)],["scale",new Q(1)]])}),this.camera=n,this.renderTarget=new wt(1,1,{depthBuffer:!1}),this.renderTarget.texture.name="DoF.Intermediate",this.renderTargetMasked=this.renderTarget.clone(),this.renderTargetMasked.texture.name="DoF.Masked.Far",this.renderTargetNear=this.renderTarget.clone(),this.renderTargetNear.texture.name="DoF.Bokeh.Near",this.uniforms.get("nearColorBuffer").value=this.renderTargetNear.texture,this.renderTargetFar=this.renderTarget.clone(),this.renderTargetFar.texture.name="DoF.Bokeh.Far",this.uniforms.get("farColorBuffer").value=this.renderTargetFar.texture,this.renderTargetCoC=this.renderTarget.clone(),this.renderTargetCoC.texture.name="DoF.CoC",this.renderTargetCoCBlurred=this.renderTargetCoC.clone(),this.renderTargetCoCBlurred.texture.name="DoF.CoC.Blurred",this.uniforms.get("nearCoCBuffer").value=this.renderTargetCoCBlurred.texture,this.cocPass=new Gi(new MC(n));const g=this.cocMaterial;g.focusDistance=r,g.focusRange=a,t!==void 0&&(g.worldFocusDistance=t),i!==void 0&&(g.worldFocusRange=i),this.blurPass=new Dh({resolutionScale:u,resolutionX:p,resolutionY:m,kernelSize:uo.MEDIUM}),this.maskPass=new Gi(new jC(this.renderTargetCoC.texture));const y=this.maskPass.fullscreenMaterial;y.maskFunction=ll.MULTIPLY,y.colorChannel=qa.GREEN,this.bokehNearBasePass=new Gi(new Pu(!1,!0)),this.bokehNearBasePass.fullscreenMaterial.cocBuffer=this.renderTargetCoCBlurred.texture,this.bokehNearFillPass=new Gi(new Pu(!0,!0)),this.bokehNearFillPass.fullscreenMaterial.cocBuffer=this.renderTargetCoCBlurred.texture,this.bokehFarBasePass=new Gi(new Pu(!1,!1)),this.bokehFarBasePass.fullscreenMaterial.cocBuffer=this.renderTargetCoC.texture,this.bokehFarFillPass=new Gi(new Pu(!0,!1)),this.bokehFarFillPass.fullscreenMaterial.cocBuffer=this.renderTargetCoC.texture,this.target=null;const T=this.resolution=new Bt(this,p,m,u);T.addEventListener("change",S=>this.setSize(T.baseWidth,T.baseHeight)),this.bokehScale=c}set mainCamera(n){this.camera=n,this.cocMaterial.copyCameraSettings(n)}get cocTexture(){return this.renderTargetCoC.texture}get cocMaterial(){return this.cocPass.fullscreenMaterial}get circleOfConfusionMaterial(){return this.cocMaterial}getCircleOfConfusionMaterial(){return this.circleOfConfusionMaterial}getBlurPass(){return this.blurPass}getResolution(){return this.resolution}get bokehScale(){return this.uniforms.get("scale").value}set bokehScale(n){this.bokehNearBasePass.fullscreenMaterial.scale=n,this.bokehNearFillPass.fullscreenMaterial.scale=n,this.bokehFarBasePass.fullscreenMaterial.scale=n,this.bokehFarFillPass.fullscreenMaterial.scale=n,this.maskPass.fullscreenMaterial.strength=n,this.uniforms.get("scale").value=n}getBokehScale(){return this.bokehScale}setBokehScale(n){this.bokehScale=n}getTarget(){return this.target}setTarget(n){this.target=n}calculateFocusDistance(n){const e=this.camera,t=e.position.distanceTo(n);return zs(-t,e.near,e.far)}setDepthTexture(n,e=In){this.circleOfConfusionMaterial.depthBuffer=n,this.circleOfConfusionMaterial.depthPacking=e}update(n,e,t){const i=this.renderTarget,r=this.renderTargetCoC,s=this.renderTargetCoCBlurred,a=this.renderTargetMasked;if(this.target!==null){const c=this.calculateFocusDistance(this.target);this.cocMaterial.focusDistance=c}this.cocPass.render(n,null,r),this.blurPass.render(n,r,s),this.maskPass.render(n,e,a),this.bokehFarBasePass.render(n,a,i),this.bokehFarFillPass.render(n,i,this.renderTargetFar),this.bokehNearBasePass.render(n,e,i),this.bokehNearFillPass.render(n,i,this.renderTargetNear)}setSize(n,e){const t=this.resolution;t.setBaseSize(n,e);const i=t.width,r=t.height;this.cocPass.setSize(n,e),this.blurPass.setSize(n,e),this.maskPass.setSize(n,e),this.renderTargetCoC.setSize(n,e),this.renderTargetMasked.setSize(n,e),this.renderTarget.setSize(i,r),this.renderTargetNear.setSize(i,r),this.renderTargetFar.setSize(i,r),this.renderTargetCoCBlurred.setSize(i,r),this.bokehNearBasePass.fullscreenMaterial.setSize(n,e),this.bokehNearFillPass.fullscreenMaterial.setSize(n,e),this.bokehFarBasePass.fullscreenMaterial.setSize(n,e),this.bokehFarFillPass.fullscreenMaterial.setSize(n,e)}initialize(n,e,t){this.cocPass.initialize(n,e,t),this.maskPass.initialize(n,e,t),this.bokehNearBasePass.initialize(n,e,t),this.bokehNearFillPass.initialize(n,e,t),this.bokehFarBasePass.initialize(n,e,t),this.bokehFarFillPass.initialize(n,e,t),this.blurPass.initialize(n,e,Vt);const i=this.maskPass.fullscreenMaterial;i.maskFunction=e?ll.MULTIPLY:ll.MULTIPLY_RGB_SET_ALPHA,n.capabilities.logarithmicDepthBuffer&&(this.cocPass.fullscreenMaterial.defines.LOG_DEPTH="1"),t!==void 0&&(this.renderTarget.texture.type=t,this.renderTargetNear.texture.type=t,this.renderTargetFar.texture.type=t,this.renderTargetMasked.texture.type=t,Rr(n)===Ot&&(En(this.renderTarget.texture,Ot),En(this.renderTargetNear.texture,Ot),En(this.renderTargetFar.texture,Ot),En(this.renderTargetMasked.texture,Ot)))}};function aD(n,e,t){const i=new Map([[eh,1],[th,1],[Np,2],[Qt,4]]);let r;if(i.has(e)||console.error("Invalid noise texture format"),t===Vt){r=new Uint8Array(n*i.get(e));for(let s=0,a=r.length;s<a;++s)r[s]=Math.random()*255+.5}else{r=new Float32Array(n*i.get(e));for(let s=0,a=r.length;s<a;++s)r[s]=Math.random()}return r}var _p=class extends sr{constructor(n,e,t=eh,i=Vt){super(aD(n*e,t,i),n,e,t,i),this.needsUpdate=!0}},oD="uniform lowp sampler2D perturbationMap;uniform bool active;uniform float columns;uniform float random;uniform vec2 seeds;uniform vec2 distortion;void mainUv(inout vec2 uv){if(active){if(uv.y<distortion.x+columns&&uv.y>distortion.x-columns*random){float sx=clamp(ceil(seeds.x),0.0,1.0);uv.y=sx*(1.0-(uv.y+distortion.y))+(1.0-sx)*distortion.y;}if(uv.x<distortion.y+columns&&uv.x>distortion.y-columns*random){float sy=clamp(ceil(seeds.y),0.0,1.0);uv.x=sy*distortion.x+(1.0-sy)*(1.0-(uv.x+distortion.x));}vec2 normal=texture2D(perturbationMap,uv*random*random).rg;uv+=normal*seeds*(random*0.2);}}",Ru="Glitch.Generated";function $n(n,e){return n+Math.random()*(e-n)}var lD=class extends qn{constructor({chromaticAberrationOffset:n=null,delay:e=new K(1.5,3.5),duration:t=new K(.6,1),strength:i=new K(.3,1),columns:r=.05,ratio:s=.85,perturbationMap:a=null,dtSize:c=64}={}){if(super("GlitchEffect",oD,{uniforms:new Map([["perturbationMap",new Q(null)],["columns",new Q(r)],["active",new Q(!1)],["random",new Q(1)],["seeds",new Q(new K)],["distortion",new Q(new K)]])}),a===null){const u=new _p(c,c,Qt);u.name=Ru,this.perturbationMap=u}else this.perturbationMap=a;this.time=0,this.distortion=this.uniforms.get("distortion").value,this.delay=e,this.duration=t,this.breakPoint=new K($n(this.delay.x,this.delay.y),$n(this.duration.x,this.duration.y)),this.strength=i,this.mode=Is.SPORADIC,this.ratio=s,this.chromaticAberrationOffset=n}get seeds(){return this.uniforms.get("seeds").value}get active(){return this.uniforms.get("active").value}isActive(){return this.active}get minDelay(){return this.delay.x}set minDelay(n){this.delay.x=n}getMinDelay(){return this.delay.x}setMinDelay(n){this.delay.x=n}get maxDelay(){return this.delay.y}set maxDelay(n){this.delay.y=n}getMaxDelay(){return this.delay.y}setMaxDelay(n){this.delay.y=n}get minDuration(){return this.duration.x}set minDuration(n){this.duration.x=n}getMinDuration(){return this.duration.x}setMinDuration(n){this.duration.x=n}get maxDuration(){return this.duration.y}set maxDuration(n){this.duration.y=n}getMaxDuration(){return this.duration.y}setMaxDuration(n){this.duration.y=n}get minStrength(){return this.strength.x}set minStrength(n){this.strength.x=n}getMinStrength(){return this.strength.x}setMinStrength(n){this.strength.x=n}get maxStrength(){return this.strength.y}set maxStrength(n){this.strength.y=n}getMaxStrength(){return this.strength.y}setMaxStrength(n){this.strength.y=n}getMode(){return this.mode}setMode(n){this.mode=n}getGlitchRatio(){return 1-this.ratio}setGlitchRatio(n){this.ratio=Math.min(Math.max(1-n,0),1)}get columns(){return this.uniforms.get("columns").value}set columns(n){this.uniforms.get("columns").value=n}getGlitchColumns(){return this.columns}setGlitchColumns(n){this.columns=n}getChromaticAberrationOffset(){return this.chromaticAberrationOffset}setChromaticAberrationOffset(n){this.chromaticAberrationOffset=n}get perturbationMap(){return this.uniforms.get("perturbationMap").value}set perturbationMap(n){const e=this.perturbationMap;e!==null&&e.name===Ru&&e.dispose(),n.minFilter=n.magFilter=ct,n.wrapS=n.wrapT=vi,n.generateMipmaps=!1,this.uniforms.get("perturbationMap").value=n}getPerturbationMap(){return this.perturbationMap}setPerturbationMap(n){this.perturbationMap=n}generatePerturbationMap(n=64){const e=new _p(n,n,Qt);return e.name=Ru,e}update(n,e,t){const i=this.mode,r=this.breakPoint,s=this.chromaticAberrationOffset,a=this.strength;let c=this.time,u=!1,h=0,f=0,p;i!==Is.DISABLED&&(i===Is.SPORADIC&&(c+=t,p=c>r.x,c>=r.x+r.y&&(r.set($n(this.delay.x,this.delay.y),$n(this.duration.x,this.duration.y)),c=0)),h=Math.random(),this.uniforms.get("random").value=h,p&&h>this.ratio||i===Is.CONSTANT_WILD?(u=!0,h*=a.y*.03,f=$n(-Math.PI,Math.PI),this.seeds.set($n(-a.y,a.y),$n(-a.y,a.y)),this.distortion.set($n(0,1),$n(0,1))):(p||i===Is.CONSTANT_MILD)&&(u=!0,h*=a.x*.03,f=$n(-Math.PI,Math.PI),this.seeds.set($n(-a.x,a.x),$n(-a.x,a.x)),this.distortion.set($n(0,1),$n(0,1))),this.time=c),s!==null&&(u?s.set(Math.cos(f),Math.sin(f)).multiplyScalar(h):s.set(0,0)),this.uniforms.get("active").value=u}dispose(){const n=this.perturbationMap;n!==null&&n.name===Ru&&n.dispose()}},cD=`#ifdef FRAMEBUFFER_PRECISION_HIGH
uniform mediump sampler2D map;
#else
uniform lowp sampler2D map;
#endif
void mainImage(const in vec4 inputColor,const in vec2 uv,out vec4 outputColor){outputColor=texture2D(map,uv);}`,Ld=new I,Dx=new ze,uD=class extends qn{constructor(n,e,{blendFunction:t=ot.SCREEN,samples:i=60,density:r=.96,decay:s=.9,weight:a=.4,exposure:c=.6,clampMax:u=1,blur:h=!0,kernelSize:f=uo.SMALL,resolutionScale:p=.5,width:m=Bt.AUTO_SIZE,height:g=Bt.AUTO_SIZE,resolutionX:y=m,resolutionY:T=g}={}){super("GodRaysEffect",cD,{blendFunction:t,attributes:Xi.DEPTH,uniforms:new Map([["map",new Q(null)]])}),this.camera=n,this._lightSource=e,this.lightSource=e,this.lightScene=new Xs,this.screenPosition=new K,this.renderTargetA=new wt(1,1,{depthBuffer:!1}),this.renderTargetA.texture.name="GodRays.Target.A",this.renderTargetB=this.renderTargetA.clone(),this.renderTargetB.texture.name="GodRays.Target.B",this.uniforms.get("map").value=this.renderTargetB.texture,this.renderTargetLight=new wt(1,1),this.renderTargetLight.texture.name="GodRays.Light",this.renderTargetLight.depthTexture=new lh,this.renderPassLight=new ho(this.lightScene,n),this.renderPassLight.clearPass.overrideClearColor=new be(0),this.clearPass=new zl(!0,!1,!1),this.clearPass.overrideClearColor=new be(0),this.blurPass=new Dh({kernelSize:f}),this.blurPass.enabled=h,this.depthMaskPass=new Gi(new uM);const S=this.depthMaskMaterial;S.depthBuffer1=this.renderTargetLight.depthTexture,S.copyCameraSettings(n),this.godRaysPass=new Gi(new XC(this.screenPosition));const x=this.godRaysMaterial;x.density=r,x.decay=s,x.weight=a,x.exposure=c,x.maxIntensity=u,x.samples=i;const w=this.resolution=new Bt(this,y,T,p);w.addEventListener("change",M=>this.setSize(w.baseWidth,w.baseHeight))}set mainCamera(n){this.camera=n,this.renderPassLight.mainCamera=n,this.depthMaskMaterial.copyCameraSettings(n)}get lightSource(){return this._lightSource}set lightSource(n){this._lightSource=n,n!==null&&(n.material.depthWrite=!1,n.material.transparent=!0)}getBlurPass(){return this.blurPass}get texture(){return this.renderTargetB.texture}getTexture(){return this.texture}get depthMaskMaterial(){return this.depthMaskPass.fullscreenMaterial}get godRaysMaterial(){return this.godRaysPass.fullscreenMaterial}getGodRaysMaterial(){return this.godRaysMaterial}getResolution(){return this.resolution}get width(){return this.resolution.width}set width(n){this.resolution.preferredWidth=n}get height(){return this.resolution.height}set height(n){this.resolution.preferredHeight=n}get dithering(){return this.godRaysMaterial.dithering}set dithering(n){const e=this.godRaysMaterial;e.dithering=n,e.needsUpdate=!0}get blur(){return this.blurPass.enabled}set blur(n){this.blurPass.enabled=n}get kernelSize(){return this.blurPass.kernelSize}set kernelSize(n){this.blurPass.kernelSize=n}getResolutionScale(){return this.resolution.scale}setResolutionScale(n){this.resolution.scale=n}get samples(){return this.godRaysMaterial.samples}set samples(n){this.godRaysMaterial.samples=n}setDepthTexture(n,e=In){this.depthMaskPass.fullscreenMaterial.depthBuffer0=n,this.depthMaskPass.fullscreenMaterial.depthPacking0=e}update(n,e,t){const i=this.lightSource,r=i.parent,s=i.matrixAutoUpdate,a=this.renderTargetA,c=this.renderTargetLight;i.material.depthWrite=!0,i.matrixAutoUpdate=!1,i.updateWorldMatrix(!0,!1),r!==null&&(s||Dx.copy(i.matrix),i.matrix.copy(i.matrixWorld)),this.lightScene.add(i),this.renderPassLight.render(n,c),this.clearPass.render(n,a),this.depthMaskPass.render(n,c,a),i.material.depthWrite=!1,i.matrixAutoUpdate=s,r!==null&&(s||i.matrix.copy(Dx),r.add(i)),Ld.setFromMatrixPosition(i.matrixWorld).project(this.camera),this.screenPosition.set(Math.min(Math.max((Ld.x+1)*.5,-1),2),Math.min(Math.max((Ld.y+1)*.5,-1),2)),this.blurPass.enabled&&this.blurPass.render(n,a,a),this.godRaysPass.render(n,a,this.renderTargetB)}setSize(n,e){const t=this.resolution;t.setBaseSize(n,e);const i=t.width,r=t.height;this.renderTargetA.setSize(i,r),this.renderTargetB.setSize(i,r),this.renderTargetLight.setSize(i,r),this.blurPass.resolution.copy(t)}initialize(n,e,t){this.blurPass.initialize(n,e,t),this.renderPassLight.initialize(n,e,t),this.depthMaskPass.initialize(n,e,t),this.godRaysPass.initialize(n,e,t),t!==void 0&&(this.renderTargetA.texture.type=t,this.renderTargetB.texture.type=t,this.renderTargetLight.texture.type=t,Rr(n)===Ot&&(En(this.renderTargetA.texture,Ot),En(this.renderTargetB.texture,Ot),En(this.renderTargetLight.texture,Ot)))}},hD="uniform vec2 scale;uniform float lineWidth;void mainImage(const in vec4 inputColor,const in vec2 uv,out vec4 outputColor){float grid=0.5-max(abs(mod(uv.x*scale.x,1.0)-0.5),abs(mod(uv.y*scale.y,1.0)-0.5));outputColor=vec4(vec3(smoothstep(0.0,lineWidth,grid)),inputColor.a);}",fD=class extends qn{constructor({blendFunction:n=ot.OVERLAY,scale:e=1,lineWidth:t=0}={}){super("GridEffect",hD,{blendFunction:n,uniforms:new Map([["scale",new Q(new K)],["lineWidth",new Q(t)]])}),this.resolution=new K,this.s=0,this.scale=e,this.l=0,this.lineWidth=t}get scale(){return this.s}set scale(n){this.s=Math.max(n,1e-6),this.setSize(this.resolution.width,this.resolution.height)}getScale(){return this.scale}setScale(n){this.scale=n}get lineWidth(){return this.l}set lineWidth(n){this.l=n,this.setSize(this.resolution.width,this.resolution.height)}getLineWidth(){return this.lineWidth}setLineWidth(n){this.lineWidth=n}setSize(n,e){this.resolution.set(n,e);const t=n/e,i=this.scale*(e*.125);this.uniforms.get("scale").value.set(t*i,i),this.uniforms.get("lineWidth").value=i/e+this.lineWidth}};function Lx(n,e,t){const i=document.createElement("canvas"),r=i.getContext("2d");if(i.width=n,i.height=e,t instanceof Image)r.drawImage(t,0,0);else{const s=r.createImageData(n,e);s.data.set(t),r.putImageData(s,0,0)}return i}var dD=class mM{constructor(e=0,t=0,i=null){this.width=e,this.height=t,this.data=i}toCanvas(){return typeof document>"u"?null:Lx(this.width,this.height,this.data)}static from(e){const{width:t,height:i}=e;let r;if(e instanceof Image){const s=Lx(t,i,e);s!==null&&(r=s.getContext("2d").getImageData(0,0,t,i).data)}else r=e.data;return new mM(t,i,r)}},pD=`"use strict";(()=>{var O={SCALE_UP:"lut.scaleup"};var _=[new Float32Array(3),new Float32Array(3)],n=[new Float32Array(3),new Float32Array(3),new Float32Array(3),new Float32Array(3)],Z=[[new Float32Array([0,0,0]),new Float32Array([1,0,0]),new Float32Array([1,1,0]),new Float32Array([1,1,1])],[new Float32Array([0,0,0]),new Float32Array([1,0,0]),new Float32Array([1,0,1]),new Float32Array([1,1,1])],[new Float32Array([0,0,0]),new Float32Array([0,0,1]),new Float32Array([1,0,1]),new Float32Array([1,1,1])],[new Float32Array([0,0,0]),new Float32Array([0,1,0]),new Float32Array([1,1,0]),new Float32Array([1,1,1])],[new Float32Array([0,0,0]),new Float32Array([0,1,0]),new Float32Array([0,1,1]),new Float32Array([1,1,1])],[new Float32Array([0,0,0]),new Float32Array([0,0,1]),new Float32Array([0,1,1]),new Float32Array([1,1,1])]];function d(a,t,r,m){let i=r[0]-t[0],e=r[1]-t[1],y=r[2]-t[2],h=a[0]-t[0],A=a[1]-t[1],w=a[2]-t[2],c=e*w-y*A,l=y*h-i*w,x=i*A-e*h,u=Math.sqrt(c*c+l*l+x*x),b=u*.5,s=c/u,F=l/u,f=x/u,p=-(a[0]*s+a[1]*F+a[2]*f),M=m[0]*s+m[1]*F+m[2]*f;return Math.abs(M+p)*b/3}function V(a,t,r,m,i,e){let y=(r+m*t+i*t*t)*4;e[0]=a[y+0],e[1]=a[y+1],e[2]=a[y+2]}function k(a,t,r,m,i,e){let y=r*(t-1),h=m*(t-1),A=i*(t-1),w=Math.floor(y),c=Math.floor(h),l=Math.floor(A),x=Math.ceil(y),u=Math.ceil(h),b=Math.ceil(A),s=y-w,F=h-c,f=A-l;if(w===y&&c===h&&l===A)V(a,t,y,h,A,e);else{let p;s>=F&&F>=f?p=Z[0]:s>=f&&f>=F?p=Z[1]:f>=s&&s>=F?p=Z[2]:F>=s&&s>=f?p=Z[3]:F>=f&&f>=s?p=Z[4]:f>=F&&F>=s&&(p=Z[5]);let[M,g,X,Y]=p,P=_[0];P[0]=s,P[1]=F,P[2]=f;let o=_[1],L=x-w,S=u-c,U=b-l;o[0]=L*M[0]+w,o[1]=S*M[1]+c,o[2]=U*M[2]+l,V(a,t,o[0],o[1],o[2],n[0]),o[0]=L*g[0]+w,o[1]=S*g[1]+c,o[2]=U*g[2]+l,V(a,t,o[0],o[1],o[2],n[1]),o[0]=L*X[0]+w,o[1]=S*X[1]+c,o[2]=U*X[2]+l,V(a,t,o[0],o[1],o[2],n[2]),o[0]=L*Y[0]+w,o[1]=S*Y[1]+c,o[2]=U*Y[2]+l,V(a,t,o[0],o[1],o[2],n[3]);let T=d(g,X,Y,P)*6,q=d(M,X,Y,P)*6,C=d(M,g,Y,P)*6,E=d(M,g,X,P)*6;n[0][0]*=T,n[0][1]*=T,n[0][2]*=T,n[1][0]*=q,n[1][1]*=q,n[1][2]*=q,n[2][0]*=C,n[2][1]*=C,n[2][2]*=C,n[3][0]*=E,n[3][1]*=E,n[3][2]*=E,e[0]=n[0][0]+n[1][0]+n[2][0]+n[3][0],e[1]=n[0][1]+n[1][1]+n[2][1]+n[3][1],e[2]=n[0][2]+n[1][2]+n[2][2]+n[3][2]}}var v=class{static expand(t,r){let m=Math.cbrt(t.length/4),i=new Float32Array(3),e=new t.constructor(r**3*4),y=t instanceof Uint8Array?255:1,h=r**2,A=1/(r-1);for(let w=0;w<r;++w)for(let c=0;c<r;++c)for(let l=0;l<r;++l){let x=l*A,u=c*A,b=w*A,s=Math.round(l+c*r+w*h)*4;k(t,m,x,u,b,i),e[s+0]=i[0],e[s+1]=i[1],e[s+2]=i[2],e[s+3]=y}return e}};self.addEventListener("message",a=>{let t=a.data,r=t.data;switch(t.operation){case O.SCALE_UP:r=v.expand(r,t.size);break}postMessage(r,[r.buffer]),close()});})();
`,Ix=new be,mD=class Hu extends Vs{constructor(e,t){super(e,t,t,t),this.type=tn,this.format=Qt,this.minFilter=Qe,this.magFilter=Qe,this.wrapS=Mn,this.wrapT=Mn,this.wrapR=Mn,this.unpackAlignment=1,this.needsUpdate=!0,En(this,to),this.domainMin=new I(0,0,0),this.domainMax=new I(1,1,1)}get isLookupTexture3D(){return!0}scaleUp(e,t=!0){const i=this.image;let r;return e<=i.width?r=Promise.reject(new Error("The target size must be greater than the current size")):r=new Promise((s,a)=>{const c=URL.createObjectURL(new Blob([pD],{type:"text/javascript"})),u=new Worker(c);u.addEventListener("error",f=>a(f.error)),u.addEventListener("message",f=>{const p=new Hu(f.data,e);Cd(this,p),p.type=this.type,p.name=this.name,URL.revokeObjectURL(c),s(p)});const h=t?[i.data.buffer]:[];u.postMessage({operation:_C.SCALE_UP,data:i.data,size:e},h)}),r}applyLUT(e){const t=this.image,i=e.image,r=Math.min(t.width,t.height,t.depth),s=Math.min(i.width,i.height,i.depth);if(r!==s)console.error("Size mismatch");else if(e.type!==tn||this.type!==tn)console.error("Both LUTs must be FloatType textures");else if(e.format!==Qt||this.format!==Qt)console.error("Both LUTs must be RGBA textures");else{const a=t.data,c=i.data,u=r,h=u**2,f=u-1;for(let p=0,m=u**3;p<m;++p){const g=p*4,y=a[g+0]*f,T=a[g+1]*f,S=a[g+2]*f,x=Math.round(y+T*u+S*h)*4;a[g+0]=c[x+0],a[g+1]=c[x+1],a[g+2]=c[x+2]}this.needsUpdate=!0}return this}convertToUint8(){if(this.type===tn){const e=this.image.data,t=new Uint8Array(e.length);for(let i=0,r=e.length;i<r;++i)t[i]=e[i]*255+.5;this.image.data=t,this.type=Vt,this.needsUpdate=!0}return this}convertToFloat(){if(this.type===Vt){const e=this.image.data,t=new Float32Array(e.length);for(let i=0,r=e.length;i<r;++i)t[i]=e[i]/255;this.image.data=t,this.type=tn,this.needsUpdate=!0}return this}convertToRGBA(){return console.warn("LookupTexture","convertToRGBA() is deprecated, LUTs are now RGBA by default"),this}convertLinearToSRGB(){const e=this.image.data;if(this.type===tn){for(let t=0,i=e.length;t<i;t+=4)Ix.fromArray(e,t).convertLinearToSRGB().toArray(e,t);En(this,Ot),this.needsUpdate=!0}else console.error("Color space conversion requires FloatType data");return this}convertSRGBToLinear(){const e=this.image.data;if(this.type===tn){for(let t=0,i=e.length;t<i;t+=4)Ix.fromArray(e,t).convertSRGBToLinear().toArray(e,t);En(this,to),this.needsUpdate=!0}else console.error("Color space conversion requires FloatType data");return this}toDataTexture(){const e=this.image.width,t=this.image.height*this.image.depth,i=new sr(this.image.data,e,t);return i.name=this.name,i.type=this.type,i.format=this.format,i.minFilter=Qe,i.magFilter=Qe,i.wrapS=this.wrapS,i.wrapT=this.wrapT,i.generateMipmaps=!1,i.needsUpdate=!0,Cd(this,i),i}static from(e){const t=e.image,{width:i,height:r}=t,s=Math.min(i,r);let a;if(t instanceof Image){const h=dD.from(t).data;if(i>r){a=new Uint8Array(h.length);for(let f=0;f<s;++f)for(let p=0;p<s;++p)for(let m=0;m<s;++m){const g=(m+f*s+p*s*s)*4,y=(m+p*s+f*s*s)*4;a[y+0]=h[g+0],a[y+1]=h[g+1],a[y+2]=h[g+2],a[y+3]=h[g+3]}}else a=new Uint8Array(h.buffer)}else a=t.data.slice();const c=new Hu(a,s);return c.type=e.type,c.name=e.name,Cd(e,c),c}static createNeutral(e){const t=new Float32Array(e**3*4),i=e**2,r=1/(e-1);for(let a=0;a<e;++a)for(let c=0;c<e;++c)for(let u=0;u<e;++u){const h=(a+c*e+u*i)*4;t[h+0]=a*r,t[h+1]=c*r,t[h+2]=u*r,t[h+3]=1}const s=new Hu(t,e);return s.name="neutral",s}},gD=`uniform vec3 scale;uniform vec3 offset;
#ifdef CUSTOM_INPUT_DOMAIN
uniform vec3 domainMin;uniform vec3 domainMax;
#endif
#ifdef LUT_3D
#ifdef LUT_PRECISION_HIGH
#ifdef GL_FRAGMENT_PRECISION_HIGH
uniform highp sampler3D lut;
#else
uniform mediump sampler3D lut;
#endif
#else
uniform lowp sampler3D lut;
#endif
vec4 applyLUT(const in vec3 rgb){
#ifdef TETRAHEDRAL_INTERPOLATION
vec3 p=floor(rgb);vec3 f=rgb-p;vec3 v1=(p+0.5)*LUT_TEXEL_WIDTH;vec3 v4=(p+1.5)*LUT_TEXEL_WIDTH;vec3 v2,v3;vec3 frac;if(f.r>=f.g){if(f.g>f.b){frac=f.rgb;v2=vec3(v4.x,v1.y,v1.z);v3=vec3(v4.x,v4.y,v1.z);}else if(f.r>=f.b){frac=f.rbg;v2=vec3(v4.x,v1.y,v1.z);v3=vec3(v4.x,v1.y,v4.z);}else{frac=f.brg;v2=vec3(v1.x,v1.y,v4.z);v3=vec3(v4.x,v1.y,v4.z);}}else{if(f.b>f.g){frac=f.bgr;v2=vec3(v1.x,v1.y,v4.z);v3=vec3(v1.x,v4.y,v4.z);}else if(f.r>=f.b){frac=f.grb;v2=vec3(v1.x,v4.y,v1.z);v3=vec3(v4.x,v4.y,v1.z);}else{frac=f.gbr;v2=vec3(v1.x,v4.y,v1.z);v3=vec3(v1.x,v4.y,v4.z);}}vec4 n1=texture(lut,v1);vec4 n2=texture(lut,v2);vec4 n3=texture(lut,v3);vec4 n4=texture(lut,v4);vec4 weights=vec4(1.0-frac.x,frac.x-frac.y,frac.y-frac.z,frac.z);vec4 result=weights*mat4(vec4(n1.r,n2.r,n3.r,n4.r),vec4(n1.g,n2.g,n3.g,n4.g),vec4(n1.b,n2.b,n3.b,n4.b),vec4(1.0));return vec4(result.rgb,1.0);
#else
return texture(lut,rgb);
#endif
}
#else
#ifdef LUT_PRECISION_HIGH
#ifdef GL_FRAGMENT_PRECISION_HIGH
uniform highp sampler2D lut;
#else
uniform mediump sampler2D lut;
#endif
#else
uniform lowp sampler2D lut;
#endif
vec4 applyLUT(const in vec3 rgb){float slice=rgb.b*LUT_SIZE;float slice0=floor(slice);float interp=slice-slice0;float centeredInterp=interp-0.5;float slice1=slice0+sign(centeredInterp);
#ifdef LUT_STRIP_HORIZONTAL
float xOffset=clamp(rgb.r*LUT_TEXEL_HEIGHT,LUT_TEXEL_WIDTH*0.5,LUT_TEXEL_HEIGHT-LUT_TEXEL_WIDTH*0.5);vec2 uv0=vec2(slice0*LUT_TEXEL_HEIGHT+xOffset,rgb.g);vec2 uv1=vec2(slice1*LUT_TEXEL_HEIGHT+xOffset,rgb.g);
#else
float yOffset=clamp(rgb.g*LUT_TEXEL_WIDTH,LUT_TEXEL_HEIGHT*0.5,LUT_TEXEL_WIDTH-LUT_TEXEL_HEIGHT*0.5);vec2 uv0=vec2(rgb.r,slice0*LUT_TEXEL_WIDTH+yOffset);vec2 uv1=vec2(rgb.r,slice1*LUT_TEXEL_WIDTH+yOffset);
#endif
vec4 sample0=texture2D(lut,uv0);vec4 sample1=texture2D(lut,uv1);return mix(sample0,sample1,abs(centeredInterp));}
#endif
void mainImage(const in vec4 inputColor,const in vec2 uv,out vec4 outputColor){vec3 c=inputColor.rgb;
#ifdef CUSTOM_INPUT_DOMAIN
if(c.r>=domainMin.r&&c.g>=domainMin.g&&c.b>=domainMin.b&&c.r<=domainMax.r&&c.g<=domainMax.g&&c.b<=domainMax.b){c=applyLUT(scale*c+offset).rgb;}else{c=inputColor.rgb;}
#else
#if !defined(LUT_3D) || defined(TETRAHEDRAL_INTERPOLATION)
c=clamp(c,0.0,1.0);
#endif
c=applyLUT(scale*c+offset).rgb;
#endif
outputColor=vec4(c,inputColor.a);}`,vD=class extends qn{constructor(n,{blendFunction:e=ot.SRC,tetrahedralInterpolation:t=!1,inputEncoding:i=Di,inputColorSpace:r}={}){super("LUT3DEffect",gD,{blendFunction:e,uniforms:new Map([["lut",new Q(null)],["scale",new Q(new I)],["offset",new Q(new I)],["domainMin",new Q(null)],["domainMax",new Q(null)]])}),this.tetrahedralInterpolation=t,this.inputColorSpace=r||lM.get(i),this.lut=n}get inputEncoding(){return this.inputColorSpace}set inputEncoding(n){this.inputColorSpace=n}getInputEncoding(){return this.inputColorSpace}setInputEncoding(n){this.inputColorSpace=n}getOutputEncoding(){return this.outputColorSpace}get lut(){return this.uniforms.get("lut").value}set lut(n){const e=this.defines,t=this.uniforms;if(this.lut!==n&&(t.get("lut").value=n,n!==null)){const i=n.image,r=this.tetrahedralInterpolation;if(e.clear(),e.set("LUT_SIZE",Math.min(i.width,i.height).toFixed(16)),e.set("LUT_TEXEL_WIDTH",(1/i.width).toFixed(16)),e.set("LUT_TEXEL_HEIGHT",(1/i.height).toFixed(16)),t.get("domainMin").value=null,t.get("domainMax").value=null,(n.type===tn||n.type===ii)&&e.set("LUT_PRECISION_HIGH","1"),i.width>i.height?e.set("LUT_STRIP_HORIZONTAL","1"):n instanceof Vs&&e.set("LUT_3D","1"),n instanceof mD){const s=n.domainMin,a=n.domainMax;(s.x!==0||s.y!==0||s.z!==0||a.x!==1||a.y!==1||a.z!==1)&&(e.set("CUSTOM_INPUT_DOMAIN","1"),t.get("domainMin").value=s.clone(),t.get("domainMax").value=a.clone())}this.tetrahedralInterpolation=r}}getLUT(){return this.lut}setLUT(n){this.lut=n}updateScaleOffset(){const n=this.lut;if(n!==null){const e=Math.min(n.image.width,n.image.height),t=this.uniforms.get("scale").value,i=this.uniforms.get("offset").value;if(this.tetrahedralInterpolation&&n instanceof Vs)if(this.defines.has("CUSTOM_INPUT_DOMAIN")){const r=n.domainMax.clone().sub(n.domainMin);t.setScalar(e-1).divide(r),i.copy(n.domainMin).negate().multiply(t)}else t.setScalar(e-1),i.setScalar(0);else if(this.defines.has("CUSTOM_INPUT_DOMAIN")){const r=n.domainMax.clone().sub(n.domainMin).multiplyScalar(e);t.setScalar(e-1).divide(r),i.copy(n.domainMin).negate().multiply(t).addScalar(1/(2*e))}else t.setScalar((e-1)/e),i.setScalar(1/(2*e))}}configureTetrahedralInterpolation(){const n=this.lut;n!==null&&(n.minFilter=Qe,n.magFilter=Qe,this.tetrahedralInterpolation&&(n instanceof Vs?(n.minFilter=ct,n.magFilter=ct):console.warn("Tetrahedral interpolation requires a 3D texture")),n.source===void 0&&(n.needsUpdate=!0))}get tetrahedralInterpolation(){return this.defines.has("TETRAHEDRAL_INTERPOLATION")}set tetrahedralInterpolation(n){n?this.defines.set("TETRAHEDRAL_INTERPOLATION","1"):this.defines.delete("TETRAHEDRAL_INTERPOLATION"),this.configureTetrahedralInterpolation(),this.updateScaleOffset(),this.setChanged()}setTetrahedralInterpolationEnabled(n){this.tetrahedralInterpolation=n}},xD=`uniform lowp sampler2D edgeTexture;uniform lowp sampler2D maskTexture;uniform vec3 visibleEdgeColor;uniform vec3 hiddenEdgeColor;uniform float pulse;uniform float edgeStrength;
#ifdef USE_PATTERN
uniform lowp sampler2D patternTexture;varying vec2 vUvPattern;
#endif
void mainImage(const in vec4 inputColor,const in vec2 uv,out vec4 outputColor){vec2 edge=texture2D(edgeTexture,uv).rg;vec2 mask=texture2D(maskTexture,uv).rg;
#ifndef X_RAY
edge.y=0.0;
#endif
edge*=(edgeStrength*mask.x*pulse);vec3 color=edge.x*visibleEdgeColor+edge.y*hiddenEdgeColor;float visibilityFactor=0.0;
#ifdef USE_PATTERN
vec4 patternColor=texture2D(patternTexture,vUvPattern);
#ifdef X_RAY
float hiddenFactor=0.5;
#else
float hiddenFactor=0.0;
#endif
visibilityFactor=(1.0-mask.y>0.0)?1.0:hiddenFactor;visibilityFactor*=(1.0-mask.x)*patternColor.a;color+=visibilityFactor*patternColor.rgb;
#endif
float alpha=max(max(edge.x,edge.y),visibilityFactor);
#ifdef ALPHA
outputColor=vec4(color,alpha);
#else
outputColor=vec4(color,max(alpha,inputColor.a));
#endif
}`,yD="uniform float patternScale;varying vec2 vUvPattern;void mainSupport(const in vec2 uv){vUvPattern=uv*vec2(aspect,1.0)*patternScale;}",SD=class extends qn{constructor(n,e,{blendFunction:t=ot.SCREEN,patternTexture:i=null,patternScale:r=1,edgeStrength:s=1,pulseSpeed:a=0,visibleEdgeColor:c=16777215,hiddenEdgeColor:u=2230538,kernelSize:h=uo.VERY_SMALL,blur:f=!1,xRay:p=!0,multisampling:m=0,resolutionScale:g=.5,width:y=Bt.AUTO_SIZE,height:T=Bt.AUTO_SIZE,resolutionX:S=y,resolutionY:x=T}={}){super("OutlineEffect",xD,{uniforms:new Map([["maskTexture",new Q(null)],["edgeTexture",new Q(null)],["edgeStrength",new Q(s)],["visibleEdgeColor",new Q(new be(c))],["hiddenEdgeColor",new Q(new be(u))],["pulse",new Q(1)],["patternScale",new Q(r)],["patternTexture",new Q(null)]])}),this.blendMode.addEventListener("change",P=>{this.blendMode.blendFunction===ot.ALPHA?this.defines.set("ALPHA","1"):this.defines.delete("ALPHA"),this.setChanged()}),this.blendMode.blendFunction=t,this.patternTexture=i,this.xRay=p,this.scene=n,this.camera=e,this.renderTargetMask=new wt(1,1),this.renderTargetMask.samples=m,this.renderTargetMask.texture.name="Outline.Mask",this.uniforms.get("maskTexture").value=this.renderTargetMask.texture,this.renderTargetOutline=new wt(1,1,{depthBuffer:!1}),this.renderTargetOutline.texture.name="Outline.Edges",this.uniforms.get("edgeTexture").value=this.renderTargetOutline.texture,this.clearPass=new zl,this.clearPass.overrideClearColor=new be(0),this.clearPass.overrideClearAlpha=1,this.depthPass=new wm(n,e),this.maskPass=new ho(n,e,new RC(this.depthPass.texture,e));const w=this.maskPass.clearPass;w.overrideClearColor=new be(16777215),w.overrideClearAlpha=1,this.blurPass=new Dh({resolutionScale:g,resolutionX:S,resolutionY:x,kernelSize:h}),this.blurPass.enabled=f;const M=this.blurPass.resolution;M.addEventListener("change",P=>this.setSize(M.baseWidth,M.baseHeight)),this.outlinePass=new Gi(new JC);const b=this.outlinePass.fullscreenMaterial;b.inputBuffer=this.renderTargetMask.texture,this.time=0,this.active=!1,this.selection=new Em,this.selection.layer=10,this.pulseSpeed=a}set mainScene(n){this.scene=n,this.depthPass.mainScene=n,this.maskPass.mainScene=n}set mainCamera(n){this.camera=n,this.depthPass.mainCamera=n,this.maskPass.mainCamera=n,this.maskPass.overrideMaterial.copyCameraSettings(n)}get resolution(){return this.blurPass.resolution}getResolution(){return this.blurPass.getResolution()}get multisampling(){return this.renderTargetMask.samples}set multisampling(n){this.renderTargetMask.samples=n,this.renderTargetMask.dispose()}get patternScale(){return this.uniforms.get("patternScale").value}set patternScale(n){this.uniforms.get("patternScale").value=n}get edgeStrength(){return this.uniforms.get("edgeStrength").value}set edgeStrength(n){this.uniforms.get("edgeStrength").value=n}get visibleEdgeColor(){return this.uniforms.get("visibleEdgeColor").value}set visibleEdgeColor(n){this.uniforms.get("visibleEdgeColor").value=n}get hiddenEdgeColor(){return this.uniforms.get("hiddenEdgeColor").value}set hiddenEdgeColor(n){this.uniforms.get("hiddenEdgeColor").value=n}getBlurPass(){return this.blurPass}getSelection(){return this.selection}getPulseSpeed(){return this.pulseSpeed}setPulseSpeed(n){this.pulseSpeed=n}get width(){return this.resolution.width}set width(n){this.resolution.preferredWidth=n}get height(){return this.resolution.height}set height(n){this.resolution.preferredHeight=n}get selectionLayer(){return this.selection.layer}set selectionLayer(n){this.selection.layer=n}get dithering(){return this.blurPass.dithering}set dithering(n){this.blurPass.dithering=n}get kernelSize(){return this.blurPass.kernelSize}set kernelSize(n){this.blurPass.kernelSize=n}get blur(){return this.blurPass.enabled}set blur(n){this.blurPass.enabled=n}get xRay(){return this.defines.has("X_RAY")}set xRay(n){this.xRay!==n&&(n?this.defines.set("X_RAY","1"):this.defines.delete("X_RAY"),this.setChanged())}isXRayEnabled(){return this.xRay}setXRayEnabled(n){this.xRay=n}get patternTexture(){return this.uniforms.get("patternTexture").value}set patternTexture(n){n!==null?(n.wrapS=n.wrapT=vi,this.defines.set("USE_PATTERN","1"),this.setVertexShader(yD)):(this.defines.delete("USE_PATTERN"),this.setVertexShader(null)),this.uniforms.get("patternTexture").value=n,this.setChanged()}setPatternTexture(n){this.patternTexture=n}getResolutionScale(){return this.resolution.scale}setResolutionScale(n){this.resolution.scale=n}setSelection(n){return this.selection.set(n),this}clearSelection(){return this.selection.clear(),this}selectObject(n){return this.selection.add(n),this}deselectObject(n){return this.selection.delete(n),this}update(n,e,t){const i=this.scene,r=this.camera,s=this.selection,c=this.uniforms.get("pulse"),u=i.background,h=r.layers.mask;s.size>0?(i.background=null,c.value=1,this.pulseSpeed>0&&(c.value=Math.cos(this.time*this.pulseSpeed*10)*.375+.625),this.active=!0,this.time+=t,s.setVisible(!1),this.depthPass.render(n),s.setVisible(!0),r.layers.set(s.layer),this.maskPass.render(n,this.renderTargetMask),r.layers.mask=h,i.background=u,this.outlinePass.render(n,null,this.renderTargetOutline),this.blurPass.enabled&&this.blurPass.render(n,this.renderTargetOutline,this.renderTargetOutline)):this.active&&(r.layers.set(s.layer),this.maskPass.render(n,this.renderTargetMask),r.layers.mask=h,this.clearPass.render(n,this.renderTargetOutline),this.active=!1)}setSize(n,e){this.blurPass.setSize(n,e),this.renderTargetMask.setSize(n,e);const t=this.resolution;t.setBaseSize(n,e);const i=t.width,r=t.height;this.depthPass.setSize(i,r),this.renderTargetOutline.setSize(i,r),this.outlinePass.fullscreenMaterial.setSize(i,r)}initialize(n,e,t){this.blurPass.initialize(n,e,Vt),t!==void 0&&(this.depthPass.initialize(n,e,t),this.maskPass.initialize(n,e,t),this.outlinePass.initialize(n,e,t))}},MD="uniform bool active;uniform vec4 d;void mainUv(inout vec2 uv){if(active){uv=d.xy*(floor(uv*d.zw)+0.5);}}",_D=class extends qn{constructor(n=30){super("PixelationEffect",MD,{uniforms:new Map([["active",new Q(!1)],["d",new Q(new Et)]])}),this.resolution=new K,this._granularity=0,this.granularity=n}get granularity(){return this._granularity}set granularity(n){let e=Math.floor(n);e%2>0&&(e+=1),this._granularity=e,this.uniforms.get("active").value=e>0,this.setSize(this.resolution.width,this.resolution.height)}getGranularity(){return this.granularity}setGranularity(n){this.granularity=n}setSize(n,e){const t=this.resolution;t.set(n,e);const i=this.granularity,r=i/t.x,s=i/t.y;this.uniforms.get("d").value.set(r,s,1/r,1/s)}};new I;new I;var TD=class extends pM{constructor(n,e,t){super(t),this.setAttributes(this.getAttributes()|Xi.DEPTH),this.camera=e,this.depthPass=new wm(n,e),this.clearPass=new zl(!0,!1,!1),this.clearPass.overrideClearColor=new be(0),this.depthMaskPass=new Gi(new uM);const i=this.depthMaskMaterial;i.copyCameraSettings(e),i.depthBuffer1=this.depthPass.texture,i.depthPacking1=lr,i.depthMode=ul,this.renderTargetMasked=new wt(1,1,{depthBuffer:!1}),this.renderTargetMasked.texture.name="Bloom.Masked",this.selection=new Em,this.selection.layer=11,this._inverted=!1,this._ignoreBackground=!1}set mainScene(n){this.depthPass.mainScene=n}set mainCamera(n){this.camera=n,this.depthPass.mainCamera=n,this.depthMaskMaterial.copyCameraSettings(n)}getSelection(){return this.selection}get depthMaskMaterial(){return this.depthMaskPass.fullscreenMaterial}get inverted(){return this._inverted}set inverted(n){this._inverted=n,this.depthMaskMaterial.depthMode=n?Qu:ul}isInverted(){return this.inverted}setInverted(n){this.inverted=n}get ignoreBackground(){return this._ignoreBackground}set ignoreBackground(n){this._ignoreBackground=n,this.depthMaskMaterial.maxDepthStrategy=n?ol.DISCARD_MAX_DEPTH:ol.KEEP_MAX_DEPTH}isBackgroundDisabled(){return this.ignoreBackground}setBackgroundDisabled(n){this.ignoreBackground=n}setDepthTexture(n,e=In){this.depthMaskMaterial.depthBuffer0=n,this.depthMaskMaterial.depthPacking0=e}update(n,e,t){const i=this.camera,r=this.selection,s=this.inverted;let a=e;if(this.ignoreBackground||!s||r.size>0){const c=i.layers.mask;i.layers.set(r.layer),this.depthPass.render(n),i.layers.mask=c,a=this.renderTargetMasked,this.clearPass.render(n,a),this.depthMaskPass.render(n,e,a)}super.update(n,a,t)}setSize(n,e){super.setSize(n,e),this.renderTargetMasked.setSize(n,e),this.depthPass.setSize(n,e)}initialize(n,e,t){super.initialize(n,e,t),this.clearPass.initialize(n,e,t),this.depthPass.initialize(n,e,t),this.depthMaskPass.initialize(n,e,t),n.capabilities.logarithmicDepthBuffer&&(this.depthMaskPass.fullscreenMaterial.defines.LOG_DEPTH="1"),t!==void 0&&(this.renderTargetMasked.texture.type=t,Rr(n)===Ot&&En(this.renderTargetMasked.texture,Ot))}},wD=`uniform lowp sampler2D aoBuffer;uniform float luminanceInfluence;uniform float intensity;
#if THREE_REVISION < 143
#define luminance(v) linearToRelativeLuminance(v)
#endif
#if defined(DEPTH_AWARE_UPSAMPLING) && defined(NORMAL_DEPTH)
#ifdef GL_FRAGMENT_PRECISION_HIGH
uniform highp sampler2D normalDepthBuffer;
#else
uniform mediump sampler2D normalDepthBuffer;
#endif
#endif
#ifdef COLORIZE
uniform vec3 color;
#endif
void mainImage(const in vec4 inputColor,const in vec2 uv,const in float depth,out vec4 outputColor){float aoLinear=texture2D(aoBuffer,uv).r;
#if defined(DEPTH_AWARE_UPSAMPLING) && defined(NORMAL_DEPTH) && __VERSION__ == 300
vec4 normalDepth[4];normalDepth[0]=textureOffset(normalDepthBuffer,uv,ivec2(0,0));normalDepth[1]=textureOffset(normalDepthBuffer,uv,ivec2(0,1));normalDepth[2]=textureOffset(normalDepthBuffer,uv,ivec2(1,0));normalDepth[3]=textureOffset(normalDepthBuffer,uv,ivec2(1,1));float dot01=dot(normalDepth[0].rgb,normalDepth[1].rgb);float dot02=dot(normalDepth[0].rgb,normalDepth[2].rgb);float dot03=dot(normalDepth[0].rgb,normalDepth[3].rgb);float minDot=min(dot01,min(dot02,dot03));float s=step(THRESHOLD,minDot);float smallestDistance=1.0;int index;for(int i=0;i<4;++i){float distance=abs(depth-normalDepth[i].a);if(distance<smallestDistance){smallestDistance=distance;index=i;}}ivec2 offsets[4];offsets[0]=ivec2(0,0);offsets[1]=ivec2(0,1);offsets[2]=ivec2(1,0);offsets[3]=ivec2(1,1);ivec2 coord=ivec2(uv*vec2(textureSize(aoBuffer,0)))+offsets[index];float aoNearest=texelFetch(aoBuffer,coord,0).r;float ao=mix(aoNearest,aoLinear,s);
#else
float ao=aoLinear;
#endif
float l=luminance(inputColor.rgb);ao=mix(ao,0.0,l*luminanceInfluence);ao=clamp(ao*intensity,0.0,1.0);
#ifdef COLORIZE
outputColor=vec4(1.0-ao*(1.0-color),inputColor.a);
#else
outputColor=vec4(vec3(1.0-ao),inputColor.a);
#endif
}`,Ux=64,ED=class extends qn{constructor(n,e,{blendFunction:t=ot.MULTIPLY,samples:i=9,rings:r=7,normalDepthBuffer:s=null,depthAwareUpsampling:a=!0,worldDistanceThreshold:c,worldDistanceFalloff:u,worldProximityThreshold:h,worldProximityFalloff:f,distanceThreshold:p=.97,distanceFalloff:m=.03,rangeThreshold:g=5e-4,rangeFalloff:y=.001,minRadiusScale:T=.1,luminanceInfluence:S=.7,radius:x=.1825,intensity:w=1,bias:M=.025,fade:b=.01,color:P=null,resolutionScale:C=1,width:L=Bt.AUTO_SIZE,height:U=Bt.AUTO_SIZE,resolutionX:A=L,resolutionY:R=U}={}){super("SSAOEffect",wD,{blendFunction:t,attributes:Xi.DEPTH,defines:new Map([["THRESHOLD","0.997"]]),uniforms:new Map([["aoBuffer",new Q(null)],["normalDepthBuffer",new Q(s)],["luminanceInfluence",new Q(S)],["color",new Q(null)],["intensity",new Q(w)],["scale",new Q(0)]])}),this.renderTarget=new wt(1,1,{depthBuffer:!1}),this.renderTarget.texture.name="AO.Target",this.uniforms.get("aoBuffer").value=this.renderTarget.texture;const z=this.resolution=new Bt(this,A,R,C);z.addEventListener("change",J=>this.setSize(z.baseWidth,z.baseHeight)),this.camera=n,this.depthDownsamplingPass=new dM({normalBuffer:e,resolutionScale:C}),this.depthDownsamplingPass.enabled=s===null,this.ssaoPass=new Gi(new tR(n));const te=new _p(Ux,Ux,Qt);te.wrapS=te.wrapT=vi;const W=this.ssaoMaterial;W.normalBuffer=e,W.noiseTexture=te,W.minRadiusScale=T,W.samples=i,W.radius=x,W.rings=r,W.fade=b,W.bias=M,W.distanceThreshold=p,W.distanceFalloff=m,W.proximityThreshold=g,W.proximityFalloff=y,c!==void 0&&(W.worldDistanceThreshold=c),u!==void 0&&(W.worldDistanceFalloff=u),h!==void 0&&(W.worldProximityThreshold=h),f!==void 0&&(W.worldProximityFalloff=f),s!==null&&(this.ssaoMaterial.normalDepthBuffer=s,this.defines.set("NORMAL_DEPTH","1")),this.depthAwareUpsampling=a,this.color=P}set mainCamera(n){this.camera=n,this.ssaoMaterial.copyCameraSettings(n)}get normalBuffer(){return this.ssaoMaterial.normalBuffer}set normalBuffer(n){this.ssaoMaterial.normalBuffer=n,this.depthDownsamplingPass.fullscreenMaterial.normalBuffer=n}getResolution(){return this.resolution}get ssaoMaterial(){return this.ssaoPass.fullscreenMaterial}getSSAOMaterial(){return this.ssaoMaterial}get samples(){return this.ssaoMaterial.samples}set samples(n){this.ssaoMaterial.samples=n}get rings(){return this.ssaoMaterial.rings}set rings(n){this.ssaoMaterial.rings=n}get radius(){return this.ssaoMaterial.radius}set radius(n){this.ssaoMaterial.radius=n}get depthAwareUpsampling(){return this.defines.has("DEPTH_AWARE_UPSAMPLING")}set depthAwareUpsampling(n){this.depthAwareUpsampling!==n&&(n?this.defines.set("DEPTH_AWARE_UPSAMPLING","1"):this.defines.delete("DEPTH_AWARE_UPSAMPLING"),this.setChanged())}isDepthAwareUpsamplingEnabled(){return this.depthAwareUpsampling}setDepthAwareUpsamplingEnabled(n){this.depthAwareUpsampling=n}get distanceScaling(){return!0}set distanceScaling(n){}get color(){return this.uniforms.get("color").value}set color(n){const e=this.uniforms,t=this.defines;n!==null?t.has("COLORIZE")?e.get("color").value.set(n):(t.set("COLORIZE","1"),e.get("color").value=new be(n),this.setChanged()):t.has("COLORIZE")&&(t.delete("COLORIZE"),e.get("color").value=null,this.setChanged())}get luminanceInfluence(){return this.uniforms.get("luminanceInfluence").value}set luminanceInfluence(n){this.uniforms.get("luminanceInfluence").value=n}get intensity(){return this.uniforms.get("intensity").value}set intensity(n){this.uniforms.get("intensity").value=n}getColor(){return this.color}setColor(n){this.color=n}setDistanceCutoff(n,e){this.ssaoMaterial.distanceThreshold=n,this.ssaoMaterial.distanceFalloff=e}setProximityCutoff(n,e){this.ssaoMaterial.proximityThreshold=n,this.ssaoMaterial.proximityFalloff=e}setDepthTexture(n,e=In){this.depthDownsamplingPass.setDepthTexture(n,e),this.ssaoMaterial.depthBuffer=n,this.ssaoMaterial.depthPacking=e}update(n,e,t){const i=this.renderTarget;this.depthDownsamplingPass.enabled&&this.depthDownsamplingPass.render(n),this.ssaoPass.render(n,null,i)}setSize(n,e){const t=this.resolution;t.setBaseSize(n,e);const i=t.width,r=t.height;this.ssaoMaterial.copyCameraSettings(this.camera),this.ssaoMaterial.setSize(i,r),this.renderTarget.setSize(i,r),this.depthDownsamplingPass.resolution.scale=t.scale,this.depthDownsamplingPass.setSize(n,e)}initialize(n,e,t){try{let i=this.uniforms.get("normalDepthBuffer").value;i===null&&(this.depthDownsamplingPass.initialize(n,e,t),i=this.depthDownsamplingPass.texture,this.uniforms.get("normalDepthBuffer").value=i,this.ssaoMaterial.normalDepthBuffer=i,this.defines.set("NORMAL_DEPTH","1"))}catch{this.depthDownsamplingPass.enabled=!1}}},bD=`#ifdef TEXTURE_PRECISION_HIGH
uniform mediump sampler2D map;
#else
uniform lowp sampler2D map;
#endif
varying vec2 vUv2;void mainImage(const in vec4 inputColor,const in vec2 uv,out vec4 outputColor){
#ifdef UV_TRANSFORM
vec4 texel=texture2D(map,vUv2);
#else
vec4 texel=texture2D(map,uv);
#endif
outputColor=TEXEL;}`,AD=`#ifdef ASPECT_CORRECTION
uniform float scale;
#else
uniform mat3 uvTransform;
#endif
varying vec2 vUv2;void mainSupport(const in vec2 uv){
#ifdef ASPECT_CORRECTION
vUv2=uv*vec2(aspect,1.0)*scale;
#else
vUv2=(uvTransform*vec3(uv,1.0)).xy;
#endif
}`,PD=class extends qn{constructor({blendFunction:n,texture:e=null,aspectCorrection:t=!1}={}){super("TextureEffect",bD,{blendFunction:n,defines:new Map([["TEXEL","texel"]]),uniforms:new Map([["map",new Q(null)],["scale",new Q(1)],["uvTransform",new Q(null)]])}),this.texture=e,this.aspectCorrection=t}get texture(){return this.uniforms.get("map").value}set texture(n){const e=this.texture,t=this.uniforms,i=this.defines;e!==n&&(t.get("map").value=n,t.get("uvTransform").value=n.matrix,i.delete("TEXTURE_PRECISION_HIGH"),n!==null&&(n.matrixAutoUpdate?(i.set("UV_TRANSFORM","1"),this.setVertexShader(AD)):(i.delete("UV_TRANSFORM"),this.setVertexShader(null)),n.type!==Vt&&i.set("TEXTURE_PRECISION_HIGH","1"),(e===null||e.type!==n.type||e.encoding!==n.encoding)&&this.setChanged()))}getTexture(){return this.texture}setTexture(n){this.texture=n}get aspectCorrection(){return this.defines.has("ASPECT_CORRECTION")}set aspectCorrection(n){this.aspectCorrection!==n&&(n?this.defines.set("ASPECT_CORRECTION","1"):this.defines.delete("ASPECT_CORRECTION"),this.setChanged())}get uvTransform(){const n=this.texture;return n!==null&&n.matrixAutoUpdate}set uvTransform(n){const e=this.texture;e!==null&&(e.matrixAutoUpdate=n)}setTextureSwizzleRGBA(n,e=n,t=n,i=n){const r="rgba";let s="";(n!==qa.RED||e!==qa.GREEN||t!==qa.BLUE||i!==qa.ALPHA)&&(s=[".",r[n],r[e],r[t],r[i]].join("")),this.defines.set("TEXEL","texel"+s),this.setChanged()}update(n,e,t){this.texture.matrixAutoUpdate&&this.texture.updateMatrix()}};const bm=ee.createContext(null),os=ee.createContext(null),CD=Vu.memo(ee.forwardRef(({children:n,camera:e,scene:t,resolutionScale:i,enabled:r=!0,renderPriority:s=1,autoClear:a=!0,depthBuffer:c,disableNormalPass:u,stencilBuffer:h,multisampling:f=8,frameBufferType:p=ii},m)=>{const{gl:g,scene:y,camera:T,size:S}=vn(),x=t||y,w=e||T,[M,b,P]=ee.useMemo(()=>{const A=hC(),R=new yR(g,{depthBuffer:c,stencilBuffer:h,multisampling:f>0&&A?f:0,frameBufferType:p});R.addPass(new ho(x,w));let z=null,te=null;return u||(te=new gR(x,w),te.enabled=!1,R.addPass(te),i!==void 0&&A&&(z=new dM({normalBuffer:te.texture,resolutionScale:i}),z.enabled=!1,R.addPass(z))),[R,te,z]},[w,g,c,h,f,p,x,u,i]);ee.useEffect(()=>M==null?void 0:M.setSize(S.width,S.height),[M,S]),Rh((A,R)=>{if(r){const z=g.autoClear;g.autoClear=a,h&&!a&&g.clearStencil(),M.render(R),g.autoClear=z}},r?s:0);const C=ee.useRef(null),L=S2(C);ee.useLayoutEffect(()=>{const A=[];if(C.current&&L.current&&M){const R=L.current.objects;for(let z=0;z<R.length;z++){const te=R[z];if(te instanceof qn){const W=[];for(;R[z]instanceof qn;)W.push(R[z++]);z--;const J=new fR(w,...W);A.push(J)}else te instanceof xn&&A.push(te)}for(const z of A)M==null||M.addPass(z);b&&(b.enabled=!0),P&&(P.enabled=!0)}return()=>{for(const R of A)M==null||M.removePass(R);b&&(b.enabled=!1),P&&(P.enabled=!1)}},[M,n,w,b,P,L]);const U=ee.useMemo(()=>({composer:M,normalPass:b,downSamplingPass:P,resolutionScale:i,camera:w,scene:x}),[M,b,P,i,w,x]);return ee.useImperativeHandle(m,()=>M,[M]),Ft(os.Provider,{value:U,children:Ft("group",{ref:C,children:n})})})),Kr=n=>typeof n=="object"&&n!=null&&"current"in n?n.current:n;let RD=0;const Nx=new WeakMap,DD=(n,e)=>Vu.forwardRef(function({blendFunction:i=e==null?void 0:e.blendFunction,opacity:r=e==null?void 0:e.opacity,...s},a){let c=Nx.get(n);if(!c){const f=`@react-three/postprocessing/${n.name}-${RD++}`;kS({[f]:n}),Nx.set(n,c=f)}const u=vn(f=>f.camera),h=Vu.useMemo(()=>{var f,p;return[...(f=e==null?void 0:e.args)!=null?f:[],...(p=s.args)!=null?p:[{...e,...s}]]},[JSON.stringify(s)]);return Ft(c,{camera:u,"blendMode-blendFunction":i,"blendMode-opacity-value":r,...s,ref:a,args:h})}),Du=(n,e)=>{const t=n[e];return Vu.useMemo(()=>typeof t=="number"?new K(t,t):t?new K(...t):new K,[t])},LD=ee.forwardRef(function({target:e,depthTexture:t,...i},r){const s=vn(u=>u.invalidate),{camera:a}=ee.useContext(os),c=ee.useMemo(()=>{const u=new sD(a,i),h=u.maskPass.getFullscreenMaterial();return h.maskFunction=ll.MULTIPLY_RGB_SET_ALPHA,u},[a,i]);return ee.useLayoutEffect(()=>{if(e&&typeof e!="number"){const u=e instanceof I?new I().set(e.x,e.y,e.z):new I().set(e[0],e[1],e[2]);c.target=u}t&&c.setDepthTexture(t.texture,t.packing),s()},[e,t,c]),Ft("primitive",{ref:r,object:c,dispose:null})});ee.forwardRef(({target:n=void 0,mouse:e=!1,debug:t=void 0,manual:i=!1,smoothTime:r=.25,...s},a)=>{const c=ee.useRef(null),u=ee.useRef(null),h=ee.useRef(null),f=vn(({scene:P})=>P),p=vn(({pointer:P})=>P),{composer:m,camera:g}=ee.useContext(os),[y]=ee.useState(()=>new uR),[T]=ee.useState(()=>new fM);ee.useEffect(()=>(m.addPass(y),m.addPass(T),()=>{m.removePass(y),m.removePass(T)}),[m,y,T]),ee.useEffect(()=>()=>{y.dispose(),T.dispose()},[y,T]);const[S]=ee.useState(()=>new I(0,0,0)),[x]=ee.useState(()=>new I(0,0,0)),w=ee.useCallback(async(P,C)=>(x.x=P,x.y=C,x.z=await y.readDepth(x),x.z=x.z*2-1,1-x.z>1e-7?x.unproject(g):!1),[x,y,g]),M=ee.useCallback(async(P,C=!0)=>{var L;if(n)S.set(...n);else{const{x:U,y:A}=e?p:{x:0,y:0},R=await w(U,A);R&&S.copy(R)}C&&((L=c.current)!=null&&L.target)&&(r>0&&P>0?uC.damp3(c.current.target,S,r,P):c.current.target.copy(S))},[n,S,e,w,r,p]);Rh(async(P,C)=>{var L;i||M(C),u.current&&u.current.position.copy(S),h.current&&((L=c.current)!=null&&L.target)&&h.current.position.copy(c.current.target)});const b=ee.useMemo(()=>({dofRef:c,hitpoint:S,update:M}),[S,M]);return ee.useImperativeHandle(a,()=>b,[b]),Ha(rv,{children:[t?E2(Ha(rv,{children:[Ha("mesh",{ref:u,children:[Ft("sphereGeometry",{args:[t,16,16]}),Ft("meshBasicMaterial",{color:"#00ff00",opacity:1,transparent:!0,depthWrite:!1})]}),Ha("mesh",{ref:h,children:[Ft("sphereGeometry",{args:[t/2,16,16]}),Ft("meshBasicMaterial",{color:"#00ff00",opacity:.5,transparent:!0,depthWrite:!1})]})]}),f):null,Ft(LD,{ref:c,...s,target:S})]})});const ID=DD(pM,{blendFunction:ot.ADD});ee.forwardRef(function({blendFunction:e=ot.NORMAL},t){const i=ee.useMemo(()=>new iD(e),[e]);return Ft("primitive",{ref:t,object:i,dispose:null})});ee.forwardRef(function({active:e=!0,...t},i){const r=vn(f=>f.invalidate),s=Du(t,"delay"),a=Du(t,"duration"),c=Du(t,"strength"),u=Du(t,"chromaticAberrationOffset"),h=ee.useMemo(()=>new lD({...t,delay:s,duration:a,strength:c,chromaticAberrationOffset:u}),[s,a,t,c,u]);return ee.useLayoutEffect(()=>{h.mode=e?t.mode||Is.SPORADIC:Is.DISABLED,r()},[e,h,r,t.mode]),ee.useEffect(()=>()=>{h.dispose()},[h]),Ft("primitive",{ref:i,object:h,dispose:null})});ee.forwardRef(function(e,t){const{camera:i}=ee.useContext(os),r=ee.useMemo(()=>new uD(i,Kr(e.sun),e),[i,e]);return ee.useLayoutEffect(()=>void(r.lightSource=Kr(e.sun)),[r,e.sun]),Ft("primitive",{ref:t,object:r,dispose:null})});ee.forwardRef(function({size:e,...t},i){const r=vn(a=>a.invalidate),s=ee.useMemo(()=>new fD(t),[t]);return ee.useLayoutEffect(()=>{e&&s.setSize(e.width,e.height),r()},[s,e]),Ft("primitive",{ref:i,object:s,dispose:null})});ee.forwardRef(function({selection:e=[],selectionLayer:t=10,blendFunction:i,patternTexture:r,edgeStrength:s,pulseSpeed:a,visibleEdgeColor:c,hiddenEdgeColor:u,width:h,height:f,kernelSize:p,blur:m,xRay:g,...y},T){const S=vn(P=>P.invalidate),{scene:x,camera:w}=ee.useContext(os),M=ee.useMemo(()=>new SD(x,w,{blendFunction:i,patternTexture:r,edgeStrength:s,pulseSpeed:a,visibleEdgeColor:c,hiddenEdgeColor:u,width:h,height:f,kernelSize:p,blur:m,xRay:g,...y}),[i,m,w,s,f,u,p,r,a,x,c,h,g]),b=ee.useContext(bm);return ee.useEffect(()=>{if(!b&&e)return M.selection.set(Array.isArray(e)?e.map(Kr):[Kr(e)]),S(),()=>{M.selection.clear(),S()}},[M,e,b,S]),ee.useEffect(()=>{M.selectionLayer=t,S()},[M,S,t]),ee.useRef(),ee.useEffect(()=>{var P;if(b&&b.enabled&&(P=b.selected)!=null&&P.length)return M.selection.set(b.selected),S(),()=>{M.selection.clear(),S()}},[b,M.selection,S]),Ft("primitive",{ref:T,object:M})});ee.forwardRef(function({granularity:e=5},t){const i=ee.useMemo(()=>new _D(e),[e]);return Ft("primitive",{ref:t,object:i,dispose:null})});const UD=(n,e)=>n.layers.enable(e.selection.layer),ND=(n,e)=>n.layers.disable(e.selection.layer);ee.forwardRef(function({selection:e=[],selectionLayer:t=10,lights:i=[],luminanceThreshold:r,luminanceSmoothing:s,intensity:a,width:c,height:u,kernelSize:h,mipmapBlur:f,...p},m){i.length===0&&console.warn("SelectiveBloom requires lights to work.");const g=vn(w=>w.invalidate),{scene:y,camera:T}=ee.useContext(os),S=ee.useMemo(()=>new TD(y,T,{blendFunction:ot.ADD,luminanceThreshold:r,luminanceSmoothing:s,intensity:a,width:c,height:u,kernelSize:h,mipmapBlur:f,...p}),[y,T,r,s,a,c,u,h,f,p]),x=ee.useContext(bm);return ee.useEffect(()=>{if(!x&&e)return S.selection.set(Array.isArray(e)?e.map(Kr):[Kr(e)]),g(),()=>{S.selection.clear(),g()}},[S,e,x,g]),ee.useEffect(()=>{S.selection.layer=t,g()},[S,g,t]),ee.useEffect(()=>{if(i&&i.length>0)return i.forEach(w=>UD(Kr(w),S)),g(),()=>{i.forEach(w=>ND(Kr(w),S)),g()}},[S,g,i,t]),ee.useEffect(()=>{var w;if(x&&x.enabled&&(w=x.selected)!=null&&w.length)return S.selection.set(x.selected),g(),()=>{S.selection.clear(),g()}},[x,S.selection,g]),Ft("primitive",{ref:m,object:S,dispose:null})});ee.forwardRef(function(e,t){const{camera:i,normalPass:r,downSamplingPass:s,resolutionScale:a}=ee.useContext(os),c=ee.useMemo(()=>r===null&&s===null?(console.error("Please enable the NormalPass in the EffectComposer in order to use SSAO."),{}):new ED(i,r&&!s?r.texture:null,{blendFunction:ot.MULTIPLY,samples:30,rings:4,distanceThreshold:1,distanceFalloff:0,rangeThreshold:.5,rangeFalloff:.1,luminanceInfluence:.9,radius:20,bias:.5,intensity:1,color:void 0,normalDepthBuffer:s?s.texture:null,resolutionScale:a??1,depthAwareUpsampling:!0,...e}),[i,r,e]);return Ft("primitive",{ref:t,object:c,dispose:null})});ee.forwardRef(function({textureSrc:e,texture:t,...i},r){const s=Mm(yS,e);ee.useLayoutEffect(()=>{s.encoding=Di,s.wrapS=s.wrapT=vi},[s]);const a=ee.useMemo(()=>new PD({...i,texture:s||t}),[i,s,t]);return Ft("primitive",{ref:r,object:a,dispose:null})});ee.forwardRef(function({lut:e,tetrahedralInterpolation:t,...i},r){const s=ee.useMemo(()=>new vD(e,i),[e,i]),a=vn(c=>c.invalidate);return ee.useLayoutEffect(()=>{t&&(s.tetrahedralInterpolation=t),e&&(s.lut=e),a()},[s,a,e,t]),Ft("primitive",{ref:r,object:s,dispose:null})});const FD=`
uniform sampler2D uCharacters;
uniform float uCharactersCount;
uniform float uCellSize;
uniform bool uInvert;
uniform vec3 uColor;

const vec2 SIZE = vec2(16.);

vec3 greyscale(vec3 color, float strength) {
    float g = dot(color, vec3(0.299, 0.587, 0.114));
    return mix(color, vec3(g), strength);
}

vec3 greyscale(vec3 color) {
    return greyscale(color, 1.0);
}

void mainImage(const in vec4 inputColor, const in vec2 uv, out vec4 outputColor) {
    vec2 cell = resolution / uCellSize;
    vec2 grid = 1.0 / cell;
    vec2 pixelizedUV = grid * (0.5 + floor(uv / grid));
    vec4 pixelized = texture2D(inputBuffer, pixelizedUV);
    float greyscaled = greyscale(pixelized.rgb).r;

    if (uInvert) {
        greyscaled = 1.0 - greyscaled;
    }

    float characterIndex = floor((uCharactersCount - 1.0) * greyscaled);
    vec2 characterPosition = vec2(mod(characterIndex, SIZE.x), floor(characterIndex / SIZE.y));
    vec2 offset = vec2(characterPosition.x, -characterPosition.y) / SIZE;
    vec2 charUV = mod(uv * (cell / SIZE), 1.0 / SIZE) - vec2(0., 1.0 / SIZE) + offset;
    vec4 asciiCharacter = texture2D(uCharacters, charUV);

    asciiCharacter.rgb = uColor * asciiCharacter.r;
    asciiCharacter.a = pixelized.a;
    outputColor = asciiCharacter;
}
`;class OD extends qn{constructor({characters:e=" .:,'-^=*+?!|0#X%WM@",fontSize:t=54,cellSize:i=16,color:r="#ffffff",invert:s=!1}={}){const a=new Map([["uCharacters",new Q(new Zt)],["uCellSize",new Q(i)],["uCharactersCount",new Q(e.length)],["uColor",new Q(new be(r))],["uInvert",new Q(s)]]);super("ASCIIEffect",FD,{uniforms:a});const c=this.uniforms.get("uCharacters");c&&(c.value=this.createCharactersTexture(e,t))}createCharactersTexture(e,t){const i=document.createElement("canvas"),r=1024,s=16,a=r/s;i.width=i.height=r;const c=new jy(i,void 0,vi,vi,ct,ct),u=i.getContext("2d");if(!u)throw new Error("Context not available");u.clearRect(0,0,r,r),u.font=`${t}px arial`,u.textAlign="center",u.textBaseline="middle",u.fillStyle="#fff";for(let h=0;h<e.length;h++){const f=e[h],p=h%s,m=Math.floor(h/s);u.fillText(f,p*a+a/2,m*a+a/2)}return c.needsUpdate=!0,c}}ee.forwardRef(({characters:n=" .:,'-^=*+?!|0#X%WM@",fontSize:e=54,cellSize:t=16,color:i="#ffffff",invert:r=!1},s)=>{const a=ee.useMemo(()=>new OD({characters:n,fontSize:e,cellSize:t,color:i,invert:r}),[n,e,t,i,r]);return Ft("primitive",{ref:s,object:a})});var BD=`#define GLSLIFY 1
uniform float blur;uniform float blurSharpness;uniform int blurKernel;vec3 denoise(vec3 center,sampler2D tex,vec2 uv,vec2 invTexSize,float blur,float blurSharpness,int blurKernel){vec3 color;float total;vec3 col;float weight;for(int x=-blurKernel;x<=blurKernel;x++){for(int y=-blurKernel;y<=blurKernel;y++){col=textureLod(tex,uv+vec2(x,y)*invTexSize,0.).rgb;weight=1.0-abs(dot(col-center,vec3(0.25)));weight=pow(weight,blurSharpness);color+=col*weight;total+=weight;}}return color/total;}`,zD=`#define GLSLIFY 1
#define MODE_DEFAULT 0
#define MODE_REFLECTIONS 1
#define MODE_RAW_REFLECTION 2
#define MODE_BLURRED_REFLECTIONS 3
#define MODE_INPUT 4
#define MODE_BLUR_MIX 5
#define FLOAT_EPSILON 0.00001
uniform sampler2D inputTexture;uniform sampler2D reflectionsTexture;uniform float samples;
#include <boxBlur>
void mainImage(const in vec4 inputColor,const in vec2 uv,out vec4 outputColor){vec4 reflectionsTexel=texture2D(reflectionsTexture,vUv);ivec2 size=textureSize(reflectionsTexture,0);vec2 invTexSize=1./vec2(size.x,size.y);vec3 reflectionClr=reflectionsTexel.xyz;if(blur>FLOAT_EPSILON){vec3 blurredReflectionsColor=denoise(reflectionsTexel.rgb,reflectionsTexture,vUv,invTexSize,blur,blurSharpness,blurKernel);reflectionClr=mix(reflectionClr,blurredReflectionsColor.rgb,blur);}
#if RENDER_MODE == MODE_DEFAULT
outputColor=vec4(inputColor.rgb+reflectionClr,1.0);
#endif
#if RENDER_MODE == MODE_REFLECTIONS
outputColor=vec4(reflectionClr,1.0);
#endif
#if RENDER_MODE == MODE_RAW_REFLECTION
outputColor=vec4(reflectionsTexel.xyz,1.0);
#endif
#if RENDER_MODE == MODE_BLURRED_REFLECTIONS
outputColor=vec4(blurredReflectionsTexel.xyz,1.0);
#endif
#if RENDER_MODE == MODE_INPUT
outputColor=vec4(inputColor.xyz,1.0);
#endif
#if RENDER_MODE == MODE_BLUR_MIX
outputColor=vec4(vec3(blur),1.0);
#endif
}`,gM=`#define GLSLIFY 1
vec3 getViewPosition(const float depth){float clipW=_projectionMatrix[2][3]*depth+_projectionMatrix[3][3];vec4 clipPosition=vec4((vec3(vUv,depth)-0.5)*2.0,1.0);clipPosition*=clipW;return(_inverseProjectionMatrix*clipPosition).xyz;}float getViewZ(const in float depth){
#ifdef PERSPECTIVE_CAMERA
return perspectiveDepthToViewZ(depth,cameraNear,cameraFar);
#else
return orthographicDepthToViewZ(depth,cameraNear,cameraFar);
#endif
}vec3 screenSpaceToWorldSpace(const vec2 uv,const float depth){vec4 ndc=vec4((uv.x-0.5)*2.0,(uv.y-0.5)*2.0,(depth-0.5)*2.0,1.0);vec4 clip=_inverseProjectionMatrix*ndc;vec4 view=cameraMatrixWorld*(clip/clip.w);return view.xyz;}
#define Scale (vec3(0.8, 0.8, 0.8))
#define K (19.19)
vec3 hash(vec3 a){a=fract(a*Scale);a+=dot(a,a.yxz+K);return fract((a.xxy+a.yxx)*a.zyx);}float fresnel_dielectric_cos(float cosi,float eta){float c=abs(cosi);float g=eta*eta-1.0+c*c;float result;if(g>0.0){g=sqrt(g);float A=(g-c)/(g+c);float B=(c*(g+c)-1.0)/(c*(g-c)+1.0);result=0.5*A*A*(1.0+B*B);}else{result=1.0;}return result;}float fresnel_dielectric(vec3 Incoming,vec3 Normal,float eta){float cosine=dot(Incoming,Normal);return min(1.0,5.0*fresnel_dielectric_cos(cosine,eta));}`,kD=`#define GLSLIFY 1
#define INV_EULER 0.36787944117144233
alpha=velocityDisocclusion<FLOAT_EPSILON ?(alpha+0.0075): 0.0;alpha=clamp(alpha,0.0,1.0);bool needsBlur=!didReproject||velocityDisocclusion>0.5;
#ifdef boxBlur
if(needsBlur)inputColor=boxBlurredColor;
#endif
if(alpha==1.0){outputColor=accumulatedColor;}else{float m=mix(alpha,1.0,blend);if(needsBlur)m=0.0;outputColor=accumulatedColor*m+inputColor*(1.0-m);}`;class HD extends _t{constructor(){super({type:"MRTMaterial",defines:{USE_UV:"",TEMPORAL_RESOLVE:""},uniforms:{opacity:new Q(1),normalMap:new Q(null),normalScale:new Q(new K(1,1)),uvTransform:new Q(new gt),roughness:new Q(1),roughnessMap:new Q(null)},vertexShader:`
                #ifdef USE_MRT
                 varying vec2 vHighPrecisionZW;
                #endif
                #define NORMAL
                #if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )
                    varying vec3 vViewPosition;
                #endif
                #include <common>
                #include <uv_pars_vertex>
                #include <displacementmap_pars_vertex>
                #include <normal_pars_vertex>
                #include <morphtarget_pars_vertex>
                #include <skinning_pars_vertex>
                #include <logdepthbuf_pars_vertex>
                #include <clipping_planes_pars_vertex>
                #ifdef USE_UV
                  ${is.replace(/\D+/g,"")>=151?"uniform mat3 uvTransform;":""}
                #endif
                void main() {
                    #include <uv_vertex>
                    #include <beginnormal_vertex>
                    #include <morphnormal_vertex>
                    #include <skinbase_vertex>
                    #include <skinnormal_vertex>
                    #include <defaultnormal_vertex>
                    #include <normal_vertex>
                    #include <begin_vertex>
                    #include <morphtarget_vertex>
                    #include <skinning_vertex>
                    #include <displacementmap_vertex>
                    #include <project_vertex>
                    #include <logdepthbuf_vertex>
                    #include <clipping_planes_vertex>
                    #if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )
                        vViewPosition = - mvPosition.xyz;
                    #endif
                    #ifdef USE_MRT
                        vHighPrecisionZW = gl_Position.zw;
                    #endif
                    #ifdef USE_UV
                        vUv = ( uvTransform * vec3( uv, 1 ) ).xy;
                    #endif
                }
            `,fragmentShader:`
                 #define NORMAL
                #if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )
                    varying vec3 vViewPosition;
                #endif
                #include <packing>
                #include <uv_pars_fragment>
                #include <normal_pars_fragment>
                #include <bumpmap_pars_fragment>
                #include <normalmap_pars_fragment>
                #include <logdepthbuf_pars_fragment>
                #include <clipping_planes_pars_fragment>
                #include <roughnessmap_pars_fragment>

                #ifdef USE_MRT
                layout(location = 0) out vec4 gNormal;
                layout(location = 1) out vec4 gDepth;

                varying vec2 vHighPrecisionZW;
                #endif
                uniform float roughness;
                void main() {
                    #include <clipping_planes_fragment>
                    #include <logdepthbuf_fragment>
                    #include <normal_fragment_begin>
                    #include <normal_fragment_maps>

                    float roughnessFactor = roughness;

                    if(roughness > 10.0e9){
                        roughnessFactor = 1.;
                    }else{
                        #ifdef useRoughnessMap
                            vec4 texelRoughness = texture2D( roughnessMap, vUv );
                            // reads channel G, compatible with a combined OcclusionRoughnessMetallic (RGB) texture
                            roughnessFactor *= texelRoughness.g;
                        #endif
                    }

                    vec3 normalColor = packNormalToRGB( normal );
                    #ifdef USE_MRT
                        float fragCoordZ = 0.5 * vHighPrecisionZW[0] / vHighPrecisionZW[1] + 0.5;
                        vec4 depthColor = packDepthToRGBA( fragCoordZ );
                        gNormal = vec4( normalColor, roughnessFactor );
                        gDepth = depthColor;
                    #else
                        gl_FragColor = vec4(normalColor, roughnessFactor);
                    #endif
                }
            `,toneMapped:!1}),this.normalMapType=Dr,this.normalScale=new K(1,1),Object.defineProperty(this,"glslVersion",{get(){return"USE_MRT"in this.defines?Xu:null},set(e){}})}}var VD=`#define GLSLIFY 1
varying vec2 vUv;void main(){vUv=position.xy*0.5+0.5;gl_Position=vec4(position.xy,1.0,1.0);}`,GD=`#define GLSLIFY 1
varying vec2 vUv;uniform sampler2D inputTexture;uniform sampler2D accumulatedTexture;uniform sampler2D normalTexture;uniform sampler2D depthTexture;uniform sampler2D envMap;uniform mat4 _projectionMatrix;uniform mat4 _inverseProjectionMatrix;uniform mat4 cameraMatrixWorld;uniform float cameraNear;uniform float cameraFar;uniform float rayDistance;uniform float intensity;uniform float maxDepthDifference;uniform float roughnessFade;uniform float maxRoughness;uniform float fade;uniform float thickness;uniform float ior;uniform float samples;uniform float jitter;uniform float jitterRoughness;
#define INVALID_RAY_COORDS vec2(-1.0);
#define EARLY_OUT_COLOR vec4(0.0, 0.0, 0.0, 1.0)
#define FLOAT_EPSILON 0.00001
float nearMinusFar;float nearMulFar;float farMinusNear;
#include <packing>
#include <helperFunctions>
vec2 RayMarch(vec3 dir,inout vec3 hitPos,inout float rayHitDepthDifference);vec2 BinarySearch(in vec3 dir,inout vec3 hitPos,inout float rayHitDepthDifference);float fastGetViewZ(const in float depth);vec3 getIBLRadiance(const in vec3 viewDir,const in vec3 normal,const in float roughness);void main(){vec4 depthTexel=textureLod(depthTexture,vUv,0.0);if(dot(depthTexel.rgb,depthTexel.rgb)<FLOAT_EPSILON){gl_FragColor=EARLY_OUT_COLOR;return;}float unpackedDepth=unpackRGBAToDepth(depthTexel);vec4 normalTexel=textureLod(normalTexture,vUv,0.0);float roughness=normalTexel.a;float specular=1.0-roughness;nearMinusFar=cameraNear-cameraFar;nearMulFar=cameraNear*cameraFar;farMinusNear=cameraFar-cameraNear;normalTexel.rgb=unpackRGBToNormal(normalTexel.rgb);float depth=fastGetViewZ(unpackedDepth);vec3 viewPos=getViewPosition(depth);vec3 viewDir=normalize(viewPos);vec3 viewNormal=normalTexel.xyz;vec3 worldPos=screenSpaceToWorldSpace(vUv,unpackedDepth);vec3 jitt=vec3(0.0);if(jitterRoughness!=0.0||jitter!=0.0){vec3 randomJitter=hash(50.0*samples*worldPos)-0.5;float spread=((2.0-specular)+roughness*jitterRoughness);float jitterMix=jitter*0.25+jitterRoughness*roughness;if(jitterMix>1.0)jitterMix=1.0;jitt=mix(vec3(0.0),randomJitter*spread,jitterMix);}viewNormal+=jitt;float fresnelFactor=fresnel_dielectric(viewDir,viewNormal,ior);vec3 iblRadiance=getIBLRadiance(-viewDir,viewNormal,0.)*fresnelFactor;float lastFrameAlpha=textureLod(accumulatedTexture,vUv,0.0).a;if(roughness>maxRoughness||(roughness>1.0-FLOAT_EPSILON&&roughnessFade>1.0-FLOAT_EPSILON)){gl_FragColor=vec4(iblRadiance,lastFrameAlpha);return;}vec3 reflected=reflect(viewDir,viewNormal);vec3 rayDir=reflected*-viewPos.z;vec3 hitPos=viewPos;float rayHitDepthDifference;vec2 coords=RayMarch(rayDir,hitPos,rayHitDepthDifference);if(coords.x==-1.0){gl_FragColor=vec4(iblRadiance,lastFrameAlpha);return;}vec4 SSRTexel=textureLod(inputTexture,coords.xy,0.0);vec4 SSRTexelReflected=textureLod(accumulatedTexture,coords.xy,0.0);vec3 SSR=SSRTexel.rgb+SSRTexelReflected.rgb;float roughnessFactor=mix(specular,1.0,max(0.0,1.0-roughnessFade));vec2 coordsNDC=(coords.xy*2.0-1.0);float screenFade=0.1;float maxDimension=min(1.0,max(abs(coordsNDC.x),abs(coordsNDC.y)));float reflectionIntensity=1.0-(max(0.0,maxDimension-screenFade)/(1.0-screenFade));reflectionIntensity=max(0.,reflectionIntensity);vec3 finalSSR=mix(iblRadiance,SSR,reflectionIntensity)*roughnessFactor;if(fade!=0.0){vec3 hitWorldPos=screenSpaceToWorldSpace(coords,rayHitDepthDifference);float reflectionDistance=distance(hitWorldPos,worldPos)+1.0;float opacity=1.0/(reflectionDistance*fade*0.1);if(opacity>1.0)opacity=1.0;finalSSR*=opacity;}finalSSR*=fresnelFactor*intensity;finalSSR=min(vec3(1.0),finalSSR);float alpha=hitPos.z==1.0 ? 1.0 : SSRTexelReflected.a;alpha=min(lastFrameAlpha,alpha);gl_FragColor=vec4(finalSSR,alpha);}vec2 RayMarch(vec3 dir,inout vec3 hitPos,inout float rayHitDepthDifference){dir=normalize(dir);dir*=rayDistance/float(steps);float depth;vec4 projectedCoord;vec4 lastProjectedCoord;float unpackedDepth;vec4 depthTexel;for(int i=0;i<steps;i++){hitPos+=dir;projectedCoord=_projectionMatrix*vec4(hitPos,1.0);projectedCoord.xy/=projectedCoord.w;projectedCoord.xy=projectedCoord.xy*0.5+0.5;
#ifndef missedRays
if(projectedCoord.x<0.0||projectedCoord.x>1.0||projectedCoord.y<0.0||projectedCoord.y>1.0){return INVALID_RAY_COORDS;}
#endif
depthTexel=textureLod(depthTexture,projectedCoord.xy,0.0);unpackedDepth=unpackRGBAToDepth(depthTexel);depth=fastGetViewZ(unpackedDepth);rayHitDepthDifference=depth-hitPos.z;if(rayHitDepthDifference>=0.0&&rayHitDepthDifference<thickness){
#if refineSteps == 0
if(dot(depthTexel.rgb,depthTexel.rgb)<FLOAT_EPSILON)return INVALID_RAY_COORDS;
#else
return BinarySearch(dir,hitPos,rayHitDepthDifference);
#endif
}
#ifndef missedRays
if(hitPos.z>0.0){return INVALID_RAY_COORDS;}
#endif
lastProjectedCoord=projectedCoord;}hitPos.z=1.0;
#ifndef missedRays
return INVALID_RAY_COORDS;
#endif
rayHitDepthDifference=unpackedDepth;return projectedCoord.xy;}vec2 BinarySearch(in vec3 dir,inout vec3 hitPos,inout float rayHitDepthDifference){float depth;vec4 projectedCoord;vec2 lastMinProjectedCoordXY;float unpackedDepth;vec4 depthTexel;for(int i=0;i<refineSteps;i++){projectedCoord=_projectionMatrix*vec4(hitPos,1.0);projectedCoord.xy/=projectedCoord.w;projectedCoord.xy=projectedCoord.xy*0.5+0.5;depthTexel=textureLod(depthTexture,projectedCoord.xy,0.0);unpackedDepth=unpackRGBAToDepth(depthTexel);depth=fastGetViewZ(unpackedDepth);rayHitDepthDifference=depth-hitPos.z;dir*=0.5;if(rayHitDepthDifference>0.0){hitPos-=dir;}else{hitPos+=dir;}}if(dot(depthTexel.rgb,depthTexel.rgb)<FLOAT_EPSILON)return INVALID_RAY_COORDS;if(abs(rayHitDepthDifference)>maxDepthDifference)return INVALID_RAY_COORDS;projectedCoord=_projectionMatrix*vec4(hitPos,1.0);projectedCoord.xy/=projectedCoord.w;projectedCoord.xy=projectedCoord.xy*0.5+0.5;rayHitDepthDifference=unpackedDepth;return projectedCoord.xy;}float fastGetViewZ(const in float depth){
#ifdef PERSPECTIVE_CAMERA
return nearMulFar/(farMinusNear*depth-cameraFar);
#else
return depth*nearMinusFar-cameraNear;
#endif
}
#include <common>
#include <cube_uv_reflection_fragment>
vec3 getIBLRadiance(const in vec3 viewDir,const in vec3 normal,const in float roughness){
#if defined(ENVMAP_TYPE_CUBE_UV)
vec3 reflectVec=reflect(-viewDir,normal);reflectVec=normalize(mix(reflectVec,normal,roughness*roughness));reflectVec=inverseTransformDirection(reflectVec,viewMatrix);vec4 envMapColor=textureCubeUV(envMap,reflectVec,roughness);return envMapColor.rgb*intensity;
#else
return vec3(0.0);
#endif
}`;class WD extends _t{constructor(){super({type:"ReflectionsMaterial",uniforms:{inputTexture:new Q(null),accumulatedTexture:new Q(null),normalTexture:new Q(null),depthTexture:new Q(null),_projectionMatrix:new Q(new ze),_inverseProjectionMatrix:new Q(new ze),cameraMatrixWorld:new Q(new ze),cameraNear:new Q(0),cameraFar:new Q(0),rayDistance:new Q(0),intensity:new Q(0),roughnessFade:new Q(0),fade:new Q(0),thickness:new Q(0),ior:new Q(0),maxDepthDifference:new Q(0),jitter:new Q(0),jitterRoughness:new Q(0),maxRoughness:new Q(0),samples:new Q(0),envMap:new Q(null),envMapPosition:new Q(new I),envMapSize:new Q(new I),viewMatrix:new Q(new ze)},defines:{steps:20,refineSteps:5,CUBEUV_TEXEL_WIDTH:0,CUBEUV_TEXEL_HEIGHT:0,CUBEUV_MAX_MIP:0,vWorldPosition:"worldPos"},fragmentShader:GD.replace("#include <helperFunctions>",gM),vertexShader:VD,toneMapped:!1,depthWrite:!1,depthTest:!1})}}const vM=n=>{const e=[n],t=[];for(;e.length!==0;){const i=e.shift();i.material&&t.push(i);for(const r of i.children)r.visible&&e.push(r)}return t},XD=n=>{const e=n.envMapCubeUVHeight;if(e===null)return null;const t=Math.log2(e)-2,i=1/e;return{texelWidth:1/(3*Math.max(Math.pow(2,t),7*16)),texelHeight:i,maxMip:t}},Fx=(n,e,t)=>{n.uniforms.envMap.value=e;const i=XD({envMapCubeUVHeight:t});n.defines.ENVMAP_TYPE_CUBE_UV="",n.defines.CUBEUV_TEXEL_WIDTH=i.texelWidth,n.defines.CUBEUV_TEXEL_HEIGHT=i.texelHeight,n.defines.CUBEUV_MAX_MIP=i.maxMip+".0",n.needsUpdate=!0},YD=()=>{try{const n=document.createElement("canvas");return!!(window.WebGL2RenderingContext&&n.getContext("webgl2"))}catch{return!1}};class ZD extends xn{constructor(e,t={}){super("ReflectionsPass"),this.ssrEffect=void 0,this.cachedMaterials=new WeakMap,this.USE_MRT=!1,this.webgl1DepthPass=null,this.visibleMeshes=[],this.ssrEffect=e,this._scene=e._scene,this._camera=e._camera,this.fullscreenMaterial=new WD,e._camera.isPerspectiveCamera&&(this.fullscreenMaterial.defines.PERSPECTIVE_CAMERA="");const i=t.width||typeof window<"u"?window.innerWidth:2e3,r=t.height||typeof window<"u"?window.innerHeight:1e3;this.renderTarget=new wt(i,r,{minFilter:Qe,magFilter:Qe,type:ii,depthBuffer:!1}),this.renderPass=new ho(this._scene,this._camera),this.USE_MRT=YD(),this.USE_MRT?(this.gBuffersRenderTarget=new Vp(i,r,2,{minFilter:Qe,magFilter:Qe}),this.normalTexture=this.gBuffersRenderTarget.texture[0],this.depthTexture=this.gBuffersRenderTarget.texture[1]):(this.webgl1DepthPass=new wm(this._scene,this._camera),this.webgl1DepthPass.renderTarget.minFilter=Qe,this.webgl1DepthPass.renderTarget.magFilter=Qe,this.webgl1DepthPass.renderTarget.texture.minFilter=Qe,this.webgl1DepthPass.renderTarget.texture.magFilter=Qe,this.webgl1DepthPass.setSize(typeof window<"u"?window.innerWidth:2e3,typeof window<"u"?window.innerHeight:1e3),this.gBuffersRenderTarget=new wt(i,r,{minFilter:Qe,magFilter:Qe}),this.normalTexture=this.gBuffersRenderTarget.texture,this.depthTexture=this.webgl1DepthPass.texture),this.fullscreenMaterial.uniforms.normalTexture.value=this.normalTexture,this.fullscreenMaterial.uniforms.depthTexture.value=this.depthTexture,this.fullscreenMaterial.uniforms.accumulatedTexture.value=this.ssrEffect.temporalResolvePass.accumulatedTexture,this.fullscreenMaterial.uniforms.cameraMatrixWorld.value=this._camera.matrixWorld,this.fullscreenMaterial.uniforms._projectionMatrix.value=this._camera.projectionMatrix,this.fullscreenMaterial.uniforms._inverseProjectionMatrix.value=this._camera.projectionMatrixInverse}setSize(e,t){this.renderTarget.setSize(e*this.ssrEffect.resolutionScale,t*this.ssrEffect.resolutionScale),this.gBuffersRenderTarget.setSize(e*this.ssrEffect.resolutionScale,t*this.ssrEffect.resolutionScale),this.fullscreenMaterial.uniforms.accumulatedTexture.value=this.ssrEffect.temporalResolvePass.accumulatedTexture,this.fullscreenMaterial.needsUpdate=!0}dispose(){this.renderTarget.dispose(),this.gBuffersRenderTarget.dispose(),this.renderPass.dispose(),this.USE_MRT||this.webgl1DepthPass.dispose(),this.fullscreenMaterial.dispose(),this.normalTexture=null,this.depthTexture=null,this.velocityTexture=null}keepMaterialMapUpdated(e,t,i,r){this.ssrEffect[r]?t[i]!==e[i]&&(e[i]=t[i],e.uniforms[i].value=t[i],t[i]?e.defines[r]="":delete e.defines[r],e.needsUpdate=!0):e[i]!==void 0&&(e[i]=void 0,e.uniforms[i].value=void 0,delete e.defines[r],e.needsUpdate=!0)}setMRTMaterialInScene(){this.visibleMeshes=vM(this._scene);for(const e of this.visibleMeshes)if(e.material){const t=e.material;let[i,r]=this.cachedMaterials.get(e)||[];if(t!==i){r&&r.dispose(),r=new HD,this.USE_MRT&&(r.defines.USE_MRT=""),r.normalScale=t.normalScale,r.uniforms.normalScale.value=t.normalScale;const s=t.map||t.normalMap||t.roughnessMap||t.metalnessMap;s&&(r.uniforms.uvTransform.value=s.matrix),this.cachedMaterials.set(e,[t,r])}this.keepMaterialMapUpdated(r,t,"normalMap","useNormalMap"),this.keepMaterialMapUpdated(r,t,"roughnessMap","useRoughnessMap"),r.uniforms.roughness.value=this.ssrEffect.selection.size===0||this.ssrEffect.selection.has(e)?t.roughness||0:1e11,e.material=r}}unsetMRTMaterialInScene(){for(const t of this.visibleMeshes){var e;if(((e=t.material)==null?void 0:e.type)==="MRTMaterial"){t.visible=!0;const[i]=this.cachedMaterials.get(t);t.material=i}}}render(e,t){this.setMRTMaterialInScene(),e.setRenderTarget(this.gBuffersRenderTarget),this.renderPass.render(e,this.gBuffersRenderTarget),this.unsetMRTMaterialInScene(),this.USE_MRT||this.webgl1DepthPass.renderPass.render(e,this.webgl1DepthPass.renderTarget),this.fullscreenMaterial.uniforms.inputTexture.value=t.texture,this.fullscreenMaterial.uniforms.samples.value=this.ssrEffect.temporalResolvePass.samples,this.fullscreenMaterial.uniforms.cameraNear.value=this._camera.near,this.fullscreenMaterial.uniforms.cameraFar.value=this._camera.far,this.fullscreenMaterial.uniforms.viewMatrix.value.copy(this._camera.matrixWorldInverse),e.setRenderTarget(this.renderTarget),e.render(this.scene,this.camera)}}const Ox={intensity:1,exponent:1,distance:10,fade:0,roughnessFade:1,thickness:10,ior:1.45,maxRoughness:1,maxDepthDifference:10,blend:.9,correction:1,correctionRadius:1,blur:.5,blurKernel:1,blurSharpness:10,jitter:0,jitterRoughness:0,steps:20,refineSteps:5,missedRays:!0,useNormalMap:!0,useRoughnessMap:!0,resolutionScale:1,velocityResolutionScale:1};var qD=`#define GLSLIFY 1
varying vec2 vUv;void main(){vUv=position.xy*0.5+0.5;gl_Position=vec4(position.xy,1.0,1.0);}`,jD=`#define GLSLIFY 1
uniform sampler2D inputTexture;uniform sampler2D accumulatedTexture;uniform sampler2D velocityTexture;uniform sampler2D lastVelocityTexture;uniform float blend;uniform float correction;uniform float exponent;uniform float samples;uniform vec2 invTexSize;uniform mat4 curInverseProjectionMatrix;uniform mat4 curCameraMatrixWorld;uniform mat4 prevInverseProjectionMatrix;uniform mat4 prevCameraMatrixWorld;varying vec2 vUv;
#define MAX_NEIGHBOR_DEPTH_DIFFERENCE 0.001
#define FLOAT_EPSILON 0.00001
#define FLOAT_ONE_MINUS_EPSILON 0.99999
vec3 transformexponent;vec3 undoColorTransformExponent;vec3 transformColor(vec3 color){if(exponent==1.0)return color;return pow(abs(color),transformexponent);}vec3 undoColorTransform(vec3 color){if(exponent==1.0)return color;return max(pow(abs(color),undoColorTransformExponent),vec3(0.0));}void main(){if(exponent!=1.0){transformexponent=vec3(1.0/exponent);undoColorTransformExponent=vec3(exponent);}vec4 inputTexel=textureLod(inputTexture,vUv,0.0);vec4 accumulatedTexel;vec3 inputColor=transformColor(inputTexel.rgb);vec3 accumulatedColor;float alpha=inputTexel.a;float velocityDisocclusion;bool didReproject=false;
#ifdef boxBlur
vec3 boxBlurredColor=inputTexel.rgb;
#endif
vec4 velocity=textureLod(velocityTexture,vUv,0.0);bool isMoving=alpha<1.0||dot(velocity.xy,velocity.xy)>0.0;if(isMoving){vec3 minNeighborColor=inputColor;vec3 maxNeighborColor=inputColor;vec3 col;vec2 neighborUv;vec2 reprojectedUv=vUv-velocity.xy;vec4 lastVelocity=textureLod(lastVelocityTexture,reprojectedUv,0.0);float depth=velocity.b;float closestDepth=depth;float lastClosestDepth=lastVelocity.b;float neighborDepth;float lastNeighborDepth;for(int x=-correctionRadius;x<=correctionRadius;x++){for(int y=-correctionRadius;y<=correctionRadius;y++){if(x!=0||y!=0){neighborUv=vUv+vec2(x,y)*invTexSize;vec4 neigborVelocity=textureLod(velocityTexture,neighborUv,0.0);neighborDepth=neigborVelocity.b;col=textureLod(inputTexture,neighborUv,0.0).xyz;int absX=abs(x);int absY=abs(y);
#ifdef dilation
if(absX==1&&absY==1){if(neighborDepth>closestDepth){velocity=neigborVelocity;closestDepth=neighborDepth;}vec4 lastNeighborVelocity=textureLod(velocityTexture,vUv+vec2(x,y)*invTexSize,0.0);lastNeighborDepth=lastNeighborVelocity.b;if(neighborDepth>closestDepth){lastVelocity=lastNeighborVelocity;lastClosestDepth=lastNeighborDepth;}}
#endif
if(abs(depth-neighborDepth)<MAX_NEIGHBOR_DEPTH_DIFFERENCE){
#ifdef boxBlur
if(absX<=2&&absY<=2)boxBlurredColor+=col;
#endif
col=transformColor(col);minNeighborColor=min(col,minNeighborColor);maxNeighborColor=max(col,maxNeighborColor);}}}}float velocityLength=length(lastVelocity.xy-velocity.xy);velocityDisocclusion=(velocityLength-0.000005)*10.0;velocityDisocclusion*=velocityDisocclusion;reprojectedUv=vUv-velocity.xy;
#ifdef boxBlur
float pxRadius=correctionRadius>5 ? 121.0 : pow(float(correctionRadius*2+1),2.0);boxBlurredColor/=pxRadius;boxBlurredColor=transformColor(boxBlurredColor);
#endif
if(reprojectedUv.x>=0.0&&reprojectedUv.x<=1.0&&reprojectedUv.y>=0.0&&reprojectedUv.y<=1.0){accumulatedTexel=textureLod(accumulatedTexture,reprojectedUv,0.0);accumulatedColor=transformColor(accumulatedTexel.rgb);vec3 clampedColor=clamp(accumulatedColor,minNeighborColor,maxNeighborColor);accumulatedColor=mix(accumulatedColor,clampedColor,correction);didReproject=true;}else{
#ifdef boxBlur
accumulatedColor=boxBlurredColor;
#else
accumulatedColor=inputColor;
#endif
}if(velocity.r>FLOAT_ONE_MINUS_EPSILON&&velocity.g>FLOAT_ONE_MINUS_EPSILON){alpha=0.0;velocityDisocclusion=1.0;}}else{accumulatedColor=transformColor(textureLod(accumulatedTexture,vUv,0.0).rgb);}vec3 outputColor=inputColor;
#include <custom_compose_shader>
gl_FragColor=vec4(undoColorTransform(outputColor),alpha);}`;class KD extends _t{constructor(e){const t=jD.replace("#include <custom_compose_shader>",e);super({type:"TemporalResolveMaterial",uniforms:{inputTexture:new Q(null),accumulatedTexture:new Q(null),velocityTexture:new Q(null),lastVelocityTexture:new Q(null),samples:new Q(1),blend:new Q(.5),correction:new Q(1),exponent:new Q(1),invTexSize:new Q(new K)},defines:{correctionRadius:1},vertexShader:qD,fragmentShader:t})}}const QD=`
    #ifdef USE_SKINNING
      #ifdef BONE_TEXTURE
        uniform sampler2D prevBoneTexture;
        mat4 getPrevBoneMatrix( const in float i ) {
          float j = i * 4.0;
          float x = mod( j, float( boneTextureSize ) );
          float y = floor( j / float( boneTextureSize ) );
          float dx = 1.0 / float( boneTextureSize );
          float dy = 1.0 / float( boneTextureSize );
          y = dy * ( y + 0.5 );
          vec4 v1 = texture2D( prevBoneTexture, vec2( dx * ( x + 0.5 ), y ) );
          vec4 v2 = texture2D( prevBoneTexture, vec2( dx * ( x + 1.5 ), y ) );
          vec4 v3 = texture2D( prevBoneTexture, vec2( dx * ( x + 2.5 ), y ) );
          vec4 v4 = texture2D( prevBoneTexture, vec2( dx * ( x + 3.5 ), y ) );
          mat4 bone = mat4( v1, v2, v3, v4 );
          return bone;
        }
      #else
        uniform mat4 prevBoneMatrices[ MAX_BONES ];
        mat4 getPrevBoneMatrix( const in float i ) {
          mat4 bone = prevBoneMatrices[ int(i) ];
          return bone;
        }
      #endif
    #endif
`,JD=`
    vec3 transformed;

    // Get the normal
    ${Je.skinbase_vertex}
    ${Je.beginnormal_vertex}
    ${Je.skinnormal_vertex}
    ${Je.defaultnormal_vertex}

    // Get the current vertex position
    transformed = vec3( position );
    ${Je.skinning_vertex}
    newPosition = velocityMatrix * vec4( transformed, 1.0 );

    // Get the previous vertex position
    transformed = vec3( position );
    ${Je.skinbase_vertex.replace(/mat4 /g,"").replace(/getBoneMatrix/g,"getPrevBoneMatrix")}
    ${Je.skinning_vertex.replace(/vec4 /g,"")}
    prevPosition = prevVelocityMatrix * vec4( transformed, 1.0 );

    gl_Position = newPosition;
`;class $D extends _t{constructor(){super({uniforms:{prevVelocityMatrix:{value:new ze},velocityMatrix:{value:new ze},prevBoneTexture:{value:null},interpolateGeometry:{value:0},intensity:{value:1},boneTexture:{value:null},alphaTest:{value:0},map:{value:null},alphaMap:{value:null},opacity:{value:1}},vertexShader:`
                    #define MAX_BONES 1024

                    ${Je.skinning_pars_vertex}
                    ${QD}

                    uniform mat4 velocityMatrix;
                    uniform mat4 prevVelocityMatrix;
                    uniform float interpolateGeometry;
                    varying vec4 prevPosition;
                    varying vec4 newPosition;
          varying vec2 vHighPrecisionZW;

                    void main() {

                        ${JD}

            vHighPrecisionZW = gl_Position.zw;

                    }`,fragmentShader:`
                    uniform float intensity;
                    varying vec4 prevPosition;
                    varying vec4 newPosition;
          varying vec2 vHighPrecisionZW;

                    void main() {
            #ifdef FULL_MOVEMENT
            gl_FragColor = vec4( 1., 1., 1. - gl_FragCoord.z, 0. );
            return;
            #endif

                        vec2 pos0 = (prevPosition.xy / prevPosition.w) * 0.5 + 0.5;
                        vec2 pos1 = (newPosition.xy / newPosition.w) * 0.5 + 0.5;

                        vec2 vel = pos1 - pos0;

            float fragCoordZ = 0.5 * vHighPrecisionZW[0] / vHighPrecisionZW[1] + 0.5;

                        gl_FragColor = vec4( vel, 1. - fragCoordZ, 0. );

                    }`}),this.isVelocityMaterial=!0}}const eL=new be(0),tL=["visible","wireframe","side"];class nL extends xn{constructor(e,t){var i,r;super("VelocityPass"),this.cachedMaterials=new WeakMap,this.lastCameraTransform={position:new I,quaternion:new hn},this.visibleMeshes=[],this.renderedMeshesThisFrame=0,this.renderedMeshesLastFrame=0,this._scene=e,this._camera=t,this.renderTarget=new wt(((i=window)==null?void 0:i.innerWidth)||1e3,((r=window)==null?void 0:r.innerHeight)||1e3,{type:ii})}setVelocityMaterialInScene(){this.renderedMeshesThisFrame=0,this.visibleMeshes=vM(this._scene);for(const i of this.visibleMeshes){var e;const r=i.material;let[s,a]=this.cachedMaterials.get(i)||[];if(r!==s){var t;a=new $D,a.lastMatrixWorld=new ze,i.material=a,(t=i.skeleton)!=null&&t.boneTexture&&this.saveBoneTexture(i),this.cachedMaterials.set(i,[r,a])}if(a.uniforms.velocityMatrix.value.multiplyMatrices(this._camera.projectionMatrix,i.modelViewMatrix),i.userData.needsUpdatedReflections||r.map instanceof qy?("FULL_MOVEMENT"in a.defines||(a.needsUpdate=!0),a.defines.FULL_MOVEMENT=""):"FULL_MOVEMENT"in a.defines&&(delete a.defines.FULL_MOVEMENT,a.needsUpdate=!0),i.visible=this.cameraMovedThisFrame||!i.matrixWorld.equals(a.lastMatrixWorld)||i.skeleton||"FULL_MOVEMENT"in a.defines,i.material=a,!!i.visible){this.renderedMeshesThisFrame++;for(const c of tL)a[c]=r[c];(e=i.skeleton)!=null&&e.boneTexture&&(a.defines.USE_SKINNING="",a.defines.BONE_TEXTURE="",a.uniforms.boneTexture.value=i.skeleton.boneTexture)}}}saveBoneTexture(e){let t=e.material.uniforms.prevBoneTexture.value;if(t&&t.image.width===e.skeleton.boneTexture.width)t=e.material.uniforms.prevBoneTexture.value,t.image.data.set(e.skeleton.boneTexture.image.data);else{var i;(i=t)==null||i.dispose();const r=e.skeleton.boneTexture.image.data.slice(),s=e.skeleton.boneTexture.image.width;t=new sr(r,s,s,Qt,tn),e.material.uniforms.prevBoneTexture.value=t,t.needsUpdate=!0}}unsetVelocityMaterialInScene(){for(const t of this.visibleMeshes)if(t.material.isVelocityMaterial){var e;t.visible=!0,t.material.lastMatrixWorld.copy(t.matrixWorld),t.material.uniforms.prevVelocityMatrix.value.multiplyMatrices(this._camera.projectionMatrix,t.modelViewMatrix),(e=t.skeleton)!=null&&e.boneTexture&&this.saveBoneTexture(t),t.material=this.cachedMaterials.get(t)[0]}}setSize(e,t){this.renderTarget.setSize(e,t)}renderVelocity(e){if(e.setRenderTarget(this.renderTarget),this.renderedMeshesThisFrame>0){const{background:t}=this._scene;this._scene.background=eL,e.render(this._scene,this._camera),this._scene.background=t}else e.clearColor()}checkCameraMoved(){const e=this.lastCameraTransform.position.distanceToSquared(this._camera.position),t=8*(1-this.lastCameraTransform.quaternion.dot(this._camera.quaternion));return e>1e-6||t>1e-6?(this.lastCameraTransform.position.copy(this._camera.position),this.lastCameraTransform.quaternion.copy(this._camera.quaternion),!0):!1}render(e){this.cameraMovedThisFrame=this.checkCameraMoved(),this.setVelocityMaterialInScene(),(this.renderedMeshesThisFrame>0||this.renderedMeshesLastFrame>0)&&this.renderVelocity(e),this.unsetVelocityMaterialInScene(),this.renderedMeshesLastFrame=this.renderedMeshesThisFrame}}const Bx=new K;class iL extends xn{constructor(e,t,i,r={}){super("TemporalResolvePass"),this.velocityPass=null,this.velocityResolutionScale=1,this.samples=1,this.lastCameraTransform={position:new I,quaternion:new hn},this._scene=e,this._camera=t,this.renderTarget=new wt(1,1,{minFilter:Qe,magFilter:Qe,type:ii,depthBuffer:!1}),this.velocityPass=new nL(e,t),this.fullscreenMaterial=new KD(i),this.fullscreenMaterial.defines.correctionRadius=r.correctionRadius||1,r.dilation&&(this.fullscreenMaterial.defines.dilation=""),r.boxBlur&&(this.fullscreenMaterial.defines.boxBlur=""),this.setupFramebuffers(1,1),this.checkCanUseSharedVelocityTexture()}dispose(){this._scene.userData.velocityTexture===this.velocityPass.renderTarget.texture&&(delete this._scene.userData.velocityTexture,delete this._scene.userData.lastVelocityTexture),this.renderTarget.dispose(),this.accumulatedTexture.dispose(),this.fullscreenMaterial.dispose(),this.velocityPass.dispose()}setSize(e,t){this.renderTarget.setSize(e,t),this.velocityPass.setSize(e*this.velocityResolutionScale,t*this.velocityResolutionScale),this.velocityPass.renderTarget.texture.minFilter=this.velocityResolutionScale===1?ct:Qe,this.velocityPass.renderTarget.texture.magFilter=this.velocityResolutionScale===1?ct:Qe,this.velocityPass.renderTarget.texture.needsUpdate=!0,this.fullscreenMaterial.uniforms.invTexSize.value.set(1/e,1/t),this.setupFramebuffers(e,t)}setupFramebuffers(e,t){this.accumulatedTexture&&this.accumulatedTexture.dispose(),this.lastVelocityTexture&&this.lastVelocityTexture.dispose(),this.accumulatedTexture=new hp(e,t,Qt),this.accumulatedTexture.minFilter=Qe,this.accumulatedTexture.magFilter=Qe,this.accumulatedTexture.type=ii,this.lastVelocityTexture=new hp(e*this.velocityResolutionScale,t*this.velocityResolutionScale,Qt),this.lastVelocityTexture.minFilter=this.velocityResolutionScale===1?ct:Qe,this.lastVelocityTexture.magFilter=this.velocityResolutionScale===1?ct:Qe,this.lastVelocityTexture.type=ii,this.fullscreenMaterial.uniforms.accumulatedTexture.value=this.accumulatedTexture,this.fullscreenMaterial.uniforms.lastVelocityTexture.value=this.lastVelocityTexture,this.fullscreenMaterial.needsUpdate=!0}checkCanUseSharedVelocityTexture(){return this._scene.userData.velocityTexture&&this.velocityPass.renderTarget.texture!==this._scene.userData.velocityTexture?this.velocityPass.renderTarget.texture===this.fullscreenMaterial.uniforms.velocityTexture.value&&(this.fullscreenMaterial.uniforms.lastVelocityTexture.value=this._scene.userData.lastVelocityTexture,this.fullscreenMaterial.uniforms.velocityTexture.value=this._scene.userData.velocityTexture,this.fullscreenMaterial.needsUpdate=!0):this.velocityPass.renderTarget.texture!==this.fullscreenMaterial.uniforms.velocityTexture.value&&(this.fullscreenMaterial.uniforms.velocityTexture.value=this.velocityPass.renderTarget.texture,this.fullscreenMaterial.uniforms.lastVelocityTexture.value=this.lastVelocityTexture,this.fullscreenMaterial.needsUpdate=!0,this._scene.userData.velocityTexture||(this._scene.userData.velocityTexture=this.velocityPass.renderTarget.texture,this._scene.userData.lastVelocityTexture=this.lastVelocityTexture)),this.velocityPass.renderTarget.texture!==this.fullscreenMaterial.uniforms.velocityTexture.value}checkNeedsResample(){const e=this.lastCameraTransform.position.distanceToSquared(this._camera.position),t=8*(1-this.lastCameraTransform.quaternion.dot(this._camera.quaternion));(e>1e-6||t>1e-6)&&(this.samples=1,this.lastCameraTransform.position.copy(this._camera.position),this.lastCameraTransform.quaternion.copy(this._camera.quaternion))}render(e){this.samples++,this.checkNeedsResample(),this.fullscreenMaterial.uniforms.samples.value=this.samples,e.setRenderTarget(this.renderTarget),e.render(this.scene,this.camera),e.copyFramebufferToTexture(Bx,this.accumulatedTexture),e.setRenderTarget(this.velocityPass.renderTarget),e.copyFramebufferToTexture(Bx,this.lastVelocityTexture)}}const zx=function(e,t){let i=1,r=0;for(;e>0;)i/=t,r+=i*(e%t),e=~~(e/t);return r},rL=n=>{const e=[];let t=1;const i=t+n;for(;t<i;t++)e.push([zx(t,2)-.5,zx(t,3)-.5]);return e};function kx(n){return n.replace(/[.*+?^${}()|[\]\\]/g,"\\$&")}const sL=`
#if defined( USE_ENVMAP ) || defined(  ) || defined ( USE_SHADOWMAP )
    vec4 worldPosition = modelMatrix * vec4( transformed, 1.0 );

    #ifdef BOX_PROJECTED_ENV_MAP
        vWorldPosition = worldPosition.xyz;
    #endif
#endif
`,aL=`
#ifdef BOX_PROJECTED_ENV_MAP
    uniform vec3 envMapSize;
    uniform vec3 envMapPosition;
    varying vec3 vWorldPosition;

    vec3 parallaxCorrectNormal( vec3 v, vec3 cubeSize, vec3 cubePos ) {
        vec3 nDir = normalize( v );

        vec3 rbmax = ( .5 * cubeSize + cubePos - vWorldPosition ) / nDir;
        vec3 rbmin = ( -.5 * cubeSize + cubePos - vWorldPosition ) / nDir;

        vec3 rbminmax;

        rbminmax.x = ( nDir.x > 0. ) ? rbmax.x : rbmin.x;
        rbminmax.y = ( nDir.y > 0. ) ? rbmax.y : rbmin.y;
        rbminmax.z = ( nDir.z > 0. ) ? rbmax.z : rbmin.z;

        float correction = min( min( rbminmax.x, rbminmax.y ), rbminmax.z );
        vec3 boxIntersection = vWorldPosition + nDir * correction;

        return boxIntersection - cubePos;
    }
#endif
`,oL=`
#ifdef BOX_PROJECTED_ENV_MAP
    worldNormal = parallaxCorrectNormal( worldNormal, envMapSize, envMapPosition );
#endif
`,lL=`
#ifdef BOX_PROJECTED_ENV_MAP
    reflectVec = parallaxCorrectNormal( reflectVec, envMapSize, envMapPosition );
#endif
`;function cL(n,e,t){n.defines.BOX_PROJECTED_ENV_MAP="",n.uniforms.envMapPosition={value:e},n.uniforms.envMapSize={value:t};const i=new RegExp(kx("vec3 worldNormal = inverseTransformDirection ( normal , viewMatrix ) ;").replaceAll(" ","\\s*"),"g"),r=new RegExp(kx("reflectVec = inverseTransformDirection ( reflectVec , viewMatrix ) ;").replaceAll(" ","\\s*"),"g");n.vertexShader=`varying vec3 vWorldPosition;
`+n.vertexShader.replace("#include <worldpos_vertex>",sL),n.fragmentShader=aL+`
`+n.fragmentShader.replace("#include <envmap_physical_pars_fragment>",Je.envmap_physical_pars_fragment).replace(i,`vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );
                ${oL}`).replace(r,`reflectVec = inverseTransformDirection( reflectVec, viewMatrix );
                ${lL}`)}const uL=zD.replace("#include <helperFunctions>",gM).replace("#include <boxBlur>",BD),hL=["blur","blurSharpness","blurKernel"],fL=new rh(1);let Lu;class dL extends qn{constructor(e,t,i=Ox){super("SSREffect",uL,{type:"FinalSSRMaterial",uniforms:new Map([["reflectionsTexture",new Q(null)],["blur",new Q(0)],["blurSharpness",new Q(0)],["blurKernel",new Q(0)]]),defines:new Map([["RENDER_MODE","0"]])}),this.haltonSequence=rL(1024),this.haltonIndex=0,this.selection=new Em,this.lastSize=void 0,this.cubeCamera=new Xp(.001,1e3,fL),this.usingBoxProjectedEnvMap=!1,this._scene=e,this._camera=t,i={...Ox,...i,...{boxBlur:!0,dilation:!0}},this.temporalResolvePass=new iL(e,t,kD,i),this.uniforms.get("reflectionsTexture").value=this.temporalResolvePass.renderTarget.texture,this.reflectionsPass=new ZD(this,i),this.temporalResolvePass.fullscreenMaterial.uniforms.inputTexture.value=this.reflectionsPass.renderTarget.texture,this.lastSize={width:i.width,height:i.height,resolutionScale:i.resolutionScale,velocityResolutionScale:i.velocityResolutionScale},this.setSize(i.width,i.height),this.makeOptionsReactive(i)}makeOptionsReactive(e){let t=!1;const i=this.reflectionsPass.fullscreenMaterial.uniforms,r=Object.keys(i);for(const s of Object.keys(e))Object.defineProperty(this,s,{get(){return e[s]},set(a){if(!(e[s]===a&&t))switch(e[s]=a,hL.includes(s)||this.setSize(this.lastSize.width,this.lastSize.height,!0),s){case"resolutionScale":this.setSize(this.lastSize.width,this.lastSize.height);break;case"velocityResolutionScale":this.temporalResolvePass.velocityResolutionScale=a,this.setSize(this.lastSize.width,this.lastSize.height,!0);break;case"blur":this.uniforms.get("blur").value=a;break;case"blurSharpness":this.uniforms.get("blurSharpness").value=a;break;case"blurKernel":this.uniforms.get("blurKernel").value=a;break;case"steps":this.reflectionsPass.fullscreenMaterial.defines.steps=parseInt(a),this.reflectionsPass.fullscreenMaterial.needsUpdate=t;break;case"refineSteps":this.reflectionsPass.fullscreenMaterial.defines.refineSteps=parseInt(a),this.reflectionsPass.fullscreenMaterial.needsUpdate=t;break;case"missedRays":a?this.reflectionsPass.fullscreenMaterial.defines.missedRays="":delete this.reflectionsPass.fullscreenMaterial.defines.missedRays,this.reflectionsPass.fullscreenMaterial.needsUpdate=t;break;case"correctionRadius":this.temporalResolvePass.fullscreenMaterial.defines.correctionRadius=Math.round(a),this.temporalResolvePass.fullscreenMaterial.needsUpdate=t;break;case"blend":this.temporalResolvePass.fullscreenMaterial.uniforms.blend.value=a;break;case"correction":this.temporalResolvePass.fullscreenMaterial.uniforms.correction.value=a;break;case"exponent":this.temporalResolvePass.fullscreenMaterial.uniforms.exponent.value=a;break;case"distance":i.rayDistance.value=a;default:r.includes(s)&&(i[s].value=a)}}}),this[s]=e[s];t=!0}setSize(e,t,i=!1){!i&&e===this.lastSize.width&&t===this.lastSize.height&&this.resolutionScale===this.lastSize.resolutionScale&&this.velocityResolutionScale===this.lastSize.velocityResolutionScale||(this.temporalResolvePass.setSize(e,t),this.reflectionsPass.setSize(e,t),this.lastSize={width:e,height:t,resolutionScale:this.resolutionScale,velocityResolutionScale:this.velocityResolutionScale})}generateBoxProjectedEnvMapFallback(e,t=new I,i=new I,r=512){this.cubeCamera.renderTarget.dispose(),this.cubeCamera.renderTarget=new rh(r),this.cubeCamera.position.copy(t),this.cubeCamera.updateMatrixWorld(),this.cubeCamera.update(e,this._scene),Lu||(Lu=new qu(e),Lu.compileCubemapShader());const s=Lu.fromCubemap(this.cubeCamera.renderTarget.texture).texture;s.minFilter=Qe,s.magFilter=Qe;const a=this.reflectionsPass.fullscreenMaterial;return cL(a,t,i),a.fragmentShader=a.fragmentShader.replace("vec3 worldPos","worldPos").replace("varying vec3 vWorldPosition;","vec3 worldPos;"),a.uniforms.envMapPosition.value.copy(t),a.uniforms.envMapSize.value.copy(i),Fx(a,s,r),this.usingBoxProjectedEnvMap=!0,s}setIBLRadiance(e,t){this._scene.traverse(i=>{if(i.material){var r;const s=(r=t.properties.get(i.material))==null?void 0:r.uniforms;s&&"disableIBLRadiance"in s&&(s.disableIBLRadiance.value=e)}})}deleteBoxProjectedEnvMapFallback(){const e=this.reflectionsPass.fullscreenMaterial;e.uniforms.envMap.value=null,e.fragmentShader=e.fragmentShader.replace("worldPos = ","vec3 worldPos = "),delete e.defines.BOX_PROJECTED_ENV_MAP,e.needsUpdate=!0,this.usingBoxProjectedEnvMap=!1}dispose(){super.dispose(),this.reflectionsPass.dispose(),this.temporalResolvePass.dispose()}update(e,t){if(!this.usingBoxProjectedEnvMap&&this._scene.environment){const c=this.reflectionsPass.fullscreenMaterial;let u=null;if(this._scene.traverse(h=>{if(!u&&h.material&&!h.material.envMap){const f=e.properties.get(h.material);"envMap"in f&&f.envMap instanceof Zt&&(u=f.envMap)}}),u){const h=this._scene.environment.image.height;Fx(c,u,h)}}this.haltonIndex=(this.haltonIndex+1)%this.haltonSequence.length;const[i,r]=this.haltonSequence[this.haltonIndex],{width:s,height:a}=this.lastSize;this.temporalResolvePass.velocityPass.render(e),this._camera.setViewOffset&&this._camera.setViewOffset(s,a,i,r,s,a),this.reflectionsPass.render(e,t),this.temporalResolvePass.render(e),this._camera.clearViewOffset()}static patchDirectEnvIntensity(e=0){e===0?Je.envmap_physical_pars_fragment=Je.envmap_physical_pars_fragment.replace("vec3 getIBLRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness ) {","vec3 getIBLRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness ) { return vec3(0.0);"):Je.envmap_physical_pars_fragment=Je.envmap_physical_pars_fragment.replace("vec4 envMapColor = textureCubeUV( envMap, reflectVec, roughness );","vec4 envMapColor = textureCubeUV( envMap, reflectVec, roughness ) * "+e.toFixed(5)+";")}}ee.forwardRef(function({ENABLE_BLUR:e=!0,USE_MRT:t=!0,...i},r){const{invalidate:s}=vn(),{scene:a,camera:c}=ee.useContext(os),u=ee.useMemo(()=>new dL(a,c,{ENABLE_BLUR:e,USE_MRT:t,...i}),[a,c,e,t,i]),h=ee.useContext(bm);return ee.useEffect(()=>{var f;if(h&&h.enabled&&(f=h.selected)!=null&&f.length)return u.selection.set(h.selected),s(),()=>{u.selection.clear(),s()}},[h]),Ft("primitive",{ref:r,object:u,...i})});const kl=new mt;kl.setAttribute("position",new Ct(new Float32Array([-1,-1,3,-1,-1,3]),2));kl.setAttribute("uv",new Ct(new Float32Array([0,0,2,0,0,2]),2));kl.boundingSphere=new Li;kl.computeBoundingSphere=function(){};const pL=new Pr;class Ko{constructor(e){this._mesh=new Tn(kl,e),this._mesh.frustumCulled=!1}render(e){e.render(this._mesh,pL)}get material(){return this._mesh.material}set material(e){this._mesh.material=e}dispose(){this._mesh.material.dispose(),this._mesh.geometry.dispose()}}const mL={uniforms:{sceneDiffuse:{value:null},sceneDepth:{value:null},sceneNormal:{value:null},projMat:{value:new ze},viewMat:{value:new ze},projViewMat:{value:new ze},projectionMatrixInv:{value:new ze},viewMatrixInv:{value:new ze},cameraPos:{value:new I},resolution:{value:new K},time:{value:0},samples:{value:[]},samplesR:{value:[]},bluenoise:{value:null},distanceFalloff:{value:1},radius:{value:5},near:{value:.1},far:{value:1e3},logDepth:{value:!1},ortho:{value:!1},screenSpaceRadius:{value:!1}},vertexShader:`
varying vec2 vUv;
void main() {
  vUv = uv;
  gl_Position = vec4(position, 1);
}`,fragmentShader:`
    #define SAMPLES 16
    #define FSAMPLES 16.0
uniform sampler2D sceneDiffuse;
uniform highp sampler2D sceneNormal;
uniform highp sampler2D sceneDepth;
uniform mat4 projectionMatrixInv;
uniform mat4 viewMatrixInv;
uniform mat4 projMat;
uniform mat4 viewMat;
uniform mat4 projViewMat;
uniform vec3 cameraPos;
uniform vec2 resolution;
uniform float time;
uniform vec3[SAMPLES] samples;
uniform float[SAMPLES] samplesR;
uniform float radius;
uniform float distanceFalloff;
uniform float near;
uniform float far;
uniform bool logDepth;
uniform bool ortho;
uniform bool screenSpaceRadius;
uniform sampler2D bluenoise;
    varying vec2 vUv;
    highp float linearize_depth(highp float d, highp float zNear,highp float zFar)
    {
        return (zFar * zNear) / (zFar - d * (zFar - zNear));
    }
    highp float linearize_depth_ortho(highp float d, highp float nearZ, highp float farZ) {
      return nearZ + (farZ - nearZ) * d;
    }
    highp float linearize_depth_log(highp float d, highp float nearZ,highp float farZ) {
      float depth = pow(2.0, d * log2(farZ + 1.0)) - 1.0;
      float a = farZ / (farZ - nearZ);
      float b = farZ * nearZ / (nearZ - farZ);
      float linDepth = a + b / depth;
      return ortho ? linearize_depth_ortho(
        linDepth,
        nearZ,
        farZ
      ) :linearize_depth(linDepth, nearZ, farZ);
    }

    vec3 getWorldPosLog(vec3 posS) {
      vec2 uv = posS.xy;
      float z = posS.z;
      float nearZ =near;
      float farZ = far;
      float depth = pow(2.0, z * log2(farZ + 1.0)) - 1.0;
      float a = farZ / (farZ - nearZ);
      float b = farZ * nearZ / (nearZ - farZ);
      float linDepth = a + b / depth;
      vec4 clipVec = vec4(uv, linDepth, 1.0) * 2.0 - 1.0;
      vec4 wpos = projectionMatrixInv * clipVec;
      return wpos.xyz / wpos.w;
    }
    vec3 getWorldPos(float depth, vec2 coord) {
      #ifdef LOGDEPTH
        return getWorldPosLog(vec3(coord, depth));
      #endif
      float z = depth * 2.0 - 1.0;
      vec4 clipSpacePosition = vec4(coord * 2.0 - 1.0, z, 1.0);
      vec4 viewSpacePosition = projectionMatrixInv * clipSpacePosition;
      // Perspective division
     vec4 worldSpacePosition = viewSpacePosition;
     worldSpacePosition.xyz /= worldSpacePosition.w;
      return worldSpacePosition.xyz;
  }

  vec3 computeNormal(vec3 worldPos, vec2 vUv) {
    ivec2 p = ivec2(vUv * resolution);
    float c0 = texelFetch(sceneDepth, p, 0).x;
    float l2 = texelFetch(sceneDepth, p - ivec2(2, 0), 0).x;
    float l1 = texelFetch(sceneDepth, p - ivec2(1, 0), 0).x;
    float r1 = texelFetch(sceneDepth, p + ivec2(1, 0), 0).x;
    float r2 = texelFetch(sceneDepth, p + ivec2(2, 0), 0).x;
    float b2 = texelFetch(sceneDepth, p - ivec2(0, 2), 0).x;
    float b1 = texelFetch(sceneDepth, p - ivec2(0, 1), 0).x;
    float t1 = texelFetch(sceneDepth, p + ivec2(0, 1), 0).x;
    float t2 = texelFetch(sceneDepth, p + ivec2(0, 2), 0).x;

    float dl = abs((2.0 * l1 - l2) - c0);
    float dr = abs((2.0 * r1 - r2) - c0);
    float db = abs((2.0 * b1 - b2) - c0);
    float dt = abs((2.0 * t1 - t2) - c0);

    vec3 ce = getWorldPos(c0, vUv).xyz;

    vec3 dpdx = (dl < dr) ? ce - getWorldPos(l1, (vUv - vec2(1.0 / resolution.x, 0.0))).xyz
                          : -ce + getWorldPos(r1, (vUv + vec2(1.0 / resolution.x, 0.0))).xyz;
    vec3 dpdy = (db < dt) ? ce - getWorldPos(b1, (vUv - vec2(0.0, 1.0 / resolution.y))).xyz
                          : -ce + getWorldPos(t1, (vUv + vec2(0.0, 1.0 / resolution.y))).xyz;

    return normalize(cross(dpdx, dpdy));
}

void main() {
      vec4 diffuse = texture2D(sceneDiffuse, vUv);
      float depth = texture2D(sceneDepth, vUv).x;
      if (depth == 1.0) {
        gl_FragColor = vec4(vec3(1.0), 1.0);
        return;
      }
      vec3 worldPos = getWorldPos(depth, vUv);
    //  vec3 normal = texture2D(sceneNormal, vUv).rgb;//computeNormal(worldPos, vUv);
      #ifdef HALFRES
        vec3 normal = texture2D(sceneNormal, vUv).rgb;
      #else
        vec3 normal = computeNormal(worldPos, vUv);
      #endif
      vec4 noise = texture2D(bluenoise, gl_FragCoord.xy / 128.0);
      vec3 randomVec = normalize(noise.rgb * 2.0 - 1.0);
      vec3 tangent = normalize(randomVec - normal * dot(randomVec, normal));
      vec3 bitangent = cross(normal, tangent);
      mat3 tbn = mat3(tangent, bitangent, normal);
      float occluded = 0.0;
      float totalWeight = 0.0;
     /* float radiusScreen = distance(
        worldPos,
        getWorldPos(depth, vUv + 
          vec2(48.0, 0.0) / resolution)
      );/*vUv.x < 0.5 ? radius : min(distance(
        worldPos,
        getWorldPos(depth, vUv + 
          vec2(100.0, 0.0) / resolution)
      ), radius);
      float distanceFalloffScreen = radiusScreen * 0.2;*/
      float radiusToUse = screenSpaceRadius ? distance(
        worldPos,
        getWorldPos(depth, vUv +
          vec2(radius, 0.0) / resolution)
      ) : radius;
      float distanceFalloffToUse =screenSpaceRadius ?
          radiusToUse * distanceFalloff
      : distanceFalloff;
      float bias = (0.1 / near) * fwidth(distance(worldPos, cameraPos)) / radiusToUse;
      for(float i = 0.0; i < FSAMPLES; i++) {
        vec3 sampleDirection = 
        tbn * 
        samples[int(i)];
        ;
        float moveAmt = samplesR[int(mod(i + noise.a * FSAMPLES, FSAMPLES))];
        vec3 samplePos = worldPos + radiusToUse * moveAmt * sampleDirection;
        vec4 offset = projMat * vec4(samplePos, 1.0);
        offset.xyz /= offset.w;
        offset.xyz = offset.xyz * 0.5 + 0.5;
        float sampleDepth = textureLod(sceneDepth, offset.xy, 0.0).x;
        /*float distSample = logDepth ? linearize_depth_log(sampleDepth, near, far) 
         (ortho ?  linearize_depth_ortho(sampleDepth, near, far) : linearize_depth(sampleDepth, near, far));*/
        #ifdef LOGDEPTH
        float distSample = linearize_depth_log(sampleDepth, near, far);
        #else
        float distSample = ortho ? linearize_depth_ortho(sampleDepth, near, far) : linearize_depth(sampleDepth, near, far);
        #endif
        float distWorld = ortho ? linearize_depth_ortho(offset.z, near, far) : linearize_depth(offset.z, near, far);
        float rangeCheck = smoothstep(0.0, 1.0, distanceFalloffToUse / (abs(distSample - distWorld)));
        vec2 diff = gl_FragCoord.xy - ( offset.xy * resolution);
        float weight = dot(sampleDirection, normal);
          occluded += rangeCheck * weight * 
            (distSample + bias
               < distWorld ? 1.0 : 0.0) * (
          (dot(
            diff,
            diff
             
            ) < 1.0 || (sampleDepth == depth) || (
              offset.x < 0.0 || offset.x > 1.0 || offset.y < 0.0 || offset.y > 1.0
            ) ? 0.0 : 1.0)
          );
          totalWeight += weight;
      }
      float occ = clamp(1.0 - occluded / totalWeight, 0.0, 1.0);
      gl_FragColor = vec4(0.5 + 0.5 * normal, occ);
}`},gL={uniforms:{sceneDiffuse:{value:null},sceneDepth:{value:null},tDiffuse:{value:null},projMat:{value:new ze},viewMat:{value:new ze},projectionMatrixInv:{value:new ze},viewMatrixInv:{value:new ze},cameraPos:{value:new I},resolution:{value:new K},color:{value:new I(0,0,0)},blueNoise:{value:null},downsampledDepth:{value:null},time:{value:0},intensity:{value:10},renderMode:{value:0},gammaCorrection:{value:!1},logDepth:{value:!1},ortho:{value:!1},near:{value:.1},far:{value:1e3},screenSpaceRadius:{value:!1},radius:{value:0},distanceFalloff:{value:1},fog:{value:!1},fogExp:{value:!1},fogDensity:{value:0},fogNear:{value:1/0},fogFar:{value:1/0},colorMultiply:{value:!0}},vertexShader:`
		varying vec2 vUv;
		void main() {
			vUv = uv;
			gl_Position = vec4(position, 1);
		}`,fragmentShader:`
		uniform sampler2D sceneDiffuse;
    uniform highp sampler2D sceneDepth;
    uniform highp sampler2D downsampledDepth;
    uniform sampler2D tDiffuse;
    uniform sampler2D blueNoise;
    uniform vec2 resolution;
    uniform vec3 color;
    uniform mat4 projectionMatrixInv;
    uniform mat4 viewMatrixInv;
    uniform float intensity;
    uniform float renderMode;
    uniform float near;
    uniform float far;
    uniform bool gammaCorrection;
    uniform bool logDepth;
    uniform bool ortho;
    uniform bool screenSpaceRadius;
    uniform bool fog;
    uniform bool fogExp;
    uniform bool colorMultiply;
    uniform float fogDensity;
    uniform float fogNear;
    uniform float fogFar;
    uniform float radius;
    uniform float distanceFalloff;
    uniform vec3 cameraPos;
    varying vec2 vUv;
    highp float linearize_depth(highp float d, highp float zNear,highp float zFar)
    {
        return (zFar * zNear) / (zFar - d * (zFar - zNear));
    }
    highp float linearize_depth_ortho(highp float d, highp float nearZ, highp float farZ) {
      return nearZ + (farZ - nearZ) * d;
    }
    highp float linearize_depth_log(highp float d, highp float nearZ,highp float farZ) {
      float depth = pow(2.0, d * log2(farZ + 1.0)) - 1.0;
      float a = farZ / (farZ - nearZ);
      float b = farZ * nearZ / (nearZ - farZ);
      float linDepth = a + b / depth;
      return ortho ? linearize_depth_ortho(
        linDepth,
        nearZ,
        farZ
      ) :linearize_depth(linDepth, nearZ, farZ);
    }
    vec3 getWorldPosLog(vec3 posS) {
        vec2 uv = posS.xy;
        float z = posS.z;
        float nearZ =near;
        float farZ = far;
        float depth = pow(2.0, z * log2(farZ + 1.0)) - 1.0;
        float a = farZ / (farZ - nearZ);
        float b = farZ * nearZ / (nearZ - farZ);
        float linDepth = a + b / depth;
        vec4 clipVec = vec4(uv, linDepth, 1.0) * 2.0 - 1.0;
        vec4 wpos = projectionMatrixInv * clipVec;
        return wpos.xyz / wpos.w;
      }
      vec3 getWorldPos(float depth, vec2 coord) {
       // if (logDepth) {
        #ifdef LOGDEPTH
          return getWorldPosLog(vec3(coord, depth));
        #endif
      //  }
        float z = depth * 2.0 - 1.0;
        vec4 clipSpacePosition = vec4(coord * 2.0 - 1.0, z, 1.0);
        vec4 viewSpacePosition = projectionMatrixInv * clipSpacePosition;
        // Perspective division
       vec4 worldSpacePosition = viewSpacePosition;
       worldSpacePosition.xyz /= worldSpacePosition.w;
        return worldSpacePosition.xyz;
    }
  
    vec3 computeNormal(vec3 worldPos, vec2 vUv) {
      ivec2 p = ivec2(vUv * resolution);
      float c0 = texelFetch(sceneDepth, p, 0).x;
      float l2 = texelFetch(sceneDepth, p - ivec2(2, 0), 0).x;
      float l1 = texelFetch(sceneDepth, p - ivec2(1, 0), 0).x;
      float r1 = texelFetch(sceneDepth, p + ivec2(1, 0), 0).x;
      float r2 = texelFetch(sceneDepth, p + ivec2(2, 0), 0).x;
      float b2 = texelFetch(sceneDepth, p - ivec2(0, 2), 0).x;
      float b1 = texelFetch(sceneDepth, p - ivec2(0, 1), 0).x;
      float t1 = texelFetch(sceneDepth, p + ivec2(0, 1), 0).x;
      float t2 = texelFetch(sceneDepth, p + ivec2(0, 2), 0).x;
  
      float dl = abs((2.0 * l1 - l2) - c0);
      float dr = abs((2.0 * r1 - r2) - c0);
      float db = abs((2.0 * b1 - b2) - c0);
      float dt = abs((2.0 * t1 - t2) - c0);
  
      vec3 ce = getWorldPos(c0, vUv).xyz;
  
      vec3 dpdx = (dl < dr) ? ce - getWorldPos(l1, (vUv - vec2(1.0 / resolution.x, 0.0))).xyz
                            : -ce + getWorldPos(r1, (vUv + vec2(1.0 / resolution.x, 0.0))).xyz;
      vec3 dpdy = (db < dt) ? ce - getWorldPos(b1, (vUv - vec2(0.0, 1.0 / resolution.y))).xyz
                            : -ce + getWorldPos(t1, (vUv + vec2(0.0, 1.0 / resolution.y))).xyz;
  
      return normalize(cross(dpdx, dpdy));
  }

    #include <common>
    #include <dithering_pars_fragment>
    void main() {
        //vec4 texel = texture2D(tDiffuse, vUv);//vec3(0.0);
        vec4 sceneTexel = texture2D(sceneDiffuse, vUv);
        float depth = texture2D(
            sceneDepth,
            vUv
        ).x;
        #ifdef HALFRES 
        vec4 texel;
        if (depth == 1.0) {
            texel = vec4(0.0, 0.0, 0.0, 1.0);
        } else {
        vec3 worldPos = getWorldPos(depth, vUv);
        vec3 normal = computeNormal(getWorldPos(depth, vUv), vUv);
       // vec4 texel = texture2D(tDiffuse, vUv);
       // Find closest depth;
       float totalWeight = 0.0;
       float radiusToUse = screenSpaceRadius ? distance(
        worldPos,
        getWorldPos(depth, vUv +
          vec2(radius, 0.0) / resolution)
      ) : radius;
      float distanceFalloffToUse =screenSpaceRadius ?
          radiusToUse * distanceFalloff
      : distanceFalloff;
        for(float x = -1.0; x <= 1.0; x++) {
            for(float y = -1.0; y <= 1.0; y++) {
                vec2 offset = vec2(x, y);
                ivec2 p = ivec2(
                    (vUv * resolution * 0.5) + offset
                );
                vec2 pUv = vec2(p) / (resolution * 0.5);
                float sampleDepth = texelFetch(downsampledDepth,p, 0).x;
                vec4 sampleInfo = texelFetch(tDiffuse, p, 0);
                vec3 normalSample = sampleInfo.xyz * 2.0 - 1.0;
                vec3 worldPosSample = getWorldPos(sampleDepth, pUv);
                float tangentPlaneDist = abs(dot(worldPos - worldPosSample, normal));
                float rangeCheck = exp(-1.0 * tangentPlaneDist * (1.0 / distanceFalloffToUse)) * max(dot(normal, normalSample), 0.0);
                float weight = rangeCheck;
                totalWeight += weight;
                texel += sampleInfo * weight;
            }
        }
        if (totalWeight == 0.0) {
            texel = texture2D(tDiffuse, vUv);
        } else {
            texel /= totalWeight;
        }
    }
        #else
        vec4 texel = texture2D(tDiffuse, vUv);
        #endif

     
        float finalAo = pow(texel.a, intensity);
        float fogFactor;
        float fogDepth = distance(
            cameraPos,
            getWorldPos(depth, vUv)
        );
        if (fog) {
            if (fogExp) {
                fogFactor = 1.0 - exp( - fogDensity * fogDensity * fogDepth * fogDepth );
            } else {
                fogFactor = smoothstep( fogNear, fogFar, fogDepth );
            }
        }
        finalAo = mix(finalAo, 1.0, fogFactor);
        vec3 aoApplied = color * mix(vec3(1.0), sceneTexel.rgb, float(colorMultiply));
        if (renderMode == 0.0) {
            gl_FragColor = vec4( mix(sceneTexel.rgb, aoApplied, 1.0 - finalAo), sceneTexel.a);
        } else if (renderMode == 1.0) {
            gl_FragColor = vec4( mix(vec3(1.0), aoApplied, 1.0 - finalAo), sceneTexel.a);
        } else if (renderMode == 2.0) {
            gl_FragColor = vec4( sceneTexel.rgb, sceneTexel.a);
        } else if (renderMode == 3.0) {
            if (vUv.x < 0.5) {
                gl_FragColor = vec4( sceneTexel.rgb, sceneTexel.a);
            } else if (abs(vUv.x - 0.5) < 1.0 / resolution.x) {
                gl_FragColor = vec4(1.0);
            } else {
                gl_FragColor = vec4( mix(sceneTexel.rgb, aoApplied, 1.0 - finalAo), sceneTexel.a);
            }
        } else if (renderMode == 4.0) {
            if (vUv.x < 0.5) {
                gl_FragColor = vec4( sceneTexel.rgb, sceneTexel.a);
            } else if (abs(vUv.x - 0.5) < 1.0 / resolution.x) {
                gl_FragColor = vec4(1.0);
            } else {
                gl_FragColor = vec4( mix(vec3(1.0), aoApplied, 1.0 - finalAo), sceneTexel.a);
            }
        }
        #include <dithering_fragment>
        if (gammaCorrection) {
            gl_FragColor = LinearTosRGB(gl_FragColor);
        }
    }
    `},vL={uniforms:{sceneDiffuse:{value:null},sceneDepth:{value:null},tDiffuse:{value:null},projMat:{value:new ze},viewMat:{value:new ze},projectionMatrixInv:{value:new ze},viewMatrixInv:{value:new ze},cameraPos:{value:new I},resolution:{value:new K},time:{value:0},r:{value:5},blueNoise:{value:null},radius:{value:12},worldRadius:{value:5},index:{value:0},poissonDisk:{value:[]},distanceFalloff:{value:1},near:{value:.1},far:{value:1e3},logDepth:{value:!1},screenSpaceRadius:{value:!1}},vertexShader:`
		varying vec2 vUv;
		void main() {
			vUv = uv;
			gl_Position = vec4(position, 1.0);
		}`,fragmentShader:`
		uniform sampler2D sceneDiffuse;
    uniform highp sampler2D sceneDepth;
    uniform sampler2D tDiffuse;
    uniform sampler2D blueNoise;
    uniform mat4 projectionMatrixInv;
    uniform mat4 viewMatrixInv;
    uniform vec2 resolution;
    uniform float r;
    uniform float radius;
     uniform float worldRadius;
    uniform float index;
     uniform float near;
     uniform float far;
     uniform float distanceFalloff;
     uniform bool logDepth;
     uniform bool screenSpaceRadius;
    varying vec2 vUv;

    highp float linearize_depth(highp float d, highp float zNear,highp float zFar)
    {
        highp float z_n = 2.0 * d - 1.0;
        return 2.0 * zNear * zFar / (zFar + zNear - z_n * (zFar - zNear));
    }
    highp float linearize_depth_log(highp float d, highp float nearZ,highp float farZ) {
     float depth = pow(2.0, d * log2(farZ + 1.0)) - 1.0;
     float a = farZ / (farZ - nearZ);
     float b = farZ * nearZ / (nearZ - farZ);
     float linDepth = a + b / depth;
     return linearize_depth(linDepth, nearZ, farZ);
   }
   highp float linearize_depth_ortho(highp float d, highp float nearZ, highp float farZ) {
     return nearZ + (farZ - nearZ) * d;
   }
   vec3 getWorldPosLog(vec3 posS) {
     vec2 uv = posS.xy;
     float z = posS.z;
     float nearZ =near;
     float farZ = far;
     float depth = pow(2.0, z * log2(farZ + 1.0)) - 1.0;
     float a = farZ / (farZ - nearZ);
     float b = farZ * nearZ / (nearZ - farZ);
     float linDepth = a + b / depth;
     vec4 clipVec = vec4(uv, linDepth, 1.0) * 2.0 - 1.0;
     vec4 wpos = projectionMatrixInv * clipVec;
     return wpos.xyz / wpos.w;
   }
    vec3 getWorldPos(float depth, vec2 coord) {
     #ifdef LOGDEPTH
          return getWorldPosLog(vec3(coord, depth));
     #endif
        
        float z = depth * 2.0 - 1.0;
        vec4 clipSpacePosition = vec4(coord * 2.0 - 1.0, z, 1.0);
        vec4 viewSpacePosition = projectionMatrixInv * clipSpacePosition;
        // Perspective division
       vec4 worldSpacePosition = viewSpacePosition;
       worldSpacePosition.xyz /= worldSpacePosition.w;
        return worldSpacePosition.xyz;
    }
    #include <common>
    #define NUM_SAMPLES 16
    uniform vec2 poissonDisk[NUM_SAMPLES];
    void main() {
        const float pi = 3.14159;
        vec2 texelSize = vec2(1.0 / resolution.x, 1.0 / resolution.y);
        vec2 uv = vUv;
        vec4 data = texture2D(tDiffuse, vUv);
        float occlusion = data.a;
        float baseOcc = data.a;
        vec3 normal = data.rgb * 2.0 - 1.0;
        float count = 1.0;
        float d = texture2D(sceneDepth, vUv).x;
        if (d == 1.0) {
          gl_FragColor = data;
          return;
        }
        vec3 worldPos = getWorldPos(d, vUv);
        float size = radius;
        float angle;
        if (index == 0.0) {
             angle = texture2D(blueNoise, gl_FragCoord.xy / 128.0).x * PI2;
        } else if (index == 1.0) {
             angle = texture2D(blueNoise, gl_FragCoord.xy / 128.0).y * PI2;
        } else if (index == 2.0) {
             angle = texture2D(blueNoise, gl_FragCoord.xy / 128.0).z * PI2;
        } else {
             angle = texture2D(blueNoise, gl_FragCoord.xy / 128.0).w * PI2;
        }

        mat2 rotationMatrix = mat2(cos(angle), -sin(angle), sin(angle), cos(angle));
        float radiusToUse = screenSpaceRadius ? distance(
          worldPos,
          getWorldPos(d, vUv +
            vec2(worldRadius, 0.0) / resolution)
        ) : worldRadius;
        float distanceFalloffToUse =screenSpaceRadius ?
            radiusToUse * distanceFalloff
        : distanceFalloff;


        for(int i = 0; i < NUM_SAMPLES; i++) {
            vec2 offset = (rotationMatrix * poissonDisk[i]) * texelSize * size;
            vec4 dataSample = texture2D(tDiffuse, uv + offset);
            float occSample = dataSample.a;
            vec3 normalSample = dataSample.rgb * 2.0 - 1.0;
            float dSample = texture2D(sceneDepth, uv + offset).x;
            vec3 worldPosSample = getWorldPos(dSample, uv + offset);
            float tangentPlaneDist = abs(dot(worldPos - worldPosSample, normal));
            float rangeCheck = dSample == 1.0 ? 0.0 :exp(-1.0 * tangentPlaneDist * (1.0 / distanceFalloffToUse)) * max(dot(normal, normalSample), 0.0) * (1.0 - abs(occSample - baseOcc));
            occlusion += occSample * rangeCheck;
            count += rangeCheck;
        }
        occlusion /= count;
        gl_FragColor = vec4(0.5 + 0.5 * normal, occlusion);
    }
    `},xL={uniforms:{sceneDepth:{value:null},resolution:{value:new K},near:{value:.1},far:{value:1e3},viewMatrixInv:{value:new ze},projectionMatrixInv:{value:new ze},logDepth:{value:!1}},vertexShader:`
    varying vec2 vUv;
    void main() {
        vUv = uv;
        gl_Position = vec4(position, 1);
    }`,fragmentShader:`
    uniform highp sampler2D sceneDepth;
    uniform vec2 resolution;
    uniform float near;
    uniform float far;
    uniform bool logDepth;
    uniform mat4 viewMatrixInv;
    uniform mat4 projectionMatrixInv;
    varying vec2 vUv;
    layout(location = 1) out vec4 gNormal;
    vec3 getWorldPosLog(vec3 posS) {
        vec2 uv = posS.xy;
        float z = posS.z;
        float nearZ =near;
        float farZ = far;
        float depth = pow(2.0, z * log2(farZ + 1.0)) - 1.0;
        float a = farZ / (farZ - nearZ);
        float b = farZ * nearZ / (nearZ - farZ);
        float linDepth = a + b / depth;
        vec4 clipVec = vec4(uv, linDepth, 1.0) * 2.0 - 1.0;
        vec4 wpos = projectionMatrixInv * clipVec;
        return wpos.xyz / wpos.w;
      }
      vec3 getWorldPos(float depth, vec2 coord) {
        if (logDepth) {
          return getWorldPosLog(vec3(coord, depth));
        }
        float z = depth * 2.0 - 1.0;
        vec4 clipSpacePosition = vec4(coord * 2.0 - 1.0, z, 1.0);
        vec4 viewSpacePosition = projectionMatrixInv * clipSpacePosition;
        // Perspective division
       vec4 worldSpacePosition = viewSpacePosition;
       worldSpacePosition.xyz /= worldSpacePosition.w;
        return worldSpacePosition.xyz;
    }
  
    vec3 computeNormal(vec3 worldPos, vec2 vUv) {
      ivec2 p = ivec2(vUv * resolution);
      float c0 = texelFetch(sceneDepth, p, 0).x;
      float l2 = texelFetch(sceneDepth, p - ivec2(2, 0), 0).x;
      float l1 = texelFetch(sceneDepth, p - ivec2(1, 0), 0).x;
      float r1 = texelFetch(sceneDepth, p + ivec2(1, 0), 0).x;
      float r2 = texelFetch(sceneDepth, p + ivec2(2, 0), 0).x;
      float b2 = texelFetch(sceneDepth, p - ivec2(0, 2), 0).x;
      float b1 = texelFetch(sceneDepth, p - ivec2(0, 1), 0).x;
      float t1 = texelFetch(sceneDepth, p + ivec2(0, 1), 0).x;
      float t2 = texelFetch(sceneDepth, p + ivec2(0, 2), 0).x;
  
      float dl = abs((2.0 * l1 - l2) - c0);
      float dr = abs((2.0 * r1 - r2) - c0);
      float db = abs((2.0 * b1 - b2) - c0);
      float dt = abs((2.0 * t1 - t2) - c0);
  
      vec3 ce = getWorldPos(c0, vUv).xyz;
  
      vec3 dpdx = (dl < dr) ? ce - getWorldPos(l1, (vUv - vec2(1.0 / resolution.x, 0.0))).xyz
                            : -ce + getWorldPos(r1, (vUv + vec2(1.0 / resolution.x, 0.0))).xyz;
      vec3 dpdy = (db < dt) ? ce - getWorldPos(b1, (vUv - vec2(0.0, 1.0 / resolution.y))).xyz
                            : -ce + getWorldPos(t1, (vUv + vec2(0.0, 1.0 / resolution.y))).xyz;
  
      return normalize(cross(dpdx, dpdy));
  }
    void main() {
        vec2 uv = vUv - vec2(0.5) / resolution;
        vec2 pixelSize = vec2(1.0) / resolution;
        vec2[] uvSamples = vec2[4](
            uv,
            uv + vec2(pixelSize.x, 0.0),
            uv + vec2(0.0, pixelSize.y),
            uv + pixelSize
        );
        float depth00 = texture2D(sceneDepth, uvSamples[0]).r;
        float depth10 = texture2D(sceneDepth, uvSamples[1]).r;
        float depth01 = texture2D(sceneDepth, uvSamples[2]).r;
        float depth11 = texture2D(sceneDepth, uvSamples[3]).r;
        float minDepth = min(min(depth00, depth10), min(depth01, depth11));
        float maxDepth = max(max(depth00, depth10), max(depth01, depth11));
        float targetDepth = minDepth;
        // Checkerboard pattern to avoid artifacts
        if (mod(gl_FragCoord.x + gl_FragCoord.y, 2.0) > 0.5) { 
            targetDepth = maxDepth;
        }
        int chosenIndex = 0;
        float[] samples = float[4](depth00, depth10, depth01, depth11);
        for(int i = 0; i < 4; ++i) {
            if (samples[i] == targetDepth) {
                chosenIndex = i;
                break;
            }
        }
        gl_FragColor = vec4(samples[chosenIndex], 0.0, 0.0, 1.0);
        gNormal = vec4(computeNormal(
            getWorldPos(samples[chosenIndex], uvSamples[chosenIndex]), uvSamples[chosenIndex]
        ), 0.0);
       /* float[] samples = float[4](depth00, depth10, depth01, depth11);
        float c = 0.25 * (depth00 + depth10 + depth01 + depth11);
        float[] distances = float[4](depth00, depth10, depth01, depth11);
        float maxDistance = max(max(distances[0], distances[1]), max(distances[2], distances[3]));

        int remaining[3];
        int rejected[3];
        int i, j, k;

        for(i = 0, j = 0, k = 0; i < 4; ++i) {
            if (distances[i] < maxDistance) {
                remaining[j++] = i;
            } else {
                rejected[k++] = i;
            }
        }
        for(;j < 3;++j) {
            remaining[j] = rejected[--k];
        }
        vec3 s = vec3(
            samples[remaining[0]],
            samples[remaining[1]],
            samples[remaining[2]]
        );
        c = (s.x + s.y + s.z) / 3.0;

        distances[0] = abs(c - s.x);
        distances[1] = abs(c - s.y);
        distances[2] = abs(c - s.z);

        float minDistance = min(min(distances[0], distances[1]), distances[2]);

        for(i = 0; i < 3; ++i) {
            if (distances[i] == minDistance) {
                break;
            }
        }*/
      /*  gl_FragColor = vec4(samples[remaining[i]], 0.0, 0.0, 0.0);
        gNormal = vec4(computeNormal(
            getWorldPos(samples[remaining[i]], uvSamples[remaining[i]]), uvSamples[remaining[i]]
        ), 0.0);*/
    }`};var xM="";const yL=Uint8Array.from(atob(xM),n=>n.charCodeAt(0));function yM(n,e,t){if(e.getQueryParameter(n,e.QUERY_RESULT_AVAILABLE)){const s=e.getQueryParameter(n,e.QUERY_RESULT)/1e6;t.lastTime=s}else setTimeout(()=>{yM(n,e,t)},1)}class SL extends xn{constructor(e,t,i=512,r=512){super(),this.width=i,this.height=r,this.clear=!0,this.camera=t,this.scene=e,this.autosetGamma=!0,this.configuration=new Proxy({aoSamples:16,aoRadius:5,denoiseSamples:8,denoiseRadius:12,distanceFalloff:1,intensity:5,denoiseIterations:2,renderMode:0,color:new be(0,0,0),gammaCorrection:!0,logarithmicDepthBuffer:!1,screenSpaceRadius:!1,halfRes:!1,depthAwareUpsampling:!0,colorMultiply:!0},{set:(s,a,c)=>{const u=s[a];return s[a]=c,a==="aoSamples"&&u!==c&&this.configureAOPass(this.configuration.logarithmicDepthBuffer),a==="denoiseSamples"&&u!==c&&this.configureDenoisePass(this.configuration.logarithmicDepthBuffer),a==="halfRes"&&u!==c&&(this.configureAOPass(this.configuration.logarithmicDepthBuffer),this.configureHalfResTargets(),this.configureEffectCompositer(this.configuration.logarithmicDepthBuffer),this.setSize(this.width,this.height)),a==="depthAwareUpsampling"&&u!==c&&this.configureEffectCompositer(this.configuration.logarithmicDepthBuffer),a==="gammaCorrection"&&(this.autosetGamma=!1),!0}}),this.samples=[],this.samplesR=[],this.samplesDenoise=[],this.configureEffectCompositer(this.configuration.logarithmicDepthBuffer),this.configureSampleDependentPasses(),this.configureHalfResTargets(),this.copyQuad=new Ko(new _t({uniforms:{tDiffuse:{value:null}},depthWrite:!1,vertexShader:`
            varying vec2 vUv;
            void main() {
                vUv = uv;
                gl_Position = vec4(position, 1);
            }
            `,fragmentShader:`
            uniform sampler2D tDiffuse;
            varying vec2 vUv;
            void main() {
                gl_FragColor = texture2D(tDiffuse, vUv);
            }
            `})),this.writeTargetInternal=new wt(this.width,this.height,{minFilter:Qe,magFilter:Qe,depthBuffer:!1}),this.readTargetInternal=new wt(this.width,this.height,{minFilter:Qe,magFilter:Qe,depthBuffer:!1}),this.outputTargetInternal=new wt(this.width,this.height,{minFilter:Qe,magFilter:Qe,depthBuffer:!1}),this.bluenoise=new sr(yL,128,128),this.bluenoise.colorSpace=Ar,this.bluenoise.wrapS=vi,this.bluenoise.wrapT=vi,this.bluenoise.minFilter=ct,this.bluenoise.magFilter=ct,this.bluenoise.needsUpdate=!0,this.lastTime=0,this.needsDepthTexture=!0,this.needsSwap=!0,this._r=new K,this._c=new be}configureHalfResTargets(){this.configuration.halfRes?(this.depthDownsampleTarget=new Vp(this.width/2,this.height/2,2),this.depthDownsampleTarget.texture[0].format=th,this.depthDownsampleTarget.texture[0].type=tn,this.depthDownsampleTarget.texture[0].minFilter=ct,this.depthDownsampleTarget.texture[0].magFilter=ct,this.depthDownsampleTarget.texture[0].depthBuffer=!1,this.depthDownsampleTarget.texture[1].format=Qt,this.depthDownsampleTarget.texture[1].type=ii,this.depthDownsampleTarget.texture[1].minFilter=ct,this.depthDownsampleTarget.texture[1].magFilter=ct,this.depthDownsampleTarget.texture[1].depthBuffer=!1,this.depthDownsampleQuad=new Ko(new _t(xL))):(this.depthDownsampleTarget&&(this.depthDownsampleTarget.dispose(),this.depthDownsampleTarget=null),this.depthDownsampleQuad&&(this.depthDownsampleQuad.dispose(),this.depthDownsampleQuad=null))}configureSampleDependentPasses(){this.configureAOPass(this.configuration.logarithmicDepthBuffer),this.configureDenoisePass(this.configuration.logarithmicDepthBuffer)}configureAOPass(e=!1){this.samples=this.generateHemisphereSamples(this.configuration.aoSamples),this.samplesR=this.generateHemisphereSamplesR(this.configuration.aoSamples);const t={...mL};t.fragmentShader=t.fragmentShader.replace("16",this.configuration.aoSamples).replace("16.0",this.configuration.aoSamples+".0"),e&&(t.fragmentShader=`#define LOGDEPTH
`+t.fragmentShader),this.configuration.halfRes&&(t.fragmentShader=`#define HALFRES
`+t.fragmentShader),this.effectShaderQuad?(this.effectShaderQuad.material.dispose(),this.effectShaderQuad.material=new _t(t)):this.effectShaderQuad=new Ko(new _t(t))}configureDenoisePass(e=!1){this.samplesDenoise=this.generateDenoiseSamples(this.configuration.denoiseSamples,11);const t={...vL};t.fragmentShader=t.fragmentShader.replace("16",this.configuration.denoiseSamples),e&&(t.fragmentShader=`#define LOGDEPTH
`+t.fragmentShader),this.poissonBlurQuad?(this.poissonBlurQuad.material.dispose(),this.poissonBlurQuad.material=new _t(t)):this.poissonBlurQuad=new Ko(new _t(t))}configureEffectCompositer(e=!1){const t={...gL};e&&(t.fragmentShader=`#define LOGDEPTH
`+t.fragmentShader),this.configuration.halfRes&&this.configuration.depthAwareUpsampling&&(t.fragmentShader=`#define HALFRES
`+t.fragmentShader),this.effectCompositerQuad?(this.effectCompositerQuad.material.dispose(),this.effectCompositerQuad.material=new _t(t)):this.effectCompositerQuad=new Ko(new _t(t))}generateHemisphereSamples(e){const t=[];for(let i=0;i<e;i++){const r=2.399963*i,s=Math.sqrt(i+.5)/Math.sqrt(e),a=s*Math.cos(r),c=s*Math.sin(r),u=Math.sqrt(1-(a*a+c*c));t.push(new I(a,c,u))}return t}generateHemisphereSamplesR(e){let t=[];for(let i=0;i<e;i++)t.push((i+1)/e);return t}generateDenoiseSamples(e,t){const i=2*Math.PI*t/e,r=1/e,s=r,a=[];let c=r,u=0;for(let h=0;h<e;h++)a.push(new K(Math.cos(u),Math.sin(u)).multiplyScalar(Math.pow(c,.75))),c+=s,u+=i;return a}setSize(e,t){this.width=e,this.height=t;const i=this.configuration.halfRes?.5:1;this.writeTargetInternal.setSize(e*i,t*i),this.readTargetInternal.setSize(e*i,t*i),this.configuration.halfRes&&this.depthDownsampleTarget.setSize(e*i,t*i),this.outputTargetInternal.setSize(e,t)}setDepthTexture(e){this.depthTexture=e}render(e,t,i){const r=e.xr.enabled;e.xr.enabled=!1,e.capabilities.logarithmicDepthBuffer!==this.configuration.logarithmicDepthBuffer&&(this.configuration.logarithmicDepthBuffer=e.capabilities.logarithmicDepthBuffer,this.configureAOPass(this.configuration.logarithmicDepthBuffer),this.configureDenoisePass(this.configuration.logarithmicDepthBuffer),this.configureEffectCompositer(this.configuration.logarithmicDepthBuffer)),t.texture.type!==this.outputTargetInternal.texture.type&&(this.outputTargetInternal.texture.type=t.texture.type,this.outputTargetInternal.texture.needsUpdate=!0);let s,a,c;this.debugMode&&(s=e.getContext(),a=s.getExtension("EXT_disjoint_timer_query_webgl2"),a===null&&(console.error("EXT_disjoint_timer_query_webgl2 not available, disabling debug mode."),this.debugMode=!1)),this.debugMode&&(c=s.createQuery(),s.beginQuery(a.TIME_ELAPSED_EXT,c)),this.camera.updateMatrixWorld(),this._r.set(this.width,this.height);let u=this.configuration.aoRadius;this.configuration.halfRes&&this.configuration.screenSpaceRadius&&(u*=.5),this.configuration.halfRes&&(e.setRenderTarget(this.depthDownsampleTarget),this.depthDownsampleQuad.material.uniforms.sceneDepth.value=this.depthTexture,this.depthDownsampleQuad.material.uniforms.resolution.value=this._r,this.depthDownsampleQuad.material.uniforms.near.value=this.camera.near,this.depthDownsampleQuad.material.uniforms.far.value=this.camera.far,this.depthDownsampleQuad.material.uniforms.projectionMatrixInv.value=this.camera.projectionMatrixInverse,this.depthDownsampleQuad.material.uniforms.viewMatrixInv.value=this.camera.matrixWorld,this.depthDownsampleQuad.material.uniforms.logDepth.value=this.configuration.logarithmicDepthBuffer,this.depthDownsampleQuad.render(e)),this.effectShaderQuad.material.uniforms.sceneDiffuse.value=t.texture,this.effectShaderQuad.material.uniforms.sceneDepth.value=this.configuration.halfRes?this.depthDownsampleTarget.texture[0]:this.depthTexture,this.effectShaderQuad.material.uniforms.sceneNormal.value=this.configuration.halfRes?this.depthDownsampleTarget.texture[1]:null,this.effectShaderQuad.material.uniforms.projMat.value=this.camera.projectionMatrix,this.effectShaderQuad.material.uniforms.viewMat.value=this.camera.matrixWorldInverse,this.effectShaderQuad.material.uniforms.projViewMat.value=this.camera.projectionMatrix.clone().multiply(this.camera.matrixWorldInverse.clone()),this.effectShaderQuad.material.uniforms.projectionMatrixInv.value=this.camera.projectionMatrixInverse,this.effectShaderQuad.material.uniforms.viewMatrixInv.value=this.camera.matrixWorld,this.effectShaderQuad.material.uniforms.cameraPos.value=this.camera.getWorldPosition(new I),this.effectShaderQuad.material.uniforms.resolution.value=this.configuration.halfRes?this._r.clone().multiplyScalar(.5).floor():this._r,this.effectShaderQuad.material.uniforms.time.value=performance.now()/1e3,this.effectShaderQuad.material.uniforms.samples.value=this.samples,this.effectShaderQuad.material.uniforms.samplesR.value=this.samplesR,this.effectShaderQuad.material.uniforms.bluenoise.value=this.bluenoise,this.effectShaderQuad.material.uniforms.radius.value=u,this.effectShaderQuad.material.uniforms.distanceFalloff.value=this.configuration.distanceFalloff,this.effectShaderQuad.material.uniforms.near.value=this.camera.near,this.effectShaderQuad.material.uniforms.far.value=this.camera.far,this.effectShaderQuad.material.uniforms.logDepth.value=e.capabilities.logarithmicDepthBuffer,this.effectShaderQuad.material.uniforms.ortho.value=this.camera.isOrthographicCamera,this.effectShaderQuad.material.uniforms.screenSpaceRadius.value=this.configuration.screenSpaceRadius,e.setRenderTarget(this.writeTargetInternal),this.effectShaderQuad.render(e);for(let h=0;h<this.configuration.denoiseIterations;h++)[this.writeTargetInternal,this.readTargetInternal]=[this.readTargetInternal,this.writeTargetInternal],this.poissonBlurQuad.material.uniforms.tDiffuse.value=this.readTargetInternal.texture,this.poissonBlurQuad.material.uniforms.sceneDepth.value=this.configuration.halfRes?this.depthDownsampleTarget.texture[0]:this.depthTexture,this.poissonBlurQuad.material.uniforms.projMat.value=this.camera.projectionMatrix,this.poissonBlurQuad.material.uniforms.viewMat.value=this.camera.matrixWorldInverse,this.poissonBlurQuad.material.uniforms.projectionMatrixInv.value=this.camera.projectionMatrixInverse,this.poissonBlurQuad.material.uniforms.viewMatrixInv.value=this.camera.matrixWorld,this.poissonBlurQuad.material.uniforms.cameraPos.value=this.camera.getWorldPosition(new I),this.poissonBlurQuad.material.uniforms.resolution.value=this.configuration.halfRes?this._r.clone().multiplyScalar(.5).floor():this._r,this.poissonBlurQuad.material.uniforms.time.value=performance.now()/1e3,this.poissonBlurQuad.material.uniforms.blueNoise.value=this.bluenoise,this.poissonBlurQuad.material.uniforms.radius.value=this.configuration.denoiseRadius*(this.configuration.halfRes?.5:1),this.poissonBlurQuad.material.uniforms.worldRadius.value=u,this.poissonBlurQuad.material.uniforms.distanceFalloff.value=this.configuration.distanceFalloff,this.poissonBlurQuad.material.uniforms.index.value=h,this.poissonBlurQuad.material.uniforms.poissonDisk.value=this.samplesDenoise,this.poissonBlurQuad.material.uniforms.near.value=this.camera.near,this.poissonBlurQuad.material.uniforms.far.value=this.camera.far,this.poissonBlurQuad.material.uniforms.logDepth.value=e.capabilities.logarithmicDepthBuffer,this.poissonBlurQuad.material.uniforms.screenSpaceRadius.value=this.configuration.screenSpaceRadius,e.setRenderTarget(this.writeTargetInternal),this.poissonBlurQuad.render(e);this.effectCompositerQuad.material.uniforms.sceneDiffuse.value=t.texture,this.effectCompositerQuad.material.uniforms.sceneDepth.value=this.depthTexture,this.effectCompositerQuad.material.uniforms.near.value=this.camera.near,this.effectCompositerQuad.material.uniforms.far.value=this.camera.far,this.effectCompositerQuad.material.uniforms.projectionMatrixInv.value=this.camera.projectionMatrixInverse,this.effectCompositerQuad.material.uniforms.viewMatrixInv.value=this.camera.matrixWorld,this.effectCompositerQuad.material.uniforms.logDepth.value=e.capabilities.logarithmicDepthBuffer,this.effectCompositerQuad.material.uniforms.ortho.value=this.camera.isOrthographicCamera,this.effectCompositerQuad.material.uniforms.downsampledDepth.value=this.configuration.halfRes?this.depthDownsampleTarget.texture[0]:this.depthTexture,this.effectCompositerQuad.material.uniforms.resolution.value=this._r,this.effectCompositerQuad.material.uniforms.blueNoise.value=this.bluenoise,this.effectCompositerQuad.material.uniforms.intensity.value=this.configuration.intensity,this.effectCompositerQuad.material.uniforms.renderMode.value=this.configuration.renderMode,this.effectCompositerQuad.material.uniforms.screenSpaceRadius.value=this.configuration.screenSpaceRadius,this.effectCompositerQuad.material.uniforms.radius.value=u,this.effectCompositerQuad.material.uniforms.distanceFalloff.value=this.configuration.distanceFalloff,this.effectCompositerQuad.material.uniforms.gammaCorrection.value=this.autosetGamma?this.renderToScreen:this.configuration.gammaCorrection,this.effectCompositerQuad.material.uniforms.tDiffuse.value=this.writeTargetInternal.texture,this.effectCompositerQuad.material.uniforms.color.value=this._c.copy(this.configuration.color).convertSRGBToLinear(),this.effectCompositerQuad.material.uniforms.colorMultiply.value=this.configuration.colorMultiply,this.effectCompositerQuad.material.uniforms.cameraPos.value=this.camera.getWorldPosition(new I),this.effectCompositerQuad.material.uniforms.fog.value=!!this.scene.fog,this.scene.fog&&(this.scene.fog.isFog?(this.effectCompositerQuad.material.uniforms.fogExp.value=!1,this.effectCompositerQuad.material.uniforms.fogNear.value=this.scene.fog.near,this.effectCompositerQuad.material.uniforms.fogFar.value=this.scene.fog.far):this.scene.fog.isFogExp2?(this.effectCompositerQuad.material.uniforms.fogExp.value=!0,this.effectCompositerQuad.material.uniforms.fogDensity.value=this.scene.fog.density):console.error(`Unsupported fog type ${this.scene.fog.constructor.name} in SSAOPass.`)),e.setRenderTarget(this.outputTargetInternal),this.effectCompositerQuad.render(e),e.setRenderTarget(this.renderToScreen?null:i),this.copyQuad.material.uniforms.tDiffuse.value=this.outputTargetInternal.texture,this.copyQuad.render(e),this.debugMode&&(s.endQuery(a.TIME_ELAPSED_EXT),yM(c,s,this)),e.xr.enabled=r}enableDebugMode(){this.debugMode=!0}disableDebugMode(){this.debugMode=!1}setDisplayMode(e){this.configuration.renderMode=["Combined","AO","No AO","Split","Split AO"].indexOf(e)}setQualityMode(e){e==="Performance"?(this.configuration.aoSamples=8,this.configuration.denoiseSamples=4,this.configuration.denoiseRadius=12):e==="Low"?(this.configuration.aoSamples=16,this.configuration.denoiseSamples=4,this.configuration.denoiseRadius=12):e==="Medium"?(this.configuration.aoSamples=16,this.configuration.denoiseSamples=8,this.configuration.denoiseRadius=12):e==="High"?(this.configuration.aoSamples=64,this.configuration.denoiseSamples=8,this.configuration.denoiseRadius=6):e==="Ultra"&&(this.configuration.aoSamples=64,this.configuration.denoiseSamples=16,this.configuration.denoiseRadius=6)}}Uint8Array.from(atob(xM),n=>n.charCodeAt(0));ee.forwardRef(({halfRes:n,screenSpaceRadius:e,quality:t,depthAwareUpsampling:i=!0,aoRadius:r=5,aoSamples:s=16,denoiseSamples:a=4,denoiseRadius:c=12,distanceFalloff:u=1,intensity:h=1,color:f,renderMode:p=0},m)=>{const{camera:g,scene:y}=vn(),T=ee.useMemo(()=>new SL(y,g),[]);return ee.useLayoutEffect(()=>{Rs(T.configuration,{color:f,aoRadius:r,distanceFalloff:u,intensity:h,aoSamples:s,denoiseSamples:a,denoiseRadius:c,screenSpaceRadius:e,renderMode:p,halfRes:n,depthAwareUpsampling:i})},[e,f,r,u,h,s,a,c,p,n,i]),ee.useLayoutEffect(()=>{t&&T.setQualityMode(t.charAt(0).toUpperCase()+t.slice(1))},[t]),Ft("primitive",{ref:m,object:T})});function AL(){return Ft("div",{className:"canvas",children:Ha(W2,{camera:{position:[.25,-.25,1]},children:[Ft("color",{args:["black"],attach:"background"}),Ft(CD,{children:Ft(ID,{intensity:1.1,luminanceThreshold:1.5,mipmapBlur:!0})}),Ft(mC,{}),Ft(ML,{})]})})}function ML(){const n=ee.useRef(),e={uTime:{value:0}};return Rh(t=>{n.current.material.uniforms.uTime.value=t.clock.elapsedTime}),Ha("mesh",{ref:n,children:[Ft("planeGeometry",{args:[1,1,128,128]}),Ft("rawShaderMaterial",{vertexShader:gC,fragmentShader:vC,uniforms:e,side:2})]})}export{AL as default};
